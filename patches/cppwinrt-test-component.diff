diff --git a/projection/winrt-TestComponent/cppwinrt/winrt/TestComponent.h b/projection/winrt-TestComponent/cppwinrt/winrt/TestComponent.h
index bf309d334..0a747f1fc 100644
--- a/projection/winrt-TestComponent/cppwinrt/winrt/TestComponent.h
+++ b/projection/winrt-TestComponent/cppwinrt/winrt/TestComponent.h
@@ -4596,6 +4596,8 @@ WINRT_EXPORT namespace winrt::TestComponent
     {
         using composable = OverloadClass;
         friend impl::consume_t<D, winrt::TestComponent::IOverloadClassProtected>;
+        friend impl::produce<D, winrt::TestComponent::IOverloadClassOverrides>;
+        friend impl::produce<D, winrt::TestComponent::IOverloadClassOverrides2>;
         friend impl::require_one<D, winrt::TestComponent::IOverloadClassProtected>;
     protected:
         OverloadClassT()
@@ -4603,8 +4605,8 @@ WINRT_EXPORT namespace winrt::TestComponent
             impl::call_factory<OverloadClass, IOverloadClassFactory>([&](IOverloadClassFactory const& f) { [[maybe_unused]] auto winrt_impl_discarded = f.CreateInstance(*this, this->m_inner); });
         }
         using impl::consume_t<D, winrt::TestComponent::IOverloadClass>::Overload;
-        using impl::consume_t<D, winrt::TestComponent::IOverloadClassOverrides>::Overload;
-        using impl::consume_t<D, winrt::TestComponent::IOverloadClassOverrides2>::Overload;
+        using winrt::TestComponent::IOverloadClassOverridesT<D>::Overload;
+        using winrt::TestComponent::IOverloadClassOverrides2T<D>::Overload;
         using impl::consume_t<D, winrt::TestComponent::IOverloadClassProtected>::Overload;
     };
     template <typename D, typename... Interfaces>
