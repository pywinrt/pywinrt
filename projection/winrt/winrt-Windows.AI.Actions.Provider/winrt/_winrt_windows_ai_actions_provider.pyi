# WARNING: Please don't edit this file. It was generated by Python/WinRT v3.2.1

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.windows.ai.actions as windows_ai_actions
import winrt.windows.foundation as windows_foundation

Self = typing.TypeVar('Self')

@typing.final
class _IActionFeedbackHandler: ...

class IActionFeedbackHandler(winrt._winrt.IInspectable):
    # Windows.Foundation.IAsyncAction Windows.AI.Actions.Provider.IActionFeedbackHandler::ProcessFeedbackAsync(Windows.AI.Actions.ActionInvocationContext,Windows.AI.Actions.ActionFeedback)
    @abstractmethod
    def process_feedback_async(self, context: windows_ai_actions.ActionInvocationContext, feedback: windows_ai_actions.ActionFeedback, /) -> windows_foundation.IAsyncAction: ...

@typing.final
class _IActionProvider: ...

class IActionProvider(winrt._winrt.IInspectable):
    # Windows.Foundation.IAsyncAction Windows.AI.Actions.Provider.IActionProvider::InvokeAsync(Windows.AI.Actions.ActionInvocationContext)
    @abstractmethod
    def invoke_async(self, context: windows_ai_actions.ActionInvocationContext, /) -> windows_foundation.IAsyncAction: ...

