# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.core as windows_applicationmodel_core
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.graphics as windows_graphics
import winrt.windows.media.core as windows_media_core
import winrt.windows.storage.streams as windows_storage_streams

from winrt.windows.media.miracast import MiracastReceiverApplySettingsStatus, MiracastReceiverAuthorizationMethod, MiracastReceiverDisconnectReason, MiracastReceiverGameControllerDeviceUsageMode, MiracastReceiverListeningStatus, MiracastReceiverSessionStartStatus, MiracastReceiverWiFiStatus, MiracastTransmitterAuthorizationStatus

Self = typing.TypeVar('Self')

@typing.final
class MiracastReceiver(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.Media.Miracast.MiracastReceiver::ClearKnownTransmitters()
    def clear_known_transmitters(self) -> None: ...
    # Windows.Media.Miracast.MiracastReceiverSession Windows.Media.Miracast.MiracastReceiver::CreateSession(Windows.ApplicationModel.Core.CoreApplicationView)
    def create_session(self, view: windows_applicationmodel_core.CoreApplicationView, /) -> MiracastReceiverSession: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Media.Miracast.MiracastReceiverSession> Windows.Media.Miracast.MiracastReceiver::CreateSessionAsync(Windows.ApplicationModel.Core.CoreApplicationView)
    def create_session_async(self, view: windows_applicationmodel_core.CoreApplicationView, /) -> windows_foundation.IAsyncOperation[MiracastReceiverSession]: ...
    # Windows.Media.Miracast.MiracastReceiverApplySettingsResult Windows.Media.Miracast.MiracastReceiver::DisconnectAllAndApplySettings(Windows.Media.Miracast.MiracastReceiverSettings)
    def disconnect_all_and_apply_settings(self, settings: MiracastReceiverSettings, /) -> MiracastReceiverApplySettingsResult: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Media.Miracast.MiracastReceiverApplySettingsResult> Windows.Media.Miracast.MiracastReceiver::DisconnectAllAndApplySettingsAsync(Windows.Media.Miracast.MiracastReceiverSettings)
    def disconnect_all_and_apply_settings_async(self, settings: MiracastReceiverSettings, /) -> windows_foundation.IAsyncOperation[MiracastReceiverApplySettingsResult]: ...
    # Windows.Media.Miracast.MiracastReceiverSettings Windows.Media.Miracast.MiracastReceiver::GetCurrentSettings()
    def get_current_settings(self) -> MiracastReceiverSettings: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Media.Miracast.MiracastReceiverSettings> Windows.Media.Miracast.MiracastReceiver::GetCurrentSettingsAsync()
    def get_current_settings_async(self) -> windows_foundation.IAsyncOperation[MiracastReceiverSettings]: ...
    # Windows.Media.Miracast.MiracastReceiverSettings Windows.Media.Miracast.MiracastReceiver::GetDefaultSettings()
    def get_default_settings(self) -> MiracastReceiverSettings: ...
    # Windows.Media.Miracast.MiracastReceiverStatus Windows.Media.Miracast.MiracastReceiver::GetStatus()
    def get_status(self) -> MiracastReceiverStatus: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Media.Miracast.MiracastReceiverStatus> Windows.Media.Miracast.MiracastReceiver::GetStatusAsync()
    def get_status_async(self) -> windows_foundation.IAsyncOperation[MiracastReceiverStatus]: ...
    # System.Void Windows.Media.Miracast.MiracastReceiver::RemoveKnownTransmitter(Windows.Media.Miracast.MiracastTransmitter)
    def remove_known_transmitter(self, transmitter: MiracastTransmitter, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Media.Miracast.MiracastReceiver::add_StatusChanged(Windows.Foundation.TypedEventHandler`2<Windows.Media.Miracast.MiracastReceiver,System.Object>)
    def add_status_changed(self, handler: windows_foundation.TypedEventHandler[MiracastReceiver, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Media.Miracast.MiracastReceiver::remove_StatusChanged(Windows.Foundation.EventRegistrationToken)
    def remove_status_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...

@typing.final
class MiracastReceiverApplySettingsResult(winrt.system.Object):
    # Windows.Foundation.HResult Windows.Media.Miracast.MiracastReceiverApplySettingsResult::get_ExtendedError()
    @_property
    def extended_error(self) -> windows_foundation.HResult: ...
    # Windows.Media.Miracast.MiracastReceiverApplySettingsStatus Windows.Media.Miracast.MiracastReceiverApplySettingsResult::get_Status()
    @_property
    def status(self) -> MiracastReceiverApplySettingsStatus: ...

@typing.final
class MiracastReceiverConnection(winrt.system.Object, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverConnection::Close()
    def close(self) -> None: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverConnection::Disconnect(Windows.Media.Miracast.MiracastReceiverDisconnectReason)
    def disconnect(self, reason: MiracastReceiverDisconnectReason, /) -> None: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverConnection::Disconnect(Windows.Media.Miracast.MiracastReceiverDisconnectReason,System.String)
    def disconnect_with_message(self, reason: MiracastReceiverDisconnectReason, message: str, /) -> None: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverConnection::Pause()
    def pause(self) -> None: ...
    # Windows.Foundation.IAsyncAction Windows.Media.Miracast.MiracastReceiverConnection::PauseAsync()
    def pause_async(self) -> windows_foundation.IAsyncAction: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverConnection::Resume()
    def resume(self) -> None: ...
    # Windows.Foundation.IAsyncAction Windows.Media.Miracast.MiracastReceiverConnection::ResumeAsync()
    def resume_async(self) -> windows_foundation.IAsyncAction: ...
    # Windows.Media.Miracast.MiracastReceiverCursorImageChannel Windows.Media.Miracast.MiracastReceiverConnection::get_CursorImageChannel()
    @_property
    def cursor_image_channel(self) -> MiracastReceiverCursorImageChannel: ...
    # Windows.Media.Miracast.MiracastReceiverInputDevices Windows.Media.Miracast.MiracastReceiverConnection::get_InputDevices()
    @_property
    def input_devices(self) -> MiracastReceiverInputDevices: ...
    # Windows.Media.Miracast.MiracastReceiverStreamControl Windows.Media.Miracast.MiracastReceiverConnection::get_StreamControl()
    @_property
    def stream_control(self) -> MiracastReceiverStreamControl: ...
    # Windows.Media.Miracast.MiracastTransmitter Windows.Media.Miracast.MiracastReceiverConnection::get_Transmitter()
    @_property
    def transmitter(self) -> MiracastTransmitter: ...

@typing.final
class MiracastReceiverConnectionCreatedEventArgs(winrt.system.Object):
    # Windows.Foundation.Deferral Windows.Media.Miracast.MiracastReceiverConnectionCreatedEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...
    # Windows.Media.Miracast.MiracastReceiverConnection Windows.Media.Miracast.MiracastReceiverConnectionCreatedEventArgs::get_Connection()
    @_property
    def connection(self) -> MiracastReceiverConnection: ...
    # System.String Windows.Media.Miracast.MiracastReceiverConnectionCreatedEventArgs::get_Pin()
    @_property
    def pin(self) -> str: ...

@typing.final
class MiracastReceiverCursorImageChannel(winrt.system.Object):
    # Windows.Foundation.EventRegistrationToken Windows.Media.Miracast.MiracastReceiverCursorImageChannel::add_ImageStreamChanged(Windows.Foundation.TypedEventHandler`2<Windows.Media.Miracast.MiracastReceiverCursorImageChannel,System.Object>)
    def add_image_stream_changed(self, handler: windows_foundation.TypedEventHandler[MiracastReceiverCursorImageChannel, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverCursorImageChannel::remove_ImageStreamChanged(Windows.Foundation.EventRegistrationToken)
    def remove_image_stream_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Media.Miracast.MiracastReceiverCursorImageChannel::add_PositionChanged(Windows.Foundation.TypedEventHandler`2<Windows.Media.Miracast.MiracastReceiverCursorImageChannel,System.Object>)
    def add_position_changed(self, handler: windows_foundation.TypedEventHandler[MiracastReceiverCursorImageChannel, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverCursorImageChannel::remove_PositionChanged(Windows.Foundation.EventRegistrationToken)
    def remove_position_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Storage.Streams.IRandomAccessStreamWithContentType Windows.Media.Miracast.MiracastReceiverCursorImageChannel::get_ImageStream()
    @_property
    def image_stream(self) -> windows_storage_streams.IRandomAccessStreamWithContentType: ...
    # System.Boolean Windows.Media.Miracast.MiracastReceiverCursorImageChannel::get_IsEnabled()
    @_property
    def is_enabled(self) -> bool: ...
    # Windows.Graphics.SizeInt32 Windows.Media.Miracast.MiracastReceiverCursorImageChannel::get_MaxImageSize()
    @_property
    def max_image_size(self) -> windows_graphics.SizeInt32: ...
    # Windows.Graphics.PointInt32 Windows.Media.Miracast.MiracastReceiverCursorImageChannel::get_Position()
    @_property
    def position(self) -> windows_graphics.PointInt32: ...

@typing.final
class MiracastReceiverCursorImageChannelSettings(winrt.system.Object):
    # Windows.Graphics.SizeInt32 Windows.Media.Miracast.MiracastReceiverCursorImageChannelSettings::get_MaxImageSize()
    @_property
    def max_image_size(self) -> windows_graphics.SizeInt32: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverCursorImageChannelSettings::put_MaxImageSize(Windows.Graphics.SizeInt32)
    @max_image_size.setter
    def max_image_size(self, value: typing.Union[windows_graphics.SizeInt32, typing.Tuple[winrt.system.Int32, winrt.system.Int32]]) -> None: ...
    # System.Boolean Windows.Media.Miracast.MiracastReceiverCursorImageChannelSettings::get_IsEnabled()
    @_property
    def is_enabled(self) -> bool: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverCursorImageChannelSettings::put_IsEnabled(System.Boolean)
    @is_enabled.setter
    def is_enabled(self, value: bool) -> None: ...

@typing.final
class MiracastReceiverDisconnectedEventArgs(winrt.system.Object):
    # Windows.Media.Miracast.MiracastReceiverConnection Windows.Media.Miracast.MiracastReceiverDisconnectedEventArgs::get_Connection()
    @_property
    def connection(self) -> MiracastReceiverConnection: ...

@typing.final
class MiracastReceiverGameControllerDevice(winrt.system.Object):
    # Windows.Foundation.EventRegistrationToken Windows.Media.Miracast.MiracastReceiverGameControllerDevice::add_Changed(Windows.Foundation.TypedEventHandler`2<Windows.Media.Miracast.MiracastReceiverGameControllerDevice,System.Object>)
    def add_changed(self, handler: windows_foundation.TypedEventHandler[MiracastReceiverGameControllerDevice, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverGameControllerDevice::remove_Changed(Windows.Foundation.EventRegistrationToken)
    def remove_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Boolean Windows.Media.Miracast.MiracastReceiverGameControllerDevice::get_TransmitInput()
    @_property
    def transmit_input(self) -> bool: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverGameControllerDevice::put_TransmitInput(System.Boolean)
    @transmit_input.setter
    def transmit_input(self, value: bool) -> None: ...
    # Windows.Media.Miracast.MiracastReceiverGameControllerDeviceUsageMode Windows.Media.Miracast.MiracastReceiverGameControllerDevice::get_Mode()
    @_property
    def mode(self) -> MiracastReceiverGameControllerDeviceUsageMode: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverGameControllerDevice::put_Mode(Windows.Media.Miracast.MiracastReceiverGameControllerDeviceUsageMode)
    @mode.setter
    def mode(self, value: MiracastReceiverGameControllerDeviceUsageMode) -> None: ...
    # System.Boolean Windows.Media.Miracast.MiracastReceiverGameControllerDevice::get_IsRequestedByTransmitter()
    @_property
    def is_requested_by_transmitter(self) -> bool: ...
    # System.Boolean Windows.Media.Miracast.MiracastReceiverGameControllerDevice::get_IsTransmittingInput()
    @_property
    def is_transmitting_input(self) -> bool: ...

@typing.final
class MiracastReceiverInputDevices(winrt.system.Object):
    # Windows.Media.Miracast.MiracastReceiverGameControllerDevice Windows.Media.Miracast.MiracastReceiverInputDevices::get_GameController()
    @_property
    def game_controller(self) -> MiracastReceiverGameControllerDevice: ...
    # Windows.Media.Miracast.MiracastReceiverKeyboardDevice Windows.Media.Miracast.MiracastReceiverInputDevices::get_Keyboard()
    @_property
    def keyboard(self) -> MiracastReceiverKeyboardDevice: ...

@typing.final
class MiracastReceiverKeyboardDevice(winrt.system.Object):
    # Windows.Foundation.EventRegistrationToken Windows.Media.Miracast.MiracastReceiverKeyboardDevice::add_Changed(Windows.Foundation.TypedEventHandler`2<Windows.Media.Miracast.MiracastReceiverKeyboardDevice,System.Object>)
    def add_changed(self, handler: windows_foundation.TypedEventHandler[MiracastReceiverKeyboardDevice, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverKeyboardDevice::remove_Changed(Windows.Foundation.EventRegistrationToken)
    def remove_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Boolean Windows.Media.Miracast.MiracastReceiverKeyboardDevice::get_TransmitInput()
    @_property
    def transmit_input(self) -> bool: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverKeyboardDevice::put_TransmitInput(System.Boolean)
    @transmit_input.setter
    def transmit_input(self, value: bool) -> None: ...
    # System.Boolean Windows.Media.Miracast.MiracastReceiverKeyboardDevice::get_IsRequestedByTransmitter()
    @_property
    def is_requested_by_transmitter(self) -> bool: ...
    # System.Boolean Windows.Media.Miracast.MiracastReceiverKeyboardDevice::get_IsTransmittingInput()
    @_property
    def is_transmitting_input(self) -> bool: ...

@typing.final
class MiracastReceiverMediaSourceCreatedEventArgs(winrt.system.Object):
    # Windows.Foundation.Deferral Windows.Media.Miracast.MiracastReceiverMediaSourceCreatedEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...
    # Windows.Media.Miracast.MiracastReceiverConnection Windows.Media.Miracast.MiracastReceiverMediaSourceCreatedEventArgs::get_Connection()
    @_property
    def connection(self) -> MiracastReceiverConnection: ...
    # Windows.Media.Miracast.MiracastReceiverCursorImageChannelSettings Windows.Media.Miracast.MiracastReceiverMediaSourceCreatedEventArgs::get_CursorImageChannelSettings()
    @_property
    def cursor_image_channel_settings(self) -> MiracastReceiverCursorImageChannelSettings: ...
    # Windows.Media.Core.MediaSource Windows.Media.Miracast.MiracastReceiverMediaSourceCreatedEventArgs::get_MediaSource()
    @_property
    def media_source(self) -> windows_media_core.MediaSource: ...

@typing.final
class MiracastReceiverSession(winrt.system.Object, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverSession::Close()
    def close(self) -> None: ...
    # Windows.Media.Miracast.MiracastReceiverSessionStartResult Windows.Media.Miracast.MiracastReceiverSession::Start()
    def start(self) -> MiracastReceiverSessionStartResult: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Media.Miracast.MiracastReceiverSessionStartResult> Windows.Media.Miracast.MiracastReceiverSession::StartAsync()
    def start_async(self) -> windows_foundation.IAsyncOperation[MiracastReceiverSessionStartResult]: ...
    # Windows.Foundation.EventRegistrationToken Windows.Media.Miracast.MiracastReceiverSession::add_ConnectionCreated(Windows.Foundation.TypedEventHandler`2<Windows.Media.Miracast.MiracastReceiverSession,Windows.Media.Miracast.MiracastReceiverConnectionCreatedEventArgs>)
    def add_connection_created(self, handler: windows_foundation.TypedEventHandler[MiracastReceiverSession, MiracastReceiverConnectionCreatedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverSession::remove_ConnectionCreated(Windows.Foundation.EventRegistrationToken)
    def remove_connection_created(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Media.Miracast.MiracastReceiverSession::add_Disconnected(Windows.Foundation.TypedEventHandler`2<Windows.Media.Miracast.MiracastReceiverSession,Windows.Media.Miracast.MiracastReceiverDisconnectedEventArgs>)
    def add_disconnected(self, handler: windows_foundation.TypedEventHandler[MiracastReceiverSession, MiracastReceiverDisconnectedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverSession::remove_Disconnected(Windows.Foundation.EventRegistrationToken)
    def remove_disconnected(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Media.Miracast.MiracastReceiverSession::add_MediaSourceCreated(Windows.Foundation.TypedEventHandler`2<Windows.Media.Miracast.MiracastReceiverSession,Windows.Media.Miracast.MiracastReceiverMediaSourceCreatedEventArgs>)
    def add_media_source_created(self, handler: windows_foundation.TypedEventHandler[MiracastReceiverSession, MiracastReceiverMediaSourceCreatedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverSession::remove_MediaSourceCreated(Windows.Foundation.EventRegistrationToken)
    def remove_media_source_created(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Int32 Windows.Media.Miracast.MiracastReceiverSession::get_MaxSimultaneousConnections()
    @_property
    def max_simultaneous_connections(self) -> winrt.system.Int32: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverSession::put_MaxSimultaneousConnections(System.Int32)
    @max_simultaneous_connections.setter
    def max_simultaneous_connections(self, value: winrt.system.Int32) -> None: ...
    # System.Boolean Windows.Media.Miracast.MiracastReceiverSession::get_AllowConnectionTakeover()
    @_property
    def allow_connection_takeover(self) -> bool: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverSession::put_AllowConnectionTakeover(System.Boolean)
    @allow_connection_takeover.setter
    def allow_connection_takeover(self, value: bool) -> None: ...

@typing.final
class MiracastReceiverSessionStartResult(winrt.system.Object):
    # Windows.Foundation.HResult Windows.Media.Miracast.MiracastReceiverSessionStartResult::get_ExtendedError()
    @_property
    def extended_error(self) -> windows_foundation.HResult: ...
    # Windows.Media.Miracast.MiracastReceiverSessionStartStatus Windows.Media.Miracast.MiracastReceiverSessionStartResult::get_Status()
    @_property
    def status(self) -> MiracastReceiverSessionStartStatus: ...

@typing.final
class MiracastReceiverSettings(winrt.system.Object):
    # System.Boolean Windows.Media.Miracast.MiracastReceiverSettings::get_RequireAuthorizationFromKnownTransmitters()
    @_property
    def require_authorization_from_known_transmitters(self) -> bool: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverSettings::put_RequireAuthorizationFromKnownTransmitters(System.Boolean)
    @require_authorization_from_known_transmitters.setter
    def require_authorization_from_known_transmitters(self, value: bool) -> None: ...
    # System.String Windows.Media.Miracast.MiracastReceiverSettings::get_ModelNumber()
    @_property
    def model_number(self) -> str: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverSettings::put_ModelNumber(System.String)
    @model_number.setter
    def model_number(self, value: str) -> None: ...
    # System.String Windows.Media.Miracast.MiracastReceiverSettings::get_ModelName()
    @_property
    def model_name(self) -> str: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverSettings::put_ModelName(System.String)
    @model_name.setter
    def model_name(self, value: str) -> None: ...
    # System.String Windows.Media.Miracast.MiracastReceiverSettings::get_FriendlyName()
    @_property
    def friendly_name(self) -> str: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverSettings::put_FriendlyName(System.String)
    @friendly_name.setter
    def friendly_name(self, value: str) -> None: ...
    # Windows.Media.Miracast.MiracastReceiverAuthorizationMethod Windows.Media.Miracast.MiracastReceiverSettings::get_AuthorizationMethod()
    @_property
    def authorization_method(self) -> MiracastReceiverAuthorizationMethod: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverSettings::put_AuthorizationMethod(Windows.Media.Miracast.MiracastReceiverAuthorizationMethod)
    @authorization_method.setter
    def authorization_method(self, value: MiracastReceiverAuthorizationMethod) -> None: ...

@typing.final
class MiracastReceiverStatus(winrt.system.Object):
    # System.Boolean Windows.Media.Miracast.MiracastReceiverStatus::get_IsConnectionTakeoverSupported()
    @_property
    def is_connection_takeover_supported(self) -> bool: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Media.Miracast.MiracastTransmitter> Windows.Media.Miracast.MiracastReceiverStatus::get_KnownTransmitters()
    @_property
    def known_transmitters(self) -> typing.Sequence[MiracastTransmitter]: ...
    # Windows.Media.Miracast.MiracastReceiverListeningStatus Windows.Media.Miracast.MiracastReceiverStatus::get_ListeningStatus()
    @_property
    def listening_status(self) -> MiracastReceiverListeningStatus: ...
    # System.Int32 Windows.Media.Miracast.MiracastReceiverStatus::get_MaxSimultaneousConnections()
    @_property
    def max_simultaneous_connections(self) -> winrt.system.Int32: ...
    # Windows.Media.Miracast.MiracastReceiverWiFiStatus Windows.Media.Miracast.MiracastReceiverStatus::get_WiFiStatus()
    @_property
    def wi_fi_status(self) -> MiracastReceiverWiFiStatus: ...

@typing.final
class MiracastReceiverStreamControl(winrt.system.Object):
    # Windows.Media.Miracast.MiracastReceiverVideoStreamSettings Windows.Media.Miracast.MiracastReceiverStreamControl::GetVideoStreamSettings()
    def get_video_stream_settings(self) -> MiracastReceiverVideoStreamSettings: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Media.Miracast.MiracastReceiverVideoStreamSettings> Windows.Media.Miracast.MiracastReceiverStreamControl::GetVideoStreamSettingsAsync()
    def get_video_stream_settings_async(self) -> windows_foundation.IAsyncOperation[MiracastReceiverVideoStreamSettings]: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverStreamControl::SuggestVideoStreamSettings(Windows.Media.Miracast.MiracastReceiverVideoStreamSettings)
    def suggest_video_stream_settings(self, settings: MiracastReceiverVideoStreamSettings, /) -> None: ...
    # Windows.Foundation.IAsyncAction Windows.Media.Miracast.MiracastReceiverStreamControl::SuggestVideoStreamSettingsAsync(Windows.Media.Miracast.MiracastReceiverVideoStreamSettings)
    def suggest_video_stream_settings_async(self, settings: MiracastReceiverVideoStreamSettings, /) -> windows_foundation.IAsyncAction: ...
    # System.Boolean Windows.Media.Miracast.MiracastReceiverStreamControl::get_MuteAudio()
    @_property
    def mute_audio(self) -> bool: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverStreamControl::put_MuteAudio(System.Boolean)
    @mute_audio.setter
    def mute_audio(self, value: bool) -> None: ...

@typing.final
class MiracastReceiverVideoStreamSettings(winrt.system.Object):
    # Windows.Graphics.SizeInt32 Windows.Media.Miracast.MiracastReceiverVideoStreamSettings::get_Size()
    @_property
    def size(self) -> windows_graphics.SizeInt32: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverVideoStreamSettings::put_Size(Windows.Graphics.SizeInt32)
    @size.setter
    def size(self, value: typing.Union[windows_graphics.SizeInt32, typing.Tuple[winrt.system.Int32, winrt.system.Int32]]) -> None: ...
    # System.Int32 Windows.Media.Miracast.MiracastReceiverVideoStreamSettings::get_Bitrate()
    @_property
    def bitrate(self) -> winrt.system.Int32: ...
    # System.Void Windows.Media.Miracast.MiracastReceiverVideoStreamSettings::put_Bitrate(System.Int32)
    @bitrate.setter
    def bitrate(self, value: winrt.system.Int32) -> None: ...

@typing.final
class MiracastTransmitter(winrt.system.Object):
    # Windows.Foundation.Collections.IVectorView`1<Windows.Media.Miracast.MiracastReceiverConnection> Windows.Media.Miracast.MiracastTransmitter::GetConnections()
    def get_connections(self) -> typing.Sequence[MiracastReceiverConnection]: ...
    # System.String Windows.Media.Miracast.MiracastTransmitter::get_Name()
    @_property
    def name(self) -> str: ...
    # System.Void Windows.Media.Miracast.MiracastTransmitter::put_Name(System.String)
    @name.setter
    def name(self, value: str) -> None: ...
    # Windows.Media.Miracast.MiracastTransmitterAuthorizationStatus Windows.Media.Miracast.MiracastTransmitter::get_AuthorizationStatus()
    @_property
    def authorization_status(self) -> MiracastTransmitterAuthorizationStatus: ...
    # System.Void Windows.Media.Miracast.MiracastTransmitter::put_AuthorizationStatus(Windows.Media.Miracast.MiracastTransmitterAuthorizationStatus)
    @authorization_status.setter
    def authorization_status(self, value: MiracastTransmitterAuthorizationStatus) -> None: ...
    # Windows.Foundation.DateTime Windows.Media.Miracast.MiracastTransmitter::get_LastConnectionTime()
    @_property
    def last_connection_time(self) -> datetime.datetime: ...
    # System.String Windows.Media.Miracast.MiracastTransmitter::get_MacAddress()
    @_property
    def mac_address(self) -> str: ...

