# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.ui as windows_ui

from winrt.windows.system.remotedesktop.provider import RemoteDesktopConnectionStatus, RemoteDesktopLocalAction

Self = typing.TypeVar('Self')

@typing.final
class PerformLocalActionRequestedEventArgs(winrt.system.Object):
    # Windows.System.RemoteDesktop.Provider.RemoteDesktopLocalAction Windows.System.RemoteDesktop.Provider.PerformLocalActionRequestedEventArgs::get_Action()
    @_property
    def action(self) -> RemoteDesktopLocalAction: ...

@typing.final
class RemoteDesktopConnectionInfo_Static(winrt._winrt.IInspectable_Static):
    # Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionInfo Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionInfo::GetForLaunchUri(Windows.Foundation.Uri,Windows.UI.WindowId)
    def get_for_launch_uri(cls, launch_uri: windows_foundation.Uri, window_id: typing.Union[windows_ui.WindowId, typing.Tuple[winrt.system.UInt64]], /) -> RemoteDesktopConnectionInfo: ...

@typing.final
class RemoteDesktopConnectionInfo(winrt.system.Object, metaclass=RemoteDesktopConnectionInfo_Static):
    # System.Void Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionInfo::PerformLocalActionFromRemote(Windows.System.RemoteDesktop.Provider.RemoteDesktopLocalAction)
    def perform_local_action_from_remote(self, action: RemoteDesktopLocalAction, /) -> None: ...
    # System.Void Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionInfo::SetConnectionStatus(Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionStatus)
    def set_connection_status(self, value: RemoteDesktopConnectionStatus, /) -> None: ...
    # System.Void Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionInfo::SwitchToLocalSession()
    def switch_to_local_session(self) -> None: ...

@typing.final
class RemoteDesktopConnectionRemoteInfo_Static(winrt._winrt.IInspectable_Static):
    # Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo::GetForLaunchUri(Windows.Foundation.Uri)
    def get_for_launch_uri(cls, launch_uri: windows_foundation.Uri, /) -> RemoteDesktopConnectionRemoteInfo: ...
    # System.Boolean Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo::IsSwitchSupported()
    def is_switch_supported(cls) -> bool: ...

@typing.final
class RemoteDesktopConnectionRemoteInfo(winrt.system.Object, windows_foundation.IClosable, metaclass=RemoteDesktopConnectionRemoteInfo_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo::Close()
    def close(self) -> None: ...
    # System.Void Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo::ReportSwitched()
    def report_switched(self) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo::add_PerformLocalActionRequested(Windows.Foundation.TypedEventHandler`2<Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo,Windows.System.RemoteDesktop.Provider.PerformLocalActionRequestedEventArgs>)
    def add_perform_local_action_requested(self, handler: windows_foundation.TypedEventHandler[RemoteDesktopConnectionRemoteInfo, PerformLocalActionRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo::remove_PerformLocalActionRequested(Windows.Foundation.EventRegistrationToken)
    def remove_perform_local_action_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo::add_SwitchToLocalSessionRequested(Windows.Foundation.TypedEventHandler`2<Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo,System.Object>)
    def add_switch_to_local_session_requested(self, handler: windows_foundation.TypedEventHandler[RemoteDesktopConnectionRemoteInfo, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo::remove_SwitchToLocalSessionRequested(Windows.Foundation.EventRegistrationToken)
    def remove_switch_to_local_session_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...

@typing.final
class RemoteDesktopInfo(winrt.system.Object):
    def __new__(cls: typing.Type[Self], id: str, display_name: str) -> Self: ...
    # System.String Windows.System.RemoteDesktop.Provider.RemoteDesktopInfo::get_DisplayName()
    @_property
    def display_name(self) -> str: ...
    # System.String Windows.System.RemoteDesktop.Provider.RemoteDesktopInfo::get_Id()
    @_property
    def id(self) -> str: ...

@typing.final
class RemoteDesktopRegistrar_Static(winrt._winrt.IInspectable_Static):
    # System.Boolean Windows.System.RemoteDesktop.Provider.RemoteDesktopRegistrar::IsSwitchToLocalSessionEnabled()
    def is_switch_to_local_session_enabled(cls) -> bool: ...
    # Windows.Foundation.Collections.IVector`1<Windows.System.RemoteDesktop.Provider.RemoteDesktopInfo> Windows.System.RemoteDesktop.Provider.RemoteDesktopRegistrar::get_DesktopInfos()
    @_property
    def desktop_infos(cls) -> typing.MutableSequence[RemoteDesktopInfo]: ...

@typing.final
class RemoteDesktopRegistrar(winrt.system.Object, metaclass=RemoteDesktopRegistrar_Static):
    pass

