# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.networking.connectivity as windows_networking_connectivity

from winrt.windows.networking import DomainNameType, HostNameSortOptions, HostNameType

Self = typing.TypeVar('Self')

@typing.final
class EndpointPair(winrt.system.Object):
    def __new__(cls: typing.Type[Self], local_host_name: HostName, local_service_name: str, remote_host_name: HostName, remote_service_name: str) -> Self: ...
    # System.String Windows.Networking.EndpointPair::get_RemoteServiceName()
    @_property
    def remote_service_name(self) -> str: ...
    # System.Void Windows.Networking.EndpointPair::put_RemoteServiceName(System.String)
    @remote_service_name.setter
    def remote_service_name(self, value: str) -> None: ...
    # Windows.Networking.HostName Windows.Networking.EndpointPair::get_RemoteHostName()
    @_property
    def remote_host_name(self) -> HostName: ...
    # System.Void Windows.Networking.EndpointPair::put_RemoteHostName(Windows.Networking.HostName)
    @remote_host_name.setter
    def remote_host_name(self, value: HostName) -> None: ...
    # System.String Windows.Networking.EndpointPair::get_LocalServiceName()
    @_property
    def local_service_name(self) -> str: ...
    # System.Void Windows.Networking.EndpointPair::put_LocalServiceName(System.String)
    @local_service_name.setter
    def local_service_name(self, value: str) -> None: ...
    # Windows.Networking.HostName Windows.Networking.EndpointPair::get_LocalHostName()
    @_property
    def local_host_name(self) -> HostName: ...
    # System.Void Windows.Networking.EndpointPair::put_LocalHostName(Windows.Networking.HostName)
    @local_host_name.setter
    def local_host_name(self, value: HostName) -> None: ...

@typing.final
class HostName_Static(winrt._winrt.IInspectable_Static):
    # System.Int32 Windows.Networking.HostName::Compare(System.String,System.String)
    def compare(cls, value1: str, value2: str, /) -> winrt.system.Int32: ...

@typing.final
class HostName(winrt.system.Object, windows_foundation.IStringable, metaclass=HostName_Static):
    def __str__(self) -> str: ...
    def __new__(cls: typing.Type[Self], host_name: str) -> Self: ...
    # System.Boolean Windows.Networking.HostName::IsEqual(Windows.Networking.HostName)
    def is_equal(self, host_name: HostName, /) -> bool: ...
    # System.String Windows.Networking.HostName::ToString()
    def to_string(self) -> str: ...
    # System.String Windows.Networking.HostName::get_CanonicalName()
    @_property
    def canonical_name(self) -> str: ...
    # System.String Windows.Networking.HostName::get_DisplayName()
    @_property
    def display_name(self) -> str: ...
    # Windows.Networking.Connectivity.IPInformation Windows.Networking.HostName::get_IPInformation()
    @_property
    def ip_information(self) -> windows_networking_connectivity.IPInformation: ...
    # System.String Windows.Networking.HostName::get_RawName()
    @_property
    def raw_name(self) -> str: ...
    # Windows.Networking.HostNameType Windows.Networking.HostName::get_Type()
    @_property
    def type(self) -> HostNameType: ...

