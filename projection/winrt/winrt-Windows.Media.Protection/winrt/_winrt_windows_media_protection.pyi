# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.media.playback as windows_media_playback

from winrt.windows.media.protection import GraphicsTrustStatus, HdcpProtection, HdcpSetProtectionResult, ProtectionCapabilityResult, RenewalStatus, RevocationAndRenewalReasons
from winrt.windows.media.protection import ComponentLoadFailedEventHandler, RebootNeededEventHandler, ServiceRequestedEventHandler

Self = typing.TypeVar('Self')

@typing.final
class ComponentLoadFailedEventArgs(winrt.system.Object):
    # Windows.Media.Protection.MediaProtectionServiceCompletion Windows.Media.Protection.ComponentLoadFailedEventArgs::get_Completion()
    @_property
    def completion(self) -> MediaProtectionServiceCompletion: ...
    # Windows.Media.Protection.RevocationAndRenewalInformation Windows.Media.Protection.ComponentLoadFailedEventArgs::get_Information()
    @_property
    def information(self) -> RevocationAndRenewalInformation: ...

@typing.final
class ComponentRenewal_Static(winrt._winrt.IInspectable_Static):
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Media.Protection.RenewalStatus,System.UInt32> Windows.Media.Protection.ComponentRenewal::RenewSystemComponentsAsync(Windows.Media.Protection.RevocationAndRenewalInformation)
    def renew_system_components_async(cls, information: RevocationAndRenewalInformation, /) -> windows_foundation.IAsyncOperationWithProgress[RenewalStatus, winrt.system.UInt32]: ...

@typing.final
class ComponentRenewal(winrt.system.Object, metaclass=ComponentRenewal_Static):
    pass

@typing.final
class HdcpSession(winrt.system.Object, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.Media.Protection.HdcpSession::Close()
    def close(self) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Media.Protection.HdcpProtection> Windows.Media.Protection.HdcpSession::GetEffectiveProtection()
    def get_effective_protection(self) -> typing.Optional[HdcpProtection]: ...
    # System.Boolean Windows.Media.Protection.HdcpSession::IsEffectiveProtectionAtLeast(Windows.Media.Protection.HdcpProtection)
    def is_effective_protection_at_least(self, protection: HdcpProtection, /) -> bool: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Media.Protection.HdcpSetProtectionResult> Windows.Media.Protection.HdcpSession::SetDesiredMinProtectionAsync(Windows.Media.Protection.HdcpProtection)
    def set_desired_min_protection_async(self, protection: HdcpProtection, /) -> windows_foundation.IAsyncOperation[HdcpSetProtectionResult]: ...
    # Windows.Foundation.EventRegistrationToken Windows.Media.Protection.HdcpSession::add_ProtectionChanged(Windows.Foundation.TypedEventHandler`2<Windows.Media.Protection.HdcpSession,System.Object>)
    def add_protection_changed(self, handler: windows_foundation.TypedEventHandler[HdcpSession, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Media.Protection.HdcpSession::remove_ProtectionChanged(Windows.Foundation.EventRegistrationToken)
    def remove_protection_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...

@typing.final
class MediaProtectionManager(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.EventRegistrationToken Windows.Media.Protection.MediaProtectionManager::add_ComponentLoadFailed(Windows.Media.Protection.ComponentLoadFailedEventHandler)
    def add_component_load_failed(self, handler: ComponentLoadFailedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Media.Protection.MediaProtectionManager::remove_ComponentLoadFailed(Windows.Foundation.EventRegistrationToken)
    def remove_component_load_failed(self, cookie: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Media.Protection.MediaProtectionManager::add_RebootNeeded(Windows.Media.Protection.RebootNeededEventHandler)
    def add_reboot_needed(self, handler: RebootNeededEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Media.Protection.MediaProtectionManager::remove_RebootNeeded(Windows.Foundation.EventRegistrationToken)
    def remove_reboot_needed(self, cookie: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Media.Protection.MediaProtectionManager::add_ServiceRequested(Windows.Media.Protection.ServiceRequestedEventHandler)
    def add_service_requested(self, handler: ServiceRequestedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Media.Protection.MediaProtectionManager::remove_ServiceRequested(Windows.Foundation.EventRegistrationToken)
    def remove_service_requested(self, cookie: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.Collections.IPropertySet Windows.Media.Protection.MediaProtectionManager::get_Properties()
    @_property
    def properties(self) -> windows_foundation_collections.IPropertySet: ...

@typing.final
class MediaProtectionPMPServer(winrt.system.Object):
    def __new__(cls: typing.Type[Self], p_properties: windows_foundation_collections.IPropertySet) -> Self: ...
    # Windows.Foundation.Collections.IPropertySet Windows.Media.Protection.MediaProtectionPMPServer::get_Properties()
    @_property
    def properties(self) -> windows_foundation_collections.IPropertySet: ...

@typing.final
class MediaProtectionServiceCompletion(winrt.system.Object):
    # System.Void Windows.Media.Protection.MediaProtectionServiceCompletion::Complete(System.Boolean)
    def complete(self, success: bool, /) -> None: ...

@typing.final
class ProtectionCapabilities(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Media.Protection.ProtectionCapabilityResult Windows.Media.Protection.ProtectionCapabilities::IsTypeSupported(System.String,System.String)
    def is_type_supported(self, type: str, key_system: str, /) -> ProtectionCapabilityResult: ...

@typing.final
class RevocationAndRenewalInformation(winrt.system.Object):
    # Windows.Foundation.Collections.IVector`1<Windows.Media.Protection.RevocationAndRenewalItem> Windows.Media.Protection.RevocationAndRenewalInformation::get_Items()
    @_property
    def items(self) -> typing.MutableSequence[RevocationAndRenewalItem]: ...

@typing.final
class RevocationAndRenewalItem(winrt.system.Object):
    # System.String Windows.Media.Protection.RevocationAndRenewalItem::get_HeaderHash()
    @_property
    def header_hash(self) -> str: ...
    # System.String Windows.Media.Protection.RevocationAndRenewalItem::get_Name()
    @_property
    def name(self) -> str: ...
    # System.String Windows.Media.Protection.RevocationAndRenewalItem::get_PublicKeyHash()
    @_property
    def public_key_hash(self) -> str: ...
    # Windows.Media.Protection.RevocationAndRenewalReasons Windows.Media.Protection.RevocationAndRenewalItem::get_Reasons()
    @_property
    def reasons(self) -> RevocationAndRenewalReasons: ...
    # System.String Windows.Media.Protection.RevocationAndRenewalItem::get_RenewalId()
    @_property
    def renewal_id(self) -> str: ...

@typing.final
class ServiceRequestedEventArgs(winrt.system.Object):
    # Windows.Media.Protection.MediaProtectionServiceCompletion Windows.Media.Protection.ServiceRequestedEventArgs::get_Completion()
    @_property
    def completion(self) -> MediaProtectionServiceCompletion: ...
    # Windows.Media.Protection.IMediaProtectionServiceRequest Windows.Media.Protection.ServiceRequestedEventArgs::get_Request()
    @_property
    def request(self) -> IMediaProtectionServiceRequest: ...
    # Windows.Media.Playback.MediaPlaybackItem Windows.Media.Protection.ServiceRequestedEventArgs::get_MediaPlaybackItem()
    @_property
    def media_playback_item(self) -> windows_media_playback.MediaPlaybackItem: ...

@typing.final
class _IMediaProtectionServiceRequest: ...

class IMediaProtectionServiceRequest(winrt._winrt.IInspectable):
    # System.Guid Windows.Media.Protection.IMediaProtectionServiceRequest::get_ProtectionSystem()
    @_property
    @abstractmethod
    def protection_system(self) -> _uuid.UUID: ...
    # System.Guid Windows.Media.Protection.IMediaProtectionServiceRequest::get_Type()
    @_property
    @abstractmethod
    def type(self) -> _uuid.UUID: ...

