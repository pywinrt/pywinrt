// WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

#include "py.Windows.Graphics.Printing.ProtectedPrint.h"

namespace py::cpp::Windows::Graphics::Printing::ProtectedPrint
{
    // ----- WindowsProtectedPrintInfo class --------------------

    static PyObject* _new_WindowsProtectedPrintInfo(PyTypeObject* /*unused*/, PyObject* /*unused*/, PyObject* /*unused*/) noexcept
    {
        static_assert(py::py_type<winrt::Windows::Graphics::Printing::ProtectedPrint::WindowsProtectedPrintInfo>::type_name);
        py::set_invalid_activation_error(py::py_type<winrt::Windows::Graphics::Printing::ProtectedPrint::WindowsProtectedPrintInfo>::type_name);
        return nullptr;
    }

    static PyObject* WindowsProtectedPrintInfo_get_IsProtectedPrintEnabled(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            static std::optional<bool> is_property_present{};

            if (!is_property_present.has_value())
            {
                is_property_present = winrt::Windows::Foundation::Metadata::ApiInformation::IsPropertyPresent(L"Windows.Graphics.Printing.ProtectedPrint.WindowsProtectedPrintInfo", L"IsProtectedPrintEnabled");
            }

            if (!is_property_present.value())
            {
                PyErr_SetString(PyExc_AttributeError, "property is not available in this version of Windows");
                return nullptr;
            }

            return py::convert([&]()
            {
                auto _gil = release_gil();
                return winrt::Windows::Graphics::Printing::ProtectedPrint::WindowsProtectedPrintInfo::IsProtectedPrintEnabled();
            }());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_WindowsProtectedPrintInfo[] = {
        { }};

    static PyGetSetDef _getset_WindowsProtectedPrintInfo[] = {
        { }};

    static PyType_Slot _type_slots_WindowsProtectedPrintInfo[] = {
        { Py_tp_new, reinterpret_cast<void*>(_new_WindowsProtectedPrintInfo) },
        { Py_tp_methods, reinterpret_cast<void*>(_methods_WindowsProtectedPrintInfo) },
        { Py_tp_getset, reinterpret_cast<void*>(_getset_WindowsProtectedPrintInfo) },
        { }};

    static PyType_Spec type_spec_WindowsProtectedPrintInfo = {
        "winrt._winrt_windows_graphics_printing_protectedprint.WindowsProtectedPrintInfo",
        0,
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WindowsProtectedPrintInfo};

    static PyGetSetDef getset_WindowsProtectedPrintInfo_Static[] = {
        { "is_protected_print_enabled", reinterpret_cast<getter>(WindowsProtectedPrintInfo_get_IsProtectedPrintEnabled), nullptr, nullptr, nullptr },
        { }};

    static PyMethodDef methods_WindowsProtectedPrintInfo_Static[] = {
        { }};

    static PyType_Slot type_slots_WindowsProtectedPrintInfo_Static[] = 
    {
        { Py_tp_base, reinterpret_cast<void*>(&PyType_Type) },
        { Py_tp_getset, reinterpret_cast<void*>(getset_WindowsProtectedPrintInfo_Static) },
        { Py_tp_methods, reinterpret_cast<void*>(methods_WindowsProtectedPrintInfo_Static) },
        { }
    };

    static PyType_Spec type_spec_WindowsProtectedPrintInfo_Static = {
        "winrt._winrt_windows_graphics_printing_protectedprint.WindowsProtectedPrintInfo_Static",
        static_cast<int>(PyType_Type.tp_basicsize),
        static_cast<int>(PyType_Type.tp_itemsize),
        Py_TPFLAGS_DEFAULT,
        type_slots_WindowsProtectedPrintInfo_Static};

    // ----- Windows.Graphics.Printing.ProtectedPrint Initialization --------------------

    PyDoc_STRVAR(module_doc, "Windows.Graphics.Printing.ProtectedPrint");

    static PyModuleDef module_def = {
        PyModuleDef_HEAD_INIT,
        "_winrt_windows_graphics_printing_protectedprint",
        module_doc,
        0,
        nullptr,
        nullptr,
        nullptr,
        nullptr,
        nullptr};
} // py::cpp::Windows::Graphics::Printing::ProtectedPrint

PyMODINIT_FUNC PyInit__winrt_windows_graphics_printing_protectedprint(void) noexcept
{
    using namespace py::cpp::Windows::Graphics::Printing::ProtectedPrint;

    if (py::import_winrt_runtime() == -1)
    {
        return nullptr;
    }

    py::pyobj_handle module{PyModule_Create(&module_def)};

    if (!module)
    {
        return nullptr;
    }

    auto inspectable_meta_type = py::get_inspectable_meta_type();
    if (!inspectable_meta_type)
    {
        return nullptr;
    }

    auto object_type = py::get_object_type();
    if (!object_type)
    {
        return nullptr;
    }

    py::pyobj_handle object_bases{PyTuple_Pack(1, object_type)};

    if (!object_bases)
    {
        return nullptr;
    }

    py::pyobj_handle WindowsProtectedPrintInfo_Static_bases{PyTuple_Pack(1, reinterpret_cast<PyObject*>(inspectable_meta_type))};
    if (!WindowsProtectedPrintInfo_Static_bases)
    {
        return nullptr;
    }

    py::pyobj_handle type_WindowsProtectedPrintInfo_Static{PyType_FromSpecWithBases(&type_spec_WindowsProtectedPrintInfo_Static, WindowsProtectedPrintInfo_Static_bases.get())};
    if (!type_WindowsProtectedPrintInfo_Static)
    {
        return nullptr;
    }

    py::pytype_handle WindowsProtectedPrintInfo_type{py::register_python_type(module.get(), &type_spec_WindowsProtectedPrintInfo, object_bases.get(), reinterpret_cast<PyTypeObject*>(type_WindowsProtectedPrintInfo_Static.get()))};
    if (!WindowsProtectedPrintInfo_type)
    {
        return nullptr;
    }


    return module.detach();
}
