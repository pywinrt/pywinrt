# WARNING: Please don't edit this file. It was generated by Python/WinRT v3.2.1

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.storage.streams as windows_storage_streams

from winrt.windows.security.cryptography import BinaryStringEncoding

Self = typing.TypeVar('Self')

@typing.final
class CryptographicBuffer_Static(winrt._winrt.IInspectable_Static):
    # System.Boolean Windows.Security.Cryptography.CryptographicBuffer::Compare(Windows.Storage.Streams.IBuffer,Windows.Storage.Streams.IBuffer)
    def compare(cls, object1: winrt.system.Buffer, object2: winrt.system.Buffer, /) -> bool: ...
    # System.String Windows.Security.Cryptography.CryptographicBuffer::ConvertBinaryToString(Windows.Security.Cryptography.BinaryStringEncoding,Windows.Storage.Streams.IBuffer)
    def convert_binary_to_string(cls, encoding: BinaryStringEncoding, buffer: winrt.system.Buffer, /) -> str: ...
    # Windows.Storage.Streams.IBuffer Windows.Security.Cryptography.CryptographicBuffer::ConvertStringToBinary(System.String,Windows.Security.Cryptography.BinaryStringEncoding)
    def convert_string_to_binary(cls, value: str, encoding: BinaryStringEncoding, /) -> winrt.system.Buffer: ...
    # System.Void Windows.Security.Cryptography.CryptographicBuffer::CopyToByteArray(Windows.Storage.Streams.IBuffer,System.Byte[]&)
    def copy_to_byte_array(cls, buffer: winrt.system.Buffer, /) -> winrt.system.Array[winrt.system.UInt8]: ...
    # Windows.Storage.Streams.IBuffer Windows.Security.Cryptography.CryptographicBuffer::CreateFromByteArray(System.Byte[])
    def create_from_byte_array(cls, value: typing.Union[winrt.system.Array[winrt.system.UInt8], winrt.system.ReadableBuffer], /) -> winrt.system.Buffer: ...
    # Windows.Storage.Streams.IBuffer Windows.Security.Cryptography.CryptographicBuffer::DecodeFromBase64String(System.String)
    def decode_from_base64_string(cls, value: str, /) -> winrt.system.Buffer: ...
    # Windows.Storage.Streams.IBuffer Windows.Security.Cryptography.CryptographicBuffer::DecodeFromHexString(System.String)
    def decode_from_hex_string(cls, value: str, /) -> winrt.system.Buffer: ...
    # System.String Windows.Security.Cryptography.CryptographicBuffer::EncodeToBase64String(Windows.Storage.Streams.IBuffer)
    def encode_to_base64_string(cls, buffer: winrt.system.Buffer, /) -> str: ...
    # System.String Windows.Security.Cryptography.CryptographicBuffer::EncodeToHexString(Windows.Storage.Streams.IBuffer)
    def encode_to_hex_string(cls, buffer: winrt.system.Buffer, /) -> str: ...
    # Windows.Storage.Streams.IBuffer Windows.Security.Cryptography.CryptographicBuffer::GenerateRandom(System.UInt32)
    def generate_random(cls, length: winrt.system.UInt32, /) -> winrt.system.Buffer: ...
    # System.UInt32 Windows.Security.Cryptography.CryptographicBuffer::GenerateRandomNumber()
    def generate_random_number(cls) -> winrt.system.UInt32: ...

@typing.final
class CryptographicBuffer(winrt.system.Object, metaclass=CryptographicBuffer_Static):
    pass

