# WARNING: Please don't edit this file. It was generated by Python/WinRT v3.2.1

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel as windows_applicationmodel
import winrt.windows.foundation as windows_foundation
import winrt.windows.ui as windows_ui

Self = typing.TypeVar('Self')

class ModelContextProtocolClientContext_Static(winrt._winrt.IInspectable_Static):
    pass

class ModelContextProtocolClientContext(winrt.system.Object, metaclass=ModelContextProtocolClientContext_Static):
    # Windows.UI.WindowId Windows.AI.ModelContextProtocol.ModelContextProtocolClientContext::get_OwnerWindowId()
    @_property
    def owner_window_id(self) -> windows_ui.WindowId: ...
    # System.Void Windows.AI.ModelContextProtocol.ModelContextProtocolClientContext::put_OwnerWindowId(Windows.UI.WindowId)
    @owner_window_id.setter
    @typing.final
    def owner_window_id(self, value: typing.Union[windows_ui.WindowId, typing.Tuple[winrt.system.UInt64]]) -> None: ...

class ModelContextProtocolServerCatalog_Static(winrt._winrt.IInspectable_Static):
    pass

class ModelContextProtocolServerCatalog(winrt.system.Object, metaclass=ModelContextProtocolServerCatalog_Static):
    @typing.final
    # Windows.AI.ModelContextProtocol.IModelContextProtocolServer Windows.AI.ModelContextProtocol.ModelContextProtocolServerCatalog::ActivateServer(System.Guid,Windows.AI.ModelContextProtocol.ModelContextProtocolClientContext)
    def activate_server(self, server_id: _uuid.UUID, client: ModelContextProtocolClientContext, /) -> IModelContextProtocolServer: ...
    @typing.final
    # Windows.AI.ModelContextProtocol.ModelContextProtocolClientContext Windows.AI.ModelContextProtocol.ModelContextProtocolServerCatalog::CreateClientContext()
    def create_client_context(self) -> ModelContextProtocolClientContext: ...
    @typing.final
    # Windows.AI.ModelContextProtocol.ModelContextProtocolServerInfo[] Windows.AI.ModelContextProtocol.ModelContextProtocolServerCatalog::GetServerInfos()
    def get_server_infos(self) -> winrt.system.Array[ModelContextProtocolServerInfo]: ...

class ModelContextProtocolServerInfo_Static(winrt._winrt.IInspectable_Static):
    pass

class ModelContextProtocolServerInfo(winrt.system.Object, metaclass=ModelContextProtocolServerInfo_Static):
    @typing.final
    # Windows.ApplicationModel.Package Windows.AI.ModelContextProtocol.ModelContextProtocolServerInfo::GetPackage()
    def get_package(self) -> windows_applicationmodel.Package: ...
    # System.String Windows.AI.ModelContextProtocol.ModelContextProtocolServerInfo::get_Description()
    @_property
    @typing.final
    def description(self) -> str: ...
    # System.Guid Windows.AI.ModelContextProtocol.ModelContextProtocolServerInfo::get_Id()
    @_property
    @typing.final
    def id(self) -> _uuid.UUID: ...
    # System.String Windows.AI.ModelContextProtocol.ModelContextProtocolServerInfo::get_Name()
    @_property
    @typing.final
    def name(self) -> str: ...

@typing.final
class _IModelContextProtocolServer: ...

class IModelContextProtocolServer(windows_foundation.IClosable, winrt._winrt.IInspectable):
    # System.String[] Windows.AI.ModelContextProtocol.IModelContextProtocolServer::GetCommandArguments()
    @abstractmethod
    def get_command_arguments(self) -> winrt.system.Array[str]: ...
    # System.String Windows.AI.ModelContextProtocol.IModelContextProtocolServer::get_Command()
    @_property
    @abstractmethod
    def command(self) -> str: ...
    # Windows.AI.ModelContextProtocol.ModelContextProtocolServerInfo Windows.AI.ModelContextProtocol.IModelContextProtocolServer::get_Info()
    @_property
    @abstractmethod
    def info(self) -> ModelContextProtocolServerInfo: ...

