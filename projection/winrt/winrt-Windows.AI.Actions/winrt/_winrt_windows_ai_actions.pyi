# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.ai.actions.hosting as windows_ai_actions_hosting
import winrt.windows.foundation as windows_foundation

from winrt.windows.ai.actions import ActionEntityKind, ActionInvocationResult

Self = typing.TypeVar('Self')

class ActionEntity_Static(winrt._winrt.IInspectable_Static):
    pass

class ActionEntity(winrt.system.Object, windows_foundation.IClosable, metaclass=ActionEntity_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Windows.AI.Actions.ActionEntity::Close()
    def close(self) -> None: ...
    # Windows.AI.Actions.ActionEntityDisplayInfo Windows.AI.Actions.ActionEntity::get_DisplayInfo()
    @_property
    @typing.final
    def display_info(self) -> ActionEntityDisplayInfo: ...
    # Windows.AI.Actions.ActionEntityKind Windows.AI.Actions.ActionEntity::get_Kind()
    @_property
    @typing.final
    def kind(self) -> ActionEntityKind: ...

@typing.final
class ActionEntityDisplayInfo(winrt.system.Object, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Windows.AI.Actions.ActionEntityDisplayInfo::Close()
    def close(self) -> None: ...
    # System.String Windows.AI.Actions.ActionEntityDisplayInfo::get_Title()
    @_property
    def title(self) -> str: ...

class ActionEntityFactory_Static(winrt._winrt.IInspectable_Static):
    pass

class ActionEntityFactory(winrt.system.Object, windows_foundation.IClosable, metaclass=ActionEntityFactory_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Windows.AI.Actions.ActionEntityFactory::Close()
    def close(self) -> None: ...
    @typing.final
    # Windows.AI.Actions.DocumentActionEntity Windows.AI.Actions.ActionEntityFactory::CreateDocumentEntity(System.String)
    def create_document_entity(self, path: str, /) -> DocumentActionEntity: ...
    @typing.final
    # Windows.AI.Actions.FileActionEntity Windows.AI.Actions.ActionEntityFactory::CreateFileEntity(System.String)
    def create_file_entity(self, path: str, /) -> FileActionEntity: ...
    @typing.final
    # Windows.AI.Actions.PhotoActionEntity Windows.AI.Actions.ActionEntityFactory::CreatePhotoEntity(System.String)
    def create_photo_entity(self, path: str, /) -> PhotoActionEntity: ...
    @typing.final
    # Windows.AI.Actions.TextActionEntity Windows.AI.Actions.ActionEntityFactory::CreateTextEntity(System.String)
    def create_text_entity(self, text: str, /) -> TextActionEntity: ...

@typing.final
class ActionInvocationContext(winrt.system.Object, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Windows.AI.Actions.ActionInvocationContext::Close()
    def close(self) -> None: ...
    # Windows.AI.Actions.NamedActionEntity[] Windows.AI.Actions.ActionInvocationContext::GetInputEntities()
    def get_input_entities(self) -> winrt.system.Array[NamedActionEntity]: ...
    # Windows.AI.Actions.NamedActionEntity[] Windows.AI.Actions.ActionInvocationContext::GetOutputEntities()
    def get_output_entities(self) -> winrt.system.Array[NamedActionEntity]: ...
    # System.Void Windows.AI.Actions.ActionInvocationContext::SetInputEntity(System.String,Windows.AI.Actions.ActionEntity)
    def set_input_entity(self, input_name: str, input_value: ActionEntity, /) -> None: ...
    # System.Void Windows.AI.Actions.ActionInvocationContext::SetOutputEntity(System.String,Windows.AI.Actions.ActionEntity)
    def set_output_entity(self, output_name: str, output_value: ActionEntity, /) -> None: ...
    # Windows.AI.Actions.ActionInvocationResult Windows.AI.Actions.ActionInvocationContext::get_Result()
    @_property
    def result(self) -> ActionInvocationResult: ...
    # System.Void Windows.AI.Actions.ActionInvocationContext::put_Result(Windows.AI.Actions.ActionInvocationResult)
    @result.setter
    def result(self, value: ActionInvocationResult) -> None: ...
    # Windows.Foundation.HResult Windows.AI.Actions.ActionInvocationContext::get_ExtendedError()
    @_property
    def extended_error(self) -> windows_foundation.HResult: ...
    # System.Void Windows.AI.Actions.ActionInvocationContext::put_ExtendedError(Windows.Foundation.HResult)
    @extended_error.setter
    def extended_error(self, value: typing.Union[windows_foundation.HResult, typing.Tuple[winrt.system.Int32]]) -> None: ...
    # System.String Windows.AI.Actions.ActionInvocationContext::get_ActionName()
    @_property
    def action_name(self) -> str: ...
    # Windows.AI.Actions.ActionEntityFactory Windows.AI.Actions.ActionInvocationContext::get_EntityFactory()
    @_property
    def entity_factory(self) -> ActionEntityFactory: ...
    # System.String Windows.AI.Actions.ActionInvocationContext::get_InvokerAumid()
    @_property
    def invoker_aumid(self) -> str: ...

class ActionRuntime_Static(winrt._winrt.IInspectable_Static):
    pass

class ActionRuntime(winrt.system.Object, windows_foundation.IClosable, metaclass=ActionRuntime_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Windows.AI.Actions.ActionRuntime::Close()
    def close(self) -> None: ...
    @typing.final
    # Windows.AI.Actions.ActionInvocationContext Windows.AI.Actions.ActionRuntime::CreateInvocationContext(System.String)
    def create_invocation_context(self, action_name: str, /) -> ActionInvocationContext: ...
    # Windows.AI.Actions.Hosting.ActionCatalog Windows.AI.Actions.ActionRuntime::get_ActionCatalog()
    @_property
    @typing.final
    def action_catalog(self) -> windows_ai_actions_hosting.ActionCatalog: ...
    # Windows.AI.Actions.ActionEntityFactory Windows.AI.Actions.ActionRuntime::get_EntityFactory()
    @_property
    @typing.final
    def entity_factory(self) -> ActionEntityFactory: ...

@typing.final
class DocumentActionEntity(ActionEntity):
    # System.String Windows.AI.Actions.DocumentActionEntity::get_FullPath()
    @_property
    def full_path(self) -> str: ...

@typing.final
class FileActionEntity(ActionEntity):
    # System.String Windows.AI.Actions.FileActionEntity::get_FullPath()
    @_property
    def full_path(self) -> str: ...

@typing.final
class NamedActionEntity(winrt.system.Object, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Windows.AI.Actions.NamedActionEntity::Close()
    def close(self) -> None: ...
    # System.String Windows.AI.Actions.NamedActionEntity::get_Name()
    @_property
    def name(self) -> str: ...
    # System.Void Windows.AI.Actions.NamedActionEntity::put_Name(System.String)
    @name.setter
    def name(self, value: str) -> None: ...
    # Windows.AI.Actions.ActionEntity Windows.AI.Actions.NamedActionEntity::get_Entity()
    @_property
    def entity(self) -> ActionEntity: ...
    # System.Void Windows.AI.Actions.NamedActionEntity::put_Entity(Windows.AI.Actions.ActionEntity)
    @entity.setter
    def entity(self, value: ActionEntity) -> None: ...

@typing.final
class PhotoActionEntity(ActionEntity):
    # System.String Windows.AI.Actions.PhotoActionEntity::get_FullPath()
    @_property
    def full_path(self) -> str: ...

@typing.final
class TextActionEntity(ActionEntity):
    # System.String Windows.AI.Actions.TextActionEntity::get_Text()
    @_property
    def text(self) -> str: ...

