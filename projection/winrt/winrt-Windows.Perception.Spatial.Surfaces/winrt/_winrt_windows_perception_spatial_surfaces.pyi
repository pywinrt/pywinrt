# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.foundation.numerics as windows_foundation_numerics
import winrt.windows.graphics.directx as windows_graphics_directx
import winrt.windows.perception.spatial as windows_perception_spatial
import winrt.windows.storage.streams as windows_storage_streams

Self = typing.TypeVar('Self')

@typing.final
class SpatialSurfaceInfo(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<Windows.Perception.Spatial.Surfaces.SpatialSurfaceMesh> Windows.Perception.Spatial.Surfaces.SpatialSurfaceInfo::TryComputeLatestMeshAsync(System.Double)
    def try_compute_latest_mesh_async(self, max_triangles_per_cubic_meter: winrt.system.Double, /) -> windows_foundation.IAsyncOperation[typing.Optional[SpatialSurfaceMesh]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Perception.Spatial.Surfaces.SpatialSurfaceMesh> Windows.Perception.Spatial.Surfaces.SpatialSurfaceInfo::TryComputeLatestMeshAsync(System.Double,Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshOptions)
    def try_compute_latest_mesh_with_options_async(self, max_triangles_per_cubic_meter: winrt.system.Double, options: SpatialSurfaceMeshOptions, /) -> windows_foundation.IAsyncOperation[typing.Optional[SpatialSurfaceMesh]]: ...
    # Windows.Foundation.IReference`1<Windows.Perception.Spatial.SpatialBoundingOrientedBox> Windows.Perception.Spatial.Surfaces.SpatialSurfaceInfo::TryGetBounds(Windows.Perception.Spatial.SpatialCoordinateSystem)
    def try_get_bounds(self, coordinate_system: windows_perception_spatial.SpatialCoordinateSystem, /) -> typing.Optional[windows_perception_spatial.SpatialBoundingOrientedBox]: ...
    # System.Guid Windows.Perception.Spatial.Surfaces.SpatialSurfaceInfo::get_Id()
    @_property
    def id(self) -> _uuid.UUID: ...
    # Windows.Foundation.DateTime Windows.Perception.Spatial.Surfaces.SpatialSurfaceInfo::get_UpdateTime()
    @_property
    def update_time(self) -> datetime.datetime: ...

@typing.final
class SpatialSurfaceMesh(winrt.system.Object):
    # Windows.Perception.Spatial.SpatialCoordinateSystem Windows.Perception.Spatial.Surfaces.SpatialSurfaceMesh::get_CoordinateSystem()
    @_property
    def coordinate_system(self) -> windows_perception_spatial.SpatialCoordinateSystem: ...
    # Windows.Perception.Spatial.Surfaces.SpatialSurfaceInfo Windows.Perception.Spatial.Surfaces.SpatialSurfaceMesh::get_SurfaceInfo()
    @_property
    def surface_info(self) -> SpatialSurfaceInfo: ...
    # Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshBuffer Windows.Perception.Spatial.Surfaces.SpatialSurfaceMesh::get_TriangleIndices()
    @_property
    def triangle_indices(self) -> SpatialSurfaceMeshBuffer: ...
    # Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshBuffer Windows.Perception.Spatial.Surfaces.SpatialSurfaceMesh::get_VertexNormals()
    @_property
    def vertex_normals(self) -> SpatialSurfaceMeshBuffer: ...
    # Windows.Foundation.Numerics.Vector3 Windows.Perception.Spatial.Surfaces.SpatialSurfaceMesh::get_VertexPositionScale()
    @_property
    def vertex_position_scale(self) -> windows_foundation_numerics.Vector3: ...
    # Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshBuffer Windows.Perception.Spatial.Surfaces.SpatialSurfaceMesh::get_VertexPositions()
    @_property
    def vertex_positions(self) -> SpatialSurfaceMeshBuffer: ...

@typing.final
class SpatialSurfaceMeshBuffer(winrt.system.Object):
    # Windows.Storage.Streams.IBuffer Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshBuffer::get_Data()
    @_property
    def data(self) -> windows_storage_streams.IBuffer: ...
    # System.UInt32 Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshBuffer::get_ElementCount()
    @_property
    def element_count(self) -> winrt.system.UInt32: ...
    # Windows.Graphics.DirectX.DirectXPixelFormat Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshBuffer::get_Format()
    @_property
    def format(self) -> windows_graphics_directx.DirectXPixelFormat: ...
    # System.UInt32 Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshBuffer::get_Stride()
    @_property
    def stride(self) -> winrt.system.UInt32: ...

@typing.final
class SpatialSurfaceMeshOptions_Static(winrt._winrt.IInspectable_Static):
    # Windows.Foundation.Collections.IVectorView`1<Windows.Graphics.DirectX.DirectXPixelFormat> Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshOptions::get_SupportedTriangleIndexFormats()
    @_property
    def supported_triangle_index_formats(cls) -> typing.Sequence[windows_graphics_directx.DirectXPixelFormat]: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Graphics.DirectX.DirectXPixelFormat> Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshOptions::get_SupportedVertexNormalFormats()
    @_property
    def supported_vertex_normal_formats(cls) -> typing.Sequence[windows_graphics_directx.DirectXPixelFormat]: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Graphics.DirectX.DirectXPixelFormat> Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshOptions::get_SupportedVertexPositionFormats()
    @_property
    def supported_vertex_position_formats(cls) -> typing.Sequence[windows_graphics_directx.DirectXPixelFormat]: ...

@typing.final
class SpatialSurfaceMeshOptions(winrt.system.Object, metaclass=SpatialSurfaceMeshOptions_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Graphics.DirectX.DirectXPixelFormat Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshOptions::get_VertexPositionFormat()
    @_property
    def vertex_position_format(self) -> windows_graphics_directx.DirectXPixelFormat: ...
    # System.Void Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshOptions::put_VertexPositionFormat(Windows.Graphics.DirectX.DirectXPixelFormat)
    @vertex_position_format.setter
    def vertex_position_format(self, value: windows_graphics_directx.DirectXPixelFormat) -> None: ...
    # Windows.Graphics.DirectX.DirectXPixelFormat Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshOptions::get_VertexNormalFormat()
    @_property
    def vertex_normal_format(self) -> windows_graphics_directx.DirectXPixelFormat: ...
    # System.Void Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshOptions::put_VertexNormalFormat(Windows.Graphics.DirectX.DirectXPixelFormat)
    @vertex_normal_format.setter
    def vertex_normal_format(self, value: windows_graphics_directx.DirectXPixelFormat) -> None: ...
    # Windows.Graphics.DirectX.DirectXPixelFormat Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshOptions::get_TriangleIndexFormat()
    @_property
    def triangle_index_format(self) -> windows_graphics_directx.DirectXPixelFormat: ...
    # System.Void Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshOptions::put_TriangleIndexFormat(Windows.Graphics.DirectX.DirectXPixelFormat)
    @triangle_index_format.setter
    def triangle_index_format(self, value: windows_graphics_directx.DirectXPixelFormat) -> None: ...
    # System.Boolean Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshOptions::get_IncludeVertexNormals()
    @_property
    def include_vertex_normals(self) -> bool: ...
    # System.Void Windows.Perception.Spatial.Surfaces.SpatialSurfaceMeshOptions::put_IncludeVertexNormals(System.Boolean)
    @include_vertex_normals.setter
    def include_vertex_normals(self, value: bool) -> None: ...

@typing.final
class SpatialSurfaceObserver_Static(winrt._winrt.IInspectable_Static):
    # System.Boolean Windows.Perception.Spatial.Surfaces.SpatialSurfaceObserver::IsSupported()
    def is_supported(cls) -> bool: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Perception.Spatial.SpatialPerceptionAccessStatus> Windows.Perception.Spatial.Surfaces.SpatialSurfaceObserver::RequestAccessAsync()
    def request_access_async(cls) -> windows_foundation.IAsyncOperation[windows_perception_spatial.SpatialPerceptionAccessStatus]: ...

@typing.final
class SpatialSurfaceObserver(winrt.system.Object, metaclass=SpatialSurfaceObserver_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.Collections.IMapView`2<System.Guid,Windows.Perception.Spatial.Surfaces.SpatialSurfaceInfo> Windows.Perception.Spatial.Surfaces.SpatialSurfaceObserver::GetObservedSurfaces()
    def get_observed_surfaces(self) -> typing.Mapping[_uuid.UUID, SpatialSurfaceInfo]: ...
    # System.Void Windows.Perception.Spatial.Surfaces.SpatialSurfaceObserver::SetBoundingVolume(Windows.Perception.Spatial.SpatialBoundingVolume)
    def set_bounding_volume(self, bounds: windows_perception_spatial.SpatialBoundingVolume, /) -> None: ...
    # System.Void Windows.Perception.Spatial.Surfaces.SpatialSurfaceObserver::SetBoundingVolumes(Windows.Foundation.Collections.IIterable`1<Windows.Perception.Spatial.SpatialBoundingVolume>)
    def set_bounding_volumes(self, bounds: typing.Iterable[windows_perception_spatial.SpatialBoundingVolume], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Perception.Spatial.Surfaces.SpatialSurfaceObserver::add_ObservedSurfacesChanged(Windows.Foundation.TypedEventHandler`2<Windows.Perception.Spatial.Surfaces.SpatialSurfaceObserver,System.Object>)
    def add_observed_surfaces_changed(self, handler: windows_foundation.TypedEventHandler[SpatialSurfaceObserver, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Perception.Spatial.Surfaces.SpatialSurfaceObserver::remove_ObservedSurfacesChanged(Windows.Foundation.EventRegistrationToken)
    def remove_observed_surfaces_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...

