# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.security.credentials as windows_security_credentials
import winrt.windows.system as windows_system
import winrt.windows.ui as windows_ui
import winrt.windows.ui.shell as windows_ui_shell

from winrt.windows.applicationmodel.useractivities import UserActivityState

Self = typing.TypeVar('Self')

@typing.final
class UserActivity_Static(winrt._winrt.IInspectable_Static):
    # System.String Windows.ApplicationModel.UserActivities.UserActivity::ToJsonArray(Windows.Foundation.Collections.IIterable`1<Windows.ApplicationModel.UserActivities.UserActivity>)
    def to_json_array(cls, activities: typing.Iterable[UserActivity], /) -> str: ...
    # Windows.ApplicationModel.UserActivities.UserActivity Windows.ApplicationModel.UserActivities.UserActivity::TryParseFromJson(System.String)
    def try_parse_from_json(cls, json: str, /) -> UserActivity: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.UserActivities.UserActivity> Windows.ApplicationModel.UserActivities.UserActivity::TryParseFromJsonArray(System.String)
    def try_parse_from_json_array(cls, json: str, /) -> typing.MutableSequence[UserActivity]: ...

@typing.final
class UserActivity(winrt.system.Object, metaclass=UserActivity_Static):
    def __new__(cls: typing.Type[Self], activity_id: str) -> Self: ...
    # Windows.ApplicationModel.UserActivities.UserActivitySession Windows.ApplicationModel.UserActivities.UserActivity::CreateSession()
    def create_session(self) -> UserActivitySession: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.UserActivities.UserActivity::SaveAsync()
    def save_async(self) -> windows_foundation.IAsyncAction: ...
    # System.String Windows.ApplicationModel.UserActivities.UserActivity::ToJson()
    def to_json(self) -> str: ...
    # Windows.Foundation.Uri Windows.ApplicationModel.UserActivities.UserActivity::get_FallbackUri()
    @_property
    def fallback_uri(self) -> windows_foundation.Uri: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivity::put_FallbackUri(Windows.Foundation.Uri)
    @fallback_uri.setter
    def fallback_uri(self, value: windows_foundation.Uri) -> None: ...
    # Windows.Foundation.Uri Windows.ApplicationModel.UserActivities.UserActivity::get_ContentUri()
    @_property
    def content_uri(self) -> windows_foundation.Uri: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivity::put_ContentUri(Windows.Foundation.Uri)
    @content_uri.setter
    def content_uri(self, value: windows_foundation.Uri) -> None: ...
    # System.String Windows.ApplicationModel.UserActivities.UserActivity::get_ContentType()
    @_property
    def content_type(self) -> str: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivity::put_ContentType(System.String)
    @content_type.setter
    def content_type(self, value: str) -> None: ...
    # Windows.ApplicationModel.UserActivities.IUserActivityContentInfo Windows.ApplicationModel.UserActivities.UserActivity::get_ContentInfo()
    @_property
    def content_info(self) -> IUserActivityContentInfo: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivity::put_ContentInfo(Windows.ApplicationModel.UserActivities.IUserActivityContentInfo)
    @content_info.setter
    def content_info(self, value: IUserActivityContentInfo) -> None: ...
    # Windows.Foundation.Uri Windows.ApplicationModel.UserActivities.UserActivity::get_ActivationUri()
    @_property
    def activation_uri(self) -> windows_foundation.Uri: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivity::put_ActivationUri(Windows.Foundation.Uri)
    @activation_uri.setter
    def activation_uri(self, value: windows_foundation.Uri) -> None: ...
    # System.String Windows.ApplicationModel.UserActivities.UserActivity::get_ActivityId()
    @_property
    def activity_id(self) -> str: ...
    # Windows.ApplicationModel.UserActivities.UserActivityState Windows.ApplicationModel.UserActivities.UserActivity::get_State()
    @_property
    def state(self) -> UserActivityState: ...
    # Windows.ApplicationModel.UserActivities.UserActivityVisualElements Windows.ApplicationModel.UserActivities.UserActivity::get_VisualElements()
    @_property
    def visual_elements(self) -> UserActivityVisualElements: ...
    # System.Boolean Windows.ApplicationModel.UserActivities.UserActivity::get_IsRoamable()
    @_property
    def is_roamable(self) -> bool: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivity::put_IsRoamable(System.Boolean)
    @is_roamable.setter
    def is_roamable(self, value: bool) -> None: ...

@typing.final
class UserActivityAttribution(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], icon_uri: windows_foundation.Uri) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.Uri Windows.ApplicationModel.UserActivities.UserActivityAttribution::get_IconUri()
    @_property
    def icon_uri(self) -> windows_foundation.Uri: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivityAttribution::put_IconUri(Windows.Foundation.Uri)
    @icon_uri.setter
    def icon_uri(self, value: windows_foundation.Uri) -> None: ...
    # System.String Windows.ApplicationModel.UserActivities.UserActivityAttribution::get_AlternateText()
    @_property
    def alternate_text(self) -> str: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivityAttribution::put_AlternateText(System.String)
    @alternate_text.setter
    def alternate_text(self, value: str) -> None: ...
    # System.Boolean Windows.ApplicationModel.UserActivities.UserActivityAttribution::get_AddImageQuery()
    @_property
    def add_image_query(self) -> bool: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivityAttribution::put_AddImageQuery(System.Boolean)
    @add_image_query.setter
    def add_image_query(self, value: bool) -> None: ...

@typing.final
class UserActivityChannel_Static(winrt._winrt.IInspectable_Static):
    # System.Void Windows.ApplicationModel.UserActivities.UserActivityChannel::DisableAutoSessionCreation()
    def disable_auto_session_creation(cls) -> None: ...
    # Windows.ApplicationModel.UserActivities.UserActivityChannel Windows.ApplicationModel.UserActivities.UserActivityChannel::GetDefault()
    def get_default(cls) -> UserActivityChannel: ...
    # Windows.ApplicationModel.UserActivities.UserActivityChannel Windows.ApplicationModel.UserActivities.UserActivityChannel::GetForUser(Windows.System.User)
    def get_for_user(cls, user: windows_system.User, /) -> UserActivityChannel: ...
    # Windows.ApplicationModel.UserActivities.UserActivityChannel Windows.ApplicationModel.UserActivities.UserActivityChannel::TryGetForWebAccount(Windows.Security.Credentials.WebAccount)
    def try_get_for_web_account(cls, account: windows_security_credentials.WebAccount, /) -> typing.Optional[UserActivityChannel]: ...

@typing.final
class UserActivityChannel(winrt.system.Object, metaclass=UserActivityChannel_Static):
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.UserActivities.UserActivityChannel::DeleteActivityAsync(System.String)
    def delete_activity_async(self, activity_id: str, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.UserActivities.UserActivityChannel::DeleteAllActivitiesAsync()
    def delete_all_activities_async(self) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.UserActivities.UserActivity> Windows.ApplicationModel.UserActivities.UserActivityChannel::GetOrCreateUserActivityAsync(System.String)
    def get_or_create_user_activity_async(self, activity_id: str, /) -> windows_foundation.IAsyncOperation[UserActivity]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.UserActivities.UserActivitySessionHistoryItem>> Windows.ApplicationModel.UserActivities.UserActivityChannel::GetRecentUserActivitiesAsync(System.Int32)
    def get_recent_user_activities_async(self, max_unique_activities: winrt.system.Int32, /) -> windows_foundation.IAsyncOperation[typing.MutableSequence[UserActivitySessionHistoryItem]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.UserActivities.UserActivitySessionHistoryItem>> Windows.ApplicationModel.UserActivities.UserActivityChannel::GetSessionHistoryItemsForUserActivityAsync(System.String,Windows.Foundation.DateTime)
    def get_session_history_items_for_user_activity_async(self, activity_id: str, start_time: datetime.datetime, /) -> windows_foundation.IAsyncOperation[typing.MutableSequence[UserActivitySessionHistoryItem]]: ...

@typing.final
class UserActivityContentInfo_Static(winrt._winrt.IInspectable_Static):
    # Windows.ApplicationModel.UserActivities.UserActivityContentInfo Windows.ApplicationModel.UserActivities.UserActivityContentInfo::FromJson(System.String)
    def from_json(cls, value: str, /) -> UserActivityContentInfo: ...

@typing.final
class UserActivityContentInfo(winrt.system.Object, IUserActivityContentInfo, metaclass=UserActivityContentInfo_Static):
    # System.String Windows.ApplicationModel.UserActivities.UserActivityContentInfo::ToJson()
    def to_json(self) -> str: ...

@typing.final
class UserActivityRequest(winrt.system.Object):
    # System.Void Windows.ApplicationModel.UserActivities.UserActivityRequest::SetUserActivity(Windows.ApplicationModel.UserActivities.UserActivity)
    def set_user_activity(self, activity: UserActivity, /) -> None: ...

@typing.final
class UserActivityRequestManager_Static(winrt._winrt.IInspectable_Static):
    # Windows.ApplicationModel.UserActivities.UserActivityRequestManager Windows.ApplicationModel.UserActivities.UserActivityRequestManager::GetForCurrentView()
    def get_for_current_view(cls) -> UserActivityRequestManager: ...

@typing.final
class UserActivityRequestManager(winrt.system.Object, metaclass=UserActivityRequestManager_Static):
    # Windows.Foundation.EventRegistrationToken Windows.ApplicationModel.UserActivities.UserActivityRequestManager::add_UserActivityRequested(Windows.Foundation.TypedEventHandler`2<Windows.ApplicationModel.UserActivities.UserActivityRequestManager,Windows.ApplicationModel.UserActivities.UserActivityRequestedEventArgs>)
    def add_user_activity_requested(self, handler: windows_foundation.TypedEventHandler[UserActivityRequestManager, UserActivityRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivityRequestManager::remove_UserActivityRequested(Windows.Foundation.EventRegistrationToken)
    def remove_user_activity_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...

@typing.final
class UserActivityRequestedEventArgs(winrt.system.Object):
    # Windows.Foundation.Deferral Windows.ApplicationModel.UserActivities.UserActivityRequestedEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...
    # Windows.ApplicationModel.UserActivities.UserActivityRequest Windows.ApplicationModel.UserActivities.UserActivityRequestedEventArgs::get_Request()
    @_property
    def request(self) -> UserActivityRequest: ...

@typing.final
class UserActivitySession(winrt.system.Object, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivitySession::Close()
    def close(self) -> None: ...
    # System.String Windows.ApplicationModel.UserActivities.UserActivitySession::get_ActivityId()
    @_property
    def activity_id(self) -> str: ...

@typing.final
class UserActivitySessionHistoryItem(winrt.system.Object):
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.ApplicationModel.UserActivities.UserActivitySessionHistoryItem::get_EndTime()
    @_property
    def end_time(self) -> typing.Optional[datetime.datetime]: ...
    # Windows.Foundation.DateTime Windows.ApplicationModel.UserActivities.UserActivitySessionHistoryItem::get_StartTime()
    @_property
    def start_time(self) -> datetime.datetime: ...
    # Windows.ApplicationModel.UserActivities.UserActivity Windows.ApplicationModel.UserActivities.UserActivitySessionHistoryItem::get_UserActivity()
    @_property
    def user_activity(self) -> UserActivity: ...

@typing.final
class UserActivityVisualElements(winrt.system.Object):
    # System.String Windows.ApplicationModel.UserActivities.UserActivityVisualElements::get_DisplayText()
    @_property
    def display_text(self) -> str: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivityVisualElements::put_DisplayText(System.String)
    @display_text.setter
    def display_text(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.UserActivities.UserActivityVisualElements::get_Description()
    @_property
    def description(self) -> str: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivityVisualElements::put_Description(System.String)
    @description.setter
    def description(self, value: str) -> None: ...
    # Windows.UI.Shell.IAdaptiveCard Windows.ApplicationModel.UserActivities.UserActivityVisualElements::get_Content()
    @_property
    def content(self) -> windows_ui_shell.IAdaptiveCard: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivityVisualElements::put_Content(Windows.UI.Shell.IAdaptiveCard)
    @content.setter
    def content(self, value: windows_ui_shell.IAdaptiveCard) -> None: ...
    # Windows.UI.Color Windows.ApplicationModel.UserActivities.UserActivityVisualElements::get_BackgroundColor()
    @_property
    def background_color(self) -> windows_ui.Color: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivityVisualElements::put_BackgroundColor(Windows.UI.Color)
    @background_color.setter
    def background_color(self, value: typing.Union[windows_ui.Color, typing.Tuple[winrt.system.UInt8, winrt.system.UInt8, winrt.system.UInt8, winrt.system.UInt8]]) -> None: ...
    # Windows.ApplicationModel.UserActivities.UserActivityAttribution Windows.ApplicationModel.UserActivities.UserActivityVisualElements::get_Attribution()
    @_property
    def attribution(self) -> UserActivityAttribution: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivityVisualElements::put_Attribution(Windows.ApplicationModel.UserActivities.UserActivityAttribution)
    @attribution.setter
    def attribution(self, value: UserActivityAttribution) -> None: ...
    # System.String Windows.ApplicationModel.UserActivities.UserActivityVisualElements::get_AttributionDisplayText()
    @_property
    def attribution_display_text(self) -> str: ...
    # System.Void Windows.ApplicationModel.UserActivities.UserActivityVisualElements::put_AttributionDisplayText(System.String)
    @attribution_display_text.setter
    def attribution_display_text(self, value: str) -> None: ...

@typing.final
class _IUserActivityContentInfo: ...

class IUserActivityContentInfo(winrt._winrt.IInspectable):
    # System.String Windows.ApplicationModel.UserActivities.IUserActivityContentInfo::ToJson()
    @abstractmethod
    def to_json(self) -> str: ...

