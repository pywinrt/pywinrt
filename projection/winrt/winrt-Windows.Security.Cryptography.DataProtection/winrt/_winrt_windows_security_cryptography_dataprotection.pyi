# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.storage.streams as windows_storage_streams

Self = typing.TypeVar('Self')

@typing.final
class DataProtectionProvider(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], protection_descriptor: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.IBuffer> Windows.Security.Cryptography.DataProtection.DataProtectionProvider::ProtectAsync(Windows.Storage.Streams.IBuffer)
    def protect_async(self, data: windows_storage_streams.IBuffer, /) -> windows_foundation.IAsyncOperation[windows_storage_streams.IBuffer]: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Cryptography.DataProtection.DataProtectionProvider::ProtectStreamAsync(Windows.Storage.Streams.IInputStream,Windows.Storage.Streams.IOutputStream)
    def protect_stream_async(self, src: windows_storage_streams.IInputStream, dest: windows_storage_streams.IOutputStream, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.IBuffer> Windows.Security.Cryptography.DataProtection.DataProtectionProvider::UnprotectAsync(Windows.Storage.Streams.IBuffer)
    def unprotect_async(self, data: windows_storage_streams.IBuffer, /) -> windows_foundation.IAsyncOperation[windows_storage_streams.IBuffer]: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Cryptography.DataProtection.DataProtectionProvider::UnprotectStreamAsync(Windows.Storage.Streams.IInputStream,Windows.Storage.Streams.IOutputStream)
    def unprotect_stream_async(self, src: windows_storage_streams.IInputStream, dest: windows_storage_streams.IOutputStream, /) -> windows_foundation.IAsyncAction: ...

