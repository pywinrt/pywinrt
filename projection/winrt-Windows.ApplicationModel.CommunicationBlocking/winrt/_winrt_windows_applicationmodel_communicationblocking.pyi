# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections

Self = typing.TypeVar('Self')

@typing.final
class CommunicationBlockingAccessManager_Static(type):
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingAccessManager::IsBlockedNumberAsync(System.String)
    def is_blocked_number_async(cls, number: str, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # System.Boolean Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingAccessManager::ShowBlockNumbersUI(Windows.Foundation.Collections.IIterable`1<System.String>)
    def show_block_numbers_ui(cls, phone_numbers: typing.Iterable[str], /) -> bool: ...
    # System.Void Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingAccessManager::ShowBlockedCallsUI()
    def show_blocked_calls_ui(cls) -> None: ...
    # System.Void Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingAccessManager::ShowBlockedMessagesUI()
    def show_blocked_messages_ui(cls) -> None: ...
    # System.Boolean Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingAccessManager::ShowUnblockNumbersUI(Windows.Foundation.Collections.IIterable`1<System.String>)
    def show_unblock_numbers_ui(cls, phone_numbers: typing.Iterable[str], /) -> bool: ...
    # System.Boolean Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingAccessManager::get_IsBlockingActive()
    @_property
    def is_blocking_active(cls) -> bool: ...

@typing.final
class CommunicationBlockingAccessManager(winrt.system.Object, metaclass=CommunicationBlockingAccessManager_Static):
    pass

@typing.final
class CommunicationBlockingAppManager_Static(type):
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingAppManager::RequestSetAsActiveBlockingAppAsync()
    def request_set_as_active_blocking_app_async(cls) -> windows_foundation.IAsyncOperation[bool]: ...
    # System.Void Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingAppManager::ShowCommunicationBlockingSettingsUI()
    def show_communication_blocking_settings_ui(cls) -> None: ...
    # System.Boolean Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingAppManager::get_IsCurrentAppActiveBlockingApp()
    @_property
    def is_current_app_active_blocking_app(cls) -> bool: ...

@typing.final
class CommunicationBlockingAppManager(winrt.system.Object, metaclass=CommunicationBlockingAppManager_Static):
    pass

