# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections

Self = typing.TypeVar('Self')

@typing.final
class CommunicationBlockingAccessManager_Static(type):
    def is_blocked_number_async(cls, number: str, /) -> winrt.windows.foundation.IAsyncOperation[bool]: ...
    def show_block_numbers_u_i(cls, phone_numbers: typing.Iterable[str], /) -> bool: ...
    def show_blocked_calls_u_i(cls) -> None: ...
    def show_blocked_messages_u_i(cls) -> None: ...
    def show_unblock_numbers_u_i(cls, phone_numbers: typing.Iterable[str], /) -> bool: ...
    @_property
    def is_blocking_active(cls) -> bool: ...

@typing.final
class CommunicationBlockingAccessManager(winrt.system.Object, metaclass=CommunicationBlockingAccessManager_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CommunicationBlockingAccessManager: ...

@typing.final
class CommunicationBlockingAppManager_Static(type):
    def request_set_as_active_blocking_app_async(cls) -> winrt.windows.foundation.IAsyncOperation[bool]: ...
    def show_communication_blocking_settings_u_i(cls) -> None: ...
    @_property
    def is_current_app_active_blocking_app(cls) -> bool: ...

@typing.final
class CommunicationBlockingAppManager(winrt.system.Object, metaclass=CommunicationBlockingAppManager_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CommunicationBlockingAppManager: ...

