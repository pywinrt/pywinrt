# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.microsoft.ui.xaml as microsoft_ui_xaml
import winrt.microsoft.ui.xaml.automation as microsoft_ui_xaml_automation
import winrt.microsoft.ui.xaml.automation.peers as microsoft_ui_xaml_automation_peers
import winrt.microsoft.ui.xaml.automation.text as microsoft_ui_xaml_automation_text
import winrt.windows.foundation as windows_foundation
import winrt.windows.ui as windows_ui

Self = typing.TypeVar('Self')

@typing.final
class IRawElementProviderSimple(microsoft_ui_xaml.DependencyObject):
    pass

class ImplementsIAnnotationProvider():
    pass

@typing.final
class IAnnotationProvider(winrt.system.Object, ImplementsIAnnotationProvider):
    @_property
    def annotation_type_id(self) -> winrt.system.Int32: ...
    @_property
    def annotation_type_name(self) -> str: ...
    @_property
    def author(self) -> str: ...
    @_property
    def date_time(self) -> str: ...
    @_property
    def target(self) -> IRawElementProviderSimple: ...

class ImplementsICustomNavigationProvider():
    pass

@typing.final
class ICustomNavigationProvider(winrt.system.Object, ImplementsICustomNavigationProvider):
    def navigate_custom(self, direction: microsoft_ui_xaml_automation_peers.AutomationNavigationDirection, /) -> winrt.system.Object: ...

class ImplementsIDockProvider():
    pass

@typing.final
class IDockProvider(winrt.system.Object, ImplementsIDockProvider):
    def set_dock_position(self, dock_position: microsoft_ui_xaml_automation.DockPosition, /) -> None: ...
    @_property
    def dock_position(self) -> microsoft_ui_xaml_automation.DockPosition: ...

class ImplementsIDragProvider():
    pass

@typing.final
class IDragProvider(winrt.system.Object, ImplementsIDragProvider):
    def get_grabbed_items(self) -> winrt.system.Array[IRawElementProviderSimple]: ...
    @_property
    def drop_effect(self) -> str: ...
    @_property
    def drop_effects(self) -> str: ...
    @_property
    def is_grabbed(self) -> bool: ...

class ImplementsIDropTargetProvider():
    pass

@typing.final
class IDropTargetProvider(winrt.system.Object, ImplementsIDropTargetProvider):
    @_property
    def drop_effect(self) -> str: ...
    @_property
    def drop_effects(self) -> str: ...

class ImplementsIExpandCollapseProvider():
    pass

@typing.final
class IExpandCollapseProvider(winrt.system.Object, ImplementsIExpandCollapseProvider):
    def collapse(self) -> None: ...
    def expand(self) -> None: ...
    @_property
    def expand_collapse_state(self) -> microsoft_ui_xaml_automation.ExpandCollapseState: ...

class ImplementsIGridItemProvider():
    pass

@typing.final
class IGridItemProvider(winrt.system.Object, ImplementsIGridItemProvider):
    @_property
    def column(self) -> winrt.system.Int32: ...
    @_property
    def column_span(self) -> winrt.system.Int32: ...
    @_property
    def containing_grid(self) -> IRawElementProviderSimple: ...
    @_property
    def row(self) -> winrt.system.Int32: ...
    @_property
    def row_span(self) -> winrt.system.Int32: ...

class ImplementsIGridProvider():
    pass

@typing.final
class IGridProvider(winrt.system.Object, ImplementsIGridProvider):
    def get_item(self, row: winrt.system.Int32, column: winrt.system.Int32, /) -> IRawElementProviderSimple: ...
    @_property
    def column_count(self) -> winrt.system.Int32: ...
    @_property
    def row_count(self) -> winrt.system.Int32: ...

class ImplementsIInvokeProvider():
    pass

@typing.final
class IInvokeProvider(winrt.system.Object, ImplementsIInvokeProvider):
    def invoke(self) -> None: ...

class ImplementsIItemContainerProvider():
    pass

@typing.final
class IItemContainerProvider(winrt.system.Object, ImplementsIItemContainerProvider):
    def find_item_by_property(self, start_after: IRawElementProviderSimple, automation_property: microsoft_ui_xaml_automation.AutomationProperty, value: winrt.system.Object, /) -> IRawElementProviderSimple: ...

class ImplementsIMultipleViewProvider():
    pass

@typing.final
class IMultipleViewProvider(winrt.system.Object, ImplementsIMultipleViewProvider):
    def get_supported_views(self) -> winrt.system.Array[winrt.system.Int32]: ...
    def get_view_name(self, view_id: winrt.system.Int32, /) -> str: ...
    def set_current_view(self, view_id: winrt.system.Int32, /) -> None: ...
    @_property
    def current_view(self) -> winrt.system.Int32: ...

class ImplementsIObjectModelProvider():
    pass

@typing.final
class IObjectModelProvider(winrt.system.Object, ImplementsIObjectModelProvider):
    def get_underlying_object_model(self) -> winrt.system.Object: ...

class ImplementsIRangeValueProvider():
    pass

@typing.final
class IRangeValueProvider(winrt.system.Object, ImplementsIRangeValueProvider):
    def set_value(self, value: winrt.system.Double, /) -> None: ...
    @_property
    def is_read_only(self) -> bool: ...
    @_property
    def large_change(self) -> winrt.system.Double: ...
    @_property
    def maximum(self) -> winrt.system.Double: ...
    @_property
    def minimum(self) -> winrt.system.Double: ...
    @_property
    def small_change(self) -> winrt.system.Double: ...
    @_property
    def value(self) -> winrt.system.Double: ...

class ImplementsIScrollItemProvider():
    pass

@typing.final
class IScrollItemProvider(winrt.system.Object, ImplementsIScrollItemProvider):
    def scroll_into_view(self) -> None: ...

class ImplementsIScrollProvider():
    pass

@typing.final
class IScrollProvider(winrt.system.Object, ImplementsIScrollProvider):
    def scroll(self, horizontal_amount: microsoft_ui_xaml_automation.ScrollAmount, vertical_amount: microsoft_ui_xaml_automation.ScrollAmount, /) -> None: ...
    def set_scroll_percent(self, horizontal_percent: winrt.system.Double, vertical_percent: winrt.system.Double, /) -> None: ...
    @_property
    def horizontal_scroll_percent(self) -> winrt.system.Double: ...
    @_property
    def horizontal_view_size(self) -> winrt.system.Double: ...
    @_property
    def horizontally_scrollable(self) -> bool: ...
    @_property
    def vertical_scroll_percent(self) -> winrt.system.Double: ...
    @_property
    def vertical_view_size(self) -> winrt.system.Double: ...
    @_property
    def vertically_scrollable(self) -> bool: ...

class ImplementsISelectionItemProvider():
    pass

@typing.final
class ISelectionItemProvider(winrt.system.Object, ImplementsISelectionItemProvider):
    def add_to_selection(self) -> None: ...
    def remove_from_selection(self) -> None: ...
    def select(self) -> None: ...
    @_property
    def is_selected(self) -> bool: ...
    @_property
    def selection_container(self) -> IRawElementProviderSimple: ...

class ImplementsISelectionProvider():
    pass

@typing.final
class ISelectionProvider(winrt.system.Object, ImplementsISelectionProvider):
    def get_selection(self) -> winrt.system.Array[IRawElementProviderSimple]: ...
    @_property
    def can_select_multiple(self) -> bool: ...
    @_property
    def is_selection_required(self) -> bool: ...

class ImplementsISpreadsheetItemProvider():
    pass

@typing.final
class ISpreadsheetItemProvider(winrt.system.Object, ImplementsISpreadsheetItemProvider):
    def get_annotation_objects(self) -> winrt.system.Array[IRawElementProviderSimple]: ...
    def get_annotation_types(self) -> winrt.system.Array[microsoft_ui_xaml_automation.AnnotationType]: ...
    @_property
    def formula(self) -> str: ...

class ImplementsISpreadsheetProvider():
    pass

@typing.final
class ISpreadsheetProvider(winrt.system.Object, ImplementsISpreadsheetProvider):
    def get_item_by_name(self, name: str, /) -> IRawElementProviderSimple: ...

class ImplementsIStylesProvider():
    pass

@typing.final
class IStylesProvider(winrt.system.Object, ImplementsIStylesProvider):
    @_property
    def extended_properties(self) -> str: ...
    @_property
    def fill_color(self) -> windows_ui.Color: ...
    @_property
    def fill_pattern_color(self) -> windows_ui.Color: ...
    @_property
    def fill_pattern_style(self) -> str: ...
    @_property
    def shape(self) -> str: ...
    @_property
    def style_id(self) -> winrt.system.Int32: ...
    @_property
    def style_name(self) -> str: ...

class ImplementsISynchronizedInputProvider():
    pass

@typing.final
class ISynchronizedInputProvider(winrt.system.Object, ImplementsISynchronizedInputProvider):
    def cancel(self) -> None: ...
    def start_listening(self, input_type: microsoft_ui_xaml_automation.SynchronizedInputType, /) -> None: ...

class ImplementsITableItemProvider():
    pass

@typing.final
class ITableItemProvider(winrt.system.Object, ImplementsITableItemProvider):
    def get_column_header_items(self) -> winrt.system.Array[IRawElementProviderSimple]: ...
    def get_row_header_items(self) -> winrt.system.Array[IRawElementProviderSimple]: ...

class ImplementsITableProvider():
    pass

@typing.final
class ITableProvider(winrt.system.Object, ImplementsITableProvider):
    def get_column_headers(self) -> winrt.system.Array[IRawElementProviderSimple]: ...
    def get_row_headers(self) -> winrt.system.Array[IRawElementProviderSimple]: ...
    @_property
    def row_or_column_major(self) -> microsoft_ui_xaml_automation.RowOrColumnMajor: ...

class ImplementsITextChildProvider():
    pass

@typing.final
class ITextChildProvider(winrt.system.Object, ImplementsITextChildProvider):
    @_property
    def text_container(self) -> IRawElementProviderSimple: ...
    @_property
    def text_range(self) -> ITextRangeProvider: ...

class ImplementsITextEditProvider():
    pass

@typing.final
class ITextEditProvider(winrt.system.Object, ImplementsITextEditProvider, ImplementsITextProvider):
    def get_active_composition(self) -> ITextRangeProvider: ...
    def get_conversion_target(self) -> ITextRangeProvider: ...
    def get_selection(self) -> winrt.system.Array[ITextRangeProvider]: ...
    def get_visible_ranges(self) -> winrt.system.Array[ITextRangeProvider]: ...
    def range_from_child(self, child_element: IRawElementProviderSimple, /) -> ITextRangeProvider: ...
    def range_from_point(self, screen_location: windows_foundation.Point, /) -> ITextRangeProvider: ...
    @_property
    def document_range(self) -> ITextRangeProvider: ...
    @_property
    def supported_text_selection(self) -> microsoft_ui_xaml_automation.SupportedTextSelection: ...

class ImplementsITextProvider():
    pass

@typing.final
class ITextProvider(winrt.system.Object, ImplementsITextProvider):
    def get_selection(self) -> winrt.system.Array[ITextRangeProvider]: ...
    def get_visible_ranges(self) -> winrt.system.Array[ITextRangeProvider]: ...
    def range_from_child(self, child_element: IRawElementProviderSimple, /) -> ITextRangeProvider: ...
    def range_from_point(self, screen_location: windows_foundation.Point, /) -> ITextRangeProvider: ...
    @_property
    def document_range(self) -> ITextRangeProvider: ...
    @_property
    def supported_text_selection(self) -> microsoft_ui_xaml_automation.SupportedTextSelection: ...

class ImplementsITextProvider2():
    pass

@typing.final
class ITextProvider2(winrt.system.Object, ImplementsITextProvider2, ImplementsITextProvider):
    def get_caret_range(self) -> typing.Tuple[ITextRangeProvider, bool]: ...
    def get_selection(self) -> winrt.system.Array[ITextRangeProvider]: ...
    def get_visible_ranges(self) -> winrt.system.Array[ITextRangeProvider]: ...
    def range_from_annotation(self, annotation_element: IRawElementProviderSimple, /) -> ITextRangeProvider: ...
    def range_from_child(self, child_element: IRawElementProviderSimple, /) -> ITextRangeProvider: ...
    def range_from_point(self, screen_location: windows_foundation.Point, /) -> ITextRangeProvider: ...
    @_property
    def document_range(self) -> ITextRangeProvider: ...
    @_property
    def supported_text_selection(self) -> microsoft_ui_xaml_automation.SupportedTextSelection: ...

class ImplementsITextRangeProvider():
    pass

@typing.final
class ITextRangeProvider(winrt.system.Object, ImplementsITextRangeProvider):
    def add_to_selection(self) -> None: ...
    def clone(self) -> ITextRangeProvider: ...
    def compare(self, text_range_provider: ImplementsITextRangeProvider, /) -> bool: ...
    def compare_endpoints(self, endpoint: microsoft_ui_xaml_automation_text.TextPatternRangeEndpoint, text_range_provider: ImplementsITextRangeProvider, target_endpoint: microsoft_ui_xaml_automation_text.TextPatternRangeEndpoint, /) -> winrt.system.Int32: ...
    def expand_to_enclosing_unit(self, unit: microsoft_ui_xaml_automation_text.TextUnit, /) -> None: ...
    def find_attribute(self, attribute_id: winrt.system.Int32, value: winrt.system.Object, backward: bool, /) -> ITextRangeProvider: ...
    def find_text(self, text: str, backward: bool, ignore_case: bool, /) -> ITextRangeProvider: ...
    def get_attribute_value(self, attribute_id: winrt.system.Int32, /) -> winrt.system.Object: ...
    def get_bounding_rectangles(self) -> winrt.system.Array[winrt.system.Double]: ...
    def get_children(self) -> winrt.system.Array[IRawElementProviderSimple]: ...
    def get_enclosing_element(self) -> IRawElementProviderSimple: ...
    def get_text(self, max_length: winrt.system.Int32, /) -> str: ...
    def move(self, unit: microsoft_ui_xaml_automation_text.TextUnit, count: winrt.system.Int32, /) -> winrt.system.Int32: ...
    def move_endpoint_by_range(self, endpoint: microsoft_ui_xaml_automation_text.TextPatternRangeEndpoint, text_range_provider: ImplementsITextRangeProvider, target_endpoint: microsoft_ui_xaml_automation_text.TextPatternRangeEndpoint, /) -> None: ...
    def move_endpoint_by_unit(self, endpoint: microsoft_ui_xaml_automation_text.TextPatternRangeEndpoint, unit: microsoft_ui_xaml_automation_text.TextUnit, count: winrt.system.Int32, /) -> winrt.system.Int32: ...
    def remove_from_selection(self) -> None: ...
    def scroll_into_view(self, align_to_top: bool, /) -> None: ...
    def select(self) -> None: ...

class ImplementsITextRangeProvider2():
    pass

@typing.final
class ITextRangeProvider2(winrt.system.Object, ImplementsITextRangeProvider2, ImplementsITextRangeProvider):
    def add_to_selection(self) -> None: ...
    def clone(self) -> ITextRangeProvider: ...
    def compare(self, text_range_provider: ImplementsITextRangeProvider, /) -> bool: ...
    def compare_endpoints(self, endpoint: microsoft_ui_xaml_automation_text.TextPatternRangeEndpoint, text_range_provider: ImplementsITextRangeProvider, target_endpoint: microsoft_ui_xaml_automation_text.TextPatternRangeEndpoint, /) -> winrt.system.Int32: ...
    def expand_to_enclosing_unit(self, unit: microsoft_ui_xaml_automation_text.TextUnit, /) -> None: ...
    def find_attribute(self, attribute_id: winrt.system.Int32, value: winrt.system.Object, backward: bool, /) -> ITextRangeProvider: ...
    def find_text(self, text: str, backward: bool, ignore_case: bool, /) -> ITextRangeProvider: ...
    def get_attribute_value(self, attribute_id: winrt.system.Int32, /) -> winrt.system.Object: ...
    def get_bounding_rectangles(self) -> winrt.system.Array[winrt.system.Double]: ...
    def get_children(self) -> winrt.system.Array[IRawElementProviderSimple]: ...
    def get_enclosing_element(self) -> IRawElementProviderSimple: ...
    def get_text(self, max_length: winrt.system.Int32, /) -> str: ...
    def move(self, unit: microsoft_ui_xaml_automation_text.TextUnit, count: winrt.system.Int32, /) -> winrt.system.Int32: ...
    def move_endpoint_by_range(self, endpoint: microsoft_ui_xaml_automation_text.TextPatternRangeEndpoint, text_range_provider: ImplementsITextRangeProvider, target_endpoint: microsoft_ui_xaml_automation_text.TextPatternRangeEndpoint, /) -> None: ...
    def move_endpoint_by_unit(self, endpoint: microsoft_ui_xaml_automation_text.TextPatternRangeEndpoint, unit: microsoft_ui_xaml_automation_text.TextUnit, count: winrt.system.Int32, /) -> winrt.system.Int32: ...
    def remove_from_selection(self) -> None: ...
    def scroll_into_view(self, align_to_top: bool, /) -> None: ...
    def select(self) -> None: ...
    def show_context_menu(self) -> None: ...

class ImplementsIToggleProvider():
    pass

@typing.final
class IToggleProvider(winrt.system.Object, ImplementsIToggleProvider):
    def toggle(self) -> None: ...
    @_property
    def toggle_state(self) -> microsoft_ui_xaml_automation.ToggleState: ...

class ImplementsITransformProvider():
    pass

@typing.final
class ITransformProvider(winrt.system.Object, ImplementsITransformProvider):
    def move(self, x: winrt.system.Double, y: winrt.system.Double, /) -> None: ...
    def resize(self, width: winrt.system.Double, height: winrt.system.Double, /) -> None: ...
    def rotate(self, degrees: winrt.system.Double, /) -> None: ...
    @_property
    def can_move(self) -> bool: ...
    @_property
    def can_resize(self) -> bool: ...
    @_property
    def can_rotate(self) -> bool: ...

class ImplementsITransformProvider2():
    pass

@typing.final
class ITransformProvider2(winrt.system.Object, ImplementsITransformProvider2, ImplementsITransformProvider):
    def move(self, x: winrt.system.Double, y: winrt.system.Double, /) -> None: ...
    def resize(self, width: winrt.system.Double, height: winrt.system.Double, /) -> None: ...
    def rotate(self, degrees: winrt.system.Double, /) -> None: ...
    def zoom(self, zoom: winrt.system.Double, /) -> None: ...
    def zoom_by_unit(self, zoom_unit: microsoft_ui_xaml_automation.ZoomUnit, /) -> None: ...
    @_property
    def can_zoom(self) -> bool: ...
    @_property
    def max_zoom(self) -> winrt.system.Double: ...
    @_property
    def min_zoom(self) -> winrt.system.Double: ...
    @_property
    def zoom_level(self) -> winrt.system.Double: ...
    @_property
    def can_move(self) -> bool: ...
    @_property
    def can_resize(self) -> bool: ...
    @_property
    def can_rotate(self) -> bool: ...

class ImplementsIValueProvider():
    pass

@typing.final
class IValueProvider(winrt.system.Object, ImplementsIValueProvider):
    def set_value(self, value: str, /) -> None: ...
    @_property
    def is_read_only(self) -> bool: ...
    @_property
    def value(self) -> str: ...

class ImplementsIVirtualizedItemProvider():
    pass

@typing.final
class IVirtualizedItemProvider(winrt.system.Object, ImplementsIVirtualizedItemProvider):
    def realize(self) -> None: ...

class ImplementsIWindowProvider():
    pass

@typing.final
class IWindowProvider(winrt.system.Object, ImplementsIWindowProvider):
    def close(self) -> None: ...
    def set_visual_state(self, state: microsoft_ui_xaml_automation.WindowVisualState, /) -> None: ...
    def wait_for_input_idle(self, milliseconds: winrt.system.Int32, /) -> bool: ...
    @_property
    def interaction_state(self) -> microsoft_ui_xaml_automation.WindowInteractionState: ...
    @_property
    def is_modal(self) -> bool: ...
    @_property
    def is_topmost(self) -> bool: ...
    @_property
    def maximizable(self) -> bool: ...
    @_property
    def minimizable(self) -> bool: ...
    @_property
    def visual_state(self) -> microsoft_ui_xaml_automation.WindowVisualState: ...

