# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.1.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.storage.streams as windows_storage_streams

from winrt.windows.storage.compression import CompressAlgorithm

Self = typing.TypeVar('Self')

@typing.final
class Compressor(winrt.system.Object):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Compressor: ...
    @typing.overload
    def __new__(cls: typing.Type[Compressor], underlying_stream: typing.Optional[windows_storage_streams.IOutputStream]) -> Compressor: ...
    @typing.overload
    def __new__(cls: typing.Type[Compressor], underlying_stream: typing.Optional[windows_storage_streams.IOutputStream], algorithm: CompressAlgorithm, block_size: winrt.system.UInt32) -> Compressor: ...
    def close(self) -> None: ...
    def detach_stream(self) -> typing.Optional[windows_storage_streams.IOutputStream]: ...
    def finish_async(self) -> windows_foundation.IAsyncOperation[bool]: ...
    def flush_async(self) -> windows_foundation.IAsyncOperation[bool]: ...
    def write_async(self, buffer: typing.Optional[windows_storage_streams.IBuffer], /) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt32, winrt.system.UInt32]: ...

@typing.final
class Decompressor(winrt.system.Object):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Decompressor: ...
    def __new__(cls: typing.Type[Decompressor], underlying_stream: typing.Optional[windows_storage_streams.IInputStream]) -> Decompressor: ...
    def close(self) -> None: ...
    def detach_stream(self) -> typing.Optional[windows_storage_streams.IInputStream]: ...
    def read_async(self, buffer: typing.Optional[windows_storage_streams.IBuffer], count: winrt.system.UInt32, options: windows_storage_streams.InputStreamOptions, /) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IBuffer, winrt.system.UInt32]: ...

