# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation
import winrt.windows.storage
import winrt.windows.storage.streams
import winrt.windows.system

from winrt.windows.security.dataprotection import UserDataAvailability, UserDataBufferUnprotectStatus, UserDataStorageItemProtectionStatus

Self = typing.TypeVar('Self')

@typing.final
class UserDataAvailabilityStateChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> UserDataAvailabilityStateChangedEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...

@typing.final
class UserDataBufferUnprotectResult(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> UserDataBufferUnprotectResult: ...
    @_property
    def status(self) -> UserDataBufferUnprotectStatus: ...
    @_property
    def unprotected_buffer(self) -> typing.Optional[winrt.windows.storage.streams.IBuffer]: ...

@typing.final
class UserDataProtectionManager_Static(type):
    def try_get_default(cls) -> typing.Optional[UserDataProtectionManager]: ...
    def try_get_for_user(cls, user: typing.Optional[winrt.windows.system.User], /) -> typing.Optional[UserDataProtectionManager]: ...

@typing.final
class UserDataProtectionManager(winrt.system.Object, metaclass=UserDataProtectionManager_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> UserDataProtectionManager: ...
    def get_storage_item_protection_info_async(self, storage_item: typing.Optional[winrt.windows.storage.IStorageItem], /) -> winrt.windows.foundation.IAsyncOperation[UserDataStorageItemProtectionInfo]: ...
    def is_continued_data_availability_expected(self, availability: UserDataAvailability, /) -> bool: ...
    def protect_buffer_async(self, unprotected_buffer: typing.Optional[winrt.windows.storage.streams.IBuffer], availability: UserDataAvailability, /) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.streams.IBuffer]: ...
    def protect_storage_item_async(self, storage_item: typing.Optional[winrt.windows.storage.IStorageItem], availability: UserDataAvailability, /) -> winrt.windows.foundation.IAsyncOperation[UserDataStorageItemProtectionStatus]: ...
    def unprotect_buffer_async(self, protected_buffer: typing.Optional[winrt.windows.storage.streams.IBuffer], /) -> winrt.windows.foundation.IAsyncOperation[UserDataBufferUnprotectResult]: ...
    def add_data_availability_state_changed(self, handler: winrt.windows.foundation.TypedEventHandler[UserDataProtectionManager, UserDataAvailabilityStateChangedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_data_availability_state_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

@typing.final
class UserDataStorageItemProtectionInfo(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> UserDataStorageItemProtectionInfo: ...
    @_property
    def availability(self) -> UserDataAvailability: ...

