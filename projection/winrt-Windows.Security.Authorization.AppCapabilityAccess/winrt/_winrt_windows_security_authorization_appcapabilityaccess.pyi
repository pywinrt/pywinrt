# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.1.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.system as windows_system

from winrt.windows.security.authorization.appcapabilityaccess import AppCapabilityAccessStatus

Self = typing.TypeVar('Self')

@typing.final
class AppCapability_Static(type):
    def create(cls, capability_name: str, /) -> typing.Optional[AppCapability]: ...
    def create_with_process_id_for_user(cls, user: typing.Optional[windows_system.User], capability_name: str, pid: winrt.system.UInt32, /) -> typing.Optional[AppCapability]: ...
    def request_access_for_capabilities_async(cls, capability_names: typing.Iterable[str], /) -> windows_foundation.IAsyncOperation[windows_foundation_collections.IMapView[str, AppCapabilityAccessStatus]]: ...
    def request_access_for_capabilities_for_user_async(cls, user: typing.Optional[windows_system.User], capability_names: typing.Iterable[str], /) -> windows_foundation.IAsyncOperation[windows_foundation_collections.IMapView[str, AppCapabilityAccessStatus]]: ...

@typing.final
class AppCapability(winrt.system.Object, metaclass=AppCapability_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppCapability: ...
    def check_access(self) -> AppCapabilityAccessStatus: ...
    def request_access_async(self) -> windows_foundation.IAsyncOperation[AppCapabilityAccessStatus]: ...
    def add_access_changed(self, handler: windows_foundation.TypedEventHandler[AppCapability, AppCapabilityAccessChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def capability_name(self) -> str: ...
    @_property
    def user(self) -> typing.Optional[windows_system.User]: ...
    @_property
    def display_message(self) -> str: ...
    @display_message.setter
    def display_message(self, value: str) -> None: ...

@typing.final
class AppCapabilityAccessChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppCapabilityAccessChangedEventArgs: ...

