# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.windows.data.text as windows_data_text
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.storage.streams as windows_storage_streams
import winrt.windows.system as windows_system
import winrt.windows.ui as windows_ui
import winrt.windows.ui.popups as windows_ui_popups
import winrt.windows.ui.viewmanagement as windows_ui_viewmanagement

from winrt.windows.applicationmodel.contacts import ContactAddressKind, ContactAnnotationOperations, ContactAnnotationStoreAccessType, ContactBatchStatus, ContactCardHeaderKind, ContactCardTabKind, ContactChangeType, ContactDateKind, ContactEmailKind, ContactFieldCategory, ContactFieldType, ContactListOtherAppReadAccess, ContactListOtherAppWriteAccess, ContactListSyncStatus, ContactMatchReasonKind, ContactNameOrder, ContactPhoneKind, ContactQueryDesiredFields, ContactQuerySearchFields, ContactQuerySearchScope, ContactRelationship, ContactSelectionMode, ContactStoreAccessType, PinnedContactSurface

Self = typing.TypeVar('Self')

@typing.final
class AggregateContactManager(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.Contact>> Windows.ApplicationModel.Contacts.AggregateContactManager::FindRawContactsAsync(Windows.ApplicationModel.Contacts.Contact)
    def find_raw_contacts_async(self, contact: Contact, /) -> windows_foundation.IAsyncOperation[typing.Sequence[Contact]]: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Contacts.AggregateContactManager::SetRemoteIdentificationInformationAsync(System.String,System.String,System.String)
    def set_remote_identification_information_async(self, contact_list_id: str, remote_source_id: str, account_id: str, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.Contact> Windows.ApplicationModel.Contacts.AggregateContactManager::TryLinkContactsAsync(Windows.ApplicationModel.Contacts.Contact,Windows.ApplicationModel.Contacts.Contact)
    def try_link_contacts_async(self, primary_contact: Contact, secondary_contact: Contact, /) -> windows_foundation.IAsyncOperation[Contact]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Contacts.AggregateContactManager::TrySetPreferredSourceForPictureAsync(Windows.ApplicationModel.Contacts.Contact,Windows.ApplicationModel.Contacts.Contact)
    def try_set_preferred_source_for_picture_async(self, aggregate_contact: Contact, raw_contact: Contact, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Contacts.AggregateContactManager::UnlinkRawContactAsync(Windows.ApplicationModel.Contacts.Contact)
    def unlink_raw_contact_async(self, contact: Contact, /) -> windows_foundation.IAsyncAction: ...

@typing.final
class Contact(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Storage.Streams.IRandomAccessStreamReference Windows.ApplicationModel.Contacts.Contact::get_Thumbnail()
    @_property
    def thumbnail(self) -> windows_storage_streams.IRandomAccessStreamReference: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_Thumbnail(Windows.Storage.Streams.IRandomAccessStreamReference)
    @thumbnail.setter
    def thumbnail(self, value: windows_storage_streams.IRandomAccessStreamReference) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_Name()
    @_property
    def name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_Name(System.String)
    @name.setter
    def name(self, value: str) -> None: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Contacts.IContactField> Windows.ApplicationModel.Contacts.Contact::get_Fields()
    @_property
    def fields(self) -> typing.MutableSequence[IContactField]: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_Id()
    @_property
    def id(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_Id(System.String)
    @id.setter
    def id(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_Notes()
    @_property
    def notes(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_Notes(System.String)
    @notes.setter
    def notes(self, value: str) -> None: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Contacts.ContactConnectedServiceAccount> Windows.ApplicationModel.Contacts.Contact::get_ConnectedServiceAccounts()
    @_property
    def connected_service_accounts(self) -> typing.MutableSequence[ContactConnectedServiceAccount]: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Contacts.ContactEmail> Windows.ApplicationModel.Contacts.Contact::get_Emails()
    @_property
    def emails(self) -> typing.MutableSequence[ContactEmail]: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Contacts.ContactAddress> Windows.ApplicationModel.Contacts.Contact::get_Addresses()
    @_property
    def addresses(self) -> typing.MutableSequence[ContactAddress]: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Contacts.ContactDate> Windows.ApplicationModel.Contacts.Contact::get_ImportantDates()
    @_property
    def important_dates(self) -> typing.MutableSequence[ContactDate]: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Contacts.ContactJobInfo> Windows.ApplicationModel.Contacts.Contact::get_JobInfo()
    @_property
    def job_info(self) -> typing.MutableSequence[ContactJobInfo]: ...
    # Windows.Foundation.Collections.IVector`1<System.String> Windows.ApplicationModel.Contacts.Contact::get_DataSuppliers()
    @_property
    def data_suppliers(self) -> typing.MutableSequence[str]: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Contacts.ContactPhone> Windows.ApplicationModel.Contacts.Contact::get_Phones()
    @_property
    def phones(self) -> typing.MutableSequence[ContactPhone]: ...
    # Windows.Foundation.Collections.IPropertySet Windows.ApplicationModel.Contacts.Contact::get_ProviderProperties()
    @_property
    def provider_properties(self) -> windows_foundation_collections.IPropertySet: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Contacts.ContactSignificantOther> Windows.ApplicationModel.Contacts.Contact::get_SignificantOthers()
    @_property
    def significant_others(self) -> typing.MutableSequence[ContactSignificantOther]: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Contacts.ContactWebsite> Windows.ApplicationModel.Contacts.Contact::get_Websites()
    @_property
    def websites(self) -> typing.MutableSequence[ContactWebsite]: ...
    # Windows.Storage.Streams.IRandomAccessStreamReference Windows.ApplicationModel.Contacts.Contact::get_SourceDisplayPicture()
    @_property
    def source_display_picture(self) -> windows_storage_streams.IRandomAccessStreamReference: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_SourceDisplayPicture(Windows.Storage.Streams.IRandomAccessStreamReference)
    @source_display_picture.setter
    def source_display_picture(self, value: windows_storage_streams.IRandomAccessStreamReference) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_TextToneToken()
    @_property
    def text_tone_token(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_TextToneToken(System.String)
    @text_tone_token.setter
    def text_tone_token(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_DisplayNameOverride()
    @_property
    def display_name_override(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_DisplayNameOverride(System.String)
    @display_name_override.setter
    def display_name_override(self, value: str) -> None: ...
    # Windows.Foundation.DateTime Windows.ApplicationModel.Contacts.Contact::get_DisplayPictureUserUpdateTime()
    @_property
    def display_picture_user_update_time(self) -> datetime.datetime: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_DisplayPictureUserUpdateTime(Windows.Foundation.DateTime)
    @display_picture_user_update_time.setter
    def display_picture_user_update_time(self, value: datetime.datetime) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_Nickname()
    @_property
    def nickname(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_Nickname(System.String)
    @nickname.setter
    def nickname(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_RemoteId()
    @_property
    def remote_id(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_RemoteId(System.String)
    @remote_id.setter
    def remote_id(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_RingToneToken()
    @_property
    def ring_tone_token(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_RingToneToken(System.String)
    @ring_tone_token.setter
    def ring_tone_token(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_ContactListId()
    @_property
    def contact_list_id(self) -> str: ...
    # Windows.Storage.Streams.IRandomAccessStreamReference Windows.ApplicationModel.Contacts.Contact::get_LargeDisplayPicture()
    @_property
    def large_display_picture(self) -> windows_storage_streams.IRandomAccessStreamReference: ...
    # Windows.Storage.Streams.IRandomAccessStreamReference Windows.ApplicationModel.Contacts.Contact::get_SmallDisplayPicture()
    @_property
    def small_display_picture(self) -> windows_storage_streams.IRandomAccessStreamReference: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_SortName()
    @_property
    def sort_name(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_AggregateId()
    @_property
    def aggregate_id(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_FullName()
    @_property
    def full_name(self) -> str: ...
    # System.Boolean Windows.ApplicationModel.Contacts.Contact::get_IsAggregate()
    @_property
    def is_aggregate(self) -> bool: ...
    # System.Boolean Windows.ApplicationModel.Contacts.Contact::get_IsDisplayPictureManuallySet()
    @_property
    def is_display_picture_manually_set(self) -> bool: ...
    # System.Boolean Windows.ApplicationModel.Contacts.Contact::get_IsMe()
    @_property
    def is_me(self) -> bool: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_YomiGivenName()
    @_property
    def yomi_given_name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_YomiGivenName(System.String)
    @yomi_given_name.setter
    def yomi_given_name(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_HonorificNameSuffix()
    @_property
    def honorific_name_suffix(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_HonorificNameSuffix(System.String)
    @honorific_name_suffix.setter
    def honorific_name_suffix(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_YomiFamilyName()
    @_property
    def yomi_family_name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_YomiFamilyName(System.String)
    @yomi_family_name.setter
    def yomi_family_name(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_MiddleName()
    @_property
    def middle_name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_MiddleName(System.String)
    @middle_name.setter
    def middle_name(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_LastName()
    @_property
    def last_name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_LastName(System.String)
    @last_name.setter
    def last_name(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_HonorificNamePrefix()
    @_property
    def honorific_name_prefix(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_HonorificNamePrefix(System.String)
    @honorific_name_prefix.setter
    def honorific_name_prefix(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_FirstName()
    @_property
    def first_name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.Contact::put_FirstName(System.String)
    @first_name.setter
    def first_name(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_DisplayName()
    @_property
    def display_name(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.Contact::get_YomiDisplayName()
    @_property
    def yomi_display_name(self) -> str: ...

@typing.final
class ContactAddress(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.ApplicationModel.Contacts.ContactAddress::get_StreetAddress()
    @_property
    def street_address(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactAddress::put_StreetAddress(System.String)
    @street_address.setter
    def street_address(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactAddress::get_Region()
    @_property
    def region(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactAddress::put_Region(System.String)
    @region.setter
    def region(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactAddress::get_PostalCode()
    @_property
    def postal_code(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactAddress::put_PostalCode(System.String)
    @postal_code.setter
    def postal_code(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactAddress::get_Locality()
    @_property
    def locality(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactAddress::put_Locality(System.String)
    @locality.setter
    def locality(self, value: str) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactAddressKind Windows.ApplicationModel.Contacts.ContactAddress::get_Kind()
    @_property
    def kind(self) -> ContactAddressKind: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactAddress::put_Kind(Windows.ApplicationModel.Contacts.ContactAddressKind)
    @kind.setter
    def kind(self, value: ContactAddressKind) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactAddress::get_Description()
    @_property
    def description(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactAddress::put_Description(System.String)
    @description.setter
    def description(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactAddress::get_Country()
    @_property
    def country(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactAddress::put_Country(System.String)
    @country.setter
    def country(self, value: str) -> None: ...

@typing.final
class ContactAnnotation(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.ApplicationModel.Contacts.ContactAnnotationOperations Windows.ApplicationModel.Contacts.ContactAnnotation::get_SupportedOperations()
    @_property
    def supported_operations(self) -> ContactAnnotationOperations: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactAnnotation::put_SupportedOperations(Windows.ApplicationModel.Contacts.ContactAnnotationOperations)
    @supported_operations.setter
    def supported_operations(self, value: ContactAnnotationOperations) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactAnnotation::get_RemoteId()
    @_property
    def remote_id(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactAnnotation::put_RemoteId(System.String)
    @remote_id.setter
    def remote_id(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactAnnotation::get_ContactId()
    @_property
    def contact_id(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactAnnotation::put_ContactId(System.String)
    @contact_id.setter
    def contact_id(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactAnnotation::get_AnnotationListId()
    @_property
    def annotation_list_id(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactAnnotation::get_Id()
    @_property
    def id(self) -> str: ...
    # System.Boolean Windows.ApplicationModel.Contacts.ContactAnnotation::get_IsDisabled()
    @_property
    def is_disabled(self) -> bool: ...
    # Windows.Foundation.Collections.ValueSet Windows.ApplicationModel.Contacts.ContactAnnotation::get_ProviderProperties()
    @_property
    def provider_properties(self) -> windows_foundation_collections.ValueSet: ...
    # System.String Windows.ApplicationModel.Contacts.ContactAnnotation::get_ContactListId()
    @_property
    def contact_list_id(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactAnnotation::put_ContactListId(System.String)
    @contact_list_id.setter
    def contact_list_id(self, value: str) -> None: ...

@typing.final
class ContactAnnotationList(winrt.system.Object):
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Contacts.ContactAnnotationList::DeleteAnnotationAsync(Windows.ApplicationModel.Contacts.ContactAnnotation)
    def delete_annotation_async(self, annotation: ContactAnnotation, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Contacts.ContactAnnotationList::DeleteAsync()
    def delete_async(self) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactAnnotation>> Windows.ApplicationModel.Contacts.ContactAnnotationList::FindAnnotationsAsync()
    def find_annotations_async(self) -> windows_foundation.IAsyncOperation[typing.Sequence[ContactAnnotation]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactAnnotation>> Windows.ApplicationModel.Contacts.ContactAnnotationList::FindAnnotationsByRemoteIdAsync(System.String)
    def find_annotations_by_remote_id_async(self, remote_id: str, /) -> windows_foundation.IAsyncOperation[typing.Sequence[ContactAnnotation]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.ContactAnnotation> Windows.ApplicationModel.Contacts.ContactAnnotationList::GetAnnotationAsync(System.String)
    def get_annotation_async(self, annotation_id: str, /) -> windows_foundation.IAsyncOperation[ContactAnnotation]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Contacts.ContactAnnotationList::TrySaveAnnotationAsync(Windows.ApplicationModel.Contacts.ContactAnnotation)
    def try_save_annotation_async(self, annotation: ContactAnnotation, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # System.String Windows.ApplicationModel.Contacts.ContactAnnotationList::get_Id()
    @_property
    def id(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactAnnotationList::get_ProviderPackageFamilyName()
    @_property
    def provider_package_family_name(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactAnnotationList::get_UserDataAccountId()
    @_property
    def user_data_account_id(self) -> str: ...

@typing.final
class ContactAnnotationStore(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.ContactAnnotationList> Windows.ApplicationModel.Contacts.ContactAnnotationStore::CreateAnnotationListAsync()
    def create_annotation_list_async(self) -> windows_foundation.IAsyncOperation[ContactAnnotationList]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.ContactAnnotationList> Windows.ApplicationModel.Contacts.ContactAnnotationStore::CreateAnnotationListAsync(System.String)
    def create_annotation_list_in_account_async(self, user_data_account_id: str, /) -> windows_foundation.IAsyncOperation[ContactAnnotationList]: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Contacts.ContactAnnotationStore::DisableAnnotationAsync(Windows.ApplicationModel.Contacts.ContactAnnotation)
    def disable_annotation_async(self, annotation: ContactAnnotation, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactAnnotationList>> Windows.ApplicationModel.Contacts.ContactAnnotationStore::FindAnnotationListsAsync()
    def find_annotation_lists_async(self) -> windows_foundation.IAsyncOperation[typing.Sequence[ContactAnnotationList]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactAnnotation>> Windows.ApplicationModel.Contacts.ContactAnnotationStore::FindAnnotationsForContactAsync(Windows.ApplicationModel.Contacts.Contact)
    def find_annotations_for_contact_async(self, contact: Contact, /) -> windows_foundation.IAsyncOperation[typing.Sequence[ContactAnnotation]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactAnnotation>> Windows.ApplicationModel.Contacts.ContactAnnotationStore::FindAnnotationsForContactListAsync(System.String)
    def find_annotations_for_contact_list_async(self, contact_list_id: str, /) -> windows_foundation.IAsyncOperation[typing.Sequence[ContactAnnotation]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<System.String>> Windows.ApplicationModel.Contacts.ContactAnnotationStore::FindContactIdsByEmailAsync(System.String)
    def find_contact_ids_by_email_async(self, email_address: str, /) -> windows_foundation.IAsyncOperation[typing.Sequence[str]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<System.String>> Windows.ApplicationModel.Contacts.ContactAnnotationStore::FindContactIdsByPhoneNumberAsync(System.String)
    def find_contact_ids_by_phone_number_async(self, phone_number: str, /) -> windows_foundation.IAsyncOperation[typing.Sequence[str]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.ContactAnnotationList> Windows.ApplicationModel.Contacts.ContactAnnotationStore::GetAnnotationListAsync(System.String)
    def get_annotation_list_async(self, annotation_list_id: str, /) -> windows_foundation.IAsyncOperation[ContactAnnotationList]: ...

@typing.final
class ContactBatch(winrt.system.Object):
    # Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.Contact> Windows.ApplicationModel.Contacts.ContactBatch::get_Contacts()
    @_property
    def contacts(self) -> typing.Sequence[Contact]: ...
    # Windows.ApplicationModel.Contacts.ContactBatchStatus Windows.ApplicationModel.Contacts.ContactBatch::get_Status()
    @_property
    def status(self) -> ContactBatchStatus: ...

@typing.final
class ContactCardDelayedDataLoader(winrt.system.Object, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactCardDelayedDataLoader::Close()
    def close(self) -> None: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactCardDelayedDataLoader::SetData(Windows.ApplicationModel.Contacts.Contact)
    def set_data(self, contact: Contact, /) -> None: ...

@typing.final
class ContactCardOptions(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.ApplicationModel.Contacts.ContactCardTabKind Windows.ApplicationModel.Contacts.ContactCardOptions::get_InitialTabKind()
    @_property
    def initial_tab_kind(self) -> ContactCardTabKind: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactCardOptions::put_InitialTabKind(Windows.ApplicationModel.Contacts.ContactCardTabKind)
    @initial_tab_kind.setter
    def initial_tab_kind(self, value: ContactCardTabKind) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactCardHeaderKind Windows.ApplicationModel.Contacts.ContactCardOptions::get_HeaderKind()
    @_property
    def header_kind(self) -> ContactCardHeaderKind: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactCardOptions::put_HeaderKind(Windows.ApplicationModel.Contacts.ContactCardHeaderKind)
    @header_kind.setter
    def header_kind(self, value: ContactCardHeaderKind) -> None: ...
    # Windows.Foundation.Collections.IVector`1<System.String> Windows.ApplicationModel.Contacts.ContactCardOptions::get_ServerSearchContactListIds()
    @_property
    def server_search_contact_list_ids(self) -> typing.MutableSequence[str]: ...

@typing.final
class ContactChange(winrt.system.Object):
    # Windows.ApplicationModel.Contacts.ContactChangeType Windows.ApplicationModel.Contacts.ContactChange::get_ChangeType()
    @_property
    def change_type(self) -> ContactChangeType: ...
    # Windows.ApplicationModel.Contacts.Contact Windows.ApplicationModel.Contacts.ContactChange::get_Contact()
    @_property
    def contact(self) -> Contact: ...

@typing.final
class ContactChangeReader(winrt.system.Object):
    # System.Void Windows.ApplicationModel.Contacts.ContactChangeReader::AcceptChanges()
    def accept_changes(self) -> None: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactChangeReader::AcceptChangesThrough(Windows.ApplicationModel.Contacts.ContactChange)
    def accept_changes_through(self, last_change_to_accept: ContactChange, /) -> None: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactChange>> Windows.ApplicationModel.Contacts.ContactChangeReader::ReadBatchAsync()
    def read_batch_async(self) -> windows_foundation.IAsyncOperation[typing.Sequence[ContactChange]]: ...

@typing.final
class ContactChangeTracker(winrt.system.Object):
    # System.Void Windows.ApplicationModel.Contacts.ContactChangeTracker::Enable()
    def enable(self) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactChangeReader Windows.ApplicationModel.Contacts.ContactChangeTracker::GetChangeReader()
    def get_change_reader(self) -> ContactChangeReader: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactChangeTracker::Reset()
    def reset(self) -> None: ...
    # System.Boolean Windows.ApplicationModel.Contacts.ContactChangeTracker::get_IsTracking()
    @_property
    def is_tracking(self) -> bool: ...

@typing.final
class ContactChangedDeferral(winrt.system.Object):
    # System.Void Windows.ApplicationModel.Contacts.ContactChangedDeferral::Complete()
    def complete(self) -> None: ...

@typing.final
class ContactChangedEventArgs(winrt.system.Object):
    # Windows.ApplicationModel.Contacts.ContactChangedDeferral Windows.ApplicationModel.Contacts.ContactChangedEventArgs::GetDeferral()
    def get_deferral(self) -> ContactChangedDeferral: ...

@typing.final
class ContactConnectedServiceAccount(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.ApplicationModel.Contacts.ContactConnectedServiceAccount::get_ServiceName()
    @_property
    def service_name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactConnectedServiceAccount::put_ServiceName(System.String)
    @service_name.setter
    def service_name(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactConnectedServiceAccount::get_Id()
    @_property
    def id(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactConnectedServiceAccount::put_Id(System.String)
    @id.setter
    def id(self, value: str) -> None: ...

@typing.final
class ContactDate(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactDate::get_Year()
    @_property
    def year(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactDate::put_Year(Windows.Foundation.IReference`1<System.Int32>)
    @year.setter
    def year(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.UInt32> Windows.ApplicationModel.Contacts.ContactDate::get_Month()
    @_property
    def month(self) -> typing.Optional[winrt.system.UInt32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactDate::put_Month(Windows.Foundation.IReference`1<System.UInt32>)
    @month.setter
    def month(self, value: typing.Optional[winrt.system.UInt32]) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactDateKind Windows.ApplicationModel.Contacts.ContactDate::get_Kind()
    @_property
    def kind(self) -> ContactDateKind: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactDate::put_Kind(Windows.ApplicationModel.Contacts.ContactDateKind)
    @kind.setter
    def kind(self, value: ContactDateKind) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactDate::get_Description()
    @_property
    def description(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactDate::put_Description(System.String)
    @description.setter
    def description(self, value: str) -> None: ...
    # Windows.Foundation.IReference`1<System.UInt32> Windows.ApplicationModel.Contacts.ContactDate::get_Day()
    @_property
    def day(self) -> typing.Optional[winrt.system.UInt32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactDate::put_Day(Windows.Foundation.IReference`1<System.UInt32>)
    @day.setter
    def day(self, value: typing.Optional[winrt.system.UInt32]) -> None: ...

@typing.final
class ContactEmail(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.ApplicationModel.Contacts.ContactEmailKind Windows.ApplicationModel.Contacts.ContactEmail::get_Kind()
    @_property
    def kind(self) -> ContactEmailKind: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactEmail::put_Kind(Windows.ApplicationModel.Contacts.ContactEmailKind)
    @kind.setter
    def kind(self, value: ContactEmailKind) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactEmail::get_Description()
    @_property
    def description(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactEmail::put_Description(System.String)
    @description.setter
    def description(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactEmail::get_Address()
    @_property
    def address(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactEmail::put_Address(System.String)
    @address.setter
    def address(self, value: str) -> None: ...

@typing.final
class ContactField(winrt.system.Object, IContactField):
    @typing.overload
    def __new__(cls: typing.Type[Self], value: str, type: ContactFieldType) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], value: str, type: ContactFieldType, category: ContactFieldCategory) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], name: str, value: str, type: ContactFieldType, category: ContactFieldCategory) -> Self: ...
    # Windows.ApplicationModel.Contacts.ContactFieldCategory Windows.ApplicationModel.Contacts.ContactField::get_Category()
    @_property
    def category(self) -> ContactFieldCategory: ...
    # System.String Windows.ApplicationModel.Contacts.ContactField::get_Name()
    @_property
    def name(self) -> str: ...
    # Windows.ApplicationModel.Contacts.ContactFieldType Windows.ApplicationModel.Contacts.ContactField::get_Type()
    @_property
    def type(self) -> ContactFieldType: ...
    # System.String Windows.ApplicationModel.Contacts.ContactField::get_Value()
    @_property
    def value(self) -> str: ...

@typing.final
class ContactFieldFactory(winrt.system.Object, IContactInstantMessageFieldFactory, IContactLocationFieldFactory, IContactFieldFactory):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.ApplicationModel.Contacts.ContactField Windows.ApplicationModel.Contacts.ContactFieldFactory::CreateField(System.String,Windows.ApplicationModel.Contacts.ContactFieldType,Windows.ApplicationModel.Contacts.ContactFieldCategory)
    def create_field_category(self, value: str, type: ContactFieldType, category: ContactFieldCategory, /) -> ContactField: ...
    # Windows.ApplicationModel.Contacts.ContactField Windows.ApplicationModel.Contacts.ContactFieldFactory::CreateField(System.String,System.String,Windows.ApplicationModel.Contacts.ContactFieldType,Windows.ApplicationModel.Contacts.ContactFieldCategory)
    def create_field_custom(self, name: str, value: str, type: ContactFieldType, category: ContactFieldCategory, /) -> ContactField: ...
    # Windows.ApplicationModel.Contacts.ContactField Windows.ApplicationModel.Contacts.ContactFieldFactory::CreateField(System.String,Windows.ApplicationModel.Contacts.ContactFieldType)
    def create_field_default(self, value: str, type: ContactFieldType, /) -> ContactField: ...
    # Windows.ApplicationModel.Contacts.ContactInstantMessageField Windows.ApplicationModel.Contacts.ContactFieldFactory::CreateInstantMessage(System.String,Windows.ApplicationModel.Contacts.ContactFieldCategory,System.String,System.String,Windows.Foundation.Uri)
    def create_instant_message_all(self, user_name: str, category: ContactFieldCategory, service: str, display_text: str, verb: windows_foundation.Uri, /) -> ContactInstantMessageField: ...
    # Windows.ApplicationModel.Contacts.ContactInstantMessageField Windows.ApplicationModel.Contacts.ContactFieldFactory::CreateInstantMessage(System.String,Windows.ApplicationModel.Contacts.ContactFieldCategory)
    def create_instant_message_category(self, user_name: str, category: ContactFieldCategory, /) -> ContactInstantMessageField: ...
    # Windows.ApplicationModel.Contacts.ContactInstantMessageField Windows.ApplicationModel.Contacts.ContactFieldFactory::CreateInstantMessage(System.String)
    def create_instant_message_default(self, user_name: str, /) -> ContactInstantMessageField: ...
    # Windows.ApplicationModel.Contacts.ContactLocationField Windows.ApplicationModel.Contacts.ContactFieldFactory::CreateLocation(System.String,Windows.ApplicationModel.Contacts.ContactFieldCategory,System.String,System.String,System.String,System.String,System.String)
    def create_location_all(self, unstructured_address: str, category: ContactFieldCategory, street: str, city: str, region: str, country: str, postal_code: str, /) -> ContactLocationField: ...
    # Windows.ApplicationModel.Contacts.ContactLocationField Windows.ApplicationModel.Contacts.ContactFieldFactory::CreateLocation(System.String,Windows.ApplicationModel.Contacts.ContactFieldCategory)
    def create_location_category(self, unstructured_address: str, category: ContactFieldCategory, /) -> ContactLocationField: ...
    # Windows.ApplicationModel.Contacts.ContactLocationField Windows.ApplicationModel.Contacts.ContactFieldFactory::CreateLocation(System.String)
    def create_location_default(self, unstructured_address: str, /) -> ContactLocationField: ...

@typing.final
class ContactGroup(winrt.system.Object):
    pass

@typing.final
class ContactInformation(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.IRandomAccessStreamWithContentType> Windows.ApplicationModel.Contacts.ContactInformation::GetThumbnailAsync()
    def get_thumbnail_async(self) -> windows_foundation.IAsyncOperation[windows_storage_streams.IRandomAccessStreamWithContentType]: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactField> Windows.ApplicationModel.Contacts.ContactInformation::QueryCustomFields(System.String)
    def query_custom_fields(self, custom_name: str, /) -> typing.Sequence[ContactField]: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactField> Windows.ApplicationModel.Contacts.ContactInformation::get_CustomFields()
    @_property
    def custom_fields(self) -> typing.Sequence[ContactField]: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactField> Windows.ApplicationModel.Contacts.ContactInformation::get_Emails()
    @_property
    def emails(self) -> typing.Sequence[ContactField]: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactInstantMessageField> Windows.ApplicationModel.Contacts.ContactInformation::get_InstantMessages()
    @_property
    def instant_messages(self) -> typing.Sequence[ContactInstantMessageField]: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactLocationField> Windows.ApplicationModel.Contacts.ContactInformation::get_Locations()
    @_property
    def locations(self) -> typing.Sequence[ContactLocationField]: ...
    # System.String Windows.ApplicationModel.Contacts.ContactInformation::get_Name()
    @_property
    def name(self) -> str: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactField> Windows.ApplicationModel.Contacts.ContactInformation::get_PhoneNumbers()
    @_property
    def phone_numbers(self) -> typing.Sequence[ContactField]: ...

@typing.final
class ContactInstantMessageField(winrt.system.Object, IContactField):
    @typing.overload
    def __new__(cls: typing.Type[Self], user_name: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], user_name: str, category: ContactFieldCategory) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], user_name: str, category: ContactFieldCategory, service: str, display_text: str, verb: windows_foundation.Uri) -> Self: ...
    # Windows.ApplicationModel.Contacts.ContactFieldCategory Windows.ApplicationModel.Contacts.ContactInstantMessageField::get_Category()
    @_property
    def category(self) -> ContactFieldCategory: ...
    # System.String Windows.ApplicationModel.Contacts.ContactInstantMessageField::get_Name()
    @_property
    def name(self) -> str: ...
    # Windows.ApplicationModel.Contacts.ContactFieldType Windows.ApplicationModel.Contacts.ContactInstantMessageField::get_Type()
    @_property
    def type(self) -> ContactFieldType: ...
    # System.String Windows.ApplicationModel.Contacts.ContactInstantMessageField::get_Value()
    @_property
    def value(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactInstantMessageField::get_DisplayText()
    @_property
    def display_text(self) -> str: ...
    # Windows.Foundation.Uri Windows.ApplicationModel.Contacts.ContactInstantMessageField::get_LaunchUri()
    @_property
    def launch_uri(self) -> windows_foundation.Uri: ...
    # System.String Windows.ApplicationModel.Contacts.ContactInstantMessageField::get_Service()
    @_property
    def service(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactInstantMessageField::get_UserName()
    @_property
    def user_name(self) -> str: ...

@typing.final
class ContactJobInfo(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.ApplicationModel.Contacts.ContactJobInfo::get_Title()
    @_property
    def title(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactJobInfo::put_Title(System.String)
    @title.setter
    def title(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactJobInfo::get_Office()
    @_property
    def office(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactJobInfo::put_Office(System.String)
    @office.setter
    def office(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactJobInfo::get_Manager()
    @_property
    def manager(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactJobInfo::put_Manager(System.String)
    @manager.setter
    def manager(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactJobInfo::get_Description()
    @_property
    def description(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactJobInfo::put_Description(System.String)
    @description.setter
    def description(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactJobInfo::get_Department()
    @_property
    def department(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactJobInfo::put_Department(System.String)
    @department.setter
    def department(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactJobInfo::get_CompanyYomiName()
    @_property
    def company_yomi_name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactJobInfo::put_CompanyYomiName(System.String)
    @company_yomi_name.setter
    def company_yomi_name(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactJobInfo::get_CompanyName()
    @_property
    def company_name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactJobInfo::put_CompanyName(System.String)
    @company_name.setter
    def company_name(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactJobInfo::get_CompanyAddress()
    @_property
    def company_address(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactJobInfo::put_CompanyAddress(System.String)
    @company_address.setter
    def company_address(self, value: str) -> None: ...

@typing.final
class ContactLaunchActionVerbs_Static(type):
    # System.String Windows.ApplicationModel.Contacts.ContactLaunchActionVerbs::get_Call()
    @_property
    def call(cls) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactLaunchActionVerbs::get_Map()
    @_property
    def map(cls) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactLaunchActionVerbs::get_Message()
    @_property
    def message(cls) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactLaunchActionVerbs::get_Post()
    @_property
    def post(cls) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactLaunchActionVerbs::get_VideoCall()
    @_property
    def video_call(cls) -> str: ...

@typing.final
class ContactLaunchActionVerbs(winrt.system.Object, metaclass=ContactLaunchActionVerbs_Static):
    pass

@typing.final
class ContactList(winrt.system.Object):
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Contacts.ContactList::DeleteAsync()
    def delete_async(self) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Contacts.ContactList::DeleteContactAsync(Windows.ApplicationModel.Contacts.Contact)
    def delete_contact_async(self, contact: Contact, /) -> windows_foundation.IAsyncAction: ...
    # Windows.ApplicationModel.Contacts.ContactChangeTracker Windows.ApplicationModel.Contacts.ContactList::GetChangeTracker(System.String)
    def get_change_tracker(self, identity: str, /) -> ContactChangeTracker: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.Contact> Windows.ApplicationModel.Contacts.ContactList::GetContactAsync(System.String)
    def get_contact_async(self, contact_id: str, /) -> windows_foundation.IAsyncOperation[Contact]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.Contact> Windows.ApplicationModel.Contacts.ContactList::GetContactFromRemoteIdAsync(System.String)
    def get_contact_from_remote_id_async(self, remote_id: str, /) -> windows_foundation.IAsyncOperation[Contact]: ...
    # Windows.ApplicationModel.Contacts.ContactReader Windows.ApplicationModel.Contacts.ContactList::GetContactReader()
    def get_contact_reader(self) -> ContactReader: ...
    # Windows.ApplicationModel.Contacts.ContactReader Windows.ApplicationModel.Contacts.ContactList::GetContactReader(Windows.ApplicationModel.Contacts.ContactQueryOptions)
    def get_contact_reader_with_options(self, options: ContactQueryOptions, /) -> ContactReader: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.Contact> Windows.ApplicationModel.Contacts.ContactList::GetMeContactAsync()
    def get_me_contact_async(self) -> windows_foundation.IAsyncOperation[Contact]: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Contacts.ContactList::RegisterSyncManagerAsync()
    def register_sync_manager_async(self) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Contacts.ContactList::SaveAsync()
    def save_async(self) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Contacts.ContactList::SaveContactAsync(Windows.ApplicationModel.Contacts.Contact)
    def save_contact_async(self, contact: Contact, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.EventRegistrationToken Windows.ApplicationModel.Contacts.ContactList::add_ContactChanged(Windows.Foundation.TypedEventHandler`2<Windows.ApplicationModel.Contacts.ContactList,Windows.ApplicationModel.Contacts.ContactChangedEventArgs>)
    def add_contact_changed(self, value: windows_foundation.TypedEventHandler[ContactList, ContactChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactList::remove_ContactChanged(Windows.Foundation.EventRegistrationToken)
    def remove_contact_changed(self, value: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Boolean Windows.ApplicationModel.Contacts.ContactList::get_SupportsServerSearch()
    @_property
    def supports_server_search(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactList::put_SupportsServerSearch(System.Boolean)
    @supports_server_search.setter
    def supports_server_search(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Contacts.ContactList::get_IsHidden()
    @_property
    def is_hidden(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactList::put_IsHidden(System.Boolean)
    @is_hidden.setter
    def is_hidden(self, value: bool) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactListOtherAppWriteAccess Windows.ApplicationModel.Contacts.ContactList::get_OtherAppWriteAccess()
    @_property
    def other_app_write_access(self) -> ContactListOtherAppWriteAccess: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactList::put_OtherAppWriteAccess(Windows.ApplicationModel.Contacts.ContactListOtherAppWriteAccess)
    @other_app_write_access.setter
    def other_app_write_access(self, value: ContactListOtherAppWriteAccess) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactList::get_DisplayName()
    @_property
    def display_name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactList::put_DisplayName(System.String)
    @display_name.setter
    def display_name(self, value: str) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactListOtherAppReadAccess Windows.ApplicationModel.Contacts.ContactList::get_OtherAppReadAccess()
    @_property
    def other_app_read_access(self) -> ContactListOtherAppReadAccess: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactList::put_OtherAppReadAccess(Windows.ApplicationModel.Contacts.ContactListOtherAppReadAccess)
    @other_app_read_access.setter
    def other_app_read_access(self, value: ContactListOtherAppReadAccess) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactChangeTracker Windows.ApplicationModel.Contacts.ContactList::get_ChangeTracker()
    @_property
    def change_tracker(self) -> ContactChangeTracker: ...
    # System.String Windows.ApplicationModel.Contacts.ContactList::get_SourceDisplayName()
    @_property
    def source_display_name(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactList::get_Id()
    @_property
    def id(self) -> str: ...
    # Windows.ApplicationModel.Contacts.ContactListSyncManager Windows.ApplicationModel.Contacts.ContactList::get_SyncManager()
    @_property
    def sync_manager(self) -> ContactListSyncManager: ...
    # System.String Windows.ApplicationModel.Contacts.ContactList::get_UserDataAccountId()
    @_property
    def user_data_account_id(self) -> str: ...
    # Windows.ApplicationModel.Contacts.ContactListSyncConstraints Windows.ApplicationModel.Contacts.ContactList::get_SyncConstraints()
    @_property
    def sync_constraints(self) -> ContactListSyncConstraints: ...
    # Windows.ApplicationModel.Contacts.ContactListLimitedWriteOperations Windows.ApplicationModel.Contacts.ContactList::get_LimitedWriteOperations()
    @_property
    def limited_write_operations(self) -> ContactListLimitedWriteOperations: ...

@typing.final
class ContactListLimitedWriteOperations(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Contacts.ContactListLimitedWriteOperations::TryCreateOrUpdateContactAsync(Windows.ApplicationModel.Contacts.Contact)
    def try_create_or_update_contact_async(self, contact: Contact, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Contacts.ContactListLimitedWriteOperations::TryDeleteContactAsync(System.String)
    def try_delete_contact_async(self, contact_id: str, /) -> windows_foundation.IAsyncOperation[bool]: ...

@typing.final
class ContactListSyncConstraints(winrt.system.Object):
    # System.Boolean Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_CanSyncDescriptions()
    @_property
    def can_sync_descriptions(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_CanSyncDescriptions(System.Boolean)
    @can_sync_descriptions.setter
    def can_sync_descriptions(self, value: bool) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxCompanyPhoneNumbers()
    @_property
    def max_company_phone_numbers(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxCompanyPhoneNumbers(Windows.Foundation.IReference`1<System.Int32>)
    @max_company_phone_numbers.setter
    def max_company_phone_numbers(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxChildRelationships()
    @_property
    def max_child_relationships(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxChildRelationships(Windows.Foundation.IReference`1<System.Int32>)
    @max_child_relationships.setter
    def max_child_relationships(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxBusinessFaxPhoneNumbers()
    @_property
    def max_business_fax_phone_numbers(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxBusinessFaxPhoneNumbers(Windows.Foundation.IReference`1<System.Int32>)
    @max_business_fax_phone_numbers.setter
    def max_business_fax_phone_numbers(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxBirthdayDates()
    @_property
    def max_birthday_dates(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxBirthdayDates(Windows.Foundation.IReference`1<System.Int32>)
    @max_birthday_dates.setter
    def max_birthday_dates(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxAssistantPhoneNumbers()
    @_property
    def max_assistant_phone_numbers(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxAssistantPhoneNumbers(Windows.Foundation.IReference`1<System.Int32>)
    @max_assistant_phone_numbers.setter
    def max_assistant_phone_numbers(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxOtherAddresses()
    @_property
    def max_other_addresses(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxOtherAddresses(Windows.Foundation.IReference`1<System.Int32>)
    @max_other_addresses.setter
    def max_other_addresses(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxAnniversaryDates()
    @_property
    def max_anniversary_dates(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxAnniversaryDates(Windows.Foundation.IReference`1<System.Int32>)
    @max_anniversary_dates.setter
    def max_anniversary_dates(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxHomeAddresses()
    @_property
    def max_home_addresses(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxHomeAddresses(Windows.Foundation.IReference`1<System.Int32>)
    @max_home_addresses.setter
    def max_home_addresses(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxOtherDates()
    @_property
    def max_other_dates(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxOtherDates(Windows.Foundation.IReference`1<System.Int32>)
    @max_other_dates.setter
    def max_other_dates(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxMobilePhoneNumbers()
    @_property
    def max_mobile_phone_numbers(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxMobilePhoneNumbers(Windows.Foundation.IReference`1<System.Int32>)
    @max_mobile_phone_numbers.setter
    def max_mobile_phone_numbers(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxJobInfo()
    @_property
    def max_job_info(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxJobInfo(Windows.Foundation.IReference`1<System.Int32>)
    @max_job_info.setter
    def max_job_info(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxHomePhoneNumbers()
    @_property
    def max_home_phone_numbers(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxHomePhoneNumbers(Windows.Foundation.IReference`1<System.Int32>)
    @max_home_phone_numbers.setter
    def max_home_phone_numbers(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxHomeFaxPhoneNumbers()
    @_property
    def max_home_fax_phone_numbers(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxHomeFaxPhoneNumbers(Windows.Foundation.IReference`1<System.Int32>)
    @max_home_fax_phone_numbers.setter
    def max_home_fax_phone_numbers(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxOtherEmailAddresses()
    @_property
    def max_other_email_addresses(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxOtherEmailAddresses(Windows.Foundation.IReference`1<System.Int32>)
    @max_other_email_addresses.setter
    def max_other_email_addresses(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxPersonalEmailAddresses()
    @_property
    def max_personal_email_addresses(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxPersonalEmailAddresses(Windows.Foundation.IReference`1<System.Int32>)
    @max_personal_email_addresses.setter
    def max_personal_email_addresses(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxPartnerRelationships()
    @_property
    def max_partner_relationships(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxPartnerRelationships(Windows.Foundation.IReference`1<System.Int32>)
    @max_partner_relationships.setter
    def max_partner_relationships(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxParentRelationships()
    @_property
    def max_parent_relationships(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxParentRelationships(Windows.Foundation.IReference`1<System.Int32>)
    @max_parent_relationships.setter
    def max_parent_relationships(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxPagerPhoneNumbers()
    @_property
    def max_pager_phone_numbers(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxPagerPhoneNumbers(Windows.Foundation.IReference`1<System.Int32>)
    @max_pager_phone_numbers.setter
    def max_pager_phone_numbers(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxOtherRelationships()
    @_property
    def max_other_relationships(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxOtherRelationships(Windows.Foundation.IReference`1<System.Int32>)
    @max_other_relationships.setter
    def max_other_relationships(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxOtherPhoneNumbers()
    @_property
    def max_other_phone_numbers(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxOtherPhoneNumbers(Windows.Foundation.IReference`1<System.Int32>)
    @max_other_phone_numbers.setter
    def max_other_phone_numbers(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxRadioPhoneNumbers()
    @_property
    def max_radio_phone_numbers(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxRadioPhoneNumbers(Windows.Foundation.IReference`1<System.Int32>)
    @max_radio_phone_numbers.setter
    def max_radio_phone_numbers(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxWorkPhoneNumbers()
    @_property
    def max_work_phone_numbers(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxWorkPhoneNumbers(Windows.Foundation.IReference`1<System.Int32>)
    @max_work_phone_numbers.setter
    def max_work_phone_numbers(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxWorkEmailAddresses()
    @_property
    def max_work_email_addresses(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxWorkEmailAddresses(Windows.Foundation.IReference`1<System.Int32>)
    @max_work_email_addresses.setter
    def max_work_email_addresses(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxWorkAddresses()
    @_property
    def max_work_addresses(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxWorkAddresses(Windows.Foundation.IReference`1<System.Int32>)
    @max_work_addresses.setter
    def max_work_addresses(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxWebsites()
    @_property
    def max_websites(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxWebsites(Windows.Foundation.IReference`1<System.Int32>)
    @max_websites.setter
    def max_websites(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxSpouseRelationships()
    @_property
    def max_spouse_relationships(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxSpouseRelationships(Windows.Foundation.IReference`1<System.Int32>)
    @max_spouse_relationships.setter
    def max_spouse_relationships(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    # Windows.Foundation.IReference`1<System.Int32> Windows.ApplicationModel.Contacts.ContactListSyncConstraints::get_MaxSiblingRelationships()
    @_property
    def max_sibling_relationships(self) -> typing.Optional[winrt.system.Int32]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncConstraints::put_MaxSiblingRelationships(Windows.Foundation.IReference`1<System.Int32>)
    @max_sibling_relationships.setter
    def max_sibling_relationships(self, value: typing.Optional[winrt.system.Int32]) -> None: ...

@typing.final
class ContactListSyncManager(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Contacts.ContactListSyncManager::SyncAsync()
    def sync_async(self) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.EventRegistrationToken Windows.ApplicationModel.Contacts.ContactListSyncManager::add_SyncStatusChanged(Windows.Foundation.TypedEventHandler`2<Windows.ApplicationModel.Contacts.ContactListSyncManager,System.Object>)
    def add_sync_status_changed(self, handler: windows_foundation.TypedEventHandler[ContactListSyncManager, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncManager::remove_SyncStatusChanged(Windows.Foundation.EventRegistrationToken)
    def remove_sync_status_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactListSyncStatus Windows.ApplicationModel.Contacts.ContactListSyncManager::get_Status()
    @_property
    def status(self) -> ContactListSyncStatus: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncManager::put_Status(Windows.ApplicationModel.Contacts.ContactListSyncStatus)
    @status.setter
    def status(self, value: ContactListSyncStatus) -> None: ...
    # Windows.Foundation.DateTime Windows.ApplicationModel.Contacts.ContactListSyncManager::get_LastSuccessfulSyncTime()
    @_property
    def last_successful_sync_time(self) -> datetime.datetime: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncManager::put_LastSuccessfulSyncTime(Windows.Foundation.DateTime)
    @last_successful_sync_time.setter
    def last_successful_sync_time(self, value: datetime.datetime) -> None: ...
    # Windows.Foundation.DateTime Windows.ApplicationModel.Contacts.ContactListSyncManager::get_LastAttemptedSyncTime()
    @_property
    def last_attempted_sync_time(self) -> datetime.datetime: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactListSyncManager::put_LastAttemptedSyncTime(Windows.Foundation.DateTime)
    @last_attempted_sync_time.setter
    def last_attempted_sync_time(self, value: datetime.datetime) -> None: ...

@typing.final
class ContactLocationField(winrt.system.Object, IContactField):
    @typing.overload
    def __new__(cls: typing.Type[Self], unstructured_address: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], unstructured_address: str, category: ContactFieldCategory) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], unstructured_address: str, category: ContactFieldCategory, street: str, city: str, region: str, country: str, postal_code: str) -> Self: ...
    # Windows.ApplicationModel.Contacts.ContactFieldCategory Windows.ApplicationModel.Contacts.ContactLocationField::get_Category()
    @_property
    def category(self) -> ContactFieldCategory: ...
    # System.String Windows.ApplicationModel.Contacts.ContactLocationField::get_Name()
    @_property
    def name(self) -> str: ...
    # Windows.ApplicationModel.Contacts.ContactFieldType Windows.ApplicationModel.Contacts.ContactLocationField::get_Type()
    @_property
    def type(self) -> ContactFieldType: ...
    # System.String Windows.ApplicationModel.Contacts.ContactLocationField::get_Value()
    @_property
    def value(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactLocationField::get_City()
    @_property
    def city(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactLocationField::get_Country()
    @_property
    def country(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactLocationField::get_PostalCode()
    @_property
    def postal_code(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactLocationField::get_Region()
    @_property
    def region(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactLocationField::get_Street()
    @_property
    def street(self) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.ContactLocationField::get_UnstructuredAddress()
    @_property
    def unstructured_address(self) -> str: ...

@typing.final
class ContactManager_Static(type):
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.RandomAccessStreamReference> Windows.ApplicationModel.Contacts.ContactManager::ConvertContactToVCardAsync(Windows.ApplicationModel.Contacts.Contact)
    def convert_contact_to_v_card_async(cls, contact: Contact, /) -> windows_foundation.IAsyncOperation[windows_storage_streams.RandomAccessStreamReference]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.RandomAccessStreamReference> Windows.ApplicationModel.Contacts.ContactManager::ConvertContactToVCardAsync(Windows.ApplicationModel.Contacts.Contact,System.UInt32)
    def convert_contact_to_v_card_async_with_max_bytes(cls, contact: Contact, max_bytes: winrt.system.UInt32, /) -> windows_foundation.IAsyncOperation[windows_storage_streams.RandomAccessStreamReference]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.Contact> Windows.ApplicationModel.Contacts.ContactManager::ConvertVCardToContactAsync(Windows.Storage.Streams.IRandomAccessStreamReference)
    def convert_v_card_to_contact_async(cls, v_card: windows_storage_streams.IRandomAccessStreamReference, /) -> windows_foundation.IAsyncOperation[Contact]: ...
    # Windows.ApplicationModel.Contacts.ContactManagerForUser Windows.ApplicationModel.Contacts.ContactManager::GetForUser(Windows.System.User)
    def get_for_user(cls, user: windows_system.User, /) -> ContactManagerForUser: ...
    # System.Boolean Windows.ApplicationModel.Contacts.ContactManager::IsShowContactCardSupported()
    def is_show_contact_card_supported(cls) -> bool: ...
    # System.Boolean Windows.ApplicationModel.Contacts.ContactManager::IsShowDelayLoadedContactCardSupported()
    def is_show_delay_loaded_contact_card_supported(cls) -> bool: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Contacts.ContactManager::IsShowFullContactCardSupportedAsync()
    def is_show_full_contact_card_supported_async(cls) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.ContactAnnotationStore> Windows.ApplicationModel.Contacts.ContactManager::RequestAnnotationStoreAsync(Windows.ApplicationModel.Contacts.ContactAnnotationStoreAccessType)
    def request_annotation_store_async(cls, access_type: ContactAnnotationStoreAccessType, /) -> windows_foundation.IAsyncOperation[ContactAnnotationStore]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.ContactStore> Windows.ApplicationModel.Contacts.ContactManager::RequestStoreAsync()
    def request_store_async(cls) -> windows_foundation.IAsyncOperation[ContactStore]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.ContactStore> Windows.ApplicationModel.Contacts.ContactManager::RequestStoreAsync(Windows.ApplicationModel.Contacts.ContactStoreAccessType)
    def request_store_async_with_access_type(cls, access_type: ContactStoreAccessType, /) -> windows_foundation.IAsyncOperation[ContactStore]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactManager::ShowContactCard(Windows.ApplicationModel.Contacts.Contact,Windows.Foundation.Rect)
    def show_contact_card(cls, contact: Contact, selection: windows_foundation.Rect, /) -> None: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactManager::ShowContactCard(Windows.ApplicationModel.Contacts.Contact,Windows.Foundation.Rect,Windows.UI.Popups.Placement,Windows.ApplicationModel.Contacts.ContactCardOptions)
    def show_contact_card_with_options(cls, contact: Contact, selection: windows_foundation.Rect, preferred_placement: windows_ui_popups.Placement, contact_card_options: ContactCardOptions, /) -> None: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactManager::ShowContactCard(Windows.ApplicationModel.Contacts.Contact,Windows.Foundation.Rect,Windows.UI.Popups.Placement)
    def show_contact_card_with_placement(cls, contact: Contact, selection: windows_foundation.Rect, preferred_placement: windows_ui_popups.Placement, /) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactCardDelayedDataLoader Windows.ApplicationModel.Contacts.ContactManager::ShowDelayLoadedContactCard(Windows.ApplicationModel.Contacts.Contact,Windows.Foundation.Rect,Windows.UI.Popups.Placement)
    def show_delay_loaded_contact_card(cls, contact: Contact, selection: windows_foundation.Rect, preferred_placement: windows_ui_popups.Placement, /) -> ContactCardDelayedDataLoader: ...
    # Windows.ApplicationModel.Contacts.ContactCardDelayedDataLoader Windows.ApplicationModel.Contacts.ContactManager::ShowDelayLoadedContactCard(Windows.ApplicationModel.Contacts.Contact,Windows.Foundation.Rect,Windows.UI.Popups.Placement,Windows.ApplicationModel.Contacts.ContactCardOptions)
    def show_delay_loaded_contact_card_with_options(cls, contact: Contact, selection: windows_foundation.Rect, preferred_placement: windows_ui_popups.Placement, contact_card_options: ContactCardOptions, /) -> ContactCardDelayedDataLoader: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactManager::ShowFullContactCard(Windows.ApplicationModel.Contacts.Contact,Windows.ApplicationModel.Contacts.FullContactCardOptions)
    def show_full_contact_card(cls, contact: Contact, full_contact_card_options: FullContactCardOptions, /) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactNameOrder Windows.ApplicationModel.Contacts.ContactManager::get_SystemSortOrder()
    @_property
    def system_sort_order(cls) -> ContactNameOrder: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactManager::put_SystemSortOrder(Windows.ApplicationModel.Contacts.ContactNameOrder)
    @system_sort_order.setter
    def system_sort_order(cls, value: ContactNameOrder) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactNameOrder Windows.ApplicationModel.Contacts.ContactManager::get_SystemDisplayNameOrder()
    @_property
    def system_display_name_order(cls) -> ContactNameOrder: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactManager::put_SystemDisplayNameOrder(Windows.ApplicationModel.Contacts.ContactNameOrder)
    @system_display_name_order.setter
    def system_display_name_order(cls, value: ContactNameOrder) -> None: ...
    # System.Boolean Windows.ApplicationModel.Contacts.ContactManager::get_IncludeMiddleNameInSystemDisplayAndSort()
    @_property
    def include_middle_name_in_system_display_and_sort(cls) -> bool: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactManager::put_IncludeMiddleNameInSystemDisplayAndSort(System.Boolean)
    @include_middle_name_in_system_display_and_sort.setter
    def include_middle_name_in_system_display_and_sort(cls, value: bool) -> None: ...

@typing.final
class ContactManager(winrt.system.Object, metaclass=ContactManager_Static):
    pass

@typing.final
class ContactManagerForUser(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.RandomAccessStreamReference> Windows.ApplicationModel.Contacts.ContactManagerForUser::ConvertContactToVCardAsync(Windows.ApplicationModel.Contacts.Contact)
    def convert_contact_to_v_card_async(self, contact: Contact, /) -> windows_foundation.IAsyncOperation[windows_storage_streams.RandomAccessStreamReference]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.RandomAccessStreamReference> Windows.ApplicationModel.Contacts.ContactManagerForUser::ConvertContactToVCardAsync(Windows.ApplicationModel.Contacts.Contact,System.UInt32)
    def convert_contact_to_v_card_async_with_max_bytes(self, contact: Contact, max_bytes: winrt.system.UInt32, /) -> windows_foundation.IAsyncOperation[windows_storage_streams.RandomAccessStreamReference]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.Contact> Windows.ApplicationModel.Contacts.ContactManagerForUser::ConvertVCardToContactAsync(Windows.Storage.Streams.IRandomAccessStreamReference)
    def convert_v_card_to_contact_async(self, v_card: windows_storage_streams.IRandomAccessStreamReference, /) -> windows_foundation.IAsyncOperation[Contact]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.ContactAnnotationStore> Windows.ApplicationModel.Contacts.ContactManagerForUser::RequestAnnotationStoreAsync(Windows.ApplicationModel.Contacts.ContactAnnotationStoreAccessType)
    def request_annotation_store_async(self, access_type: ContactAnnotationStoreAccessType, /) -> windows_foundation.IAsyncOperation[ContactAnnotationStore]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.ContactStore> Windows.ApplicationModel.Contacts.ContactManagerForUser::RequestStoreAsync(Windows.ApplicationModel.Contacts.ContactStoreAccessType)
    def request_store_async(self, access_type: ContactStoreAccessType, /) -> windows_foundation.IAsyncOperation[ContactStore]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactManagerForUser::ShowFullContactCard(Windows.ApplicationModel.Contacts.Contact,Windows.ApplicationModel.Contacts.FullContactCardOptions)
    def show_full_contact_card(self, contact: Contact, full_contact_card_options: FullContactCardOptions, /) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactNameOrder Windows.ApplicationModel.Contacts.ContactManagerForUser::get_SystemSortOrder()
    @_property
    def system_sort_order(self) -> ContactNameOrder: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactManagerForUser::put_SystemSortOrder(Windows.ApplicationModel.Contacts.ContactNameOrder)
    @system_sort_order.setter
    def system_sort_order(self, value: ContactNameOrder) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactNameOrder Windows.ApplicationModel.Contacts.ContactManagerForUser::get_SystemDisplayNameOrder()
    @_property
    def system_display_name_order(self) -> ContactNameOrder: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactManagerForUser::put_SystemDisplayNameOrder(Windows.ApplicationModel.Contacts.ContactNameOrder)
    @system_display_name_order.setter
    def system_display_name_order(self, value: ContactNameOrder) -> None: ...
    # Windows.System.User Windows.ApplicationModel.Contacts.ContactManagerForUser::get_User()
    @_property
    def user(self) -> windows_system.User: ...

@typing.final
class ContactMatchReason(winrt.system.Object):
    # Windows.ApplicationModel.Contacts.ContactMatchReasonKind Windows.ApplicationModel.Contacts.ContactMatchReason::get_Field()
    @_property
    def field(self) -> ContactMatchReasonKind: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Data.Text.TextSegment> Windows.ApplicationModel.Contacts.ContactMatchReason::get_Segments()
    @_property
    def segments(self) -> typing.Sequence[windows_data_text.TextSegment]: ...
    # System.String Windows.ApplicationModel.Contacts.ContactMatchReason::get_Text()
    @_property
    def text(self) -> str: ...

@typing.final
class ContactPanel(winrt.system.Object):
    # System.Void Windows.ApplicationModel.Contacts.ContactPanel::ClosePanel()
    def close_panel(self) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.ApplicationModel.Contacts.ContactPanel::add_Closing(Windows.Foundation.TypedEventHandler`2<Windows.ApplicationModel.Contacts.ContactPanel,Windows.ApplicationModel.Contacts.ContactPanelClosingEventArgs>)
    def add_closing(self, handler: windows_foundation.TypedEventHandler[ContactPanel, ContactPanelClosingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactPanel::remove_Closing(Windows.Foundation.EventRegistrationToken)
    def remove_closing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.ApplicationModel.Contacts.ContactPanel::add_LaunchFullAppRequested(Windows.Foundation.TypedEventHandler`2<Windows.ApplicationModel.Contacts.ContactPanel,Windows.ApplicationModel.Contacts.ContactPanelLaunchFullAppRequestedEventArgs>)
    def add_launch_full_app_requested(self, handler: windows_foundation.TypedEventHandler[ContactPanel, ContactPanelLaunchFullAppRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactPanel::remove_LaunchFullAppRequested(Windows.Foundation.EventRegistrationToken)
    def remove_launch_full_app_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.ApplicationModel.Contacts.ContactPanel::get_HeaderColor()
    @_property
    def header_color(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactPanel::put_HeaderColor(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @header_color.setter
    def header_color(self, value: typing.Optional[windows_ui.Color]) -> None: ...

@typing.final
class ContactPanelClosingEventArgs(winrt.system.Object):
    # Windows.Foundation.Deferral Windows.ApplicationModel.Contacts.ContactPanelClosingEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...

@typing.final
class ContactPanelLaunchFullAppRequestedEventArgs(winrt.system.Object):
    # System.Boolean Windows.ApplicationModel.Contacts.ContactPanelLaunchFullAppRequestedEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactPanelLaunchFullAppRequestedEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...

@typing.final
class ContactPhone(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.ApplicationModel.Contacts.ContactPhone::get_Number()
    @_property
    def number(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactPhone::put_Number(System.String)
    @number.setter
    def number(self, value: str) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactPhoneKind Windows.ApplicationModel.Contacts.ContactPhone::get_Kind()
    @_property
    def kind(self) -> ContactPhoneKind: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactPhone::put_Kind(Windows.ApplicationModel.Contacts.ContactPhoneKind)
    @kind.setter
    def kind(self, value: ContactPhoneKind) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactPhone::get_Description()
    @_property
    def description(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactPhone::put_Description(System.String)
    @description.setter
    def description(self, value: str) -> None: ...

@typing.final
class ContactPicker_Static(type):
    # Windows.ApplicationModel.Contacts.ContactPicker Windows.ApplicationModel.Contacts.ContactPicker::CreateForUser(Windows.System.User)
    def create_for_user(cls, user: windows_system.User, /) -> ContactPicker: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Contacts.ContactPicker::IsSupportedAsync()
    def is_supported_async(cls) -> windows_foundation.IAsyncOperation[bool]: ...

@typing.final
class ContactPicker(winrt.system.Object, metaclass=ContactPicker_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.Contact> Windows.ApplicationModel.Contacts.ContactPicker::PickContactAsync()
    def pick_contact_async(self) -> windows_foundation.IAsyncOperation[Contact]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Contacts.Contact>> Windows.ApplicationModel.Contacts.ContactPicker::PickContactsAsync()
    def pick_contacts_async(self) -> windows_foundation.IAsyncOperation[typing.MutableSequence[Contact]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactInformation>> Windows.ApplicationModel.Contacts.ContactPicker::PickMultipleContactsAsync()
    def pick_multiple_contacts_async(self) -> windows_foundation.IAsyncOperation[typing.Sequence[ContactInformation]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.ContactInformation> Windows.ApplicationModel.Contacts.ContactPicker::PickSingleContactAsync()
    def pick_single_contact_async(self) -> windows_foundation.IAsyncOperation[ContactInformation]: ...
    # Windows.ApplicationModel.Contacts.ContactSelectionMode Windows.ApplicationModel.Contacts.ContactPicker::get_SelectionMode()
    @_property
    def selection_mode(self) -> ContactSelectionMode: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactPicker::put_SelectionMode(Windows.ApplicationModel.Contacts.ContactSelectionMode)
    @selection_mode.setter
    def selection_mode(self, value: ContactSelectionMode) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactPicker::get_CommitButtonText()
    @_property
    def commit_button_text(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactPicker::put_CommitButtonText(System.String)
    @commit_button_text.setter
    def commit_button_text(self, value: str) -> None: ...
    # Windows.Foundation.Collections.IVector`1<System.String> Windows.ApplicationModel.Contacts.ContactPicker::get_DesiredFields()
    @_property
    def desired_fields(self) -> typing.MutableSequence[str]: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Contacts.ContactFieldType> Windows.ApplicationModel.Contacts.ContactPicker::get_DesiredFieldsWithContactFieldType()
    @_property
    def desired_fields_with_contact_field_type(self) -> typing.MutableSequence[ContactFieldType]: ...
    # Windows.System.User Windows.ApplicationModel.Contacts.ContactPicker::get_User()
    @_property
    def user(self) -> windows_system.User: ...

@typing.final
class ContactQueryOptions(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], text: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], text: str, fields: ContactQuerySearchFields) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Windows.ApplicationModel.Contacts.ContactQueryOptions::get_IncludeContactsFromHiddenLists()
    @_property
    def include_contacts_from_hidden_lists(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactQueryOptions::put_IncludeContactsFromHiddenLists(System.Boolean)
    @include_contacts_from_hidden_lists.setter
    def include_contacts_from_hidden_lists(self, value: bool) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactAnnotationOperations Windows.ApplicationModel.Contacts.ContactQueryOptions::get_DesiredOperations()
    @_property
    def desired_operations(self) -> ContactAnnotationOperations: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactQueryOptions::put_DesiredOperations(Windows.ApplicationModel.Contacts.ContactAnnotationOperations)
    @desired_operations.setter
    def desired_operations(self, value: ContactAnnotationOperations) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactQueryDesiredFields Windows.ApplicationModel.Contacts.ContactQueryOptions::get_DesiredFields()
    @_property
    def desired_fields(self) -> ContactQueryDesiredFields: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactQueryOptions::put_DesiredFields(Windows.ApplicationModel.Contacts.ContactQueryDesiredFields)
    @desired_fields.setter
    def desired_fields(self, value: ContactQueryDesiredFields) -> None: ...
    # Windows.Foundation.Collections.IVector`1<System.String> Windows.ApplicationModel.Contacts.ContactQueryOptions::get_AnnotationListIds()
    @_property
    def annotation_list_ids(self) -> typing.MutableSequence[str]: ...
    # Windows.Foundation.Collections.IVector`1<System.String> Windows.ApplicationModel.Contacts.ContactQueryOptions::get_ContactListIds()
    @_property
    def contact_list_ids(self) -> typing.MutableSequence[str]: ...
    # Windows.ApplicationModel.Contacts.ContactQueryTextSearch Windows.ApplicationModel.Contacts.ContactQueryOptions::get_TextSearch()
    @_property
    def text_search(self) -> ContactQueryTextSearch: ...

@typing.final
class ContactQueryTextSearch(winrt.system.Object):
    # System.String Windows.ApplicationModel.Contacts.ContactQueryTextSearch::get_Text()
    @_property
    def text(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactQueryTextSearch::put_Text(System.String)
    @text.setter
    def text(self, value: str) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactQuerySearchScope Windows.ApplicationModel.Contacts.ContactQueryTextSearch::get_SearchScope()
    @_property
    def search_scope(self) -> ContactQuerySearchScope: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactQueryTextSearch::put_SearchScope(Windows.ApplicationModel.Contacts.ContactQuerySearchScope)
    @search_scope.setter
    def search_scope(self, value: ContactQuerySearchScope) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactQuerySearchFields Windows.ApplicationModel.Contacts.ContactQueryTextSearch::get_Fields()
    @_property
    def fields(self) -> ContactQuerySearchFields: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactQueryTextSearch::put_Fields(Windows.ApplicationModel.Contacts.ContactQuerySearchFields)
    @fields.setter
    def fields(self, value: ContactQuerySearchFields) -> None: ...

@typing.final
class ContactReader(winrt.system.Object):
    # Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactMatchReason> Windows.ApplicationModel.Contacts.ContactReader::GetMatchingPropertiesWithMatchReason(Windows.ApplicationModel.Contacts.Contact)
    def get_matching_properties_with_match_reason(self, contact: Contact, /) -> typing.Sequence[ContactMatchReason]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.ContactBatch> Windows.ApplicationModel.Contacts.ContactReader::ReadBatchAsync()
    def read_batch_async(self) -> windows_foundation.IAsyncOperation[ContactBatch]: ...

@typing.final
class ContactSignificantOther(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.ApplicationModel.Contacts.ContactSignificantOther::get_Name()
    @_property
    def name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactSignificantOther::put_Name(System.String)
    @name.setter
    def name(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactSignificantOther::get_Description()
    @_property
    def description(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactSignificantOther::put_Description(System.String)
    @description.setter
    def description(self, value: str) -> None: ...
    # Windows.ApplicationModel.Contacts.ContactRelationship Windows.ApplicationModel.Contacts.ContactSignificantOther::get_Relationship()
    @_property
    def relationship(self) -> ContactRelationship: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactSignificantOther::put_Relationship(Windows.ApplicationModel.Contacts.ContactRelationship)
    @relationship.setter
    def relationship(self, value: ContactRelationship) -> None: ...

@typing.final
class ContactStore(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.ContactList> Windows.ApplicationModel.Contacts.ContactStore::CreateContactListAsync(System.String)
    def create_contact_list_async(self, display_name: str, /) -> windows_foundation.IAsyncOperation[ContactList]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.ContactList> Windows.ApplicationModel.Contacts.ContactStore::CreateContactListAsync(System.String,System.String)
    def create_contact_list_in_account_async(self, display_name: str, user_data_account_id: str, /) -> windows_foundation.IAsyncOperation[ContactList]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.ContactList>> Windows.ApplicationModel.Contacts.ContactStore::FindContactListsAsync()
    def find_contact_lists_async(self) -> windows_foundation.IAsyncOperation[typing.Sequence[ContactList]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.Contact>> Windows.ApplicationModel.Contacts.ContactStore::FindContactsAsync()
    def find_contacts_async(self) -> windows_foundation.IAsyncOperation[typing.Sequence[Contact]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Contacts.Contact>> Windows.ApplicationModel.Contacts.ContactStore::FindContactsAsync(System.String)
    def find_contacts_with_search_text_async(self, search_text: str, /) -> windows_foundation.IAsyncOperation[typing.Sequence[Contact]]: ...
    # Windows.ApplicationModel.Contacts.ContactChangeTracker Windows.ApplicationModel.Contacts.ContactStore::GetChangeTracker(System.String)
    def get_change_tracker(self, identity: str, /) -> ContactChangeTracker: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.Contact> Windows.ApplicationModel.Contacts.ContactStore::GetContactAsync(System.String)
    def get_contact_async(self, contact_id: str, /) -> windows_foundation.IAsyncOperation[Contact]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.ContactList> Windows.ApplicationModel.Contacts.ContactStore::GetContactListAsync(System.String)
    def get_contact_list_async(self, contact_list_id: str, /) -> windows_foundation.IAsyncOperation[ContactList]: ...
    # Windows.ApplicationModel.Contacts.ContactReader Windows.ApplicationModel.Contacts.ContactStore::GetContactReader()
    def get_contact_reader(self) -> ContactReader: ...
    # Windows.ApplicationModel.Contacts.ContactReader Windows.ApplicationModel.Contacts.ContactStore::GetContactReader(Windows.ApplicationModel.Contacts.ContactQueryOptions)
    def get_contact_reader_with_options(self, options: ContactQueryOptions, /) -> ContactReader: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.Contact> Windows.ApplicationModel.Contacts.ContactStore::GetMeContactAsync()
    def get_me_contact_async(self) -> windows_foundation.IAsyncOperation[Contact]: ...
    # Windows.Foundation.EventRegistrationToken Windows.ApplicationModel.Contacts.ContactStore::add_ContactChanged(Windows.Foundation.TypedEventHandler`2<Windows.ApplicationModel.Contacts.ContactStore,Windows.ApplicationModel.Contacts.ContactChangedEventArgs>)
    def add_contact_changed(self, value: windows_foundation.TypedEventHandler[ContactStore, ContactChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactStore::remove_ContactChanged(Windows.Foundation.EventRegistrationToken)
    def remove_contact_changed(self, value: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.ApplicationModel.Contacts.AggregateContactManager Windows.ApplicationModel.Contacts.ContactStore::get_AggregateContactManager()
    @_property
    def aggregate_contact_manager(self) -> AggregateContactManager: ...
    # Windows.ApplicationModel.Contacts.ContactChangeTracker Windows.ApplicationModel.Contacts.ContactStore::get_ChangeTracker()
    @_property
    def change_tracker(self) -> ContactChangeTracker: ...

@typing.final
class ContactStoreNotificationTriggerDetails(winrt.system.Object):
    pass

@typing.final
class ContactWebsite(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.Uri Windows.ApplicationModel.Contacts.ContactWebsite::get_Uri()
    @_property
    def uri(self) -> windows_foundation.Uri: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactWebsite::put_Uri(Windows.Foundation.Uri)
    @uri.setter
    def uri(self, value: windows_foundation.Uri) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactWebsite::get_Description()
    @_property
    def description(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactWebsite::put_Description(System.String)
    @description.setter
    def description(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Contacts.ContactWebsite::get_RawValue()
    @_property
    def raw_value(self) -> str: ...
    # System.Void Windows.ApplicationModel.Contacts.ContactWebsite::put_RawValue(System.String)
    @raw_value.setter
    def raw_value(self, value: str) -> None: ...

@typing.final
class FullContactCardOptions(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.ViewManagement.ViewSizePreference Windows.ApplicationModel.Contacts.FullContactCardOptions::get_DesiredRemainingView()
    @_property
    def desired_remaining_view(self) -> windows_ui_viewmanagement.ViewSizePreference: ...
    # System.Void Windows.ApplicationModel.Contacts.FullContactCardOptions::put_DesiredRemainingView(Windows.UI.ViewManagement.ViewSizePreference)
    @desired_remaining_view.setter
    def desired_remaining_view(self, value: windows_ui_viewmanagement.ViewSizePreference) -> None: ...

@typing.final
class KnownContactField_Static(type):
    # Windows.ApplicationModel.Contacts.ContactFieldType Windows.ApplicationModel.Contacts.KnownContactField::ConvertNameToType(System.String)
    # @deprecated("IKnownContactFieldStatics may be altered or unavailable for releases after Windows 8.1. Instead, use ContactAddress, ContactPhone, ContactConnectedServiceAccount or ContactEmail.")
    def convert_name_to_type(cls, name: str, /) -> ContactFieldType: ...
    # System.String Windows.ApplicationModel.Contacts.KnownContactField::ConvertTypeToName(Windows.ApplicationModel.Contacts.ContactFieldType)
    # @deprecated("IKnownContactFieldStatics may be altered or unavailable for releases after Windows 8.1. Instead, use ContactAddress, ContactPhone, ContactConnectedServiceAccount or ContactEmail.")
    def convert_type_to_name(cls, type: ContactFieldType, /) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.KnownContactField::get_Email()
    @_property
    def email(cls) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.KnownContactField::get_InstantMessage()
    @_property
    def instant_message(cls) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.KnownContactField::get_Location()
    @_property
    def location(cls) -> str: ...
    # System.String Windows.ApplicationModel.Contacts.KnownContactField::get_PhoneNumber()
    @_property
    def phone_number(cls) -> str: ...

@typing.final
class KnownContactField(winrt.system.Object, metaclass=KnownContactField_Static):
    pass

@typing.final
class PinnedContactIdsQueryResult(winrt.system.Object):
    # Windows.Foundation.Collections.IVector`1<System.String> Windows.ApplicationModel.Contacts.PinnedContactIdsQueryResult::get_ContactIds()
    @_property
    def contact_ids(self) -> typing.MutableSequence[str]: ...

@typing.final
class PinnedContactManager_Static(type):
    # Windows.ApplicationModel.Contacts.PinnedContactManager Windows.ApplicationModel.Contacts.PinnedContactManager::GetDefault()
    def get_default(cls) -> PinnedContactManager: ...
    # Windows.ApplicationModel.Contacts.PinnedContactManager Windows.ApplicationModel.Contacts.PinnedContactManager::GetForUser(Windows.System.User)
    def get_for_user(cls, user: windows_system.User, /) -> PinnedContactManager: ...
    # System.Boolean Windows.ApplicationModel.Contacts.PinnedContactManager::IsSupported()
    def is_supported(cls) -> bool: ...

@typing.final
class PinnedContactManager(winrt.system.Object, metaclass=PinnedContactManager_Static):
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Contacts.PinnedContactIdsQueryResult> Windows.ApplicationModel.Contacts.PinnedContactManager::GetPinnedContactIdsAsync()
    def get_pinned_contact_ids_async(self) -> windows_foundation.IAsyncOperation[PinnedContactIdsQueryResult]: ...
    # System.Boolean Windows.ApplicationModel.Contacts.PinnedContactManager::IsContactPinned(Windows.ApplicationModel.Contacts.Contact,Windows.ApplicationModel.Contacts.PinnedContactSurface)
    def is_contact_pinned(self, contact: Contact, surface: PinnedContactSurface, /) -> bool: ...
    # System.Boolean Windows.ApplicationModel.Contacts.PinnedContactManager::IsPinSurfaceSupported(Windows.ApplicationModel.Contacts.PinnedContactSurface)
    def is_pin_surface_supported(self, surface: PinnedContactSurface, /) -> bool: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Contacts.PinnedContactManager::RequestPinContactAsync(Windows.ApplicationModel.Contacts.Contact,Windows.ApplicationModel.Contacts.PinnedContactSurface)
    def request_pin_contact_async(self, contact: Contact, surface: PinnedContactSurface, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Contacts.PinnedContactManager::RequestPinContactsAsync(Windows.Foundation.Collections.IIterable`1<Windows.ApplicationModel.Contacts.Contact>,Windows.ApplicationModel.Contacts.PinnedContactSurface)
    def request_pin_contacts_async(self, contacts: typing.Iterable[Contact], surface: PinnedContactSurface, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Contacts.PinnedContactManager::RequestUnpinContactAsync(Windows.ApplicationModel.Contacts.Contact,Windows.ApplicationModel.Contacts.PinnedContactSurface)
    def request_unpin_contact_async(self, contact: Contact, surface: PinnedContactSurface, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # System.Void Windows.ApplicationModel.Contacts.PinnedContactManager::SignalContactActivity(Windows.ApplicationModel.Contacts.Contact)
    def signal_contact_activity(self, contact: Contact, /) -> None: ...
    # Windows.System.User Windows.ApplicationModel.Contacts.PinnedContactManager::get_User()
    @_property
    def user(self) -> windows_system.User: ...

@typing.final
class _IContactField: ...

class IContactField(winrt._winrt.IInspectable):
    # Windows.ApplicationModel.Contacts.ContactFieldCategory Windows.ApplicationModel.Contacts.IContactField::get_Category()
    @_property
    @abstractmethod
    def category(self) -> ContactFieldCategory: ...
    # System.String Windows.ApplicationModel.Contacts.IContactField::get_Name()
    @_property
    @abstractmethod
    def name(self) -> str: ...
    # Windows.ApplicationModel.Contacts.ContactFieldType Windows.ApplicationModel.Contacts.IContactField::get_Type()
    @_property
    @abstractmethod
    def type(self) -> ContactFieldType: ...
    # System.String Windows.ApplicationModel.Contacts.IContactField::get_Value()
    @_property
    @abstractmethod
    def value(self) -> str: ...

@typing.final
class _IContactFieldFactory: ...

class IContactFieldFactory(winrt._winrt.IInspectable):
    # Windows.ApplicationModel.Contacts.ContactField Windows.ApplicationModel.Contacts.IContactFieldFactory::CreateField(System.String,Windows.ApplicationModel.Contacts.ContactFieldType,Windows.ApplicationModel.Contacts.ContactFieldCategory)
    @abstractmethod
    def create_field_category(self, value: str, type: ContactFieldType, category: ContactFieldCategory, /) -> ContactField: ...
    # Windows.ApplicationModel.Contacts.ContactField Windows.ApplicationModel.Contacts.IContactFieldFactory::CreateField(System.String,System.String,Windows.ApplicationModel.Contacts.ContactFieldType,Windows.ApplicationModel.Contacts.ContactFieldCategory)
    @abstractmethod
    def create_field_custom(self, name: str, value: str, type: ContactFieldType, category: ContactFieldCategory, /) -> ContactField: ...
    # Windows.ApplicationModel.Contacts.ContactField Windows.ApplicationModel.Contacts.IContactFieldFactory::CreateField(System.String,Windows.ApplicationModel.Contacts.ContactFieldType)
    @abstractmethod
    def create_field_default(self, value: str, type: ContactFieldType, /) -> ContactField: ...

@typing.final
class _IContactInstantMessageFieldFactory: ...

class IContactInstantMessageFieldFactory(winrt._winrt.IInspectable):
    # Windows.ApplicationModel.Contacts.ContactInstantMessageField Windows.ApplicationModel.Contacts.IContactInstantMessageFieldFactory::CreateInstantMessage(System.String,Windows.ApplicationModel.Contacts.ContactFieldCategory,System.String,System.String,Windows.Foundation.Uri)
    @abstractmethod
    def create_instant_message_all(self, user_name: str, category: ContactFieldCategory, service: str, display_text: str, verb: windows_foundation.Uri, /) -> ContactInstantMessageField: ...
    # Windows.ApplicationModel.Contacts.ContactInstantMessageField Windows.ApplicationModel.Contacts.IContactInstantMessageFieldFactory::CreateInstantMessage(System.String,Windows.ApplicationModel.Contacts.ContactFieldCategory)
    @abstractmethod
    def create_instant_message_category(self, user_name: str, category: ContactFieldCategory, /) -> ContactInstantMessageField: ...
    # Windows.ApplicationModel.Contacts.ContactInstantMessageField Windows.ApplicationModel.Contacts.IContactInstantMessageFieldFactory::CreateInstantMessage(System.String)
    @abstractmethod
    def create_instant_message_default(self, user_name: str, /) -> ContactInstantMessageField: ...

@typing.final
class _IContactLocationFieldFactory: ...

class IContactLocationFieldFactory(winrt._winrt.IInspectable):
    # Windows.ApplicationModel.Contacts.ContactLocationField Windows.ApplicationModel.Contacts.IContactLocationFieldFactory::CreateLocation(System.String,Windows.ApplicationModel.Contacts.ContactFieldCategory,System.String,System.String,System.String,System.String,System.String)
    @abstractmethod
    def create_location_all(self, unstructured_address: str, category: ContactFieldCategory, street: str, city: str, region: str, country: str, postal_code: str, /) -> ContactLocationField: ...
    # Windows.ApplicationModel.Contacts.ContactLocationField Windows.ApplicationModel.Contacts.IContactLocationFieldFactory::CreateLocation(System.String,Windows.ApplicationModel.Contacts.ContactFieldCategory)
    @abstractmethod
    def create_location_category(self, unstructured_address: str, category: ContactFieldCategory, /) -> ContactLocationField: ...
    # Windows.ApplicationModel.Contacts.ContactLocationField Windows.ApplicationModel.Contacts.IContactLocationFieldFactory::CreateLocation(System.String)
    @abstractmethod
    def create_location_default(self, unstructured_address: str, /) -> ContactLocationField: ...

