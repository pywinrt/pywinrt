# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.storage.streams as windows_storage_streams

from winrt.windows.media.contentrestrictions import ContentAccessRestrictionLevel, RatedContentCategory

Self = typing.TypeVar('Self')

@typing.final
class ContentRestrictionsBrowsePolicy(winrt.system.Object):
    # System.String Windows.Media.ContentRestrictions.ContentRestrictionsBrowsePolicy::get_GeographicRegion()
    @_property
    def geographic_region(self) -> str: ...
    # Windows.Foundation.IReference`1<System.UInt32> Windows.Media.ContentRestrictions.ContentRestrictionsBrowsePolicy::get_MaxBrowsableAgeRating()
    @_property
    def max_browsable_age_rating(self) -> typing.Optional[winrt.system.UInt32]: ...
    # Windows.Foundation.IReference`1<System.UInt32> Windows.Media.ContentRestrictions.ContentRestrictionsBrowsePolicy::get_PreferredAgeRating()
    @_property
    def preferred_age_rating(self) -> typing.Optional[winrt.system.UInt32]: ...

@typing.final
class RatedContentDescription(winrt.system.Object):
    def __new__(cls: typing.Type[Self], id: str, title: str, category: RatedContentCategory) -> Self: ...
    # System.String Windows.Media.ContentRestrictions.RatedContentDescription::get_Title()
    @_property
    def title(self) -> str: ...
    # System.Void Windows.Media.ContentRestrictions.RatedContentDescription::put_Title(System.String)
    @title.setter
    def title(self, value: str) -> None: ...
    # Windows.Foundation.Collections.IVector`1<System.String> Windows.Media.ContentRestrictions.RatedContentDescription::get_Ratings()
    @_property
    def ratings(self) -> typing.MutableSequence[str]: ...
    # System.Void Windows.Media.ContentRestrictions.RatedContentDescription::put_Ratings(Windows.Foundation.Collections.IVector`1<System.String>)
    @ratings.setter
    def ratings(self, value: typing.MutableSequence[str]) -> None: ...
    # Windows.Storage.Streams.IRandomAccessStreamReference Windows.Media.ContentRestrictions.RatedContentDescription::get_Image()
    @_property
    def image(self) -> windows_storage_streams.IRandomAccessStreamReference: ...
    # System.Void Windows.Media.ContentRestrictions.RatedContentDescription::put_Image(Windows.Storage.Streams.IRandomAccessStreamReference)
    @image.setter
    def image(self, value: windows_storage_streams.ImplementsIRandomAccessStreamReference) -> None: ...
    # System.String Windows.Media.ContentRestrictions.RatedContentDescription::get_Id()
    @_property
    def id(self) -> str: ...
    # System.Void Windows.Media.ContentRestrictions.RatedContentDescription::put_Id(System.String)
    @id.setter
    def id(self, value: str) -> None: ...
    # Windows.Media.ContentRestrictions.RatedContentCategory Windows.Media.ContentRestrictions.RatedContentDescription::get_Category()
    @_property
    def category(self) -> RatedContentCategory: ...
    # System.Void Windows.Media.ContentRestrictions.RatedContentDescription::put_Category(Windows.Media.ContentRestrictions.RatedContentCategory)
    @category.setter
    def category(self, value: RatedContentCategory) -> None: ...

@typing.final
class RatedContentRestrictions(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], max_age_rating: winrt.system.UInt32) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Media.ContentRestrictions.ContentRestrictionsBrowsePolicy> Windows.Media.ContentRestrictions.RatedContentRestrictions::GetBrowsePolicyAsync()
    def get_browse_policy_async(self) -> windows_foundation.IAsyncOperation[ContentRestrictionsBrowsePolicy]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Media.ContentRestrictions.ContentAccessRestrictionLevel> Windows.Media.ContentRestrictions.RatedContentRestrictions::GetRestrictionLevelAsync(Windows.Media.ContentRestrictions.RatedContentDescription)
    def get_restriction_level_async(self, rated_content_description: RatedContentDescription, /) -> windows_foundation.IAsyncOperation[ContentAccessRestrictionLevel]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.Media.ContentRestrictions.RatedContentRestrictions::RequestContentAccessAsync(Windows.Media.ContentRestrictions.RatedContentDescription)
    def request_content_access_async(self, rated_content_description: RatedContentDescription, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.EventRegistrationToken Windows.Media.ContentRestrictions.RatedContentRestrictions::add_RestrictionsChanged(Windows.Foundation.EventHandler`1<System.Object>)
    def add_restrictions_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Media.ContentRestrictions.RatedContentRestrictions::remove_RestrictionsChanged(Windows.Foundation.EventRegistrationToken)
    def remove_restrictions_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...

