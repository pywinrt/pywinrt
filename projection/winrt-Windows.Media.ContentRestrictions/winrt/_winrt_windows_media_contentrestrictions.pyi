# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.1.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.storage.streams as windows_storage_streams

from winrt.windows.media.contentrestrictions import ContentAccessRestrictionLevel, RatedContentCategory

Self = typing.TypeVar('Self')

@typing.final
class ContentRestrictionsBrowsePolicy(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentRestrictionsBrowsePolicy: ...
    @_property
    def geographic_region(self) -> str: ...
    @_property
    def max_browsable_age_rating(self) -> typing.Optional[typing.Optional[winrt.system.UInt32]]: ...
    @_property
    def preferred_age_rating(self) -> typing.Optional[typing.Optional[winrt.system.UInt32]]: ...

@typing.final
class RatedContentDescription(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RatedContentDescription: ...
    def __new__(cls: typing.Type[RatedContentDescription], id: str, title: str, category: RatedContentCategory) -> RatedContentDescription: ...
    @_property
    def title(self) -> str: ...
    @title.setter
    def title(self, value: str) -> None: ...
    @_property
    def ratings(self) -> typing.Optional[windows_foundation_collections.IVector[str]]: ...
    @ratings.setter
    def ratings(self, value: typing.Optional[windows_foundation_collections.IVector[str]]) -> None: ...
    @_property
    def image(self) -> typing.Optional[windows_storage_streams.IRandomAccessStreamReference]: ...
    @image.setter
    def image(self, value: typing.Optional[windows_storage_streams.IRandomAccessStreamReference]) -> None: ...
    @_property
    def id(self) -> str: ...
    @id.setter
    def id(self, value: str) -> None: ...
    @_property
    def category(self) -> RatedContentCategory: ...
    @category.setter
    def category(self, value: RatedContentCategory) -> None: ...

@typing.final
class RatedContentRestrictions(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RatedContentRestrictions: ...
    @typing.overload
    def __new__(cls: typing.Type[RatedContentRestrictions], max_age_rating: winrt.system.UInt32) -> RatedContentRestrictions: ...
    @typing.overload
    def __new__(cls: typing.Type[RatedContentRestrictions]) -> RatedContentRestrictions: ...
    def get_browse_policy_async(self) -> windows_foundation.IAsyncOperation[ContentRestrictionsBrowsePolicy]: ...
    def get_restriction_level_async(self, rated_content_description: typing.Optional[RatedContentDescription], /) -> windows_foundation.IAsyncOperation[ContentAccessRestrictionLevel]: ...
    def request_content_access_async(self, rated_content_description: typing.Optional[RatedContentDescription], /) -> windows_foundation.IAsyncOperation[bool]: ...
    def add_restrictions_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_restrictions_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...

