# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.background as windows_applicationmodel_background
import winrt.windows.foundation as windows_foundation
import winrt.windows.graphics.imaging as windows_graphics_imaging
import winrt.windows.storage.streams as windows_storage_streams
import winrt.windows.ui.xaml as windows_ui_xaml
import winrt.windows.ui.xaml.media as windows_ui_xaml_media

from winrt.windows.ui.xaml.media.imaging import BitmapCreateOptions, DecodePixelType, SvgImageSourceLoadStatus
from winrt.windows.ui.xaml.media.imaging import DownloadProgressEventHandler

Self = typing.TypeVar('Self')

@typing.final
class BitmapImage_Static(BitmapSource_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.BitmapImage::get_CreateOptionsProperty()
    @_property
    def create_options_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.BitmapImage::get_DecodePixelHeightProperty()
    @_property
    def decode_pixel_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.BitmapImage::get_DecodePixelWidthProperty()
    @_property
    def decode_pixel_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.BitmapImage::get_UriSourceProperty()
    @_property
    def uri_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.BitmapImage::get_DecodePixelTypeProperty()
    @_property
    def decode_pixel_type_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.BitmapImage::get_AutoPlayProperty()
    @_property
    def auto_play_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.BitmapImage::get_IsAnimatedBitmapProperty()
    @_property
    def is_animated_bitmap_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.BitmapImage::get_IsPlayingProperty()
    @_property
    def is_playing_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class BitmapImage(BitmapSource, metaclass=BitmapImage_Static):
    @typing.overload
    def __new__(cls: typing.Type[Self], uri_source: windows_foundation.Uri) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.BitmapImage::Play()
    def play(self) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.BitmapImage::Stop()
    def stop(self) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Media.Imaging.BitmapImage::add_DownloadProgress(Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler)
    def add_download_progress(self, handler: DownloadProgressEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.BitmapImage::remove_DownloadProgress(Windows.Foundation.EventRegistrationToken)
    def remove_download_progress(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Media.Imaging.BitmapImage::add_ImageFailed(Windows.UI.Xaml.ExceptionRoutedEventHandler)
    def add_image_failed(self, handler: windows_ui_xaml.ExceptionRoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.BitmapImage::remove_ImageFailed(Windows.Foundation.EventRegistrationToken)
    def remove_image_failed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Media.Imaging.BitmapImage::add_ImageOpened(Windows.UI.Xaml.RoutedEventHandler)
    def add_image_opened(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.BitmapImage::remove_ImageOpened(Windows.Foundation.EventRegistrationToken)
    def remove_image_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.Uri Windows.UI.Xaml.Media.Imaging.BitmapImage::get_UriSource()
    @_property
    def uri_source(self) -> windows_foundation.Uri: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.BitmapImage::put_UriSource(Windows.Foundation.Uri)
    @uri_source.setter
    def uri_source(self, value: windows_foundation.Uri) -> None: ...
    # System.Int32 Windows.UI.Xaml.Media.Imaging.BitmapImage::get_DecodePixelWidth()
    @_property
    def decode_pixel_width(self) -> winrt.system.Int32: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.BitmapImage::put_DecodePixelWidth(System.Int32)
    @decode_pixel_width.setter
    def decode_pixel_width(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Windows.UI.Xaml.Media.Imaging.BitmapImage::get_DecodePixelHeight()
    @_property
    def decode_pixel_height(self) -> winrt.system.Int32: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.BitmapImage::put_DecodePixelHeight(System.Int32)
    @decode_pixel_height.setter
    def decode_pixel_height(self, value: winrt.system.Int32) -> None: ...
    # Windows.UI.Xaml.Media.Imaging.BitmapCreateOptions Windows.UI.Xaml.Media.Imaging.BitmapImage::get_CreateOptions()
    @_property
    def create_options(self) -> BitmapCreateOptions: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.BitmapImage::put_CreateOptions(Windows.UI.Xaml.Media.Imaging.BitmapCreateOptions)
    @create_options.setter
    def create_options(self, value: BitmapCreateOptions) -> None: ...
    # Windows.UI.Xaml.Media.Imaging.DecodePixelType Windows.UI.Xaml.Media.Imaging.BitmapImage::get_DecodePixelType()
    @_property
    def decode_pixel_type(self) -> DecodePixelType: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.BitmapImage::put_DecodePixelType(Windows.UI.Xaml.Media.Imaging.DecodePixelType)
    @decode_pixel_type.setter
    def decode_pixel_type(self, value: DecodePixelType) -> None: ...
    # System.Boolean Windows.UI.Xaml.Media.Imaging.BitmapImage::get_AutoPlay()
    @_property
    def auto_play(self) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.BitmapImage::put_AutoPlay(System.Boolean)
    @auto_play.setter
    def auto_play(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.Media.Imaging.BitmapImage::get_IsAnimatedBitmap()
    @_property
    def is_animated_bitmap(self) -> bool: ...
    # System.Boolean Windows.UI.Xaml.Media.Imaging.BitmapImage::get_IsPlaying()
    @_property
    def is_playing(self) -> bool: ...

class BitmapSource_Static(windows_ui_xaml_media.ImageSource_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.BitmapSource::get_PixelHeightProperty()
    @_property
    @typing.final
    def pixel_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.BitmapSource::get_PixelWidthProperty()
    @_property
    @typing.final
    def pixel_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class BitmapSource(windows_ui_xaml_media.ImageSource, metaclass=BitmapSource_Static):
    @typing.final
    # System.Void Windows.UI.Xaml.Media.Imaging.BitmapSource::SetSource(Windows.Storage.Streams.IRandomAccessStream)
    def set_source(self, stream_source: windows_storage_streams.IRandomAccessStream, /) -> None: ...
    @typing.final
    # Windows.Foundation.IAsyncAction Windows.UI.Xaml.Media.Imaging.BitmapSource::SetSourceAsync(Windows.Storage.Streams.IRandomAccessStream)
    def set_source_async(self, stream_source: windows_storage_streams.IRandomAccessStream, /) -> windows_foundation.IAsyncAction: ...
    # System.Int32 Windows.UI.Xaml.Media.Imaging.BitmapSource::get_PixelHeight()
    @_property
    @typing.final
    def pixel_height(self) -> winrt.system.Int32: ...
    # System.Int32 Windows.UI.Xaml.Media.Imaging.BitmapSource::get_PixelWidth()
    @_property
    @typing.final
    def pixel_width(self) -> winrt.system.Int32: ...

@typing.final
class DownloadProgressEventArgs(winrt.system.Object):
    # System.Int32 Windows.UI.Xaml.Media.Imaging.DownloadProgressEventArgs::get_Progress()
    @_property
    def progress(self) -> winrt.system.Int32: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.DownloadProgressEventArgs::put_Progress(System.Int32)
    @progress.setter
    def progress(self, value: winrt.system.Int32) -> None: ...

@typing.final
class RenderTargetBitmap_Static(windows_ui_xaml_media.ImageSource_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap::get_PixelHeightProperty()
    @_property
    def pixel_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap::get_PixelWidthProperty()
    @_property
    def pixel_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class RenderTargetBitmap(windows_ui_xaml_media.ImageSource, metaclass=RenderTargetBitmap_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.IBuffer> Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap::GetPixelsAsync()
    def get_pixels_async(self) -> windows_foundation.IAsyncOperation[windows_storage_streams.IBuffer]: ...
    # Windows.Foundation.IAsyncAction Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap::RenderAsync(Windows.UI.Xaml.UIElement)
    def render_async(self, element: windows_ui_xaml.UIElement, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap::RenderAsync(Windows.UI.Xaml.UIElement,System.Int32,System.Int32)
    def render_to_size_async(self, element: windows_ui_xaml.UIElement, scaled_width: winrt.system.Int32, scaled_height: winrt.system.Int32, /) -> windows_foundation.IAsyncAction: ...
    # System.Int32 Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap::get_PixelHeight()
    @_property
    def pixel_height(self) -> winrt.system.Int32: ...
    # System.Int32 Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap::get_PixelWidth()
    @_property
    def pixel_width(self) -> winrt.system.Int32: ...

@typing.final
class SoftwareBitmapSource(windows_ui_xaml_media.ImageSource, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.SoftwareBitmapSource::Close()
    def close(self) -> None: ...
    # Windows.Foundation.IAsyncAction Windows.UI.Xaml.Media.Imaging.SoftwareBitmapSource::SetBitmapAsync(Windows.Graphics.Imaging.SoftwareBitmap)
    def set_bitmap_async(self, software_bitmap: windows_graphics_imaging.SoftwareBitmap, /) -> windows_foundation.IAsyncAction: ...

class SurfaceImageSource_Static(windows_ui_xaml_media.ImageSource_Static):
    pass

class SurfaceImageSource(windows_ui_xaml_media.ImageSource, metaclass=SurfaceImageSource_Static):
    @typing.overload
    def __new__(cls: typing.Type[Self], pixel_width: winrt.system.Int32, pixel_height: winrt.system.Int32) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], pixel_width: winrt.system.Int32, pixel_height: winrt.system.Int32, is_opaque: bool) -> Self: ...

class SvgImageSource_Static(windows_ui_xaml_media.ImageSource_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.SvgImageSource::get_RasterizePixelHeightProperty()
    @_property
    @typing.final
    def rasterize_pixel_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.SvgImageSource::get_RasterizePixelWidthProperty()
    @_property
    @typing.final
    def rasterize_pixel_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Imaging.SvgImageSource::get_UriSourceProperty()
    @_property
    @typing.final
    def uri_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SvgImageSource(windows_ui_xaml_media.ImageSource, metaclass=SvgImageSource_Static):
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], uri_source: windows_foundation.Uri) -> Self: ...
    @typing.final
    # Windows.Foundation.IAsyncOperation`1<Windows.UI.Xaml.Media.Imaging.SvgImageSourceLoadStatus> Windows.UI.Xaml.Media.Imaging.SvgImageSource::SetSourceAsync(Windows.Storage.Streams.IRandomAccessStream)
    def set_source_async(self, stream_source: windows_storage_streams.IRandomAccessStream, /) -> windows_foundation.IAsyncOperation[SvgImageSourceLoadStatus]: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Media.Imaging.SvgImageSource::add_OpenFailed(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Media.Imaging.SvgImageSource,Windows.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs>)
    def add_open_failed(self, handler: windows_foundation.TypedEventHandler[SvgImageSource, SvgImageSourceFailedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.Media.Imaging.SvgImageSource::remove_OpenFailed(Windows.Foundation.EventRegistrationToken)
    def remove_open_failed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Media.Imaging.SvgImageSource::add_Opened(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Media.Imaging.SvgImageSource,Windows.UI.Xaml.Media.Imaging.SvgImageSourceOpenedEventArgs>)
    def add_opened(self, handler: windows_foundation.TypedEventHandler[SvgImageSource, SvgImageSourceOpenedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.Media.Imaging.SvgImageSource::remove_Opened(Windows.Foundation.EventRegistrationToken)
    def remove_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.Uri Windows.UI.Xaml.Media.Imaging.SvgImageSource::get_UriSource()
    @_property
    def uri_source(self) -> windows_foundation.Uri: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.SvgImageSource::put_UriSource(Windows.Foundation.Uri)
    @uri_source.setter
    @typing.final
    def uri_source(self, value: windows_foundation.Uri) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Imaging.SvgImageSource::get_RasterizePixelWidth()
    @_property
    def rasterize_pixel_width(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.SvgImageSource::put_RasterizePixelWidth(System.Double)
    @rasterize_pixel_width.setter
    @typing.final
    def rasterize_pixel_width(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Imaging.SvgImageSource::get_RasterizePixelHeight()
    @_property
    def rasterize_pixel_height(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.SvgImageSource::put_RasterizePixelHeight(System.Double)
    @rasterize_pixel_height.setter
    @typing.final
    def rasterize_pixel_height(self, value: winrt.system.Double) -> None: ...

@typing.final
class SvgImageSourceFailedEventArgs(winrt.system.Object):
    # Windows.UI.Xaml.Media.Imaging.SvgImageSourceLoadStatus Windows.UI.Xaml.Media.Imaging.SvgImageSourceFailedEventArgs::get_Status()
    @_property
    def status(self) -> SvgImageSourceLoadStatus: ...

@typing.final
class SvgImageSourceOpenedEventArgs(winrt.system.Object):
    pass

@typing.final
class VirtualSurfaceImageSource(SurfaceImageSource):
    @typing.overload
    def __new__(cls: typing.Type[Self], pixel_width: winrt.system.Int32, pixel_height: winrt.system.Int32) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], pixel_width: winrt.system.Int32, pixel_height: winrt.system.Int32, is_opaque: bool) -> Self: ...

@typing.final
class WriteableBitmap(BitmapSource):
    def __new__(cls: typing.Type[Self], pixel_width: winrt.system.Int32, pixel_height: winrt.system.Int32) -> Self: ...
    # System.Void Windows.UI.Xaml.Media.Imaging.WriteableBitmap::Invalidate()
    def invalidate(self) -> None: ...
    # Windows.Storage.Streams.IBuffer Windows.UI.Xaml.Media.Imaging.WriteableBitmap::get_PixelBuffer()
    @_property
    def pixel_buffer(self) -> windows_storage_streams.IBuffer: ...

class XamlRenderingBackgroundTask_Static(winrt._winrt.IInspectable_Static):
    pass

class XamlRenderingBackgroundTask(winrt.system.Object, metaclass=XamlRenderingBackgroundTask_Static):
    # System.Void Windows.UI.Xaml.Media.Imaging.XamlRenderingBackgroundTask::OnRun(Windows.ApplicationModel.Background.IBackgroundTaskInstance)
    def _on_run(self, task_instance: windows_applicationmodel_background.IBackgroundTaskInstance, /) -> None: ...

