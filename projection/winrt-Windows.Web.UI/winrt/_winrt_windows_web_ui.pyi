# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.datatransfer
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.storage.streams
import winrt.windows.ui
import winrt.windows.web
import winrt.windows.web.http

from winrt.windows.web.ui import WebViewControlPermissionState, WebViewControlPermissionType

Self = typing.TypeVar('Self')

@typing.final
class WebViewControlContentLoadingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewControlContentLoadingEventArgs: ...
    @_property
    def uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...

@typing.final
class WebViewControlDOMContentLoadedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewControlDOMContentLoadedEventArgs: ...
    @_property
    def uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...

@typing.final
class WebViewControlDeferredPermissionRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewControlDeferredPermissionRequest: ...
    def allow(self) -> None: ...
    def deny(self) -> None: ...
    @_property
    def id(self) -> winrt.system.UInt32: ...
    @_property
    def permission_type(self) -> WebViewControlPermissionType: ...
    @_property
    def uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...

@typing.final
class WebViewControlLongRunningScriptDetectedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewControlLongRunningScriptDetectedEventArgs: ...
    @_property
    def stop_page_script_execution(self) -> bool: ...
    @stop_page_script_execution.setter
    def stop_page_script_execution(self, value: bool) -> None: ...
    @_property
    def execution_time(self) -> datetime.timedelta: ...

@typing.final
class WebViewControlNavigationCompletedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewControlNavigationCompletedEventArgs: ...
    @_property
    def is_success(self) -> bool: ...
    @_property
    def uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    @_property
    def web_error_status(self) -> winrt.windows.web.WebErrorStatus: ...

@typing.final
class WebViewControlNavigationStartingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewControlNavigationStartingEventArgs: ...
    @_property
    def cancel(self) -> bool: ...
    @cancel.setter
    def cancel(self, value: bool) -> None: ...
    @_property
    def uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...

@typing.final
class WebViewControlNewWindowRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewControlNewWindowRequestedEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...
    @_property
    def referrer(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    @_property
    def uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    @_property
    def new_window(self) -> typing.Optional[IWebViewControl]: ...
    @new_window.setter
    def new_window(self, value: typing.Optional[IWebViewControl]) -> None: ...

@typing.final
class WebViewControlPermissionRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewControlPermissionRequest: ...
    def allow(self) -> None: ...
    def defer(self) -> None: ...
    def deny(self) -> None: ...
    @_property
    def id(self) -> winrt.system.UInt32: ...
    @_property
    def permission_type(self) -> WebViewControlPermissionType: ...
    @_property
    def state(self) -> WebViewControlPermissionState: ...
    @_property
    def uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...

@typing.final
class WebViewControlPermissionRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewControlPermissionRequestedEventArgs: ...
    @_property
    def permission_request(self) -> typing.Optional[WebViewControlPermissionRequest]: ...

@typing.final
class WebViewControlScriptNotifyEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewControlScriptNotifyEventArgs: ...
    @_property
    def uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    @_property
    def value(self) -> str: ...

@typing.final
class WebViewControlSettings(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewControlSettings: ...
    @_property
    def is_script_notify_allowed(self) -> bool: ...
    @is_script_notify_allowed.setter
    def is_script_notify_allowed(self, value: bool) -> None: ...
    @_property
    def is_java_script_enabled(self) -> bool: ...
    @is_java_script_enabled.setter
    def is_java_script_enabled(self, value: bool) -> None: ...
    @_property
    def is_indexed_d_b_enabled(self) -> bool: ...
    @is_indexed_d_b_enabled.setter
    def is_indexed_d_b_enabled(self, value: bool) -> None: ...

@typing.final
class WebViewControlUnsupportedUriSchemeIdentifiedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewControlUnsupportedUriSchemeIdentifiedEventArgs: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...
    @_property
    def uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...

@typing.final
class WebViewControlUnviewableContentIdentifiedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewControlUnviewableContentIdentifiedEventArgs: ...
    @_property
    def media_type(self) -> str: ...
    @_property
    def referrer(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    @_property
    def uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...

@typing.final
class WebViewControlWebResourceRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewControlWebResourceRequestedEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def response(self) -> typing.Optional[winrt.windows.web.http.HttpResponseMessage]: ...
    @response.setter
    def response(self, value: typing.Optional[winrt.windows.web.http.HttpResponseMessage]) -> None: ...
    @_property
    def request(self) -> typing.Optional[winrt.windows.web.http.HttpRequestMessage]: ...

@typing.final
class IWebViewControl(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IWebViewControl: ...
    def build_local_stream_uri(self, content_identifier: str, relative_path: str, /) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    def capture_preview_to_stream_async(self, stream: typing.Optional[winrt.windows.storage.streams.IRandomAccessStream], /) -> winrt.windows.foundation.IAsyncAction: ...
    def capture_selected_content_to_data_package_async(self) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.applicationmodel.datatransfer.DataPackage]: ...
    def get_deferred_permission_request_by_id(self, id: winrt.system.UInt32, /) -> typing.Optional[WebViewControlDeferredPermissionRequest]: ...
    def go_back(self) -> None: ...
    def go_forward(self) -> None: ...
    def invoke_script_async(self, script_name: str, arguments: typing.Iterable[str], /) -> winrt.windows.foundation.IAsyncOperation[str]: ...
    def navigate(self, source: typing.Optional[winrt.windows.foundation.Uri], /) -> None: ...
    def navigate_to_local_stream_uri(self, source: typing.Optional[winrt.windows.foundation.Uri], stream_resolver: typing.Optional[winrt.windows.web.IUriToStreamResolver], /) -> None: ...
    def navigate_to_string(self, text: str, /) -> None: ...
    def navigate_with_http_request_message(self, request_message: typing.Optional[winrt.windows.web.http.HttpRequestMessage], /) -> None: ...
    def refresh(self) -> None: ...
    def stop(self) -> None: ...
    def add_contains_full_screen_element_changed(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_contains_full_screen_element_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_content_loading(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlContentLoadingEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_content_loading(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_d_o_m_content_loaded(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlDOMContentLoadedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_d_o_m_content_loaded(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_frame_content_loading(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlContentLoadingEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_frame_content_loading(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_frame_d_o_m_content_loaded(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlDOMContentLoadedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_frame_d_o_m_content_loaded(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_frame_navigation_completed(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlNavigationCompletedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_frame_navigation_completed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_frame_navigation_starting(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlNavigationStartingEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_frame_navigation_starting(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_long_running_script_detected(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlLongRunningScriptDetectedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_long_running_script_detected(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_navigation_completed(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlNavigationCompletedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_navigation_completed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_navigation_starting(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlNavigationStartingEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_navigation_starting(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_new_window_requested(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlNewWindowRequestedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_new_window_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_permission_requested(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlPermissionRequestedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_permission_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_script_notify(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlScriptNotifyEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_script_notify(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_unsafe_content_warning_displaying(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_unsafe_content_warning_displaying(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_unsupported_uri_scheme_identified(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlUnsupportedUriSchemeIdentifiedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_unsupported_uri_scheme_identified(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_unviewable_content_identified(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlUnviewableContentIdentifiedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_unviewable_content_identified(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_web_resource_requested(self, handler: winrt.windows.foundation.TypedEventHandler[IWebViewControl, WebViewControlWebResourceRequestedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_web_resource_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def can_go_back(self) -> bool: ...
    @_property
    def can_go_forward(self) -> bool: ...
    @_property
    def contains_full_screen_element(self) -> bool: ...
    @_property
    def default_background_color(self) -> winrt.windows.ui.Color: ...
    @default_background_color.setter
    def default_background_color(self, value: winrt.windows.ui.Color) -> None: ...
    @_property
    def deferred_permission_requests(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[WebViewControlDeferredPermissionRequest]]: ...
    @_property
    def document_title(self) -> str: ...
    @_property
    def settings(self) -> typing.Optional[WebViewControlSettings]: ...
    @_property
    def source(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    @source.setter
    def source(self, value: typing.Optional[winrt.windows.foundation.Uri]) -> None: ...

@typing.final
class IWebViewControl2(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IWebViewControl2: ...
    def add_initialize_script(self, script: str, /) -> None: ...

