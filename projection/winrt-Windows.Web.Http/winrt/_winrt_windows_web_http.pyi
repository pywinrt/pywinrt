# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.networking.sockets as windows_networking_sockets
import winrt.windows.security.cryptography.certificates as windows_security_cryptography_certificates
import winrt.windows.storage.streams as windows_storage_streams
import winrt.windows.web.http.filters as windows_web_http_filters
import winrt.windows.web.http.headers as windows_web_http_headers

from winrt.windows.web.http import HttpCompletionOption, HttpProgressStage, HttpResponseMessageSource, HttpStatusCode, HttpVersion

Self = typing.TypeVar('Self')

@typing.final
class HttpProgress:
    stage: HttpProgressStage
    bytes_sent: winrt.system.UInt64
    total_bytes_to_send: typing.Optional[winrt.system.UInt64]
    bytes_received: winrt.system.UInt64
    total_bytes_to_receive: typing.Optional[winrt.system.UInt64]
    retries: winrt.system.UInt32
    def __init__(self, stage: HttpProgressStage = HttpProgressStage(0), bytes_sent: winrt.system.UInt64 = 0, total_bytes_to_send: typing.Optional[winrt.system.UInt64] = None, bytes_received: winrt.system.UInt64 = 0, total_bytes_to_receive: typing.Optional[winrt.system.UInt64] = None, retries: winrt.system.UInt32 = 0) -> None: ...

@typing.final
class HttpBufferContent(winrt.system.Object, windows_foundation.IStringable, IHttpContent, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], content: windows_storage_streams.IBuffer) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], content: windows_storage_streams.IBuffer, offset: winrt.system.UInt32, count: winrt.system.UInt32) -> Self: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.UInt64,System.UInt64> Windows.Web.Http.HttpBufferContent::BufferAllAsync()
    def buffer_all_async(self) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt64, winrt.system.UInt64]: ...
    # System.Void Windows.Web.Http.HttpBufferContent::Close()
    def close(self) -> None: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IBuffer,System.UInt64> Windows.Web.Http.HttpBufferContent::ReadAsBufferAsync()
    def read_as_buffer_async(self) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IBuffer, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IInputStream,System.UInt64> Windows.Web.Http.HttpBufferContent::ReadAsInputStreamAsync()
    def read_as_input_stream_async(self) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IInputStream, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.String,System.UInt64> Windows.Web.Http.HttpBufferContent::ReadAsStringAsync()
    def read_as_string_async(self) -> windows_foundation.IAsyncOperationWithProgress[str, winrt.system.UInt64]: ...
    # System.String Windows.Web.Http.HttpBufferContent::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.HttpBufferContent::TryComputeLength(System.UInt64&)
    def try_compute_length(self) -> typing.Tuple[bool, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.UInt64,System.UInt64> Windows.Web.Http.HttpBufferContent::WriteToStreamAsync(Windows.Storage.Streams.IOutputStream)
    def write_to_stream_async(self, output_stream: windows_storage_streams.IOutputStream, /) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt64, winrt.system.UInt64]: ...
    # Windows.Web.Http.Headers.HttpContentHeaderCollection Windows.Web.Http.HttpBufferContent::get_Headers()
    @_property
    def headers(self) -> windows_web_http_headers.HttpContentHeaderCollection: ...

@typing.final
class HttpClient(winrt.system.Object, windows_foundation.IStringable, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], filter: windows_web_http_filters.IHttpFilter) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.Web.Http.HttpClient::Close()
    def close(self) -> None: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::DeleteAsync(Windows.Foundation.Uri)
    def delete_async(self, uri: windows_foundation.Uri, /) -> windows_foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::GetAsync(Windows.Foundation.Uri)
    def get_async(self, uri: windows_foundation.Uri, /) -> windows_foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IBuffer,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::GetBufferAsync(Windows.Foundation.Uri)
    def get_buffer_async(self, uri: windows_foundation.Uri, /) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IBuffer, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IInputStream,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::GetInputStreamAsync(Windows.Foundation.Uri)
    def get_input_stream_async(self, uri: windows_foundation.Uri, /) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IInputStream, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.String,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::GetStringAsync(Windows.Foundation.Uri)
    def get_string_async(self, uri: windows_foundation.Uri, /) -> windows_foundation.IAsyncOperationWithProgress[str, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::GetAsync(Windows.Foundation.Uri,Windows.Web.Http.HttpCompletionOption)
    def get_with_option_async(self, uri: windows_foundation.Uri, completion_option: HttpCompletionOption, /) -> windows_foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::PostAsync(Windows.Foundation.Uri,Windows.Web.Http.IHttpContent)
    def post_async(self, uri: windows_foundation.Uri, content: IHttpContent, /) -> windows_foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::PutAsync(Windows.Foundation.Uri,Windows.Web.Http.IHttpContent)
    def put_async(self, uri: windows_foundation.Uri, content: IHttpContent, /) -> windows_foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::SendRequestAsync(Windows.Web.Http.HttpRequestMessage)
    def send_request_async(self, request: HttpRequestMessage, /) -> windows_foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::SendRequestAsync(Windows.Web.Http.HttpRequestMessage,Windows.Web.Http.HttpCompletionOption)
    def send_request_with_option_async(self, request: HttpRequestMessage, completion_option: HttpCompletionOption, /) -> windows_foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]: ...
    # System.String Windows.Web.Http.HttpClient::ToString()
    def to_string(self) -> str: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpRequestResult,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::TryDeleteAsync(Windows.Foundation.Uri)
    def try_delete_async(self, uri: windows_foundation.Uri, /) -> windows_foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpRequestResult,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::TryGetAsync(Windows.Foundation.Uri)
    def try_get_async(self, uri: windows_foundation.Uri, /) -> windows_foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpRequestResult,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::TryGetAsync(Windows.Foundation.Uri,Windows.Web.Http.HttpCompletionOption)
    def try_get_async2(self, uri: windows_foundation.Uri, completion_option: HttpCompletionOption, /) -> windows_foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpGetBufferResult,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::TryGetBufferAsync(Windows.Foundation.Uri)
    def try_get_buffer_async(self, uri: windows_foundation.Uri, /) -> windows_foundation.IAsyncOperationWithProgress[HttpGetBufferResult, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpGetInputStreamResult,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::TryGetInputStreamAsync(Windows.Foundation.Uri)
    def try_get_input_stream_async(self, uri: windows_foundation.Uri, /) -> windows_foundation.IAsyncOperationWithProgress[HttpGetInputStreamResult, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpGetStringResult,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::TryGetStringAsync(Windows.Foundation.Uri)
    def try_get_string_async(self, uri: windows_foundation.Uri, /) -> windows_foundation.IAsyncOperationWithProgress[HttpGetStringResult, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpRequestResult,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::TryPostAsync(Windows.Foundation.Uri,Windows.Web.Http.IHttpContent)
    def try_post_async(self, uri: windows_foundation.Uri, content: IHttpContent, /) -> windows_foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpRequestResult,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::TryPutAsync(Windows.Foundation.Uri,Windows.Web.Http.IHttpContent)
    def try_put_async(self, uri: windows_foundation.Uri, content: IHttpContent, /) -> windows_foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpRequestResult,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::TrySendRequestAsync(Windows.Web.Http.HttpRequestMessage)
    def try_send_request_async(self, request: HttpRequestMessage, /) -> windows_foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Web.Http.HttpRequestResult,Windows.Web.Http.HttpProgress> Windows.Web.Http.HttpClient::TrySendRequestAsync(Windows.Web.Http.HttpRequestMessage,Windows.Web.Http.HttpCompletionOption)
    def try_send_request_async2(self, request: HttpRequestMessage, completion_option: HttpCompletionOption, /) -> windows_foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]: ...
    # Windows.Web.Http.Headers.HttpRequestHeaderCollection Windows.Web.Http.HttpClient::get_DefaultRequestHeaders()
    @_property
    def default_request_headers(self) -> windows_web_http_headers.HttpRequestHeaderCollection: ...
    # System.String Windows.Web.Http.HttpClient::get_DefaultPrivacyAnnotation()
    @_property
    def default_privacy_annotation(self) -> str: ...
    # System.Void Windows.Web.Http.HttpClient::put_DefaultPrivacyAnnotation(System.String)
    @default_privacy_annotation.setter
    def default_privacy_annotation(self, value: str) -> None: ...

@typing.final
class HttpCookie(winrt.system.Object, windows_foundation.IStringable):
    def __str__(self) -> str: ...
    def __new__(cls: typing.Type[Self], name: str, domain: str, path: str) -> Self: ...
    # System.String Windows.Web.Http.HttpCookie::ToString()
    def to_string(self) -> str: ...
    # System.String Windows.Web.Http.HttpCookie::get_Value()
    @_property
    def value(self) -> str: ...
    # System.Void Windows.Web.Http.HttpCookie::put_Value(System.String)
    @value.setter
    def value(self, value: str) -> None: ...
    # System.Boolean Windows.Web.Http.HttpCookie::get_Secure()
    @_property
    def secure(self) -> bool: ...
    # System.Void Windows.Web.Http.HttpCookie::put_Secure(System.Boolean)
    @secure.setter
    def secure(self, value: bool) -> None: ...
    # System.Boolean Windows.Web.Http.HttpCookie::get_HttpOnly()
    @_property
    def http_only(self) -> bool: ...
    # System.Void Windows.Web.Http.HttpCookie::put_HttpOnly(System.Boolean)
    @http_only.setter
    def http_only(self, value: bool) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.Web.Http.HttpCookie::get_Expires()
    @_property
    def expires(self) -> typing.Optional[datetime.datetime]: ...
    # System.Void Windows.Web.Http.HttpCookie::put_Expires(Windows.Foundation.IReference`1<Windows.Foundation.DateTime>)
    @expires.setter
    def expires(self, value: typing.Optional[datetime.datetime]) -> None: ...
    # System.String Windows.Web.Http.HttpCookie::get_Domain()
    @_property
    def domain(self) -> str: ...
    # System.String Windows.Web.Http.HttpCookie::get_Name()
    @_property
    def name(self) -> str: ...
    # System.String Windows.Web.Http.HttpCookie::get_Path()
    @_property
    def path(self) -> str: ...

@typing.final
class HttpCookieCollection(winrt.system.Object, winrt._winrt.Sequence[HttpCookie]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[HttpCookie]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> HttpCookie: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[HttpCookie]: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.HttpCookie> Windows.Web.Http.HttpCookieCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[HttpCookie]: ...
    # Windows.Web.Http.HttpCookie Windows.Web.Http.HttpCookieCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> HttpCookie: ...
    # System.UInt32 Windows.Web.Http.HttpCookieCollection::GetMany(System.UInt32,Windows.Web.Http.HttpCookie[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[HttpCookie], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # System.Boolean Windows.Web.Http.HttpCookieCollection::IndexOf(Windows.Web.Http.HttpCookie,System.UInt32&)
    def index_of(self, value: HttpCookie, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.UInt32 Windows.Web.Http.HttpCookieCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class HttpCookieManager(winrt.system.Object):
    # System.Void Windows.Web.Http.HttpCookieManager::DeleteCookie(Windows.Web.Http.HttpCookie)
    def delete_cookie(self, cookie: HttpCookie, /) -> None: ...
    # Windows.Web.Http.HttpCookieCollection Windows.Web.Http.HttpCookieManager::GetCookies(Windows.Foundation.Uri)
    def get_cookies(self, uri: windows_foundation.Uri, /) -> HttpCookieCollection: ...
    # System.Boolean Windows.Web.Http.HttpCookieManager::SetCookie(Windows.Web.Http.HttpCookie)
    def set_cookie(self, cookie: HttpCookie, /) -> bool: ...
    # System.Boolean Windows.Web.Http.HttpCookieManager::SetCookie(Windows.Web.Http.HttpCookie,System.Boolean)
    def set_cookie_with_third_party(self, cookie: HttpCookie, third_party: bool, /) -> bool: ...

@typing.final
class HttpFormUrlEncodedContent(winrt.system.Object, windows_foundation.IStringable, IHttpContent, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __str__(self) -> str: ...
    def __new__(cls: typing.Type[Self], content: typing.Iterable[windows_foundation_collections.IKeyValuePair[str, str]]) -> Self: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.UInt64,System.UInt64> Windows.Web.Http.HttpFormUrlEncodedContent::BufferAllAsync()
    def buffer_all_async(self) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt64, winrt.system.UInt64]: ...
    # System.Void Windows.Web.Http.HttpFormUrlEncodedContent::Close()
    def close(self) -> None: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IBuffer,System.UInt64> Windows.Web.Http.HttpFormUrlEncodedContent::ReadAsBufferAsync()
    def read_as_buffer_async(self) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IBuffer, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IInputStream,System.UInt64> Windows.Web.Http.HttpFormUrlEncodedContent::ReadAsInputStreamAsync()
    def read_as_input_stream_async(self) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IInputStream, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.String,System.UInt64> Windows.Web.Http.HttpFormUrlEncodedContent::ReadAsStringAsync()
    def read_as_string_async(self) -> windows_foundation.IAsyncOperationWithProgress[str, winrt.system.UInt64]: ...
    # System.String Windows.Web.Http.HttpFormUrlEncodedContent::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.HttpFormUrlEncodedContent::TryComputeLength(System.UInt64&)
    def try_compute_length(self) -> typing.Tuple[bool, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.UInt64,System.UInt64> Windows.Web.Http.HttpFormUrlEncodedContent::WriteToStreamAsync(Windows.Storage.Streams.IOutputStream)
    def write_to_stream_async(self, output_stream: windows_storage_streams.IOutputStream, /) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt64, winrt.system.UInt64]: ...
    # Windows.Web.Http.Headers.HttpContentHeaderCollection Windows.Web.Http.HttpFormUrlEncodedContent::get_Headers()
    @_property
    def headers(self) -> windows_web_http_headers.HttpContentHeaderCollection: ...

@typing.final
class HttpGetBufferResult(winrt.system.Object, windows_foundation.IStringable, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __str__(self) -> str: ...
    # System.Void Windows.Web.Http.HttpGetBufferResult::Close()
    def close(self) -> None: ...
    # System.String Windows.Web.Http.HttpGetBufferResult::ToString()
    def to_string(self) -> str: ...
    # Windows.Foundation.HResult Windows.Web.Http.HttpGetBufferResult::get_ExtendedError()
    @_property
    def extended_error(self) -> windows_foundation.HResult: ...
    # Windows.Web.Http.HttpRequestMessage Windows.Web.Http.HttpGetBufferResult::get_RequestMessage()
    @_property
    def request_message(self) -> HttpRequestMessage: ...
    # Windows.Web.Http.HttpResponseMessage Windows.Web.Http.HttpGetBufferResult::get_ResponseMessage()
    @_property
    def response_message(self) -> HttpResponseMessage: ...
    # System.Boolean Windows.Web.Http.HttpGetBufferResult::get_Succeeded()
    @_property
    def succeeded(self) -> bool: ...
    # Windows.Storage.Streams.IBuffer Windows.Web.Http.HttpGetBufferResult::get_Value()
    @_property
    def value(self) -> windows_storage_streams.IBuffer: ...

@typing.final
class HttpGetInputStreamResult(winrt.system.Object, windows_foundation.IStringable, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __str__(self) -> str: ...
    # System.Void Windows.Web.Http.HttpGetInputStreamResult::Close()
    def close(self) -> None: ...
    # System.String Windows.Web.Http.HttpGetInputStreamResult::ToString()
    def to_string(self) -> str: ...
    # Windows.Foundation.HResult Windows.Web.Http.HttpGetInputStreamResult::get_ExtendedError()
    @_property
    def extended_error(self) -> windows_foundation.HResult: ...
    # Windows.Web.Http.HttpRequestMessage Windows.Web.Http.HttpGetInputStreamResult::get_RequestMessage()
    @_property
    def request_message(self) -> HttpRequestMessage: ...
    # Windows.Web.Http.HttpResponseMessage Windows.Web.Http.HttpGetInputStreamResult::get_ResponseMessage()
    @_property
    def response_message(self) -> HttpResponseMessage: ...
    # System.Boolean Windows.Web.Http.HttpGetInputStreamResult::get_Succeeded()
    @_property
    def succeeded(self) -> bool: ...
    # Windows.Storage.Streams.IInputStream Windows.Web.Http.HttpGetInputStreamResult::get_Value()
    @_property
    def value(self) -> windows_storage_streams.IInputStream: ...

@typing.final
class HttpGetStringResult(winrt.system.Object, windows_foundation.IStringable, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __str__(self) -> str: ...
    # System.Void Windows.Web.Http.HttpGetStringResult::Close()
    def close(self) -> None: ...
    # System.String Windows.Web.Http.HttpGetStringResult::ToString()
    def to_string(self) -> str: ...
    # Windows.Foundation.HResult Windows.Web.Http.HttpGetStringResult::get_ExtendedError()
    @_property
    def extended_error(self) -> windows_foundation.HResult: ...
    # Windows.Web.Http.HttpRequestMessage Windows.Web.Http.HttpGetStringResult::get_RequestMessage()
    @_property
    def request_message(self) -> HttpRequestMessage: ...
    # Windows.Web.Http.HttpResponseMessage Windows.Web.Http.HttpGetStringResult::get_ResponseMessage()
    @_property
    def response_message(self) -> HttpResponseMessage: ...
    # System.Boolean Windows.Web.Http.HttpGetStringResult::get_Succeeded()
    @_property
    def succeeded(self) -> bool: ...
    # System.String Windows.Web.Http.HttpGetStringResult::get_Value()
    @_property
    def value(self) -> str: ...

@typing.final
class HttpMethod_Static(winrt._winrt.IInspectable_Static):
    # Windows.Web.Http.HttpMethod Windows.Web.Http.HttpMethod::get_Delete()
    @_property
    def delete(cls) -> HttpMethod: ...
    # Windows.Web.Http.HttpMethod Windows.Web.Http.HttpMethod::get_Get()
    @_property
    def get(cls) -> HttpMethod: ...
    # Windows.Web.Http.HttpMethod Windows.Web.Http.HttpMethod::get_Head()
    @_property
    def head(cls) -> HttpMethod: ...
    # Windows.Web.Http.HttpMethod Windows.Web.Http.HttpMethod::get_Options()
    @_property
    def options(cls) -> HttpMethod: ...
    # Windows.Web.Http.HttpMethod Windows.Web.Http.HttpMethod::get_Patch()
    @_property
    def patch(cls) -> HttpMethod: ...
    # Windows.Web.Http.HttpMethod Windows.Web.Http.HttpMethod::get_Post()
    @_property
    def post(cls) -> HttpMethod: ...
    # Windows.Web.Http.HttpMethod Windows.Web.Http.HttpMethod::get_Put()
    @_property
    def put(cls) -> HttpMethod: ...

@typing.final
class HttpMethod(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpMethod_Static):
    def __str__(self) -> str: ...
    def __new__(cls: typing.Type[Self], method: str) -> Self: ...
    # System.String Windows.Web.Http.HttpMethod::ToString()
    def to_string(self) -> str: ...
    # System.String Windows.Web.Http.HttpMethod::get_Method()
    @_property
    def method(self) -> str: ...

@typing.final
class HttpMultipartContent(winrt.system.Object, windows_foundation.IStringable, IHttpContent, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __str__(self) -> str: ...
    def __iter__(self) -> typing.Iterator[IHttpContent]: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], subtype: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], subtype: str, boundary: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.Web.Http.HttpMultipartContent::Add(Windows.Web.Http.IHttpContent)
    def add(self, content: IHttpContent, /) -> None: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.UInt64,System.UInt64> Windows.Web.Http.HttpMultipartContent::BufferAllAsync()
    def buffer_all_async(self) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt64, winrt.system.UInt64]: ...
    # System.Void Windows.Web.Http.HttpMultipartContent::Close()
    def close(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.IHttpContent> Windows.Web.Http.HttpMultipartContent::First()
    def first(self) -> windows_foundation_collections.IIterator[IHttpContent]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IBuffer,System.UInt64> Windows.Web.Http.HttpMultipartContent::ReadAsBufferAsync()
    def read_as_buffer_async(self) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IBuffer, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IInputStream,System.UInt64> Windows.Web.Http.HttpMultipartContent::ReadAsInputStreamAsync()
    def read_as_input_stream_async(self) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IInputStream, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.String,System.UInt64> Windows.Web.Http.HttpMultipartContent::ReadAsStringAsync()
    def read_as_string_async(self) -> windows_foundation.IAsyncOperationWithProgress[str, winrt.system.UInt64]: ...
    # System.String Windows.Web.Http.HttpMultipartContent::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.HttpMultipartContent::TryComputeLength(System.UInt64&)
    def try_compute_length(self) -> typing.Tuple[bool, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.UInt64,System.UInt64> Windows.Web.Http.HttpMultipartContent::WriteToStreamAsync(Windows.Storage.Streams.IOutputStream)
    def write_to_stream_async(self, output_stream: windows_storage_streams.IOutputStream, /) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt64, winrt.system.UInt64]: ...
    # Windows.Web.Http.Headers.HttpContentHeaderCollection Windows.Web.Http.HttpMultipartContent::get_Headers()
    @_property
    def headers(self) -> windows_web_http_headers.HttpContentHeaderCollection: ...

@typing.final
class HttpMultipartFormDataContent(winrt.system.Object, windows_foundation.IStringable, IHttpContent, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __str__(self) -> str: ...
    def __iter__(self) -> typing.Iterator[IHttpContent]: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], boundary: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.Web.Http.HttpMultipartFormDataContent::Add(Windows.Web.Http.IHttpContent)
    def add(self, content: IHttpContent, /) -> None: ...
    # System.Void Windows.Web.Http.HttpMultipartFormDataContent::Add(Windows.Web.Http.IHttpContent,System.String)
    def add_with_name(self, content: IHttpContent, name: str, /) -> None: ...
    # System.Void Windows.Web.Http.HttpMultipartFormDataContent::Add(Windows.Web.Http.IHttpContent,System.String,System.String)
    def add_with_name_and_file_name(self, content: IHttpContent, name: str, file_name: str, /) -> None: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.UInt64,System.UInt64> Windows.Web.Http.HttpMultipartFormDataContent::BufferAllAsync()
    def buffer_all_async(self) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt64, winrt.system.UInt64]: ...
    # System.Void Windows.Web.Http.HttpMultipartFormDataContent::Close()
    def close(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.IHttpContent> Windows.Web.Http.HttpMultipartFormDataContent::First()
    def first(self) -> windows_foundation_collections.IIterator[IHttpContent]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IBuffer,System.UInt64> Windows.Web.Http.HttpMultipartFormDataContent::ReadAsBufferAsync()
    def read_as_buffer_async(self) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IBuffer, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IInputStream,System.UInt64> Windows.Web.Http.HttpMultipartFormDataContent::ReadAsInputStreamAsync()
    def read_as_input_stream_async(self) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IInputStream, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.String,System.UInt64> Windows.Web.Http.HttpMultipartFormDataContent::ReadAsStringAsync()
    def read_as_string_async(self) -> windows_foundation.IAsyncOperationWithProgress[str, winrt.system.UInt64]: ...
    # System.String Windows.Web.Http.HttpMultipartFormDataContent::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.HttpMultipartFormDataContent::TryComputeLength(System.UInt64&)
    def try_compute_length(self) -> typing.Tuple[bool, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.UInt64,System.UInt64> Windows.Web.Http.HttpMultipartFormDataContent::WriteToStreamAsync(Windows.Storage.Streams.IOutputStream)
    def write_to_stream_async(self, output_stream: windows_storage_streams.IOutputStream, /) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt64, winrt.system.UInt64]: ...
    # Windows.Web.Http.Headers.HttpContentHeaderCollection Windows.Web.Http.HttpMultipartFormDataContent::get_Headers()
    @_property
    def headers(self) -> windows_web_http_headers.HttpContentHeaderCollection: ...

@typing.final
class HttpRequestMessage(winrt.system.Object, windows_foundation.IStringable, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], method: HttpMethod, uri: windows_foundation.Uri) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.Web.Http.HttpRequestMessage::Close()
    def close(self) -> None: ...
    # System.String Windows.Web.Http.HttpRequestMessage::ToString()
    def to_string(self) -> str: ...
    # Windows.Foundation.Uri Windows.Web.Http.HttpRequestMessage::get_RequestUri()
    @_property
    def request_uri(self) -> windows_foundation.Uri: ...
    # System.Void Windows.Web.Http.HttpRequestMessage::put_RequestUri(Windows.Foundation.Uri)
    @request_uri.setter
    def request_uri(self, value: windows_foundation.Uri) -> None: ...
    # Windows.Web.Http.HttpMethod Windows.Web.Http.HttpRequestMessage::get_Method()
    @_property
    def method(self) -> HttpMethod: ...
    # System.Void Windows.Web.Http.HttpRequestMessage::put_Method(Windows.Web.Http.HttpMethod)
    @method.setter
    def method(self, value: HttpMethod) -> None: ...
    # Windows.Web.Http.IHttpContent Windows.Web.Http.HttpRequestMessage::get_Content()
    @_property
    def content(self) -> IHttpContent: ...
    # System.Void Windows.Web.Http.HttpRequestMessage::put_Content(Windows.Web.Http.IHttpContent)
    @content.setter
    def content(self, value: IHttpContent) -> None: ...
    # Windows.Web.Http.Headers.HttpRequestHeaderCollection Windows.Web.Http.HttpRequestMessage::get_Headers()
    @_property
    def headers(self) -> windows_web_http_headers.HttpRequestHeaderCollection: ...
    # Windows.Foundation.Collections.IMap`2<System.String,System.Object> Windows.Web.Http.HttpRequestMessage::get_Properties()
    @_property
    def properties(self) -> typing.MutableMapping[str, winrt.system.Object]: ...
    # Windows.Web.Http.HttpTransportInformation Windows.Web.Http.HttpRequestMessage::get_TransportInformation()
    @_property
    def transport_information(self) -> HttpTransportInformation: ...
    # System.String Windows.Web.Http.HttpRequestMessage::get_PrivacyAnnotation()
    @_property
    def privacy_annotation(self) -> str: ...
    # System.Void Windows.Web.Http.HttpRequestMessage::put_PrivacyAnnotation(System.String)
    @privacy_annotation.setter
    def privacy_annotation(self, value: str) -> None: ...

@typing.final
class HttpRequestResult(winrt.system.Object, windows_foundation.IStringable, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __str__(self) -> str: ...
    # System.Void Windows.Web.Http.HttpRequestResult::Close()
    def close(self) -> None: ...
    # System.String Windows.Web.Http.HttpRequestResult::ToString()
    def to_string(self) -> str: ...
    # Windows.Foundation.HResult Windows.Web.Http.HttpRequestResult::get_ExtendedError()
    @_property
    def extended_error(self) -> windows_foundation.HResult: ...
    # Windows.Web.Http.HttpRequestMessage Windows.Web.Http.HttpRequestResult::get_RequestMessage()
    @_property
    def request_message(self) -> HttpRequestMessage: ...
    # Windows.Web.Http.HttpResponseMessage Windows.Web.Http.HttpRequestResult::get_ResponseMessage()
    @_property
    def response_message(self) -> HttpResponseMessage: ...
    # System.Boolean Windows.Web.Http.HttpRequestResult::get_Succeeded()
    @_property
    def succeeded(self) -> bool: ...

@typing.final
class HttpResponseMessage(winrt.system.Object, windows_foundation.IStringable, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], status_code: HttpStatusCode) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.Web.Http.HttpResponseMessage::Close()
    def close(self) -> None: ...
    # Windows.Web.Http.HttpResponseMessage Windows.Web.Http.HttpResponseMessage::EnsureSuccessStatusCode()
    def ensure_success_status_code(self) -> HttpResponseMessage: ...
    # System.String Windows.Web.Http.HttpResponseMessage::ToString()
    def to_string(self) -> str: ...
    # Windows.Web.Http.HttpVersion Windows.Web.Http.HttpResponseMessage::get_Version()
    @_property
    def version(self) -> HttpVersion: ...
    # System.Void Windows.Web.Http.HttpResponseMessage::put_Version(Windows.Web.Http.HttpVersion)
    @version.setter
    def version(self, value: HttpVersion) -> None: ...
    # Windows.Web.Http.HttpStatusCode Windows.Web.Http.HttpResponseMessage::get_StatusCode()
    @_property
    def status_code(self) -> HttpStatusCode: ...
    # System.Void Windows.Web.Http.HttpResponseMessage::put_StatusCode(Windows.Web.Http.HttpStatusCode)
    @status_code.setter
    def status_code(self, value: HttpStatusCode) -> None: ...
    # Windows.Web.Http.HttpResponseMessageSource Windows.Web.Http.HttpResponseMessage::get_Source()
    @_property
    def source(self) -> HttpResponseMessageSource: ...
    # System.Void Windows.Web.Http.HttpResponseMessage::put_Source(Windows.Web.Http.HttpResponseMessageSource)
    @source.setter
    def source(self, value: HttpResponseMessageSource) -> None: ...
    # Windows.Web.Http.HttpRequestMessage Windows.Web.Http.HttpResponseMessage::get_RequestMessage()
    @_property
    def request_message(self) -> HttpRequestMessage: ...
    # System.Void Windows.Web.Http.HttpResponseMessage::put_RequestMessage(Windows.Web.Http.HttpRequestMessage)
    @request_message.setter
    def request_message(self, value: HttpRequestMessage) -> None: ...
    # System.String Windows.Web.Http.HttpResponseMessage::get_ReasonPhrase()
    @_property
    def reason_phrase(self) -> str: ...
    # System.Void Windows.Web.Http.HttpResponseMessage::put_ReasonPhrase(System.String)
    @reason_phrase.setter
    def reason_phrase(self, value: str) -> None: ...
    # Windows.Web.Http.IHttpContent Windows.Web.Http.HttpResponseMessage::get_Content()
    @_property
    def content(self) -> IHttpContent: ...
    # System.Void Windows.Web.Http.HttpResponseMessage::put_Content(Windows.Web.Http.IHttpContent)
    @content.setter
    def content(self, value: IHttpContent) -> None: ...
    # Windows.Web.Http.Headers.HttpResponseHeaderCollection Windows.Web.Http.HttpResponseMessage::get_Headers()
    @_property
    def headers(self) -> windows_web_http_headers.HttpResponseHeaderCollection: ...
    # System.Boolean Windows.Web.Http.HttpResponseMessage::get_IsSuccessStatusCode()
    @_property
    def is_success_status_code(self) -> bool: ...

@typing.final
class HttpStreamContent(winrt.system.Object, windows_foundation.IStringable, IHttpContent, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __str__(self) -> str: ...
    def __new__(cls: typing.Type[Self], content: windows_storage_streams.IInputStream) -> Self: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.UInt64,System.UInt64> Windows.Web.Http.HttpStreamContent::BufferAllAsync()
    def buffer_all_async(self) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt64, winrt.system.UInt64]: ...
    # System.Void Windows.Web.Http.HttpStreamContent::Close()
    def close(self) -> None: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IBuffer,System.UInt64> Windows.Web.Http.HttpStreamContent::ReadAsBufferAsync()
    def read_as_buffer_async(self) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IBuffer, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IInputStream,System.UInt64> Windows.Web.Http.HttpStreamContent::ReadAsInputStreamAsync()
    def read_as_input_stream_async(self) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IInputStream, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.String,System.UInt64> Windows.Web.Http.HttpStreamContent::ReadAsStringAsync()
    def read_as_string_async(self) -> windows_foundation.IAsyncOperationWithProgress[str, winrt.system.UInt64]: ...
    # System.String Windows.Web.Http.HttpStreamContent::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.HttpStreamContent::TryComputeLength(System.UInt64&)
    def try_compute_length(self) -> typing.Tuple[bool, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.UInt64,System.UInt64> Windows.Web.Http.HttpStreamContent::WriteToStreamAsync(Windows.Storage.Streams.IOutputStream)
    def write_to_stream_async(self, output_stream: windows_storage_streams.IOutputStream, /) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt64, winrt.system.UInt64]: ...
    # Windows.Web.Http.Headers.HttpContentHeaderCollection Windows.Web.Http.HttpStreamContent::get_Headers()
    @_property
    def headers(self) -> windows_web_http_headers.HttpContentHeaderCollection: ...

@typing.final
class HttpStringContent(winrt.system.Object, windows_foundation.IStringable, IHttpContent, windows_foundation.IClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], content: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], content: str, encoding: windows_storage_streams.UnicodeEncoding) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], content: str, encoding: windows_storage_streams.UnicodeEncoding, media_type: str) -> Self: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.UInt64,System.UInt64> Windows.Web.Http.HttpStringContent::BufferAllAsync()
    def buffer_all_async(self) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt64, winrt.system.UInt64]: ...
    # System.Void Windows.Web.Http.HttpStringContent::Close()
    def close(self) -> None: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IBuffer,System.UInt64> Windows.Web.Http.HttpStringContent::ReadAsBufferAsync()
    def read_as_buffer_async(self) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IBuffer, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IInputStream,System.UInt64> Windows.Web.Http.HttpStringContent::ReadAsInputStreamAsync()
    def read_as_input_stream_async(self) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IInputStream, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.String,System.UInt64> Windows.Web.Http.HttpStringContent::ReadAsStringAsync()
    def read_as_string_async(self) -> windows_foundation.IAsyncOperationWithProgress[str, winrt.system.UInt64]: ...
    # System.String Windows.Web.Http.HttpStringContent::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.HttpStringContent::TryComputeLength(System.UInt64&)
    def try_compute_length(self) -> typing.Tuple[bool, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.UInt64,System.UInt64> Windows.Web.Http.HttpStringContent::WriteToStreamAsync(Windows.Storage.Streams.IOutputStream)
    def write_to_stream_async(self, output_stream: windows_storage_streams.IOutputStream, /) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt64, winrt.system.UInt64]: ...
    # Windows.Web.Http.Headers.HttpContentHeaderCollection Windows.Web.Http.HttpStringContent::get_Headers()
    @_property
    def headers(self) -> windows_web_http_headers.HttpContentHeaderCollection: ...

@typing.final
class HttpTransportInformation(winrt.system.Object, windows_foundation.IStringable):
    def __str__(self) -> str: ...
    # System.String Windows.Web.Http.HttpTransportInformation::ToString()
    def to_string(self) -> str: ...
    # Windows.Security.Cryptography.Certificates.Certificate Windows.Web.Http.HttpTransportInformation::get_ServerCertificate()
    @_property
    def server_certificate(self) -> windows_security_cryptography_certificates.Certificate: ...
    # Windows.Networking.Sockets.SocketSslErrorSeverity Windows.Web.Http.HttpTransportInformation::get_ServerCertificateErrorSeverity()
    @_property
    def server_certificate_error_severity(self) -> windows_networking_sockets.SocketSslErrorSeverity: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Security.Cryptography.Certificates.ChainValidationResult> Windows.Web.Http.HttpTransportInformation::get_ServerCertificateErrors()
    @_property
    def server_certificate_errors(self) -> typing.Sequence[windows_security_cryptography_certificates.ChainValidationResult]: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Security.Cryptography.Certificates.Certificate> Windows.Web.Http.HttpTransportInformation::get_ServerIntermediateCertificates()
    @_property
    def server_intermediate_certificates(self) -> typing.Sequence[windows_security_cryptography_certificates.Certificate]: ...

@typing.final
class _IHttpContent: ...

class IHttpContent(windows_foundation.IClosable, winrt._winrt.IInspectable):
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.UInt64,System.UInt64> Windows.Web.Http.IHttpContent::BufferAllAsync()
    @abstractmethod
    def buffer_all_async(self) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt64, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IBuffer,System.UInt64> Windows.Web.Http.IHttpContent::ReadAsBufferAsync()
    @abstractmethod
    def read_as_buffer_async(self) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IBuffer, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<Windows.Storage.Streams.IInputStream,System.UInt64> Windows.Web.Http.IHttpContent::ReadAsInputStreamAsync()
    @abstractmethod
    def read_as_input_stream_async(self) -> windows_foundation.IAsyncOperationWithProgress[windows_storage_streams.IInputStream, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.String,System.UInt64> Windows.Web.Http.IHttpContent::ReadAsStringAsync()
    @abstractmethod
    def read_as_string_async(self) -> windows_foundation.IAsyncOperationWithProgress[str, winrt.system.UInt64]: ...
    # System.Boolean Windows.Web.Http.IHttpContent::TryComputeLength(System.UInt64&)
    @abstractmethod
    def try_compute_length(self) -> typing.Tuple[bool, winrt.system.UInt64]: ...
    # Windows.Foundation.IAsyncOperationWithProgress`2<System.UInt64,System.UInt64> Windows.Web.Http.IHttpContent::WriteToStreamAsync(Windows.Storage.Streams.IOutputStream)
    @abstractmethod
    def write_to_stream_async(self, output_stream: windows_storage_streams.IOutputStream, /) -> windows_foundation.IAsyncOperationWithProgress[winrt.system.UInt64, winrt.system.UInt64]: ...
    # Windows.Web.Http.Headers.HttpContentHeaderCollection Windows.Web.Http.IHttpContent::get_Headers()
    @_property
    @abstractmethod
    def headers(self) -> windows_web_http_headers.HttpContentHeaderCollection: ...

