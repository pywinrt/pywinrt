# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.security.credentials

from winrt.windows.applicationmodel.userdataaccounts.systemaccess import DeviceAccountAuthenticationType, DeviceAccountIconId, DeviceAccountMailAgeFilter, DeviceAccountServerType, DeviceAccountSyncScheduleKind

Self = typing.TypeVar('Self')

@typing.final
class DeviceAccountConfiguration(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DeviceAccountConfiguration: ...
    def __new__(cls: typing.Type[DeviceAccountConfiguration]) -> DeviceAccountConfiguration:...
    @_property
    def email_address(self) -> str: ...
    @email_address.setter
    def email_address(self, value: str) -> None: ...
    @_property
    def domain(self) -> str: ...
    @domain.setter
    def domain(self, value: str) -> None: ...
    @_property
    def device_account_type_id(self) -> str: ...
    @device_account_type_id.setter
    def device_account_type_id(self, value: str) -> None: ...
    @_property
    def outgoing_server_address(self) -> str: ...
    @outgoing_server_address.setter
    def outgoing_server_address(self, value: str) -> None: ...
    @_property
    def contacts_sync_enabled(self) -> bool: ...
    @contacts_sync_enabled.setter
    def contacts_sync_enabled(self, value: bool) -> None: ...
    @_property
    def calendar_sync_enabled(self) -> bool: ...
    @calendar_sync_enabled.setter
    def calendar_sync_enabled(self, value: bool) -> None: ...
    @_property
    def account_name(self) -> str: ...
    @account_name.setter
    def account_name(self, value: str) -> None: ...
    @_property
    def incoming_server_username(self) -> str: ...
    @incoming_server_username.setter
    def incoming_server_username(self, value: str) -> None: ...
    @_property
    def incoming_server_requires_ssl(self) -> bool: ...
    @incoming_server_requires_ssl.setter
    def incoming_server_requires_ssl(self, value: bool) -> None: ...
    @_property
    def incoming_server_port(self) -> winrt.system.Int32: ...
    @incoming_server_port.setter
    def incoming_server_port(self, value: winrt.system.Int32) -> None: ...
    @_property
    def incoming_server_address(self) -> str: ...
    @incoming_server_address.setter
    def incoming_server_address(self, value: str) -> None: ...
    @_property
    def email_sync_enabled(self) -> bool: ...
    @email_sync_enabled.setter
    def email_sync_enabled(self, value: bool) -> None: ...
    @_property
    def server_type(self) -> DeviceAccountServerType: ...
    @server_type.setter
    def server_type(self, value: DeviceAccountServerType) -> None: ...
    @_property
    def outgoing_server_username(self) -> str: ...
    @outgoing_server_username.setter
    def outgoing_server_username(self, value: str) -> None: ...
    @_property
    def outgoing_server_requires_ssl(self) -> bool: ...
    @outgoing_server_requires_ssl.setter
    def outgoing_server_requires_ssl(self, value: bool) -> None: ...
    @_property
    def outgoing_server_port(self) -> winrt.system.Int32: ...
    @outgoing_server_port.setter
    def outgoing_server_port(self, value: winrt.system.Int32) -> None: ...
    @_property
    def account_icon_id(self) -> DeviceAccountIconId: ...
    @account_icon_id.setter
    def account_icon_id(self, value: DeviceAccountIconId) -> None: ...
    @_property
    def cal_dav_server_url(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    @cal_dav_server_url.setter
    def cal_dav_server_url(self, value: typing.Optional[winrt.windows.foundation.Uri]) -> None: ...
    @_property
    def cal_dav_requires_ssl(self) -> bool: ...
    @cal_dav_requires_ssl.setter
    def cal_dav_requires_ssl(self, value: bool) -> None: ...
    @_property
    def auto_select_authentication_certificate(self) -> bool: ...
    @auto_select_authentication_certificate.setter
    def auto_select_authentication_certificate(self, value: bool) -> None: ...
    @_property
    def authentication_type(self) -> DeviceAccountAuthenticationType: ...
    @authentication_type.setter
    def authentication_type(self, value: DeviceAccountAuthenticationType) -> None: ...
    @_property
    def authentication_certificate_id(self) -> str: ...
    @authentication_certificate_id.setter
    def authentication_certificate_id(self, value: str) -> None: ...
    @_property
    def is_outgoing_server_authentication_enabled(self) -> bool: ...
    @is_outgoing_server_authentication_enabled.setter
    def is_outgoing_server_authentication_enabled(self, value: bool) -> None: ...
    @_property
    def is_client_authentication_certificate_required(self) -> bool: ...
    @is_client_authentication_certificate_required.setter
    def is_client_authentication_certificate_required(self, value: bool) -> None: ...
    @_property
    def incoming_server_credential(self) -> typing.Optional[winrt.windows.security.credentials.PasswordCredential]: ...
    @incoming_server_credential.setter
    def incoming_server_credential(self, value: typing.Optional[winrt.windows.security.credentials.PasswordCredential]) -> None: ...
    @_property
    def is_outgoing_server_authentication_required(self) -> bool: ...
    @is_outgoing_server_authentication_required.setter
    def is_outgoing_server_authentication_required(self, value: bool) -> None: ...
    @_property
    def card_dav_sync_schedule_kind(self) -> DeviceAccountSyncScheduleKind: ...
    @card_dav_sync_schedule_kind.setter
    def card_dav_sync_schedule_kind(self, value: DeviceAccountSyncScheduleKind) -> None: ...
    @_property
    def always_download_full_message(self) -> bool: ...
    @always_download_full_message.setter
    def always_download_full_message(self, value: bool) -> None: ...
    @_property
    def card_dav_server_url(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    @card_dav_server_url.setter
    def card_dav_server_url(self, value: typing.Optional[winrt.windows.foundation.Uri]) -> None: ...
    @_property
    def card_dav_requires_ssl(self) -> bool: ...
    @card_dav_requires_ssl.setter
    def card_dav_requires_ssl(self, value: bool) -> None: ...
    @_property
    def cal_dav_sync_schedule_kind(self) -> DeviceAccountSyncScheduleKind: ...
    @cal_dav_sync_schedule_kind.setter
    def cal_dav_sync_schedule_kind(self, value: DeviceAccountSyncScheduleKind) -> None: ...
    @_property
    def incoming_server_certificate_hash(self) -> str: ...
    @incoming_server_certificate_hash.setter
    def incoming_server_certificate_hash(self, value: str) -> None: ...
    @_property
    def was_outgoing_server_certificate_hash_confirmed(self) -> bool: ...
    @was_outgoing_server_certificate_hash_confirmed.setter
    def was_outgoing_server_certificate_hash_confirmed(self, value: bool) -> None: ...
    @_property
    def was_modified_by_user(self) -> bool: ...
    @was_modified_by_user.setter
    def was_modified_by_user(self, value: bool) -> None: ...
    @_property
    def sync_schedule_kind(self) -> DeviceAccountSyncScheduleKind: ...
    @sync_schedule_kind.setter
    def sync_schedule_kind(self, value: DeviceAccountSyncScheduleKind) -> None: ...
    @_property
    def sso_account_id(self) -> str: ...
    @sso_account_id.setter
    def sso_account_id(self, value: str) -> None: ...
    @_property
    def was_incoming_server_certificate_hash_confirmed(self) -> bool: ...
    @was_incoming_server_certificate_hash_confirmed.setter
    def was_incoming_server_certificate_hash_confirmed(self, value: bool) -> None: ...
    @_property
    def o_auth_refresh_token(self) -> str: ...
    @o_auth_refresh_token.setter
    def o_auth_refresh_token(self, value: str) -> None: ...
    @_property
    def is_externally_managed(self) -> bool: ...
    @is_externally_managed.setter
    def is_externally_managed(self, value: bool) -> None: ...
    @_property
    def mail_age_filter(self) -> DeviceAccountMailAgeFilter: ...
    @mail_age_filter.setter
    def mail_age_filter(self, value: DeviceAccountMailAgeFilter) -> None: ...
    @_property
    def is_sync_schedule_managed_by_system(self) -> bool: ...
    @is_sync_schedule_managed_by_system.setter
    def is_sync_schedule_managed_by_system(self, value: bool) -> None: ...
    @_property
    def outgoing_server_certificate_hash(self) -> str: ...
    @outgoing_server_certificate_hash.setter
    def outgoing_server_certificate_hash(self, value: str) -> None: ...
    @_property
    def outgoing_server_credential(self) -> typing.Optional[winrt.windows.security.credentials.PasswordCredential]: ...
    @outgoing_server_credential.setter
    def outgoing_server_credential(self, value: typing.Optional[winrt.windows.security.credentials.PasswordCredential]) -> None: ...
    @_property
    def does_policy_allow_mail_sync(self) -> bool: ...
    @_property
    def is_sso_authentication_supported(self) -> bool: ...

@typing.final
class UserDataAccountSystemAccessManager_Static(type):
    def add_and_show_device_accounts_async(cls, accounts: typing.Iterable[DeviceAccountConfiguration], /) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IVectorView[str]]: ...
    def create_device_account_async(cls, account: typing.Optional[DeviceAccountConfiguration], /) -> winrt.windows.foundation.IAsyncOperation[str]: ...
    def delete_device_account_async(cls, account_id: str, /) -> winrt.windows.foundation.IAsyncAction: ...
    def get_device_account_configuration_async(cls, account_id: str, /) -> winrt.windows.foundation.IAsyncOperation[DeviceAccountConfiguration]: ...
    def suppress_local_account_with_account_async(cls, user_data_account_id: str, /) -> winrt.windows.foundation.IAsyncAction: ...

@typing.final
class UserDataAccountSystemAccessManager(winrt.system.Object, metaclass=UserDataAccountSystemAccessManager_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> UserDataAccountSystemAccessManager: ...

