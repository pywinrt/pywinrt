# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.1.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.microsoft.ui.composition as microsoft_ui_composition
import winrt.windows.foundation as windows_foundation

Self = typing.TypeVar('Self')

@typing.final
class CompositorController(winrt.system.Object):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositorController: ...
    def __new__(cls: typing.Type[CompositorController]) -> CompositorController: ...
    def close(self) -> None: ...
    def commit(self) -> None: ...
    def ensure_previous_commit_completed_async(self) -> windows_foundation.IAsyncAction: ...
    def add_commit_needed(self, handler: windows_foundation.TypedEventHandler[CompositorController, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_commit_needed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def compositor(self) -> typing.Optional[microsoft_ui_composition.Compositor]: ...

