# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.globalization as windows_globalization
import winrt.windows.graphics.imaging as windows_graphics_imaging

Self = typing.TypeVar('Self')

@typing.final
class OcrEngine_Static(type):
    def is_language_supported(cls, language: windows_globalization.Language, /) -> bool: ...
    def try_create_from_language(cls, language: windows_globalization.Language, /) -> OcrEngine: ...
    def try_create_from_user_profile_languages(cls) -> OcrEngine: ...
    @_property
    def available_recognizer_languages(cls) -> typing.Sequence[windows_globalization.Language]: ...
    @_property
    def max_image_dimension(cls) -> winrt.system.UInt32: ...

@typing.final
class OcrEngine(winrt.system.Object, metaclass=OcrEngine_Static):
    def recognize_async(self, bitmap: windows_graphics_imaging.SoftwareBitmap, /) -> windows_foundation.IAsyncOperation[OcrResult]: ...
    @_property
    def recognizer_language(self) -> windows_globalization.Language: ...

@typing.final
class OcrLine(winrt.system.Object):
    @_property
    def text(self) -> str: ...
    @_property
    def words(self) -> typing.Sequence[OcrWord]: ...

@typing.final
class OcrResult(winrt.system.Object):
    @_property
    def lines(self) -> typing.Sequence[OcrLine]: ...
    @_property
    def text(self) -> str: ...
    @_property
    def text_angle(self) -> typing.Optional[winrt.system.Double]: ...

@typing.final
class OcrWord(winrt.system.Object):
    @_property
    def bounding_rect(self) -> windows_foundation.Rect: ...
    @_property
    def text(self) -> str: ...

