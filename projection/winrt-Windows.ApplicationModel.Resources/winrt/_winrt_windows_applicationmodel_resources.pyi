# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation
import winrt.windows.ui

Self = typing.TypeVar('Self')

@typing.final
class ResourceLoader_Static(type):
    def get_default_pri_path(cls, package_full_name: str, /) -> str: ...
    @typing.overload
    def get_for_current_view(cls) -> typing.Optional[ResourceLoader]: ...
    @typing.overload
    def get_for_current_view(cls, name: str, /) -> typing.Optional[ResourceLoader]: ...
    def get_for_u_i_context(cls, context: typing.Optional[winrt.windows.ui.UIContext], /) -> typing.Optional[ResourceLoader]: ...
    @typing.overload
    def get_for_view_independent_use(cls) -> typing.Optional[ResourceLoader]: ...
    @typing.overload
    def get_for_view_independent_use(cls, name: str, /) -> typing.Optional[ResourceLoader]: ...
    def get_string_for_reference(cls, uri: typing.Optional[winrt.windows.foundation.Uri], /) -> str: ...

@typing.final
class ResourceLoader(winrt.system.Object, metaclass=ResourceLoader_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ResourceLoader: ...
    @typing.overload
    def __new__(cls: typing.Type[ResourceLoader], name: str) -> ResourceLoader:...
    @typing.overload
    def __new__(cls: typing.Type[ResourceLoader]) -> ResourceLoader:...
    def get_string(self, resource: str, /) -> str: ...
    def get_string_for_uri(self, uri: typing.Optional[winrt.windows.foundation.Uri], /) -> str: ...

