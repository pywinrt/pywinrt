# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.1.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.storage.streams as windows_storage_streams

from winrt.windows.applicationmodel.store.licensemanagement import LicenseRefreshOption

Self = typing.TypeVar('Self')

@typing.final
class LicenseManager_Static(type):
    def add_license_async(cls, license: typing.Optional[windows_storage_streams.IBuffer], /) -> windows_foundation.IAsyncAction: ...
    def get_satisfaction_infos_async(cls, content_ids: typing.Iterable[str], key_ids: typing.Iterable[str], /) -> windows_foundation.IAsyncOperation[LicenseSatisfactionResult]: ...
    def refresh_licenses_async(cls, refresh_option: LicenseRefreshOption, /) -> windows_foundation.IAsyncAction: ...

@typing.final
class LicenseManager(winrt.system.Object, metaclass=LicenseManager_Static):
    pass

@typing.final
class LicenseSatisfactionInfo(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LicenseSatisfactionInfo: ...
    @_property
    def is_satisfied(self) -> bool: ...
    @_property
    def satisfied_by_device(self) -> bool: ...
    @_property
    def satisfied_by_install_media(self) -> bool: ...
    @_property
    def satisfied_by_open_license(self) -> bool: ...
    @_property
    def satisfied_by_pass(self) -> bool: ...
    @_property
    def satisfied_by_signed_in_user(self) -> bool: ...
    @_property
    def satisfied_by_trial(self) -> bool: ...

@typing.final
class LicenseSatisfactionResult(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LicenseSatisfactionResult: ...
    @_property
    def extended_error(self) -> windows_foundation.HResult: ...
    @_property
    def license_satisfaction_infos(self) -> typing.Optional[windows_foundation_collections.IMapView[str, LicenseSatisfactionInfo]]: ...

