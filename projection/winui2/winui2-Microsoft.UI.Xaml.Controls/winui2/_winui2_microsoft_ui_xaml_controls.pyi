# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import webview2.microsoft.web.webview2.core as microsoft_web_webview2_core
import winrt.windows.applicationmodel.contacts as windows_applicationmodel_contacts
import winrt.windows.applicationmodel.datatransfer as windows_applicationmodel_datatransfer
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.foundation.numerics as windows_foundation_numerics
import winrt.windows.globalization.numberformatting as windows_globalization_numberformatting
import winrt.windows.ui as windows_ui
import winrt.windows.ui.composition as windows_ui_composition
import winrt.windows.ui.text as windows_ui_text
import winrt.windows.ui.xaml as windows_ui_xaml
import winrt.windows.ui.xaml.controls as windows_ui_xaml_controls
import winrt.windows.ui.xaml.controls.primitives as windows_ui_xaml_controls_primitives
import winrt.windows.ui.xaml.input as windows_ui_xaml_input
import winrt.windows.ui.xaml.interop as windows_ui_xaml_interop
import winrt.windows.ui.xaml.media as windows_ui_xaml_media
import winrt.windows.ui.xaml.media.animation as windows_ui_xaml_media_animation

from winui2.microsoft.ui.xaml.controls import ColorPickerHsvChannel, ColorSpectrumComponents, ColorSpectrumShape, ControlsResourcesVersion, ElementRealizationOptions, ExpandDirection, InfoBarCloseReason, InfoBarSeverity, NavigationViewBackButtonVisible, NavigationViewDisplayMode, NavigationViewOverflowLabelMode, NavigationViewPaneDisplayMode, NavigationViewSelectionFollowsFocus, NavigationViewShoulderNavigationEnabled, NumberBoxSpinButtonPlacementMode, NumberBoxValidationMode, ParallaxSourceOffsetKind, PipsPagerButtonVisibility, PlayerAnimationOptimization, RefreshPullDirection, RefreshVisualizerOrientation, RefreshVisualizerState, SwipeBehaviorOnInvoked, SwipeMode, TabViewCloseButtonOverlayMode, TabViewWidthMode, TeachingTipCloseReason, TeachingTipHeroContentPlacementMode, TeachingTipPlacementMode, TeachingTipTailVisibility, TreeViewSelectionMode, TwoPaneViewMode, TwoPaneViewPriority, TwoPaneViewTallModeConfiguration, TwoPaneViewWideModeConfiguration, UniformGridLayoutItemsJustification, UniformGridLayoutItemsStretch

Self = typing.TypeVar('Self')

class AnimatedIcon_Static(windows_ui_xaml_controls.IconElement_Static):
    # System.String Microsoft.UI.Xaml.Controls.AnimatedIcon::GetState(Windows.UI.Xaml.DependencyObject)
    def get_state(cls, object: windows_ui_xaml.DependencyObject, /) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedIcon::SetState(Windows.UI.Xaml.DependencyObject,System.String)
    def set_state(cls, object: windows_ui_xaml.DependencyObject, value: str, /) -> None: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedIcon::get_FallbackIconSourceProperty()
    @_property
    @typing.final
    def fallback_icon_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedIcon::get_MirroredWhenRightToLeftProperty()
    @_property
    @typing.final
    def mirrored_when_right_to_left_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedIcon::get_SourceProperty()
    @_property
    @typing.final
    def source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedIcon::get_StateProperty()
    @_property
    @typing.final
    def state_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class AnimatedIcon(windows_ui_xaml_controls.IconElement, metaclass=AnimatedIcon_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2 Microsoft.UI.Xaml.Controls.AnimatedIcon::get_Source()
    @_property
    def source(self) -> IAnimatedVisualSource2: ...
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedIcon::put_Source(Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2)
    @source.setter
    @typing.final
    def source(self, value: IAnimatedVisualSource2) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.AnimatedIcon::get_MirroredWhenRightToLeft()
    @_property
    def mirrored_when_right_to_left(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedIcon::put_MirroredWhenRightToLeft(System.Boolean)
    @mirrored_when_right_to_left.setter
    @typing.final
    def mirrored_when_right_to_left(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.IconSource Microsoft.UI.Xaml.Controls.AnimatedIcon::get_FallbackIconSource()
    @_property
    def fallback_icon_source(self) -> IconSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedIcon::put_FallbackIconSource(Microsoft.UI.Xaml.Controls.IconSource)
    @fallback_icon_source.setter
    @typing.final
    def fallback_icon_source(self, value: IconSource) -> None: ...

class AnimatedIconSource_Static(IconSource_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedIconSource::get_FallbackIconSourceProperty()
    @_property
    @typing.final
    def fallback_icon_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedIconSource::get_MirroredWhenRightToLeftProperty()
    @_property
    @typing.final
    def mirrored_when_right_to_left_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedIconSource::get_SourceProperty()
    @_property
    @typing.final
    def source_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class AnimatedIconSource(IconSource, metaclass=AnimatedIconSource_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2 Microsoft.UI.Xaml.Controls.AnimatedIconSource::get_Source()
    @_property
    def source(self) -> IAnimatedVisualSource2: ...
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedIconSource::put_Source(Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2)
    @source.setter
    @typing.final
    def source(self, value: IAnimatedVisualSource2) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.AnimatedIconSource::get_MirroredWhenRightToLeft()
    @_property
    def mirrored_when_right_to_left(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedIconSource::put_MirroredWhenRightToLeft(System.Boolean)
    @mirrored_when_right_to_left.setter
    @typing.final
    def mirrored_when_right_to_left(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.IconSource Microsoft.UI.Xaml.Controls.AnimatedIconSource::get_FallbackIconSource()
    @_property
    def fallback_icon_source(self) -> IconSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedIconSource::put_FallbackIconSource(Microsoft.UI.Xaml.Controls.IconSource)
    @fallback_icon_source.setter
    @typing.final
    def fallback_icon_source(self, value: IconSource) -> None: ...

class AnimatedVisualPlayer_Static(windows_ui_xaml.FrameworkElement_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_AutoPlayProperty()
    @_property
    @typing.final
    def auto_play_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_DiagnosticsProperty()
    @_property
    @typing.final
    def diagnostics_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_DurationProperty()
    @_property
    @typing.final
    def duration_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_FallbackContentProperty()
    @_property
    @typing.final
    def fallback_content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_IsAnimatedVisualLoadedProperty()
    @_property
    @typing.final
    def is_animated_visual_loaded_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_IsPlayingProperty()
    @_property
    @typing.final
    def is_playing_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_PlaybackRateProperty()
    @_property
    @typing.final
    def playback_rate_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_SourceProperty()
    @_property
    @typing.final
    def source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_StretchProperty()
    @_property
    @typing.final
    def stretch_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_AnimationOptimizationProperty()
    @_property
    @typing.final
    def animation_optimization_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class AnimatedVisualPlayer(windows_ui_xaml.FrameworkElement, metaclass=AnimatedVisualPlayer_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::Pause()
    def pause(self) -> None: ...
    @typing.final
    # Windows.Foundation.IAsyncAction Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::PlayAsync(System.Double,System.Double,System.Boolean)
    def play_async(self, from_progress: winrt.system.Double, to_progress: winrt.system.Double, looped: bool, /) -> windows_foundation.IAsyncAction: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::Resume()
    def resume(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::SetProgress(System.Double)
    def set_progress(self, progress: winrt.system.Double, /) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::Stop()
    def stop(self) -> None: ...
    # Windows.UI.Xaml.Media.Stretch Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_Stretch()
    @_property
    def stretch(self) -> windows_ui_xaml_media.Stretch: ...
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::put_Stretch(Windows.UI.Xaml.Media.Stretch)
    @stretch.setter
    @typing.final
    def stretch(self, value: windows_ui_xaml_media.Stretch) -> None: ...
    # Microsoft.UI.Xaml.Controls.IAnimatedVisualSource Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_Source()
    @_property
    def source(self) -> IAnimatedVisualSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::put_Source(Microsoft.UI.Xaml.Controls.IAnimatedVisualSource)
    @source.setter
    @typing.final
    def source(self, value: IAnimatedVisualSource) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_PlaybackRate()
    @_property
    def playback_rate(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::put_PlaybackRate(System.Double)
    @playback_rate.setter
    @typing.final
    def playback_rate(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.DataTemplate Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_FallbackContent()
    @_property
    def fallback_content(self) -> windows_ui_xaml.DataTemplate: ...
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::put_FallbackContent(Windows.UI.Xaml.DataTemplate)
    @fallback_content.setter
    @typing.final
    def fallback_content(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_AutoPlay()
    @_property
    def auto_play(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::put_AutoPlay(System.Boolean)
    @auto_play.setter
    @typing.final
    def auto_play(self, value: bool) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_Diagnostics()
    @_property
    @typing.final
    def diagnostics(self) -> winrt.system.Object: ...
    # Windows.Foundation.TimeSpan Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_Duration()
    @_property
    @typing.final
    def duration(self) -> datetime.timedelta: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_IsAnimatedVisualLoaded()
    @_property
    @typing.final
    def is_animated_visual_loaded(self) -> bool: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_IsPlaying()
    @_property
    @typing.final
    def is_playing(self) -> bool: ...
    # Windows.UI.Composition.CompositionObject Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_ProgressObject()
    @_property
    @typing.final
    def progress_object(self) -> windows_ui_composition.CompositionObject: ...
    # Microsoft.UI.Xaml.Controls.PlayerAnimationOptimization Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::get_AnimationOptimization()
    @_property
    def animation_optimization(self) -> PlayerAnimationOptimization: ...
    # System.Void Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer::put_AnimationOptimization(Microsoft.UI.Xaml.Controls.PlayerAnimationOptimization)
    @animation_optimization.setter
    @typing.final
    def animation_optimization(self, value: PlayerAnimationOptimization) -> None: ...

class BackdropMaterial_Static(windows_ui_xaml.DependencyObject_Static):
    # System.Boolean Microsoft.UI.Xaml.Controls.BackdropMaterial::GetApplyToRootOrPageBackground(Windows.UI.Xaml.Controls.Control)
    def get_apply_to_root_or_page_background(cls, element: windows_ui_xaml_controls.Control, /) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.BackdropMaterial::SetApplyToRootOrPageBackground(Windows.UI.Xaml.Controls.Control,System.Boolean)
    def set_apply_to_root_or_page_background(cls, element: windows_ui_xaml_controls.Control, value: bool, /) -> None: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.BackdropMaterial::get_ApplyToRootOrPageBackgroundProperty()
    @_property
    @typing.final
    def apply_to_root_or_page_background_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class BackdropMaterial(windows_ui_xaml.DependencyObject, metaclass=BackdropMaterial_Static):
    pass

class BitmapIconSource_Static(IconSource_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.BitmapIconSource::get_ShowAsMonochromeProperty()
    @_property
    @typing.final
    def show_as_monochrome_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.BitmapIconSource::get_UriSourceProperty()
    @_property
    @typing.final
    def uri_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class BitmapIconSource(IconSource, metaclass=BitmapIconSource_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.Uri Microsoft.UI.Xaml.Controls.BitmapIconSource::get_UriSource()
    @_property
    def uri_source(self) -> windows_foundation.Uri: ...
    # System.Void Microsoft.UI.Xaml.Controls.BitmapIconSource::put_UriSource(Windows.Foundation.Uri)
    @uri_source.setter
    @typing.final
    def uri_source(self, value: windows_foundation.Uri) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.BitmapIconSource::get_ShowAsMonochrome()
    @_property
    def show_as_monochrome(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.BitmapIconSource::put_ShowAsMonochrome(System.Boolean)
    @show_as_monochrome.setter
    @typing.final
    def show_as_monochrome(self, value: bool) -> None: ...

class BreadcrumbBar_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.BreadcrumbBar::get_ItemTemplateProperty()
    @_property
    @typing.final
    def item_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.BreadcrumbBar::get_ItemsSourceProperty()
    @_property
    @typing.final
    def items_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class BreadcrumbBar(windows_ui_xaml_controls.Control, metaclass=BreadcrumbBar_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.BreadcrumbBar::add_ItemClicked(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.BreadcrumbBar,Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs>)
    def add_item_clicked(self, handler: windows_foundation.TypedEventHandler[BreadcrumbBar, BreadcrumbBarItemClickedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.BreadcrumbBar::remove_ItemClicked(Windows.Foundation.EventRegistrationToken)
    def remove_item_clicked(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.BreadcrumbBar::get_ItemsSource()
    @_property
    def items_source(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.BreadcrumbBar::put_ItemsSource(System.Object)
    @items_source.setter
    @typing.final
    def items_source(self, value: winrt.system.Object) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.BreadcrumbBar::get_ItemTemplate()
    @_property
    def item_template(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.BreadcrumbBar::put_ItemTemplate(System.Object)
    @item_template.setter
    @typing.final
    def item_template(self, value: winrt.system.Object) -> None: ...

class BreadcrumbBarItem_Static(windows_ui_xaml_controls.ContentControl_Static):
    pass

class BreadcrumbBarItem(windows_ui_xaml_controls.ContentControl, metaclass=BreadcrumbBarItem_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class BreadcrumbBarItemClickedEventArgs(winrt.system.Object):
    # System.Int32 Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs::get_Index()
    @_property
    def index(self) -> winrt.system.Int32: ...
    # System.Object Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs::get_Item()
    @_property
    def item(self) -> winrt.system.Object: ...

@typing.final
class ColorChangedEventArgs(winrt.system.Object):
    # Windows.UI.Color Microsoft.UI.Xaml.Controls.ColorChangedEventArgs::get_NewColor()
    @_property
    def new_color(self) -> windows_ui.Color: ...
    # Windows.UI.Color Microsoft.UI.Xaml.Controls.ColorChangedEventArgs::get_OldColor()
    @_property
    def old_color(self) -> windows_ui.Color: ...

class ColorPicker_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_ColorProperty()
    @_property
    @typing.final
    def color_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_ColorSpectrumComponentsProperty()
    @_property
    @typing.final
    def color_spectrum_components_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_ColorSpectrumShapeProperty()
    @_property
    @typing.final
    def color_spectrum_shape_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_IsAlphaEnabledProperty()
    @_property
    @typing.final
    def is_alpha_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_IsAlphaSliderVisibleProperty()
    @_property
    @typing.final
    def is_alpha_slider_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_IsAlphaTextInputVisibleProperty()
    @_property
    @typing.final
    def is_alpha_text_input_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_IsColorChannelTextInputVisibleProperty()
    @_property
    @typing.final
    def is_color_channel_text_input_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_IsColorPreviewVisibleProperty()
    @_property
    @typing.final
    def is_color_preview_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_IsColorSliderVisibleProperty()
    @_property
    @typing.final
    def is_color_slider_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_IsColorSpectrumVisibleProperty()
    @_property
    @typing.final
    def is_color_spectrum_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_IsHexInputVisibleProperty()
    @_property
    @typing.final
    def is_hex_input_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_IsMoreButtonVisibleProperty()
    @_property
    @typing.final
    def is_more_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_MaxHueProperty()
    @_property
    @typing.final
    def max_hue_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_MaxSaturationProperty()
    @_property
    @typing.final
    def max_saturation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_MaxValueProperty()
    @_property
    @typing.final
    def max_value_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_MinHueProperty()
    @_property
    @typing.final
    def min_hue_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_MinSaturationProperty()
    @_property
    @typing.final
    def min_saturation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_MinValueProperty()
    @_property
    @typing.final
    def min_value_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_PreviousColorProperty()
    @_property
    @typing.final
    def previous_color_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ColorPicker::get_OrientationProperty()
    @_property
    @typing.final
    def orientation_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ColorPicker(windows_ui_xaml_controls.Control, metaclass=ColorPicker_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.ColorPicker::add_ColorChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ColorPicker,Microsoft.UI.Xaml.Controls.ColorChangedEventArgs>)
    def add_color_changed(self, handler: windows_foundation.TypedEventHandler[ColorPicker, ColorChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::remove_ColorChanged(Windows.Foundation.EventRegistrationToken)
    def remove_color_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Microsoft.UI.Xaml.Controls.ColorPicker::get_PreviousColor()
    @_property
    def previous_color(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_PreviousColor(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @previous_color.setter
    @typing.final
    def previous_color(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.ColorPicker::get_MinValue()
    @_property
    def min_value(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_MinValue(System.Int32)
    @min_value.setter
    @typing.final
    def min_value(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.ColorPicker::get_MinSaturation()
    @_property
    def min_saturation(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_MinSaturation(System.Int32)
    @min_saturation.setter
    @typing.final
    def min_saturation(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.ColorPicker::get_MinHue()
    @_property
    def min_hue(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_MinHue(System.Int32)
    @min_hue.setter
    @typing.final
    def min_hue(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.ColorPicker::get_MaxValue()
    @_property
    def max_value(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_MaxValue(System.Int32)
    @max_value.setter
    @typing.final
    def max_value(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.ColorPicker::get_MaxSaturation()
    @_property
    def max_saturation(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_MaxSaturation(System.Int32)
    @max_saturation.setter
    @typing.final
    def max_saturation(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.ColorPicker::get_MaxHue()
    @_property
    def max_hue(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_MaxHue(System.Int32)
    @max_hue.setter
    @typing.final
    def max_hue(self, value: winrt.system.Int32) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ColorPicker::get_IsMoreButtonVisible()
    @_property
    def is_more_button_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_IsMoreButtonVisible(System.Boolean)
    @is_more_button_visible.setter
    @typing.final
    def is_more_button_visible(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ColorPicker::get_IsHexInputVisible()
    @_property
    def is_hex_input_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_IsHexInputVisible(System.Boolean)
    @is_hex_input_visible.setter
    @typing.final
    def is_hex_input_visible(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ColorPicker::get_IsColorSpectrumVisible()
    @_property
    def is_color_spectrum_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_IsColorSpectrumVisible(System.Boolean)
    @is_color_spectrum_visible.setter
    @typing.final
    def is_color_spectrum_visible(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ColorPicker::get_IsColorSliderVisible()
    @_property
    def is_color_slider_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_IsColorSliderVisible(System.Boolean)
    @is_color_slider_visible.setter
    @typing.final
    def is_color_slider_visible(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ColorPicker::get_IsColorPreviewVisible()
    @_property
    def is_color_preview_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_IsColorPreviewVisible(System.Boolean)
    @is_color_preview_visible.setter
    @typing.final
    def is_color_preview_visible(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ColorPicker::get_IsColorChannelTextInputVisible()
    @_property
    def is_color_channel_text_input_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_IsColorChannelTextInputVisible(System.Boolean)
    @is_color_channel_text_input_visible.setter
    @typing.final
    def is_color_channel_text_input_visible(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ColorPicker::get_IsAlphaTextInputVisible()
    @_property
    def is_alpha_text_input_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_IsAlphaTextInputVisible(System.Boolean)
    @is_alpha_text_input_visible.setter
    @typing.final
    def is_alpha_text_input_visible(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ColorPicker::get_IsAlphaSliderVisible()
    @_property
    def is_alpha_slider_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_IsAlphaSliderVisible(System.Boolean)
    @is_alpha_slider_visible.setter
    @typing.final
    def is_alpha_slider_visible(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ColorPicker::get_IsAlphaEnabled()
    @_property
    def is_alpha_enabled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_IsAlphaEnabled(System.Boolean)
    @is_alpha_enabled.setter
    @typing.final
    def is_alpha_enabled(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.ColorSpectrumShape Microsoft.UI.Xaml.Controls.ColorPicker::get_ColorSpectrumShape()
    @_property
    def color_spectrum_shape(self) -> ColorSpectrumShape: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_ColorSpectrumShape(Microsoft.UI.Xaml.Controls.ColorSpectrumShape)
    @color_spectrum_shape.setter
    @typing.final
    def color_spectrum_shape(self, value: ColorSpectrumShape) -> None: ...
    # Microsoft.UI.Xaml.Controls.ColorSpectrumComponents Microsoft.UI.Xaml.Controls.ColorPicker::get_ColorSpectrumComponents()
    @_property
    def color_spectrum_components(self) -> ColorSpectrumComponents: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_ColorSpectrumComponents(Microsoft.UI.Xaml.Controls.ColorSpectrumComponents)
    @color_spectrum_components.setter
    @typing.final
    def color_spectrum_components(self, value: ColorSpectrumComponents) -> None: ...
    # Windows.UI.Color Microsoft.UI.Xaml.Controls.ColorPicker::get_Color()
    @_property
    def color(self) -> windows_ui.Color: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_Color(Windows.UI.Color)
    @color.setter
    @typing.final
    def color(self, value: typing.Union[windows_ui.Color, typing.Tuple[winrt.system.UInt8, winrt.system.UInt8, winrt.system.UInt8, winrt.system.UInt8]]) -> None: ...
    # Windows.UI.Xaml.Controls.Orientation Microsoft.UI.Xaml.Controls.ColorPicker::get_Orientation()
    @_property
    def orientation(self) -> windows_ui_xaml_controls.Orientation: ...
    # System.Void Microsoft.UI.Xaml.Controls.ColorPicker::put_Orientation(Windows.UI.Xaml.Controls.Orientation)
    @orientation.setter
    @typing.final
    def orientation(self, value: windows_ui_xaml_controls.Orientation) -> None: ...

class CommandBarFlyout_Static(windows_ui_xaml_controls_primitives.FlyoutBase_Static):
    pass

class CommandBarFlyout(windows_ui_xaml_controls_primitives.FlyoutBase, metaclass=CommandBarFlyout_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.Controls.ICommandBarElement> Microsoft.UI.Xaml.Controls.CommandBarFlyout::get_PrimaryCommands()
    @_property
    @typing.final
    def primary_commands(self) -> windows_foundation_collections.IObservableVector[windows_ui_xaml_controls.ICommandBarElement]: ...
    # Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.Controls.ICommandBarElement> Microsoft.UI.Xaml.Controls.CommandBarFlyout::get_SecondaryCommands()
    @_property
    @typing.final
    def secondary_commands(self) -> windows_foundation_collections.IObservableVector[windows_ui_xaml_controls.ICommandBarElement]: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.CommandBarFlyout::get_AlwaysExpanded()
    @_property
    def always_expanded(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.CommandBarFlyout::put_AlwaysExpanded(System.Boolean)
    @always_expanded.setter
    @typing.final
    def always_expanded(self, value: bool) -> None: ...

@typing.final
class CoreWebView2InitializedEventArgs(winrt.system.Object):
    # Windows.Foundation.HResult Microsoft.UI.Xaml.Controls.CoreWebView2InitializedEventArgs::get_Exception()
    @_property
    def exception(self) -> windows_foundation.HResult: ...

class DropDownButton_Static(windows_ui_xaml_controls.Button_Static):
    pass

class DropDownButton(windows_ui_xaml_controls.Button, metaclass=DropDownButton_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

class ElementFactory_Static(windows_ui_xaml.DependencyObject_Static):
    pass

class ElementFactory(windows_ui_xaml.DependencyObject, metaclass=ElementFactory_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.ElementFactory::GetElementCore(Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs)
    def _get_element_core(self, args: ElementFactoryGetArgs, /) -> windows_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.ElementFactory::RecycleElementCore(Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs)
    def _recycle_element_core(self, args: ElementFactoryRecycleArgs, /) -> None: ...

@typing.final
class ElementFactoryGetArgs(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs::get_Parent()
    @_property
    def parent(self) -> windows_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs::put_Parent(Windows.UI.Xaml.UIElement)
    @parent.setter
    def parent(self, value: windows_ui_xaml.UIElement) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs::get_Data()
    @_property
    def data(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs::put_Data(System.Object)
    @data.setter
    def data(self, value: winrt.system.Object) -> None: ...

@typing.final
class ElementFactoryRecycleArgs(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs::get_Parent()
    @_property
    def parent(self) -> windows_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs::put_Parent(Windows.UI.Xaml.UIElement)
    @parent.setter
    def parent(self, value: windows_ui_xaml.UIElement) -> None: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs::get_Element()
    @_property
    def element(self) -> windows_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs::put_Element(Windows.UI.Xaml.UIElement)
    @element.setter
    def element(self, value: windows_ui_xaml.UIElement) -> None: ...

class Expander_Static(windows_ui_xaml_controls.ContentControl_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Expander::get_ExpandDirectionProperty()
    @_property
    @typing.final
    def expand_direction_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Expander::get_HeaderProperty()
    @_property
    @typing.final
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Expander::get_HeaderTemplateProperty()
    @_property
    @typing.final
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Expander::get_HeaderTemplateSelectorProperty()
    @_property
    @typing.final
    def header_template_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Expander::get_IsExpandedProperty()
    @_property
    @typing.final
    def is_expanded_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class Expander(windows_ui_xaml_controls.ContentControl, metaclass=Expander_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Expander::add_Collapsed(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Expander,Microsoft.UI.Xaml.Controls.ExpanderCollapsedEventArgs>)
    def add_collapsed(self, handler: windows_foundation.TypedEventHandler[Expander, ExpanderCollapsedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Expander::remove_Collapsed(Windows.Foundation.EventRegistrationToken)
    def remove_collapsed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Expander::add_Expanding(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Expander,Microsoft.UI.Xaml.Controls.ExpanderExpandingEventArgs>)
    def add_expanding(self, handler: windows_foundation.TypedEventHandler[Expander, ExpanderExpandingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Expander::remove_Expanding(Windows.Foundation.EventRegistrationToken)
    def remove_expanding(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Expander::get_IsExpanded()
    @_property
    def is_expanded(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Expander::put_IsExpanded(System.Boolean)
    @is_expanded.setter
    @typing.final
    def is_expanded(self, value: bool) -> None: ...
    # Windows.UI.Xaml.Controls.DataTemplateSelector Microsoft.UI.Xaml.Controls.Expander::get_HeaderTemplateSelector()
    @_property
    def header_template_selector(self) -> windows_ui_xaml_controls.DataTemplateSelector: ...
    # System.Void Microsoft.UI.Xaml.Controls.Expander::put_HeaderTemplateSelector(Windows.UI.Xaml.Controls.DataTemplateSelector)
    @header_template_selector.setter
    @typing.final
    def header_template_selector(self, value: windows_ui_xaml_controls.DataTemplateSelector) -> None: ...
    # Windows.UI.Xaml.DataTemplate Microsoft.UI.Xaml.Controls.Expander::get_HeaderTemplate()
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    # System.Void Microsoft.UI.Xaml.Controls.Expander::put_HeaderTemplate(Windows.UI.Xaml.DataTemplate)
    @header_template.setter
    @typing.final
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.Expander::get_Header()
    @_property
    def header(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.Expander::put_Header(System.Object)
    @header.setter
    @typing.final
    def header(self, value: winrt.system.Object) -> None: ...
    # Microsoft.UI.Xaml.Controls.ExpandDirection Microsoft.UI.Xaml.Controls.Expander::get_ExpandDirection()
    @_property
    def expand_direction(self) -> ExpandDirection: ...
    # System.Void Microsoft.UI.Xaml.Controls.Expander::put_ExpandDirection(Microsoft.UI.Xaml.Controls.ExpandDirection)
    @expand_direction.setter
    @typing.final
    def expand_direction(self, value: ExpandDirection) -> None: ...
    # Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings Microsoft.UI.Xaml.Controls.Expander::get_TemplateSettings()
    @_property
    @typing.final
    def template_settings(self) -> ExpanderTemplateSettings: ...

@typing.final
class ExpanderCollapsedEventArgs(winrt.system.Object):
    pass

@typing.final
class ExpanderExpandingEventArgs(winrt.system.Object):
    pass

@typing.final
class ExpanderTemplateSettings(windows_ui_xaml.DependencyObject):
    # System.Double Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings::get_ContentHeight()
    @_property
    def content_height(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings::get_NegativeContentHeight()
    @_property
    def negative_content_height(self) -> winrt.system.Double: ...

class FontIconSource_Static(IconSource_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.FontIconSource::get_FontFamilyProperty()
    @_property
    @typing.final
    def font_family_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.FontIconSource::get_FontSizeProperty()
    @_property
    @typing.final
    def font_size_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.FontIconSource::get_FontStyleProperty()
    @_property
    @typing.final
    def font_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.FontIconSource::get_FontWeightProperty()
    @_property
    @typing.final
    def font_weight_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.FontIconSource::get_GlyphProperty()
    @_property
    @typing.final
    def glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.FontIconSource::get_IsTextScaleFactorEnabledProperty()
    @_property
    @typing.final
    def is_text_scale_factor_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.FontIconSource::get_MirroredWhenRightToLeftProperty()
    @_property
    @typing.final
    def mirrored_when_right_to_left_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class FontIconSource(IconSource, metaclass=FontIconSource_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.FontIconSource::get_MirroredWhenRightToLeft()
    @_property
    def mirrored_when_right_to_left(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.FontIconSource::put_MirroredWhenRightToLeft(System.Boolean)
    @mirrored_when_right_to_left.setter
    @typing.final
    def mirrored_when_right_to_left(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.FontIconSource::get_IsTextScaleFactorEnabled()
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.FontIconSource::put_IsTextScaleFactorEnabled(System.Boolean)
    @is_text_scale_factor_enabled.setter
    @typing.final
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.FontIconSource::get_Glyph()
    @_property
    def glyph(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.FontIconSource::put_Glyph(System.String)
    @glyph.setter
    @typing.final
    def glyph(self, value: str) -> None: ...
    # Windows.UI.Text.FontWeight Microsoft.UI.Xaml.Controls.FontIconSource::get_FontWeight()
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    # System.Void Microsoft.UI.Xaml.Controls.FontIconSource::put_FontWeight(Windows.UI.Text.FontWeight)
    @font_weight.setter
    @typing.final
    def font_weight(self, value: typing.Union[windows_ui_text.FontWeight, typing.Tuple[winrt.system.UInt16]]) -> None: ...
    # Windows.UI.Text.FontStyle Microsoft.UI.Xaml.Controls.FontIconSource::get_FontStyle()
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    # System.Void Microsoft.UI.Xaml.Controls.FontIconSource::put_FontStyle(Windows.UI.Text.FontStyle)
    @font_style.setter
    @typing.final
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.FontIconSource::get_FontSize()
    @_property
    def font_size(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.FontIconSource::put_FontSize(System.Double)
    @font_size.setter
    @typing.final
    def font_size(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Media.FontFamily Microsoft.UI.Xaml.Controls.FontIconSource::get_FontFamily()
    @_property
    def font_family(self) -> windows_ui_xaml_media.FontFamily: ...
    # System.Void Microsoft.UI.Xaml.Controls.FontIconSource::put_FontFamily(Windows.UI.Xaml.Media.FontFamily)
    @font_family.setter
    @typing.final
    def font_family(self, value: windows_ui_xaml_media.FontFamily) -> None: ...

class IconSource_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.IconSource::get_ForegroundProperty()
    @_property
    @typing.final
    def foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class IconSource(windows_ui_xaml.DependencyObject, metaclass=IconSource_Static):
    @typing.final
    # Windows.UI.Xaml.Controls.IconElement Microsoft.UI.Xaml.Controls.IconSource::CreateIconElement()
    def create_icon_element(self) -> windows_ui_xaml_controls.IconElement: ...
    # Windows.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.IconSource::get_Foreground()
    @_property
    def foreground(self) -> windows_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.IconSource::put_Foreground(Windows.UI.Xaml.Media.Brush)
    @foreground.setter
    @typing.final
    def foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...

class ImageIcon_Static(windows_ui_xaml_controls.IconElement_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ImageIcon::get_SourceProperty()
    @_property
    @typing.final
    def source_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ImageIcon(windows_ui_xaml_controls.IconElement, metaclass=ImageIcon_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.ImageSource Microsoft.UI.Xaml.Controls.ImageIcon::get_Source()
    @_property
    def source(self) -> windows_ui_xaml_media.ImageSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.ImageIcon::put_Source(Windows.UI.Xaml.Media.ImageSource)
    @source.setter
    @typing.final
    def source(self, value: windows_ui_xaml_media.ImageSource) -> None: ...

class ImageIconSource_Static(IconSource_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ImageIconSource::get_ImageSourceProperty()
    @_property
    @typing.final
    def image_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ImageIconSource(IconSource, metaclass=ImageIconSource_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.ImageSource Microsoft.UI.Xaml.Controls.ImageIconSource::get_ImageSource()
    @_property
    def image_source(self) -> windows_ui_xaml_media.ImageSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.ImageIconSource::put_ImageSource(Windows.UI.Xaml.Media.ImageSource)
    @image_source.setter
    @typing.final
    def image_source(self, value: windows_ui_xaml_media.ImageSource) -> None: ...

class InfoBadge_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBadge::get_IconSourceProperty()
    @_property
    @typing.final
    def icon_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBadge::get_TemplateSettingsProperty()
    @_property
    @typing.final
    def template_settings_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBadge::get_ValueProperty()
    @_property
    @typing.final
    def value_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class InfoBadge(windows_ui_xaml_controls.Control, metaclass=InfoBadge_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.InfoBadge::get_Value()
    @_property
    def value(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBadge::put_Value(System.Int32)
    @value.setter
    @typing.final
    def value(self, value: winrt.system.Int32) -> None: ...
    # Microsoft.UI.Xaml.Controls.IconSource Microsoft.UI.Xaml.Controls.InfoBadge::get_IconSource()
    @_property
    def icon_source(self) -> IconSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBadge::put_IconSource(Microsoft.UI.Xaml.Controls.IconSource)
    @icon_source.setter
    @typing.final
    def icon_source(self, value: IconSource) -> None: ...
    # Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings Microsoft.UI.Xaml.Controls.InfoBadge::get_TemplateSettings()
    @_property
    @typing.final
    def template_settings(self) -> InfoBadgeTemplateSettings: ...

class InfoBadgeTemplateSettings_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings::get_IconElementProperty()
    @_property
    @typing.final
    def icon_element_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings::get_InfoBadgeCornerRadiusProperty()
    @_property
    @typing.final
    def info_badge_corner_radius_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class InfoBadgeTemplateSettings(windows_ui_xaml.DependencyObject, metaclass=InfoBadgeTemplateSettings_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.CornerRadius Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings::get_InfoBadgeCornerRadius()
    @_property
    def info_badge_corner_radius(self) -> windows_ui_xaml.CornerRadius: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings::put_InfoBadgeCornerRadius(Windows.UI.Xaml.CornerRadius)
    @info_badge_corner_radius.setter
    @typing.final
    def info_badge_corner_radius(self, value: typing.Union[windows_ui_xaml.CornerRadius, typing.Tuple[winrt.system.Double, winrt.system.Double, winrt.system.Double, winrt.system.Double]]) -> None: ...
    # Windows.UI.Xaml.Controls.IconElement Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings::get_IconElement()
    @_property
    def icon_element(self) -> windows_ui_xaml_controls.IconElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings::put_IconElement(Windows.UI.Xaml.Controls.IconElement)
    @icon_element.setter
    @typing.final
    def icon_element(self, value: windows_ui_xaml_controls.IconElement) -> None: ...

class InfoBar_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBar::get_ActionButtonProperty()
    @_property
    @typing.final
    def action_button_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBar::get_CloseButtonCommandParameterProperty()
    @_property
    @typing.final
    def close_button_command_parameter_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBar::get_CloseButtonCommandProperty()
    @_property
    @typing.final
    def close_button_command_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBar::get_CloseButtonStyleProperty()
    @_property
    @typing.final
    def close_button_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBar::get_ContentProperty()
    @_property
    @typing.final
    def content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBar::get_ContentTemplateProperty()
    @_property
    @typing.final
    def content_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBar::get_IconSourceProperty()
    @_property
    @typing.final
    def icon_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBar::get_IsClosableProperty()
    @_property
    @typing.final
    def is_closable_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBar::get_IsIconVisibleProperty()
    @_property
    @typing.final
    def is_icon_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBar::get_IsOpenProperty()
    @_property
    @typing.final
    def is_open_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBar::get_MessageProperty()
    @_property
    @typing.final
    def message_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBar::get_SeverityProperty()
    @_property
    @typing.final
    def severity_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBar::get_TemplateSettingsProperty()
    @_property
    @typing.final
    def template_settings_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBar::get_TitleProperty()
    @_property
    @typing.final
    def title_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class InfoBar(windows_ui_xaml_controls.Control, metaclass=InfoBar_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.InfoBar::add_CloseButtonClick(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.InfoBar,System.Object>)
    def add_close_button_click(self, handler: windows_foundation.TypedEventHandler[InfoBar, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::remove_CloseButtonClick(Windows.Foundation.EventRegistrationToken)
    def remove_close_button_click(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.InfoBar::add_Closed(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.InfoBar,Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs>)
    def add_closed(self, handler: windows_foundation.TypedEventHandler[InfoBar, InfoBarClosedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::remove_Closed(Windows.Foundation.EventRegistrationToken)
    def remove_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.InfoBar::add_Closing(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.InfoBar,Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs>)
    def add_closing(self, handler: windows_foundation.TypedEventHandler[InfoBar, InfoBarClosingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::remove_Closing(Windows.Foundation.EventRegistrationToken)
    def remove_closing(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.InfoBar::get_Title()
    @_property
    def title(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::put_Title(System.String)
    @title.setter
    @typing.final
    def title(self, value: str) -> None: ...
    # Microsoft.UI.Xaml.Controls.InfoBarSeverity Microsoft.UI.Xaml.Controls.InfoBar::get_Severity()
    @_property
    def severity(self) -> InfoBarSeverity: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::put_Severity(Microsoft.UI.Xaml.Controls.InfoBarSeverity)
    @severity.setter
    @typing.final
    def severity(self, value: InfoBarSeverity) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.InfoBar::get_Message()
    @_property
    def message(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::put_Message(System.String)
    @message.setter
    @typing.final
    def message(self, value: str) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.InfoBar::get_IsOpen()
    @_property
    def is_open(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::put_IsOpen(System.Boolean)
    @is_open.setter
    @typing.final
    def is_open(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.InfoBar::get_IsIconVisible()
    @_property
    def is_icon_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::put_IsIconVisible(System.Boolean)
    @is_icon_visible.setter
    @typing.final
    def is_icon_visible(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.InfoBar::get_IsClosable()
    @_property
    def is_closable(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::put_IsClosable(System.Boolean)
    @is_closable.setter
    @typing.final
    def is_closable(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.IconSource Microsoft.UI.Xaml.Controls.InfoBar::get_IconSource()
    @_property
    def icon_source(self) -> IconSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::put_IconSource(Microsoft.UI.Xaml.Controls.IconSource)
    @icon_source.setter
    @typing.final
    def icon_source(self, value: IconSource) -> None: ...
    # Windows.UI.Xaml.DataTemplate Microsoft.UI.Xaml.Controls.InfoBar::get_ContentTemplate()
    @_property
    def content_template(self) -> windows_ui_xaml.DataTemplate: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::put_ContentTemplate(Windows.UI.Xaml.DataTemplate)
    @content_template.setter
    @typing.final
    def content_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.InfoBar::get_Content()
    @_property
    def content(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::put_Content(System.Object)
    @content.setter
    @typing.final
    def content(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.Style Microsoft.UI.Xaml.Controls.InfoBar::get_CloseButtonStyle()
    @_property
    def close_button_style(self) -> windows_ui_xaml.Style: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::put_CloseButtonStyle(Windows.UI.Xaml.Style)
    @close_button_style.setter
    @typing.final
    def close_button_style(self, value: windows_ui_xaml.Style) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.InfoBar::get_CloseButtonCommandParameter()
    @_property
    def close_button_command_parameter(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::put_CloseButtonCommandParameter(System.Object)
    @close_button_command_parameter.setter
    @typing.final
    def close_button_command_parameter(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.Input.ICommand Microsoft.UI.Xaml.Controls.InfoBar::get_CloseButtonCommand()
    @_property
    def close_button_command(self) -> windows_ui_xaml_input.ICommand: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::put_CloseButtonCommand(Windows.UI.Xaml.Input.ICommand)
    @close_button_command.setter
    @typing.final
    def close_button_command(self, value: windows_ui_xaml_input.ICommand) -> None: ...
    # Windows.UI.Xaml.Controls.Primitives.ButtonBase Microsoft.UI.Xaml.Controls.InfoBar::get_ActionButton()
    @_property
    def action_button(self) -> windows_ui_xaml_controls_primitives.ButtonBase: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBar::put_ActionButton(Windows.UI.Xaml.Controls.Primitives.ButtonBase)
    @action_button.setter
    @typing.final
    def action_button(self, value: windows_ui_xaml_controls_primitives.ButtonBase) -> None: ...
    # Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings Microsoft.UI.Xaml.Controls.InfoBar::get_TemplateSettings()
    @_property
    @typing.final
    def template_settings(self) -> InfoBarTemplateSettings: ...

class InfoBarClosedEventArgs_Static(winrt._winrt.IInspectable_Static):
    pass

class InfoBarClosedEventArgs(winrt.system.Object, metaclass=InfoBarClosedEventArgs_Static):
    # Microsoft.UI.Xaml.Controls.InfoBarCloseReason Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs::get_Reason()
    @_property
    @typing.final
    def reason(self) -> InfoBarCloseReason: ...

class InfoBarClosingEventArgs_Static(winrt._winrt.IInspectable_Static):
    pass

class InfoBarClosingEventArgs(winrt.system.Object, metaclass=InfoBarClosingEventArgs_Static):
    # System.Boolean Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs::get_Cancel()
    @_property
    def cancel(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs::put_Cancel(System.Boolean)
    @cancel.setter
    @typing.final
    def cancel(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.InfoBarCloseReason Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs::get_Reason()
    @_property
    @typing.final
    def reason(self) -> InfoBarCloseReason: ...

class InfoBarTemplateSettings_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings::get_IconElementProperty()
    @_property
    @typing.final
    def icon_element_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class InfoBarTemplateSettings(windows_ui_xaml.DependencyObject, metaclass=InfoBarTemplateSettings_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Controls.IconElement Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings::get_IconElement()
    @_property
    def icon_element(self) -> windows_ui_xaml_controls.IconElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings::put_IconElement(Windows.UI.Xaml.Controls.IconElement)
    @icon_element.setter
    @typing.final
    def icon_element(self, value: windows_ui_xaml_controls.IconElement) -> None: ...

class ItemsRepeater_Static(windows_ui_xaml.FrameworkElement_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ItemsRepeater::get_BackgroundProperty()
    @_property
    @typing.final
    def background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ItemsRepeater::get_HorizontalCacheLengthProperty()
    @_property
    @typing.final
    def horizontal_cache_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ItemsRepeater::get_ItemTemplateProperty()
    @_property
    @typing.final
    def item_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ItemsRepeater::get_ItemsSourceProperty()
    @_property
    @typing.final
    def items_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ItemsRepeater::get_LayoutProperty()
    @_property
    @typing.final
    def layout_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ItemsRepeater::get_VerticalCacheLengthProperty()
    @_property
    @typing.final
    def vertical_cache_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ItemsRepeater(windows_ui_xaml.FrameworkElement, metaclass=ItemsRepeater_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # System.Int32 Microsoft.UI.Xaml.Controls.ItemsRepeater::GetElementIndex(Windows.UI.Xaml.UIElement)
    def get_element_index(self, element: windows_ui_xaml.UIElement, /) -> winrt.system.Int32: ...
    @typing.final
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.ItemsRepeater::GetOrCreateElement(System.Int32)
    def get_or_create_element(self, index: winrt.system.Int32, /) -> windows_ui_xaml.UIElement: ...
    @typing.final
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.ItemsRepeater::TryGetElement(System.Int32)
    def try_get_element(self, index: winrt.system.Int32, /) -> windows_ui_xaml.UIElement: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.ItemsRepeater::add_ElementClearing(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ItemsRepeater,Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs>)
    def add_element_clearing(self, handler: windows_foundation.TypedEventHandler[ItemsRepeater, ItemsRepeaterElementClearingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.ItemsRepeater::remove_ElementClearing(Windows.Foundation.EventRegistrationToken)
    def remove_element_clearing(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.ItemsRepeater::add_ElementIndexChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ItemsRepeater,Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs>)
    def add_element_index_changed(self, handler: windows_foundation.TypedEventHandler[ItemsRepeater, ItemsRepeaterElementIndexChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.ItemsRepeater::remove_ElementIndexChanged(Windows.Foundation.EventRegistrationToken)
    def remove_element_index_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.ItemsRepeater::add_ElementPrepared(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ItemsRepeater,Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs>)
    def add_element_prepared(self, handler: windows_foundation.TypedEventHandler[ItemsRepeater, ItemsRepeaterElementPreparedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.ItemsRepeater::remove_ElementPrepared(Windows.Foundation.EventRegistrationToken)
    def remove_element_prepared(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.ItemsRepeater::get_VerticalCacheLength()
    @_property
    def vertical_cache_length(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ItemsRepeater::put_VerticalCacheLength(System.Double)
    @vertical_cache_length.setter
    @typing.final
    def vertical_cache_length(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Controls.Layout Microsoft.UI.Xaml.Controls.ItemsRepeater::get_Layout()
    @_property
    def layout(self) -> Layout: ...
    # System.Void Microsoft.UI.Xaml.Controls.ItemsRepeater::put_Layout(Microsoft.UI.Xaml.Controls.Layout)
    @layout.setter
    @typing.final
    def layout(self, value: Layout) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.ItemsRepeater::get_ItemsSource()
    @_property
    def items_source(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.ItemsRepeater::put_ItemsSource(System.Object)
    @items_source.setter
    @typing.final
    def items_source(self, value: winrt.system.Object) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.ItemsRepeater::get_ItemTemplate()
    @_property
    def item_template(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.ItemsRepeater::put_ItemTemplate(System.Object)
    @item_template.setter
    @typing.final
    def item_template(self, value: winrt.system.Object) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.ItemsRepeater::get_HorizontalCacheLength()
    @_property
    def horizontal_cache_length(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ItemsRepeater::put_HorizontalCacheLength(System.Double)
    @horizontal_cache_length.setter
    @typing.final
    def horizontal_cache_length(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.ItemsRepeater::get_Background()
    @_property
    def background(self) -> windows_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.ItemsRepeater::put_Background(Windows.UI.Xaml.Media.Brush)
    @background.setter
    @typing.final
    def background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Controls.ItemsSourceView Microsoft.UI.Xaml.Controls.ItemsRepeater::get_ItemsSourceView()
    @_property
    @typing.final
    def items_source_view(self) -> ItemsSourceView: ...

@typing.final
class ItemsRepeaterElementClearingEventArgs(winrt.system.Object):
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs::get_Element()
    @_property
    def element(self) -> windows_ui_xaml.UIElement: ...

@typing.final
class ItemsRepeaterElementIndexChangedEventArgs(winrt.system.Object):
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs::get_Element()
    @_property
    def element(self) -> windows_ui_xaml.UIElement: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs::get_NewIndex()
    @_property
    def new_index(self) -> winrt.system.Int32: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs::get_OldIndex()
    @_property
    def old_index(self) -> winrt.system.Int32: ...

@typing.final
class ItemsRepeaterElementPreparedEventArgs(winrt.system.Object):
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs::get_Element()
    @_property
    def element(self) -> windows_ui_xaml.UIElement: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs::get_Index()
    @_property
    def index(self) -> winrt.system.Int32: ...

@typing.final
class ItemsRepeaterScrollHost(windows_ui_xaml.FrameworkElement):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost::get_VerticalAnchorRatio()
    @_property
    def vertical_anchor_ratio(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost::put_VerticalAnchorRatio(System.Double)
    @vertical_anchor_ratio.setter
    def vertical_anchor_ratio(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Controls.ScrollViewer Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost::get_ScrollViewer()
    @_property
    def scroll_viewer(self) -> windows_ui_xaml_controls.ScrollViewer: ...
    # System.Void Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost::put_ScrollViewer(Windows.UI.Xaml.Controls.ScrollViewer)
    @scroll_viewer.setter
    def scroll_viewer(self, value: windows_ui_xaml_controls.ScrollViewer) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost::get_HorizontalAnchorRatio()
    @_property
    def horizontal_anchor_ratio(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost::put_HorizontalAnchorRatio(System.Double)
    @horizontal_anchor_ratio.setter
    def horizontal_anchor_ratio(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost::get_CurrentAnchor()
    @_property
    def current_anchor(self) -> windows_ui_xaml.UIElement: ...

class ItemsSourceView_Static(winrt._winrt.IInspectable_Static):
    pass

class ItemsSourceView(winrt.system.Object, windows_ui_xaml_interop.INotifyCollectionChanged, metaclass=ItemsSourceView_Static):
    def __new__(cls: typing.Type[Self], source: winrt.system.Object) -> Self: ...
    @typing.final
    # System.Object Microsoft.UI.Xaml.Controls.ItemsSourceView::GetAt(System.Int32)
    def get_at(self, index: winrt.system.Int32, /) -> winrt.system.Object: ...
    @typing.final
    # System.Int32 Microsoft.UI.Xaml.Controls.ItemsSourceView::IndexFromKey(System.String)
    def index_from_key(self, key: str, /) -> winrt.system.Int32: ...
    @typing.final
    # System.Int32 Microsoft.UI.Xaml.Controls.ItemsSourceView::IndexOf(System.Object)
    def index_of(self, item: winrt.system.Object, /) -> winrt.system.Int32: ...
    @typing.final
    # System.String Microsoft.UI.Xaml.Controls.ItemsSourceView::KeyFromIndex(System.Int32)
    def key_from_index(self, index: winrt.system.Int32, /) -> str: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.ItemsSourceView::add_CollectionChanged(Windows.UI.Xaml.Interop.NotifyCollectionChangedEventHandler)
    def add_collection_changed(self, handler: windows_ui_xaml_interop.NotifyCollectionChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.ItemsSourceView::remove_CollectionChanged(Windows.Foundation.EventRegistrationToken)
    def remove_collection_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.ItemsSourceView::get_Count()
    @_property
    @typing.final
    def count(self) -> winrt.system.Int32: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ItemsSourceView::get_HasKeyIndexMapping()
    @_property
    @typing.final
    def has_key_index_mapping(self) -> bool: ...

class Layout_Static(windows_ui_xaml.DependencyObject_Static):
    pass

class Layout(windows_ui_xaml.DependencyObject, metaclass=Layout_Static):
    @typing.final
    # Windows.Foundation.Size Microsoft.UI.Xaml.Controls.Layout::Arrange(Microsoft.UI.Xaml.Controls.LayoutContext,Windows.Foundation.Size)
    def arrange(self, context: LayoutContext, final_size: typing.Union[windows_foundation.Size, typing.Tuple[winrt.system.Single, winrt.system.Single]], /) -> windows_foundation.Size: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Layout::InitializeForContext(Microsoft.UI.Xaml.Controls.LayoutContext)
    def initialize_for_context(self, context: LayoutContext, /) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Layout::InvalidateArrange()
    def _invalidate_arrange(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Layout::InvalidateMeasure()
    def _invalidate_measure(self) -> None: ...
    @typing.final
    # Windows.Foundation.Size Microsoft.UI.Xaml.Controls.Layout::Measure(Microsoft.UI.Xaml.Controls.LayoutContext,Windows.Foundation.Size)
    def measure(self, context: LayoutContext, available_size: typing.Union[windows_foundation.Size, typing.Tuple[winrt.system.Single, winrt.system.Single]], /) -> windows_foundation.Size: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Layout::UninitializeForContext(Microsoft.UI.Xaml.Controls.LayoutContext)
    def uninitialize_for_context(self, context: LayoutContext, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Layout::add_ArrangeInvalidated(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Layout,System.Object>)
    def add_arrange_invalidated(self, handler: windows_foundation.TypedEventHandler[Layout, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Layout::remove_ArrangeInvalidated(Windows.Foundation.EventRegistrationToken)
    def remove_arrange_invalidated(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Layout::add_MeasureInvalidated(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Layout,System.Object>)
    def add_measure_invalidated(self, handler: windows_foundation.TypedEventHandler[Layout, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Layout::remove_MeasureInvalidated(Windows.Foundation.EventRegistrationToken)
    def remove_measure_invalidated(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...

class LayoutContext_Static(windows_ui_xaml.DependencyObject_Static):
    pass

class LayoutContext(windows_ui_xaml.DependencyObject, metaclass=LayoutContext_Static):
    # System.Object Microsoft.UI.Xaml.Controls.LayoutContext::get_LayoutState()
    @_property
    def layout_state(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.LayoutContext::put_LayoutState(System.Object)
    @layout_state.setter
    @typing.final
    def layout_state(self, value: winrt.system.Object) -> None: ...

class MenuBar_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.MenuBar::get_ItemsProperty()
    @_property
    @typing.final
    def items_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class MenuBar(windows_ui_xaml_controls.Control, metaclass=MenuBar_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.MenuBarItem> Microsoft.UI.Xaml.Controls.MenuBar::get_Items()
    @_property
    @typing.final
    def items(self) -> typing.MutableSequence[MenuBarItem]: ...

class MenuBarItem_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.MenuBarItem::get_ItemsProperty()
    @_property
    @typing.final
    def items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.MenuBarItem::get_TitleProperty()
    @_property
    @typing.final
    def title_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class MenuBarItem(windows_ui_xaml_controls.Control, metaclass=MenuBarItem_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Microsoft.UI.Xaml.Controls.MenuBarItem::get_Title()
    @_property
    def title(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.MenuBarItem::put_Title(System.String)
    @title.setter
    @typing.final
    def title(self, value: str) -> None: ...
    # Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.MenuFlyoutItemBase> Microsoft.UI.Xaml.Controls.MenuBarItem::get_Items()
    @_property
    @typing.final
    def items(self) -> typing.MutableSequence[windows_ui_xaml_controls.MenuFlyoutItemBase]: ...

class MenuBarItemFlyout_Static(windows_ui_xaml_controls.MenuFlyout_Static):
    pass

class MenuBarItemFlyout(windows_ui_xaml_controls.MenuFlyout, metaclass=MenuBarItemFlyout_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

class NavigationView_Static(windows_ui_xaml_controls.ContentControl_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_FooterMenuItemsProperty()
    @_property
    @typing.final
    def footer_menu_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_IsTitleBarAutoPaddingEnabledProperty()
    @_property
    @typing.final
    def is_title_bar_auto_padding_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_MenuItemContainerStyleProperty()
    @_property
    @typing.final
    def menu_item_container_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_MenuItemContainerStyleSelectorProperty()
    @_property
    @typing.final
    def menu_item_container_style_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_MenuItemTemplateProperty()
    @_property
    @typing.final
    def menu_item_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_MenuItemTemplateSelectorProperty()
    @_property
    @typing.final
    def menu_item_template_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_MenuItemsProperty()
    @_property
    @typing.final
    def menu_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_MenuItemsSourceProperty()
    @_property
    @typing.final
    def menu_items_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_OpenPaneLengthProperty()
    @_property
    @typing.final
    def open_pane_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_PaneFooterProperty()
    @_property
    @typing.final
    def pane_footer_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_PaneToggleButtonStyleProperty()
    @_property
    @typing.final
    def pane_toggle_button_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_SelectedItemProperty()
    @_property
    @typing.final
    def selected_item_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_AlwaysShowHeaderProperty()
    @_property
    @typing.final
    def always_show_header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_AutoSuggestBoxProperty()
    @_property
    @typing.final
    def auto_suggest_box_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_CompactModeThresholdWidthProperty()
    @_property
    @typing.final
    def compact_mode_threshold_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_CompactPaneLengthProperty()
    @_property
    @typing.final
    def compact_pane_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_DisplayModeProperty()
    @_property
    @typing.final
    def display_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_ExpandedModeThresholdWidthProperty()
    @_property
    @typing.final
    def expanded_mode_threshold_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_SettingsItemProperty()
    @_property
    @typing.final
    def settings_item_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_FooterMenuItemsSourceProperty()
    @_property
    @typing.final
    def footer_menu_items_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_HeaderProperty()
    @_property
    @typing.final
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_HeaderTemplateProperty()
    @_property
    @typing.final
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_IsPaneOpenProperty()
    @_property
    @typing.final
    def is_pane_open_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_IsPaneToggleButtonVisibleProperty()
    @_property
    @typing.final
    def is_pane_toggle_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_IsSettingsVisibleProperty()
    @_property
    @typing.final
    def is_settings_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_IsBackButtonVisibleProperty()
    @_property
    @typing.final
    def is_back_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_IsBackEnabledProperty()
    @_property
    @typing.final
    def is_back_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_IsPaneVisibleProperty()
    @_property
    @typing.final
    def is_pane_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_OverflowLabelModeProperty()
    @_property
    @typing.final
    def overflow_label_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_PaneCustomContentProperty()
    @_property
    @typing.final
    def pane_custom_content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_PaneDisplayModeProperty()
    @_property
    @typing.final
    def pane_display_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_PaneHeaderProperty()
    @_property
    @typing.final
    def pane_header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_PaneTitleProperty()
    @_property
    @typing.final
    def pane_title_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_SelectionFollowsFocusProperty()
    @_property
    @typing.final
    def selection_follows_focus_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_ShoulderNavigationEnabledProperty()
    @_property
    @typing.final
    def shoulder_navigation_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_TemplateSettingsProperty()
    @_property
    @typing.final
    def template_settings_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationView::get_ContentOverlayProperty()
    @_property
    @typing.final
    def content_overlay_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class NavigationView(windows_ui_xaml_controls.ContentControl, metaclass=NavigationView_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::Collapse(Microsoft.UI.Xaml.Controls.NavigationViewItem)
    def collapse(self, item: NavigationViewItem, /) -> None: ...
    @typing.final
    # Windows.UI.Xaml.DependencyObject Microsoft.UI.Xaml.Controls.NavigationView::ContainerFromMenuItem(System.Object)
    def container_from_menu_item(self, item: winrt.system.Object, /) -> windows_ui_xaml.DependencyObject: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::Expand(Microsoft.UI.Xaml.Controls.NavigationViewItem)
    def expand(self, item: NavigationViewItem, /) -> None: ...
    @typing.final
    # System.Object Microsoft.UI.Xaml.Controls.NavigationView::MenuItemFromContainer(Windows.UI.Xaml.DependencyObject)
    def menu_item_from_container(self, container: windows_ui_xaml.DependencyObject, /) -> winrt.system.Object: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.NavigationView::add_DisplayModeChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.NavigationView,Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs>)
    def add_display_mode_changed(self, handler: windows_foundation.TypedEventHandler[NavigationView, NavigationViewDisplayModeChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::remove_DisplayModeChanged(Windows.Foundation.EventRegistrationToken)
    def remove_display_mode_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.NavigationView::add_ItemInvoked(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.NavigationView,Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs>)
    def add_item_invoked(self, handler: windows_foundation.TypedEventHandler[NavigationView, NavigationViewItemInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::remove_ItemInvoked(Windows.Foundation.EventRegistrationToken)
    def remove_item_invoked(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.NavigationView::add_SelectionChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.NavigationView,Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs>)
    def add_selection_changed(self, handler: windows_foundation.TypedEventHandler[NavigationView, NavigationViewSelectionChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::remove_SelectionChanged(Windows.Foundation.EventRegistrationToken)
    def remove_selection_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.NavigationView::add_BackRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.NavigationView,Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs>)
    def add_back_requested(self, handler: windows_foundation.TypedEventHandler[NavigationView, NavigationViewBackRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::remove_BackRequested(Windows.Foundation.EventRegistrationToken)
    def remove_back_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.NavigationView::add_Collapsed(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.NavigationView,Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs>)
    def add_collapsed(self, handler: windows_foundation.TypedEventHandler[NavigationView, NavigationViewItemCollapsedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::remove_Collapsed(Windows.Foundation.EventRegistrationToken)
    def remove_collapsed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.NavigationView::add_Expanding(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.NavigationView,Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs>)
    def add_expanding(self, handler: windows_foundation.TypedEventHandler[NavigationView, NavigationViewItemExpandingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::remove_Expanding(Windows.Foundation.EventRegistrationToken)
    def remove_expanding(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.NavigationView::add_PaneClosed(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.NavigationView,System.Object>)
    def add_pane_closed(self, handler: windows_foundation.TypedEventHandler[NavigationView, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::remove_PaneClosed(Windows.Foundation.EventRegistrationToken)
    def remove_pane_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.NavigationView::add_PaneClosing(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.NavigationView,Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs>)
    def add_pane_closing(self, handler: windows_foundation.TypedEventHandler[NavigationView, NavigationViewPaneClosingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::remove_PaneClosing(Windows.Foundation.EventRegistrationToken)
    def remove_pane_closing(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.NavigationView::add_PaneOpened(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.NavigationView,System.Object>)
    def add_pane_opened(self, handler: windows_foundation.TypedEventHandler[NavigationView, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::remove_PaneOpened(Windows.Foundation.EventRegistrationToken)
    def remove_pane_opened(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.NavigationView::add_PaneOpening(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.NavigationView,System.Object>)
    def add_pane_opening(self, handler: windows_foundation.TypedEventHandler[NavigationView, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::remove_PaneOpening(Windows.Foundation.EventRegistrationToken)
    def remove_pane_opening(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.NavigationView::get_SelectedItem()
    @_property
    def selected_item(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_SelectedItem(System.Object)
    @selected_item.setter
    @typing.final
    def selected_item(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.Style Microsoft.UI.Xaml.Controls.NavigationView::get_PaneToggleButtonStyle()
    @_property
    def pane_toggle_button_style(self) -> windows_ui_xaml.Style: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_PaneToggleButtonStyle(Windows.UI.Xaml.Style)
    @pane_toggle_button_style.setter
    @typing.final
    def pane_toggle_button_style(self, value: windows_ui_xaml.Style) -> None: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.NavigationView::get_PaneFooter()
    @_property
    def pane_footer(self) -> windows_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_PaneFooter(Windows.UI.Xaml.UIElement)
    @pane_footer.setter
    @typing.final
    def pane_footer(self, value: windows_ui_xaml.UIElement) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.NavigationView::get_OpenPaneLength()
    @_property
    def open_pane_length(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_OpenPaneLength(System.Double)
    @open_pane_length.setter
    @typing.final
    def open_pane_length(self, value: winrt.system.Double) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.NavigationView::get_MenuItemsSource()
    @_property
    def menu_items_source(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_MenuItemsSource(System.Object)
    @menu_items_source.setter
    @typing.final
    def menu_items_source(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.Controls.StyleSelector Microsoft.UI.Xaml.Controls.NavigationView::get_MenuItemContainerStyleSelector()
    @_property
    def menu_item_container_style_selector(self) -> windows_ui_xaml_controls.StyleSelector: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_MenuItemContainerStyleSelector(Windows.UI.Xaml.Controls.StyleSelector)
    @menu_item_container_style_selector.setter
    @typing.final
    def menu_item_container_style_selector(self, value: windows_ui_xaml_controls.StyleSelector) -> None: ...
    # Windows.UI.Xaml.Style Microsoft.UI.Xaml.Controls.NavigationView::get_MenuItemContainerStyle()
    @_property
    def menu_item_container_style(self) -> windows_ui_xaml.Style: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_MenuItemContainerStyle(Windows.UI.Xaml.Style)
    @menu_item_container_style.setter
    @typing.final
    def menu_item_container_style(self, value: windows_ui_xaml.Style) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationView::get_IsTitleBarAutoPaddingEnabled()
    @_property
    def is_title_bar_auto_padding_enabled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_IsTitleBarAutoPaddingEnabled(System.Boolean)
    @is_title_bar_auto_padding_enabled.setter
    @typing.final
    def is_title_bar_auto_padding_enabled(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationView::get_IsSettingsVisible()
    @_property
    def is_settings_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_IsSettingsVisible(System.Boolean)
    @is_settings_visible.setter
    @typing.final
    def is_settings_visible(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationView::get_IsPaneToggleButtonVisible()
    @_property
    def is_pane_toggle_button_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_IsPaneToggleButtonVisible(System.Boolean)
    @is_pane_toggle_button_visible.setter
    @typing.final
    def is_pane_toggle_button_visible(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationView::get_IsPaneOpen()
    @_property
    def is_pane_open(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_IsPaneOpen(System.Boolean)
    @is_pane_open.setter
    @typing.final
    def is_pane_open(self, value: bool) -> None: ...
    # Windows.UI.Xaml.DataTemplate Microsoft.UI.Xaml.Controls.NavigationView::get_HeaderTemplate()
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_HeaderTemplate(Windows.UI.Xaml.DataTemplate)
    @header_template.setter
    @typing.final
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.NavigationView::get_Header()
    @_property
    def header(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_Header(System.Object)
    @header.setter
    @typing.final
    def header(self, value: winrt.system.Object) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.NavigationView::get_FooterMenuItemsSource()
    @_property
    def footer_menu_items_source(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_FooterMenuItemsSource(System.Object)
    @footer_menu_items_source.setter
    @typing.final
    def footer_menu_items_source(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.Controls.DataTemplateSelector Microsoft.UI.Xaml.Controls.NavigationView::get_MenuItemTemplateSelector()
    @_property
    def menu_item_template_selector(self) -> windows_ui_xaml_controls.DataTemplateSelector: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_MenuItemTemplateSelector(Windows.UI.Xaml.Controls.DataTemplateSelector)
    @menu_item_template_selector.setter
    @typing.final
    def menu_item_template_selector(self, value: windows_ui_xaml_controls.DataTemplateSelector) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.NavigationView::get_ExpandedModeThresholdWidth()
    @_property
    def expanded_mode_threshold_width(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_ExpandedModeThresholdWidth(System.Double)
    @expanded_mode_threshold_width.setter
    @typing.final
    def expanded_mode_threshold_width(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.DataTemplate Microsoft.UI.Xaml.Controls.NavigationView::get_MenuItemTemplate()
    @_property
    def menu_item_template(self) -> windows_ui_xaml.DataTemplate: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_MenuItemTemplate(Windows.UI.Xaml.DataTemplate)
    @menu_item_template.setter
    @typing.final
    def menu_item_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.NavigationView::get_CompactPaneLength()
    @_property
    def compact_pane_length(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_CompactPaneLength(System.Double)
    @compact_pane_length.setter
    @typing.final
    def compact_pane_length(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.NavigationView::get_CompactModeThresholdWidth()
    @_property
    def compact_mode_threshold_width(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_CompactModeThresholdWidth(System.Double)
    @compact_mode_threshold_width.setter
    @typing.final
    def compact_mode_threshold_width(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Controls.AutoSuggestBox Microsoft.UI.Xaml.Controls.NavigationView::get_AutoSuggestBox()
    @_property
    def auto_suggest_box(self) -> windows_ui_xaml_controls.AutoSuggestBox: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_AutoSuggestBox(Windows.UI.Xaml.Controls.AutoSuggestBox)
    @auto_suggest_box.setter
    @typing.final
    def auto_suggest_box(self, value: windows_ui_xaml_controls.AutoSuggestBox) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationView::get_AlwaysShowHeader()
    @_property
    def always_show_header(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_AlwaysShowHeader(System.Boolean)
    @always_show_header.setter
    @typing.final
    def always_show_header(self, value: bool) -> None: ...
    # Windows.Foundation.Collections.IVector`1<System.Object> Microsoft.UI.Xaml.Controls.NavigationView::get_MenuItems()
    @_property
    @typing.final
    def menu_items(self) -> typing.MutableSequence[winrt.system.Object]: ...
    # Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode Microsoft.UI.Xaml.Controls.NavigationView::get_DisplayMode()
    @_property
    @typing.final
    def display_mode(self) -> NavigationViewDisplayMode: ...
    # Windows.Foundation.Collections.IVector`1<System.Object> Microsoft.UI.Xaml.Controls.NavigationView::get_FooterMenuItems()
    @_property
    @typing.final
    def footer_menu_items(self) -> typing.MutableSequence[winrt.system.Object]: ...
    # System.Object Microsoft.UI.Xaml.Controls.NavigationView::get_SettingsItem()
    @_property
    @typing.final
    def settings_item(self) -> winrt.system.Object: ...
    # Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled Microsoft.UI.Xaml.Controls.NavigationView::get_ShoulderNavigationEnabled()
    @_property
    def shoulder_navigation_enabled(self) -> NavigationViewShoulderNavigationEnabled: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_ShoulderNavigationEnabled(Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled)
    @shoulder_navigation_enabled.setter
    @typing.final
    def shoulder_navigation_enabled(self, value: NavigationViewShoulderNavigationEnabled) -> None: ...
    # Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus Microsoft.UI.Xaml.Controls.NavigationView::get_SelectionFollowsFocus()
    @_property
    def selection_follows_focus(self) -> NavigationViewSelectionFollowsFocus: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_SelectionFollowsFocus(Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus)
    @selection_follows_focus.setter
    @typing.final
    def selection_follows_focus(self, value: NavigationViewSelectionFollowsFocus) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.NavigationView::get_PaneTitle()
    @_property
    def pane_title(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_PaneTitle(System.String)
    @pane_title.setter
    @typing.final
    def pane_title(self, value: str) -> None: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.NavigationView::get_PaneHeader()
    @_property
    def pane_header(self) -> windows_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_PaneHeader(Windows.UI.Xaml.UIElement)
    @pane_header.setter
    @typing.final
    def pane_header(self, value: windows_ui_xaml.UIElement) -> None: ...
    # Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode Microsoft.UI.Xaml.Controls.NavigationView::get_PaneDisplayMode()
    @_property
    def pane_display_mode(self) -> NavigationViewPaneDisplayMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_PaneDisplayMode(Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode)
    @pane_display_mode.setter
    @typing.final
    def pane_display_mode(self, value: NavigationViewPaneDisplayMode) -> None: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.NavigationView::get_PaneCustomContent()
    @_property
    def pane_custom_content(self) -> windows_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_PaneCustomContent(Windows.UI.Xaml.UIElement)
    @pane_custom_content.setter
    @typing.final
    def pane_custom_content(self, value: windows_ui_xaml.UIElement) -> None: ...
    # Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode Microsoft.UI.Xaml.Controls.NavigationView::get_OverflowLabelMode()
    @_property
    def overflow_label_mode(self) -> NavigationViewOverflowLabelMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_OverflowLabelMode(Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode)
    @overflow_label_mode.setter
    @typing.final
    def overflow_label_mode(self, value: NavigationViewOverflowLabelMode) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationView::get_IsPaneVisible()
    @_property
    def is_pane_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_IsPaneVisible(System.Boolean)
    @is_pane_visible.setter
    @typing.final
    def is_pane_visible(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationView::get_IsBackEnabled()
    @_property
    def is_back_enabled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_IsBackEnabled(System.Boolean)
    @is_back_enabled.setter
    @typing.final
    def is_back_enabled(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible Microsoft.UI.Xaml.Controls.NavigationView::get_IsBackButtonVisible()
    @_property
    def is_back_button_visible(self) -> NavigationViewBackButtonVisible: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_IsBackButtonVisible(Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible)
    @is_back_button_visible.setter
    @typing.final
    def is_back_button_visible(self, value: NavigationViewBackButtonVisible) -> None: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.NavigationView::get_ContentOverlay()
    @_property
    def content_overlay(self) -> windows_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationView::put_ContentOverlay(Windows.UI.Xaml.UIElement)
    @content_overlay.setter
    @typing.final
    def content_overlay(self, value: windows_ui_xaml.UIElement) -> None: ...
    # Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings Microsoft.UI.Xaml.Controls.NavigationView::get_TemplateSettings()
    @_property
    @typing.final
    def template_settings(self) -> NavigationViewTemplateSettings: ...

@typing.final
class NavigationViewBackRequestedEventArgs(winrt.system.Object):
    pass

@typing.final
class NavigationViewDisplayModeChangedEventArgs(winrt.system.Object):
    # Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs::get_DisplayMode()
    @_property
    def display_mode(self) -> NavigationViewDisplayMode: ...

class NavigationViewItem_Static(NavigationViewItemBase_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewItem::get_CompactPaneLengthProperty()
    @_property
    @typing.final
    def compact_pane_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewItem::get_IconProperty()
    @_property
    @typing.final
    def icon_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewItem::get_HasUnrealizedChildrenProperty()
    @_property
    @typing.final
    def has_unrealized_children_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewItem::get_IsChildSelectedProperty()
    @_property
    @typing.final
    def is_child_selected_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewItem::get_IsExpandedProperty()
    @_property
    @typing.final
    def is_expanded_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewItem::get_MenuItemsProperty()
    @_property
    @typing.final
    def menu_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewItem::get_MenuItemsSourceProperty()
    @_property
    @typing.final
    def menu_items_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewItem::get_SelectsOnInvokedProperty()
    @_property
    @typing.final
    def selects_on_invoked_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewItem::get_InfoBadgeProperty()
    @_property
    @typing.final
    def info_badge_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class NavigationViewItem(NavigationViewItemBase, metaclass=NavigationViewItem_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Controls.IconElement Microsoft.UI.Xaml.Controls.NavigationViewItem::get_Icon()
    @_property
    def icon(self) -> windows_ui_xaml_controls.IconElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationViewItem::put_Icon(Windows.UI.Xaml.Controls.IconElement)
    @icon.setter
    @typing.final
    def icon(self, value: windows_ui_xaml_controls.IconElement) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.NavigationViewItem::get_CompactPaneLength()
    @_property
    @typing.final
    def compact_pane_length(self) -> winrt.system.Double: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationViewItem::get_SelectsOnInvoked()
    @_property
    def selects_on_invoked(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationViewItem::put_SelectsOnInvoked(System.Boolean)
    @selects_on_invoked.setter
    @typing.final
    def selects_on_invoked(self, value: bool) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.NavigationViewItem::get_MenuItemsSource()
    @_property
    def menu_items_source(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationViewItem::put_MenuItemsSource(System.Object)
    @menu_items_source.setter
    @typing.final
    def menu_items_source(self, value: winrt.system.Object) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationViewItem::get_IsExpanded()
    @_property
    def is_expanded(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationViewItem::put_IsExpanded(System.Boolean)
    @is_expanded.setter
    @typing.final
    def is_expanded(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationViewItem::get_IsChildSelected()
    @_property
    def is_child_selected(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationViewItem::put_IsChildSelected(System.Boolean)
    @is_child_selected.setter
    @typing.final
    def is_child_selected(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationViewItem::get_HasUnrealizedChildren()
    @_property
    def has_unrealized_children(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationViewItem::put_HasUnrealizedChildren(System.Boolean)
    @has_unrealized_children.setter
    @typing.final
    def has_unrealized_children(self, value: bool) -> None: ...
    # Windows.Foundation.Collections.IVector`1<System.Object> Microsoft.UI.Xaml.Controls.NavigationViewItem::get_MenuItems()
    @_property
    @typing.final
    def menu_items(self) -> typing.MutableSequence[winrt.system.Object]: ...
    # Microsoft.UI.Xaml.Controls.InfoBadge Microsoft.UI.Xaml.Controls.NavigationViewItem::get_InfoBadge()
    @_property
    def info_badge(self) -> InfoBadge: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationViewItem::put_InfoBadge(Microsoft.UI.Xaml.Controls.InfoBadge)
    @info_badge.setter
    @typing.final
    def info_badge(self, value: InfoBadge) -> None: ...

class NavigationViewItemBase_Static(windows_ui_xaml_controls.ContentControl_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewItemBase::get_IsSelectedProperty()
    @_property
    @typing.final
    def is_selected_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class NavigationViewItemBase(windows_ui_xaml_controls.ContentControl, metaclass=NavigationViewItemBase_Static):
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationViewItemBase::get_IsSelected()
    @_property
    def is_selected(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationViewItemBase::put_IsSelected(System.Boolean)
    @is_selected.setter
    @typing.final
    def is_selected(self, value: bool) -> None: ...

@typing.final
class NavigationViewItemCollapsedEventArgs(winrt.system.Object):
    # System.Object Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs::get_CollapsedItem()
    @_property
    def collapsed_item(self) -> winrt.system.Object: ...
    # Microsoft.UI.Xaml.Controls.NavigationViewItemBase Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs::get_CollapsedItemContainer()
    @_property
    def collapsed_item_container(self) -> NavigationViewItemBase: ...

@typing.final
class NavigationViewItemExpandingEventArgs(winrt.system.Object):
    # System.Object Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs::get_ExpandingItem()
    @_property
    def expanding_item(self) -> winrt.system.Object: ...
    # Microsoft.UI.Xaml.Controls.NavigationViewItemBase Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs::get_ExpandingItemContainer()
    @_property
    def expanding_item_container(self) -> NavigationViewItemBase: ...

class NavigationViewItemHeader_Static(NavigationViewItemBase_Static):
    pass

class NavigationViewItemHeader(NavigationViewItemBase, metaclass=NavigationViewItemHeader_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class NavigationViewItemInvokedEventArgs(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Object Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs::get_InvokedItem()
    @_property
    def invoked_item(self) -> winrt.system.Object: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs::get_IsSettingsInvoked()
    @_property
    def is_settings_invoked(self) -> bool: ...
    # Microsoft.UI.Xaml.Controls.NavigationViewItemBase Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs::get_InvokedItemContainer()
    @_property
    def invoked_item_container(self) -> NavigationViewItemBase: ...
    # Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs::get_RecommendedNavigationTransitionInfo()
    @_property
    def recommended_navigation_transition_info(self) -> windows_ui_xaml_media_animation.NavigationTransitionInfo: ...

class NavigationViewItemSeparator_Static(NavigationViewItemBase_Static):
    pass

class NavigationViewItemSeparator(NavigationViewItemBase, metaclass=NavigationViewItemSeparator_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class NavigationViewPaneClosingEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs::get_Cancel()
    @_property
    def cancel(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs::put_Cancel(System.Boolean)
    @cancel.setter
    def cancel(self, value: bool) -> None: ...

@typing.final
class NavigationViewSelectionChangedEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs::get_IsSettingsSelected()
    @_property
    def is_settings_selected(self) -> bool: ...
    # System.Object Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs::get_SelectedItem()
    @_property
    def selected_item(self) -> winrt.system.Object: ...
    # Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs::get_RecommendedNavigationTransitionInfo()
    @_property
    def recommended_navigation_transition_info(self) -> windows_ui_xaml_media_animation.NavigationTransitionInfo: ...
    # Microsoft.UI.Xaml.Controls.NavigationViewItemBase Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs::get_SelectedItemContainer()
    @_property
    def selected_item_container(self) -> NavigationViewItemBase: ...

class NavigationViewTemplateSettings_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_BackButtonVisibilityProperty()
    @_property
    @typing.final
    def back_button_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_LeftPaneVisibilityProperty()
    @_property
    @typing.final
    def left_pane_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_OverflowButtonVisibilityProperty()
    @_property
    @typing.final
    def overflow_button_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_PaneToggleButtonVisibilityProperty()
    @_property
    @typing.final
    def pane_toggle_button_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_PaneToggleButtonWidthProperty()
    @_property
    @typing.final
    def pane_toggle_button_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_SingleSelectionFollowsFocusProperty()
    @_property
    @typing.final
    def single_selection_follows_focus_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_SmallerPaneToggleButtonWidthProperty()
    @_property
    @typing.final
    def smaller_pane_toggle_button_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_TopPaddingProperty()
    @_property
    @typing.final
    def top_padding_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_TopPaneVisibilityProperty()
    @_property
    @typing.final
    def top_pane_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_OpenPaneLengthProperty()
    @_property
    @typing.final
    def open_pane_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class NavigationViewTemplateSettings(windows_ui_xaml.DependencyObject, metaclass=NavigationViewTemplateSettings_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Visibility Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_BackButtonVisibility()
    @_property
    @typing.final
    def back_button_visibility(self) -> windows_ui_xaml.Visibility: ...
    # Windows.UI.Xaml.Visibility Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_LeftPaneVisibility()
    @_property
    @typing.final
    def left_pane_visibility(self) -> windows_ui_xaml.Visibility: ...
    # Windows.UI.Xaml.Visibility Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_OverflowButtonVisibility()
    @_property
    @typing.final
    def overflow_button_visibility(self) -> windows_ui_xaml.Visibility: ...
    # Windows.UI.Xaml.Visibility Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_PaneToggleButtonVisibility()
    @_property
    @typing.final
    def pane_toggle_button_visibility(self) -> windows_ui_xaml.Visibility: ...
    # System.Double Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_PaneToggleButtonWidth()
    @_property
    @typing.final
    def pane_toggle_button_width(self) -> winrt.system.Double: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_SingleSelectionFollowsFocus()
    @_property
    @typing.final
    def single_selection_follows_focus(self) -> bool: ...
    # System.Double Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_SmallerPaneToggleButtonWidth()
    @_property
    @typing.final
    def smaller_pane_toggle_button_width(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_TopPadding()
    @_property
    @typing.final
    def top_padding(self) -> winrt.system.Double: ...
    # Windows.UI.Xaml.Visibility Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_TopPaneVisibility()
    @_property
    @typing.final
    def top_pane_visibility(self) -> windows_ui_xaml.Visibility: ...
    # System.Double Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings::get_OpenPaneLength()
    @_property
    @typing.final
    def open_pane_length(self) -> winrt.system.Double: ...

class NonVirtualizingLayout_Static(Layout_Static):
    pass

class NonVirtualizingLayout(Layout, metaclass=NonVirtualizingLayout_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.Size Microsoft.UI.Xaml.Controls.NonVirtualizingLayout::ArrangeOverride(Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext,Windows.Foundation.Size)
    def _arrange_override(self, context: NonVirtualizingLayoutContext, final_size: typing.Union[windows_foundation.Size, typing.Tuple[winrt.system.Single, winrt.system.Single]], /) -> windows_foundation.Size: ...
    # System.Void Microsoft.UI.Xaml.Controls.NonVirtualizingLayout::InitializeForContextCore(Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext)
    def _initialize_for_context_core(self, context: NonVirtualizingLayoutContext, /) -> None: ...
    # Windows.Foundation.Size Microsoft.UI.Xaml.Controls.NonVirtualizingLayout::MeasureOverride(Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext,Windows.Foundation.Size)
    def _measure_override(self, context: NonVirtualizingLayoutContext, available_size: typing.Union[windows_foundation.Size, typing.Tuple[winrt.system.Single, winrt.system.Single]], /) -> windows_foundation.Size: ...
    # System.Void Microsoft.UI.Xaml.Controls.NonVirtualizingLayout::UninitializeForContextCore(Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext)
    def _uninitialize_for_context_core(self, context: NonVirtualizingLayoutContext, /) -> None: ...

class NonVirtualizingLayoutContext_Static(LayoutContext_Static):
    pass

class NonVirtualizingLayoutContext(LayoutContext, metaclass=NonVirtualizingLayoutContext_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.UIElement> Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext::get_Children()
    @_property
    @typing.final
    def children(self) -> typing.Sequence[windows_ui_xaml.UIElement]: ...

class NumberBox_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_AcceptsExpressionProperty()
    @_property
    @typing.final
    def accepts_expression_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_DescriptionProperty()
    @_property
    @typing.final
    def description_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_HeaderProperty()
    @_property
    @typing.final
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_HeaderTemplateProperty()
    @_property
    @typing.final
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_IsWrapEnabledProperty()
    @_property
    @typing.final
    def is_wrap_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_LargeChangeProperty()
    @_property
    @typing.final
    def large_change_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_MaximumProperty()
    @_property
    @typing.final
    def maximum_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_MinimumProperty()
    @_property
    @typing.final
    def minimum_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_NumberFormatterProperty()
    @_property
    @typing.final
    def number_formatter_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_PlaceholderTextProperty()
    @_property
    @typing.final
    def placeholder_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_PreventKeyboardDisplayOnProgrammaticFocusProperty()
    @_property
    @typing.final
    def prevent_keyboard_display_on_programmatic_focus_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_SelectionFlyoutProperty()
    @_property
    @typing.final
    def selection_flyout_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_SelectionHighlightColorProperty()
    @_property
    @typing.final
    def selection_highlight_color_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_SmallChangeProperty()
    @_property
    @typing.final
    def small_change_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_SpinButtonPlacementModeProperty()
    @_property
    @typing.final
    def spin_button_placement_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_TextProperty()
    @_property
    @typing.final
    def text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_TextReadingOrderProperty()
    @_property
    @typing.final
    def text_reading_order_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_ValidationModeProperty()
    @_property
    @typing.final
    def validation_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.NumberBox::get_ValueProperty()
    @_property
    @typing.final
    def value_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class NumberBox(windows_ui_xaml_controls.Control, metaclass=NumberBox_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.NumberBox::add_ValueChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.NumberBox,Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs>)
    def add_value_changed(self, handler: windows_foundation.TypedEventHandler[NumberBox, NumberBoxValueChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::remove_ValueChanged(Windows.Foundation.EventRegistrationToken)
    def remove_value_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.NumberBox::get_Value()
    @_property
    def value(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_Value(System.Double)
    @value.setter
    @typing.final
    def value(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Controls.NumberBoxValidationMode Microsoft.UI.Xaml.Controls.NumberBox::get_ValidationMode()
    @_property
    def validation_mode(self) -> NumberBoxValidationMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_ValidationMode(Microsoft.UI.Xaml.Controls.NumberBoxValidationMode)
    @validation_mode.setter
    @typing.final
    def validation_mode(self, value: NumberBoxValidationMode) -> None: ...
    # Windows.UI.Xaml.TextReadingOrder Microsoft.UI.Xaml.Controls.NumberBox::get_TextReadingOrder()
    @_property
    def text_reading_order(self) -> windows_ui_xaml.TextReadingOrder: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_TextReadingOrder(Windows.UI.Xaml.TextReadingOrder)
    @text_reading_order.setter
    @typing.final
    def text_reading_order(self, value: windows_ui_xaml.TextReadingOrder) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.NumberBox::get_Text()
    @_property
    def text(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_Text(System.String)
    @text.setter
    @typing.final
    def text(self, value: str) -> None: ...
    # Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode Microsoft.UI.Xaml.Controls.NumberBox::get_SpinButtonPlacementMode()
    @_property
    def spin_button_placement_mode(self) -> NumberBoxSpinButtonPlacementMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_SpinButtonPlacementMode(Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode)
    @spin_button_placement_mode.setter
    @typing.final
    def spin_button_placement_mode(self, value: NumberBoxSpinButtonPlacementMode) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.NumberBox::get_SmallChange()
    @_property
    def small_change(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_SmallChange(System.Double)
    @small_change.setter
    @typing.final
    def small_change(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Media.SolidColorBrush Microsoft.UI.Xaml.Controls.NumberBox::get_SelectionHighlightColor()
    @_property
    def selection_highlight_color(self) -> windows_ui_xaml_media.SolidColorBrush: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_SelectionHighlightColor(Windows.UI.Xaml.Media.SolidColorBrush)
    @selection_highlight_color.setter
    @typing.final
    def selection_highlight_color(self, value: windows_ui_xaml_media.SolidColorBrush) -> None: ...
    # Windows.UI.Xaml.Controls.Primitives.FlyoutBase Microsoft.UI.Xaml.Controls.NumberBox::get_SelectionFlyout()
    @_property
    def selection_flyout(self) -> windows_ui_xaml_controls_primitives.FlyoutBase: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_SelectionFlyout(Windows.UI.Xaml.Controls.Primitives.FlyoutBase)
    @selection_flyout.setter
    @typing.final
    def selection_flyout(self, value: windows_ui_xaml_controls_primitives.FlyoutBase) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NumberBox::get_PreventKeyboardDisplayOnProgrammaticFocus()
    @_property
    def prevent_keyboard_display_on_programmatic_focus(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_PreventKeyboardDisplayOnProgrammaticFocus(System.Boolean)
    @prevent_keyboard_display_on_programmatic_focus.setter
    @typing.final
    def prevent_keyboard_display_on_programmatic_focus(self, value: bool) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.NumberBox::get_PlaceholderText()
    @_property
    def placeholder_text(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_PlaceholderText(System.String)
    @placeholder_text.setter
    @typing.final
    def placeholder_text(self, value: str) -> None: ...
    # Windows.Globalization.NumberFormatting.INumberFormatter2 Microsoft.UI.Xaml.Controls.NumberBox::get_NumberFormatter()
    @_property
    def number_formatter(self) -> windows_globalization_numberformatting.INumberFormatter2: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_NumberFormatter(Windows.Globalization.NumberFormatting.INumberFormatter2)
    @number_formatter.setter
    @typing.final
    def number_formatter(self, value: windows_globalization_numberformatting.INumberFormatter2) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.NumberBox::get_Minimum()
    @_property
    def minimum(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_Minimum(System.Double)
    @minimum.setter
    @typing.final
    def minimum(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.NumberBox::get_Maximum()
    @_property
    def maximum(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_Maximum(System.Double)
    @maximum.setter
    @typing.final
    def maximum(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.NumberBox::get_LargeChange()
    @_property
    def large_change(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_LargeChange(System.Double)
    @large_change.setter
    @typing.final
    def large_change(self, value: winrt.system.Double) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NumberBox::get_IsWrapEnabled()
    @_property
    def is_wrap_enabled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_IsWrapEnabled(System.Boolean)
    @is_wrap_enabled.setter
    @typing.final
    def is_wrap_enabled(self, value: bool) -> None: ...
    # Windows.UI.Xaml.DataTemplate Microsoft.UI.Xaml.Controls.NumberBox::get_HeaderTemplate()
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_HeaderTemplate(Windows.UI.Xaml.DataTemplate)
    @header_template.setter
    @typing.final
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.NumberBox::get_Header()
    @_property
    def header(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_Header(System.Object)
    @header.setter
    @typing.final
    def header(self, value: winrt.system.Object) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.NumberBox::get_Description()
    @_property
    def description(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_Description(System.Object)
    @description.setter
    @typing.final
    def description(self, value: winrt.system.Object) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.NumberBox::get_AcceptsExpression()
    @_property
    def accepts_expression(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.NumberBox::put_AcceptsExpression(System.Boolean)
    @accepts_expression.setter
    @typing.final
    def accepts_expression(self, value: bool) -> None: ...

@typing.final
class NumberBoxValueChangedEventArgs(winrt.system.Object):
    # System.Double Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs::get_NewValue()
    @_property
    def new_value(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs::get_OldValue()
    @_property
    def old_value(self) -> winrt.system.Double: ...

class ParallaxView_Static(windows_ui_xaml.FrameworkElement_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ParallaxView::get_ChildProperty()
    @_property
    @typing.final
    def child_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ParallaxView::get_HorizontalShiftProperty()
    @_property
    @typing.final
    def horizontal_shift_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ParallaxView::get_HorizontalSourceEndOffsetProperty()
    @_property
    @typing.final
    def horizontal_source_end_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ParallaxView::get_HorizontalSourceOffsetKindProperty()
    @_property
    @typing.final
    def horizontal_source_offset_kind_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ParallaxView::get_HorizontalSourceStartOffsetProperty()
    @_property
    @typing.final
    def horizontal_source_start_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ParallaxView::get_IsHorizontalShiftClampedProperty()
    @_property
    @typing.final
    def is_horizontal_shift_clamped_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ParallaxView::get_IsVerticalShiftClampedProperty()
    @_property
    @typing.final
    def is_vertical_shift_clamped_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ParallaxView::get_MaxHorizontalShiftRatioProperty()
    @_property
    @typing.final
    def max_horizontal_shift_ratio_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ParallaxView::get_MaxVerticalShiftRatioProperty()
    @_property
    @typing.final
    def max_vertical_shift_ratio_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ParallaxView::get_SourceProperty()
    @_property
    @typing.final
    def source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ParallaxView::get_VerticalShiftProperty()
    @_property
    @typing.final
    def vertical_shift_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ParallaxView::get_VerticalSourceEndOffsetProperty()
    @_property
    @typing.final
    def vertical_source_end_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ParallaxView::get_VerticalSourceOffsetKindProperty()
    @_property
    @typing.final
    def vertical_source_offset_kind_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ParallaxView::get_VerticalSourceStartOffsetProperty()
    @_property
    @typing.final
    def vertical_source_start_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ParallaxView(windows_ui_xaml.FrameworkElement, metaclass=ParallaxView_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::RefreshAutomaticHorizontalOffsets()
    def refresh_automatic_horizontal_offsets(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::RefreshAutomaticVerticalOffsets()
    def refresh_automatic_vertical_offsets(self) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.ParallaxView::get_VerticalSourceStartOffset()
    @_property
    def vertical_source_start_offset(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::put_VerticalSourceStartOffset(System.Double)
    @vertical_source_start_offset.setter
    @typing.final
    def vertical_source_start_offset(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind Microsoft.UI.Xaml.Controls.ParallaxView::get_VerticalSourceOffsetKind()
    @_property
    def vertical_source_offset_kind(self) -> ParallaxSourceOffsetKind: ...
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::put_VerticalSourceOffsetKind(Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind)
    @vertical_source_offset_kind.setter
    @typing.final
    def vertical_source_offset_kind(self, value: ParallaxSourceOffsetKind) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.ParallaxView::get_VerticalSourceEndOffset()
    @_property
    def vertical_source_end_offset(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::put_VerticalSourceEndOffset(System.Double)
    @vertical_source_end_offset.setter
    @typing.final
    def vertical_source_end_offset(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.ParallaxView::get_VerticalShift()
    @_property
    def vertical_shift(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::put_VerticalShift(System.Double)
    @vertical_shift.setter
    @typing.final
    def vertical_shift(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.ParallaxView::get_Source()
    @_property
    def source(self) -> windows_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::put_Source(Windows.UI.Xaml.UIElement)
    @source.setter
    @typing.final
    def source(self, value: windows_ui_xaml.UIElement) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.ParallaxView::get_MaxVerticalShiftRatio()
    @_property
    def max_vertical_shift_ratio(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::put_MaxVerticalShiftRatio(System.Double)
    @max_vertical_shift_ratio.setter
    @typing.final
    def max_vertical_shift_ratio(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.ParallaxView::get_MaxHorizontalShiftRatio()
    @_property
    def max_horizontal_shift_ratio(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::put_MaxHorizontalShiftRatio(System.Double)
    @max_horizontal_shift_ratio.setter
    @typing.final
    def max_horizontal_shift_ratio(self, value: winrt.system.Double) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ParallaxView::get_IsVerticalShiftClamped()
    @_property
    def is_vertical_shift_clamped(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::put_IsVerticalShiftClamped(System.Boolean)
    @is_vertical_shift_clamped.setter
    @typing.final
    def is_vertical_shift_clamped(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ParallaxView::get_IsHorizontalShiftClamped()
    @_property
    def is_horizontal_shift_clamped(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::put_IsHorizontalShiftClamped(System.Boolean)
    @is_horizontal_shift_clamped.setter
    @typing.final
    def is_horizontal_shift_clamped(self, value: bool) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.ParallaxView::get_HorizontalSourceStartOffset()
    @_property
    def horizontal_source_start_offset(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::put_HorizontalSourceStartOffset(System.Double)
    @horizontal_source_start_offset.setter
    @typing.final
    def horizontal_source_start_offset(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind Microsoft.UI.Xaml.Controls.ParallaxView::get_HorizontalSourceOffsetKind()
    @_property
    def horizontal_source_offset_kind(self) -> ParallaxSourceOffsetKind: ...
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::put_HorizontalSourceOffsetKind(Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind)
    @horizontal_source_offset_kind.setter
    @typing.final
    def horizontal_source_offset_kind(self, value: ParallaxSourceOffsetKind) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.ParallaxView::get_HorizontalSourceEndOffset()
    @_property
    def horizontal_source_end_offset(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::put_HorizontalSourceEndOffset(System.Double)
    @horizontal_source_end_offset.setter
    @typing.final
    def horizontal_source_end_offset(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.ParallaxView::get_HorizontalShift()
    @_property
    def horizontal_shift(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::put_HorizontalShift(System.Double)
    @horizontal_shift.setter
    @typing.final
    def horizontal_shift(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.ParallaxView::get_Child()
    @_property
    def child(self) -> windows_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.ParallaxView::put_Child(Windows.UI.Xaml.UIElement)
    @child.setter
    @typing.final
    def child(self, value: windows_ui_xaml.UIElement) -> None: ...

class PathIconSource_Static(IconSource_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PathIconSource::get_DataProperty()
    @_property
    @typing.final
    def data_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class PathIconSource(IconSource, metaclass=PathIconSource_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.Geometry Microsoft.UI.Xaml.Controls.PathIconSource::get_Data()
    @_property
    def data(self) -> windows_ui_xaml_media.Geometry: ...
    # System.Void Microsoft.UI.Xaml.Controls.PathIconSource::put_Data(Windows.UI.Xaml.Media.Geometry)
    @data.setter
    @typing.final
    def data(self, value: windows_ui_xaml_media.Geometry) -> None: ...

class PersonPicture_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PersonPicture::get_BadgeGlyphProperty()
    @_property
    @typing.final
    def badge_glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PersonPicture::get_BadgeImageSourceProperty()
    @_property
    @typing.final
    def badge_image_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PersonPicture::get_BadgeNumberProperty()
    @_property
    @typing.final
    def badge_number_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PersonPicture::get_BadgeTextProperty()
    @_property
    @typing.final
    def badge_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PersonPicture::get_ContactProperty()
    @_property
    @typing.final
    def contact_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PersonPicture::get_DisplayNameProperty()
    @_property
    @typing.final
    def display_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PersonPicture::get_InitialsProperty()
    @_property
    @typing.final
    def initials_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PersonPicture::get_IsGroupProperty()
    @_property
    @typing.final
    def is_group_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PersonPicture::get_PreferSmallImageProperty()
    @_property
    @typing.final
    def prefer_small_image_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PersonPicture::get_ProfilePictureProperty()
    @_property
    @typing.final
    def profile_picture_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class PersonPicture(windows_ui_xaml_controls.Control, metaclass=PersonPicture_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.ImageSource Microsoft.UI.Xaml.Controls.PersonPicture::get_ProfilePicture()
    @_property
    def profile_picture(self) -> windows_ui_xaml_media.ImageSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.PersonPicture::put_ProfilePicture(Windows.UI.Xaml.Media.ImageSource)
    @profile_picture.setter
    @typing.final
    def profile_picture(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.PersonPicture::get_PreferSmallImage()
    @_property
    def prefer_small_image(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.PersonPicture::put_PreferSmallImage(System.Boolean)
    @prefer_small_image.setter
    @typing.final
    def prefer_small_image(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.PersonPicture::get_IsGroup()
    @_property
    def is_group(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.PersonPicture::put_IsGroup(System.Boolean)
    @is_group.setter
    @typing.final
    def is_group(self, value: bool) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.PersonPicture::get_Initials()
    @_property
    def initials(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.PersonPicture::put_Initials(System.String)
    @initials.setter
    @typing.final
    def initials(self, value: str) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.PersonPicture::get_DisplayName()
    @_property
    def display_name(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.PersonPicture::put_DisplayName(System.String)
    @display_name.setter
    @typing.final
    def display_name(self, value: str) -> None: ...
    # Windows.ApplicationModel.Contacts.Contact Microsoft.UI.Xaml.Controls.PersonPicture::get_Contact()
    @_property
    def contact(self) -> windows_applicationmodel_contacts.Contact: ...
    # System.Void Microsoft.UI.Xaml.Controls.PersonPicture::put_Contact(Windows.ApplicationModel.Contacts.Contact)
    @contact.setter
    @typing.final
    def contact(self, value: windows_applicationmodel_contacts.Contact) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.PersonPicture::get_BadgeText()
    @_property
    def badge_text(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.PersonPicture::put_BadgeText(System.String)
    @badge_text.setter
    @typing.final
    def badge_text(self, value: str) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.PersonPicture::get_BadgeNumber()
    @_property
    def badge_number(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.PersonPicture::put_BadgeNumber(System.Int32)
    @badge_number.setter
    @typing.final
    def badge_number(self, value: winrt.system.Int32) -> None: ...
    # Windows.UI.Xaml.Media.ImageSource Microsoft.UI.Xaml.Controls.PersonPicture::get_BadgeImageSource()
    @_property
    def badge_image_source(self) -> windows_ui_xaml_media.ImageSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.PersonPicture::put_BadgeImageSource(Windows.UI.Xaml.Media.ImageSource)
    @badge_image_source.setter
    @typing.final
    def badge_image_source(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.PersonPicture::get_BadgeGlyph()
    @_property
    def badge_glyph(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.PersonPicture::put_BadgeGlyph(System.String)
    @badge_glyph.setter
    @typing.final
    def badge_glyph(self, value: str) -> None: ...
    # Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings Microsoft.UI.Xaml.Controls.PersonPicture::get_TemplateSettings()
    @_property
    @typing.final
    def template_settings(self) -> PersonPictureTemplateSettings: ...

@typing.final
class PersonPictureTemplateSettings(windows_ui_xaml.DependencyObject):
    # Windows.UI.Xaml.Media.ImageBrush Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings::get_ActualImageBrush()
    @_property
    def actual_image_brush(self) -> windows_ui_xaml_media.ImageBrush: ...
    # System.String Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings::get_ActualInitials()
    @_property
    def actual_initials(self) -> str: ...

class PipsPager_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PipsPager::get_MaxVisiblePipsProperty()
    @_property
    @typing.final
    def max_visible_pips_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PipsPager::get_NextButtonStyleProperty()
    @_property
    @typing.final
    def next_button_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PipsPager::get_NextButtonVisibilityProperty()
    @_property
    @typing.final
    def next_button_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PipsPager::get_NormalPipStyleProperty()
    @_property
    @typing.final
    def normal_pip_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PipsPager::get_NumberOfPagesProperty()
    @_property
    @typing.final
    def number_of_pages_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PipsPager::get_OrientationProperty()
    @_property
    @typing.final
    def orientation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PipsPager::get_PreviousButtonStyleProperty()
    @_property
    @typing.final
    def previous_button_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PipsPager::get_PreviousButtonVisibilityProperty()
    @_property
    @typing.final
    def previous_button_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PipsPager::get_SelectedPageIndexProperty()
    @_property
    @typing.final
    def selected_page_index_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.PipsPager::get_SelectedPipStyleProperty()
    @_property
    @typing.final
    def selected_pip_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class PipsPager(windows_ui_xaml_controls.Control, metaclass=PipsPager_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.PipsPager::add_SelectedIndexChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.PipsPager,Microsoft.UI.Xaml.Controls.PipsPagerSelectedIndexChangedEventArgs>)
    def add_selected_index_changed(self, handler: windows_foundation.TypedEventHandler[PipsPager, PipsPagerSelectedIndexChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.PipsPager::remove_SelectedIndexChanged(Windows.Foundation.EventRegistrationToken)
    def remove_selected_index_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.UI.Xaml.Style Microsoft.UI.Xaml.Controls.PipsPager::get_SelectedPipStyle()
    @_property
    def selected_pip_style(self) -> windows_ui_xaml.Style: ...
    # System.Void Microsoft.UI.Xaml.Controls.PipsPager::put_SelectedPipStyle(Windows.UI.Xaml.Style)
    @selected_pip_style.setter
    @typing.final
    def selected_pip_style(self, value: windows_ui_xaml.Style) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.PipsPager::get_SelectedPageIndex()
    @_property
    def selected_page_index(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.PipsPager::put_SelectedPageIndex(System.Int32)
    @selected_page_index.setter
    @typing.final
    def selected_page_index(self, value: winrt.system.Int32) -> None: ...
    # Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility Microsoft.UI.Xaml.Controls.PipsPager::get_PreviousButtonVisibility()
    @_property
    def previous_button_visibility(self) -> PipsPagerButtonVisibility: ...
    # System.Void Microsoft.UI.Xaml.Controls.PipsPager::put_PreviousButtonVisibility(Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility)
    @previous_button_visibility.setter
    @typing.final
    def previous_button_visibility(self, value: PipsPagerButtonVisibility) -> None: ...
    # Windows.UI.Xaml.Style Microsoft.UI.Xaml.Controls.PipsPager::get_PreviousButtonStyle()
    @_property
    def previous_button_style(self) -> windows_ui_xaml.Style: ...
    # System.Void Microsoft.UI.Xaml.Controls.PipsPager::put_PreviousButtonStyle(Windows.UI.Xaml.Style)
    @previous_button_style.setter
    @typing.final
    def previous_button_style(self, value: windows_ui_xaml.Style) -> None: ...
    # Windows.UI.Xaml.Controls.Orientation Microsoft.UI.Xaml.Controls.PipsPager::get_Orientation()
    @_property
    def orientation(self) -> windows_ui_xaml_controls.Orientation: ...
    # System.Void Microsoft.UI.Xaml.Controls.PipsPager::put_Orientation(Windows.UI.Xaml.Controls.Orientation)
    @orientation.setter
    @typing.final
    def orientation(self, value: windows_ui_xaml_controls.Orientation) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.PipsPager::get_NumberOfPages()
    @_property
    def number_of_pages(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.PipsPager::put_NumberOfPages(System.Int32)
    @number_of_pages.setter
    @typing.final
    def number_of_pages(self, value: winrt.system.Int32) -> None: ...
    # Windows.UI.Xaml.Style Microsoft.UI.Xaml.Controls.PipsPager::get_NormalPipStyle()
    @_property
    def normal_pip_style(self) -> windows_ui_xaml.Style: ...
    # System.Void Microsoft.UI.Xaml.Controls.PipsPager::put_NormalPipStyle(Windows.UI.Xaml.Style)
    @normal_pip_style.setter
    @typing.final
    def normal_pip_style(self, value: windows_ui_xaml.Style) -> None: ...
    # Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility Microsoft.UI.Xaml.Controls.PipsPager::get_NextButtonVisibility()
    @_property
    def next_button_visibility(self) -> PipsPagerButtonVisibility: ...
    # System.Void Microsoft.UI.Xaml.Controls.PipsPager::put_NextButtonVisibility(Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility)
    @next_button_visibility.setter
    @typing.final
    def next_button_visibility(self, value: PipsPagerButtonVisibility) -> None: ...
    # Windows.UI.Xaml.Style Microsoft.UI.Xaml.Controls.PipsPager::get_NextButtonStyle()
    @_property
    def next_button_style(self) -> windows_ui_xaml.Style: ...
    # System.Void Microsoft.UI.Xaml.Controls.PipsPager::put_NextButtonStyle(Windows.UI.Xaml.Style)
    @next_button_style.setter
    @typing.final
    def next_button_style(self, value: windows_ui_xaml.Style) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.PipsPager::get_MaxVisiblePips()
    @_property
    def max_visible_pips(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.PipsPager::put_MaxVisiblePips(System.Int32)
    @max_visible_pips.setter
    @typing.final
    def max_visible_pips(self, value: winrt.system.Int32) -> None: ...
    # Microsoft.UI.Xaml.Controls.PipsPagerTemplateSettings Microsoft.UI.Xaml.Controls.PipsPager::get_TemplateSettings()
    @_property
    @typing.final
    def template_settings(self) -> PipsPagerTemplateSettings: ...

@typing.final
class PipsPagerSelectedIndexChangedEventArgs(winrt.system.Object):
    pass

@typing.final
class PipsPagerTemplateSettings(windows_ui_xaml.DependencyObject):
    # Windows.Foundation.Collections.IVector`1<System.Int32> Microsoft.UI.Xaml.Controls.PipsPagerTemplateSettings::get_PipsPagerItems()
    @_property
    def pips_pager_items(self) -> typing.MutableSequence[winrt.system.Int32]: ...

class ProgressBar_Static(windows_ui_xaml_controls_primitives.RangeBase_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ProgressBar::get_IsIndeterminateProperty()
    @_property
    @typing.final
    def is_indeterminate_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ProgressBar::get_ShowErrorProperty()
    @_property
    @typing.final
    def show_error_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ProgressBar::get_ShowPausedProperty()
    @_property
    @typing.final
    def show_paused_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ProgressBar(windows_ui_xaml_controls_primitives.RangeBase, metaclass=ProgressBar_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ProgressBar::get_ShowPaused()
    @_property
    def show_paused(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ProgressBar::put_ShowPaused(System.Boolean)
    @show_paused.setter
    @typing.final
    def show_paused(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ProgressBar::get_ShowError()
    @_property
    def show_error(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ProgressBar::put_ShowError(System.Boolean)
    @show_error.setter
    @typing.final
    def show_error(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ProgressBar::get_IsIndeterminate()
    @_property
    def is_indeterminate(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ProgressBar::put_IsIndeterminate(System.Boolean)
    @is_indeterminate.setter
    @typing.final
    def is_indeterminate(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings Microsoft.UI.Xaml.Controls.ProgressBar::get_TemplateSettings()
    @_property
    @typing.final
    def template_settings(self) -> ProgressBarTemplateSettings: ...

@typing.final
class ProgressBarTemplateSettings(windows_ui_xaml.DependencyObject):
    # Windows.UI.Xaml.Media.RectangleGeometry Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings::get_ClipRect()
    @_property
    def clip_rect(self) -> windows_ui_xaml_media.RectangleGeometry: ...
    # System.Double Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings::get_Container2AnimationEndPosition()
    @_property
    def container2_animation_end_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings::get_Container2AnimationStartPosition()
    @_property
    def container2_animation_start_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings::get_ContainerAnimationEndPosition()
    @_property
    def container_animation_end_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings::get_ContainerAnimationMidPosition()
    @_property
    def container_animation_mid_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings::get_ContainerAnimationStartPosition()
    @_property
    def container_animation_start_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings::get_EllipseAnimationEndPosition()
    @_property
    def ellipse_animation_end_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings::get_EllipseAnimationWellPosition()
    @_property
    def ellipse_animation_well_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings::get_EllipseDiameter()
    @_property
    def ellipse_diameter(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings::get_EllipseOffset()
    @_property
    def ellipse_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings::get_IndicatorLengthDelta()
    @_property
    def indicator_length_delta(self) -> winrt.system.Double: ...

class ProgressRing_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ProgressRing::get_IsActiveProperty()
    @_property
    @typing.final
    def is_active_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ProgressRing::get_IsIndeterminateProperty()
    @_property
    @typing.final
    def is_indeterminate_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ProgressRing::get_MaximumProperty()
    @_property
    @typing.final
    def maximum_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ProgressRing::get_MinimumProperty()
    @_property
    @typing.final
    def minimum_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ProgressRing::get_ValueProperty()
    @_property
    @typing.final
    def value_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ProgressRing(windows_ui_xaml_controls.Control, metaclass=ProgressRing_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Microsoft.UI.Xaml.Controls.ProgressRing::get_Value()
    @_property
    def value(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ProgressRing::put_Value(System.Double)
    @value.setter
    @typing.final
    def value(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.ProgressRing::get_Minimum()
    @_property
    def minimum(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ProgressRing::put_Minimum(System.Double)
    @minimum.setter
    @typing.final
    def minimum(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.ProgressRing::get_Maximum()
    @_property
    def maximum(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.ProgressRing::put_Maximum(System.Double)
    @maximum.setter
    @typing.final
    def maximum(self, value: winrt.system.Double) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ProgressRing::get_IsIndeterminate()
    @_property
    def is_indeterminate(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ProgressRing::put_IsIndeterminate(System.Boolean)
    @is_indeterminate.setter
    @typing.final
    def is_indeterminate(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ProgressRing::get_IsActive()
    @_property
    def is_active(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ProgressRing::put_IsActive(System.Boolean)
    @is_active.setter
    @typing.final
    def is_active(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings Microsoft.UI.Xaml.Controls.ProgressRing::get_TemplateSettings()
    @_property
    @typing.final
    def template_settings(self) -> ProgressRingTemplateSettings: ...

@typing.final
class ProgressRingTemplateSettings(windows_ui_xaml.DependencyObject):
    # System.Double Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings::get_EllipseDiameter()
    @_property
    def ellipse_diameter(self) -> winrt.system.Double: ...
    # Windows.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings::get_EllipseOffset()
    @_property
    def ellipse_offset(self) -> windows_ui_xaml.Thickness: ...
    # System.Double Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings::get_MaxSideLength()
    @_property
    def max_side_length(self) -> winrt.system.Double: ...

class RadioButtons_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RadioButtons::get_HeaderProperty()
    @_property
    @typing.final
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RadioButtons::get_HeaderTemplateProperty()
    @_property
    @typing.final
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RadioButtons::get_ItemTemplateProperty()
    @_property
    @typing.final
    def item_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RadioButtons::get_ItemsProperty()
    @_property
    @typing.final
    def items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RadioButtons::get_ItemsSourceProperty()
    @_property
    @typing.final
    def items_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RadioButtons::get_MaxColumnsProperty()
    @_property
    @typing.final
    def max_columns_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RadioButtons::get_SelectedIndexProperty()
    @_property
    @typing.final
    def selected_index_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RadioButtons::get_SelectedItemProperty()
    @_property
    @typing.final
    def selected_item_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RadioButtons(windows_ui_xaml_controls.Control, metaclass=RadioButtons_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.RadioButtons::ContainerFromIndex(System.Int32)
    def container_from_index(self, index: winrt.system.Int32, /) -> windows_ui_xaml.UIElement: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.RadioButtons::add_SelectionChanged(Windows.UI.Xaml.Controls.SelectionChangedEventHandler)
    def add_selection_changed(self, handler: windows_ui_xaml_controls.SelectionChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.RadioButtons::remove_SelectionChanged(Windows.Foundation.EventRegistrationToken)
    def remove_selection_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.RadioButtons::get_SelectedItem()
    @_property
    def selected_item(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.RadioButtons::put_SelectedItem(System.Object)
    @selected_item.setter
    @typing.final
    def selected_item(self, value: winrt.system.Object) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.RadioButtons::get_SelectedIndex()
    @_property
    def selected_index(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.RadioButtons::put_SelectedIndex(System.Int32)
    @selected_index.setter
    @typing.final
    def selected_index(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.RadioButtons::get_MaxColumns()
    @_property
    def max_columns(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.RadioButtons::put_MaxColumns(System.Int32)
    @max_columns.setter
    @typing.final
    def max_columns(self, value: winrt.system.Int32) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.RadioButtons::get_ItemsSource()
    @_property
    def items_source(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.RadioButtons::put_ItemsSource(System.Object)
    @items_source.setter
    @typing.final
    def items_source(self, value: winrt.system.Object) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.RadioButtons::get_ItemTemplate()
    @_property
    def item_template(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.RadioButtons::put_ItemTemplate(System.Object)
    @item_template.setter
    @typing.final
    def item_template(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.DataTemplate Microsoft.UI.Xaml.Controls.RadioButtons::get_HeaderTemplate()
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    # System.Void Microsoft.UI.Xaml.Controls.RadioButtons::put_HeaderTemplate(Windows.UI.Xaml.DataTemplate)
    @header_template.setter
    @typing.final
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.RadioButtons::get_Header()
    @_property
    def header(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.RadioButtons::put_Header(System.Object)
    @header.setter
    @typing.final
    def header(self, value: winrt.system.Object) -> None: ...
    # Windows.Foundation.Collections.IVector`1<System.Object> Microsoft.UI.Xaml.Controls.RadioButtons::get_Items()
    @_property
    @typing.final
    def items(self) -> typing.MutableSequence[winrt.system.Object]: ...

class RadioMenuFlyoutItem_Static(windows_ui_xaml_controls.MenuFlyoutItem_Static):
    # System.Boolean Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem::GetAreCheckStatesEnabled(Windows.UI.Xaml.Controls.MenuFlyoutSubItem)
    def get_are_check_states_enabled(cls, object: windows_ui_xaml_controls.MenuFlyoutSubItem, /) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem::SetAreCheckStatesEnabled(Windows.UI.Xaml.Controls.MenuFlyoutSubItem,System.Boolean)
    def set_are_check_states_enabled(cls, object: windows_ui_xaml_controls.MenuFlyoutSubItem, value: bool, /) -> None: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem::get_GroupNameProperty()
    @_property
    @typing.final
    def group_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem::get_IsCheckedProperty()
    @_property
    @typing.final
    def is_checked_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem::get_AreCheckStatesEnabledProperty()
    @_property
    @typing.final
    def are_check_states_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RadioMenuFlyoutItem(windows_ui_xaml_controls.MenuFlyoutItem, metaclass=RadioMenuFlyoutItem_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem::get_IsChecked()
    @_property
    def is_checked(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem::put_IsChecked(System.Boolean)
    @is_checked.setter
    @typing.final
    def is_checked(self, value: bool) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem::get_GroupName()
    @_property
    def group_name(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem::put_GroupName(System.String)
    @group_name.setter
    @typing.final
    def group_name(self, value: str) -> None: ...

class RatingControl_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingControl::get_CaptionProperty()
    @_property
    @typing.final
    def caption_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingControl::get_InitialSetValueProperty()
    @_property
    @typing.final
    def initial_set_value_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingControl::get_IsClearEnabledProperty()
    @_property
    @typing.final
    def is_clear_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingControl::get_IsReadOnlyProperty()
    @_property
    @typing.final
    def is_read_only_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingControl::get_ItemInfoProperty()
    @_property
    @typing.final
    def item_info_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingControl::get_MaxRatingProperty()
    @_property
    @typing.final
    def max_rating_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingControl::get_PlaceholderValueProperty()
    @_property
    @typing.final
    def placeholder_value_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingControl::get_ValueProperty()
    @_property
    @typing.final
    def value_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RatingControl(windows_ui_xaml_controls.Control, metaclass=RatingControl_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.RatingControl::add_ValueChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.RatingControl,System.Object>)
    def add_value_changed(self, handler: windows_foundation.TypedEventHandler[RatingControl, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.RatingControl::remove_ValueChanged(Windows.Foundation.EventRegistrationToken)
    def remove_value_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.RatingControl::get_Value()
    @_property
    def value(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingControl::put_Value(System.Double)
    @value.setter
    @typing.final
    def value(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.RatingControl::get_PlaceholderValue()
    @_property
    def placeholder_value(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingControl::put_PlaceholderValue(System.Double)
    @placeholder_value.setter
    @typing.final
    def placeholder_value(self, value: winrt.system.Double) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.RatingControl::get_MaxRating()
    @_property
    def max_rating(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingControl::put_MaxRating(System.Int32)
    @max_rating.setter
    @typing.final
    def max_rating(self, value: winrt.system.Int32) -> None: ...
    # Microsoft.UI.Xaml.Controls.RatingItemInfo Microsoft.UI.Xaml.Controls.RatingControl::get_ItemInfo()
    @_property
    def item_info(self) -> RatingItemInfo: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingControl::put_ItemInfo(Microsoft.UI.Xaml.Controls.RatingItemInfo)
    @item_info.setter
    @typing.final
    def item_info(self, value: RatingItemInfo) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.RatingControl::get_IsReadOnly()
    @_property
    def is_read_only(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingControl::put_IsReadOnly(System.Boolean)
    @is_read_only.setter
    @typing.final
    def is_read_only(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.RatingControl::get_IsClearEnabled()
    @_property
    def is_clear_enabled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingControl::put_IsClearEnabled(System.Boolean)
    @is_clear_enabled.setter
    @typing.final
    def is_clear_enabled(self, value: bool) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.RatingControl::get_InitialSetValue()
    @_property
    def initial_set_value(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingControl::put_InitialSetValue(System.Int32)
    @initial_set_value.setter
    @typing.final
    def initial_set_value(self, value: winrt.system.Int32) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.RatingControl::get_Caption()
    @_property
    def caption(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingControl::put_Caption(System.String)
    @caption.setter
    @typing.final
    def caption(self, value: str) -> None: ...

class RatingItemFontInfo_Static(RatingItemInfo_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingItemFontInfo::get_DisabledGlyphProperty()
    @_property
    @typing.final
    def disabled_glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingItemFontInfo::get_GlyphProperty()
    @_property
    @typing.final
    def glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingItemFontInfo::get_PlaceholderGlyphProperty()
    @_property
    @typing.final
    def placeholder_glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingItemFontInfo::get_PointerOverGlyphProperty()
    @_property
    @typing.final
    def pointer_over_glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingItemFontInfo::get_PointerOverPlaceholderGlyphProperty()
    @_property
    @typing.final
    def pointer_over_placeholder_glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingItemFontInfo::get_UnsetGlyphProperty()
    @_property
    @typing.final
    def unset_glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RatingItemFontInfo(RatingItemInfo, metaclass=RatingItemFontInfo_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Microsoft.UI.Xaml.Controls.RatingItemFontInfo::get_UnsetGlyph()
    @_property
    def unset_glyph(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingItemFontInfo::put_UnsetGlyph(System.String)
    @unset_glyph.setter
    @typing.final
    def unset_glyph(self, value: str) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.RatingItemFontInfo::get_PointerOverPlaceholderGlyph()
    @_property
    def pointer_over_placeholder_glyph(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingItemFontInfo::put_PointerOverPlaceholderGlyph(System.String)
    @pointer_over_placeholder_glyph.setter
    @typing.final
    def pointer_over_placeholder_glyph(self, value: str) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.RatingItemFontInfo::get_PointerOverGlyph()
    @_property
    def pointer_over_glyph(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingItemFontInfo::put_PointerOverGlyph(System.String)
    @pointer_over_glyph.setter
    @typing.final
    def pointer_over_glyph(self, value: str) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.RatingItemFontInfo::get_PlaceholderGlyph()
    @_property
    def placeholder_glyph(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingItemFontInfo::put_PlaceholderGlyph(System.String)
    @placeholder_glyph.setter
    @typing.final
    def placeholder_glyph(self, value: str) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.RatingItemFontInfo::get_Glyph()
    @_property
    def glyph(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingItemFontInfo::put_Glyph(System.String)
    @glyph.setter
    @typing.final
    def glyph(self, value: str) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.RatingItemFontInfo::get_DisabledGlyph()
    @_property
    def disabled_glyph(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingItemFontInfo::put_DisabledGlyph(System.String)
    @disabled_glyph.setter
    @typing.final
    def disabled_glyph(self, value: str) -> None: ...

class RatingItemImageInfo_Static(RatingItemInfo_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingItemImageInfo::get_DisabledImageProperty()
    @_property
    @typing.final
    def disabled_image_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingItemImageInfo::get_ImageProperty()
    @_property
    @typing.final
    def image_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingItemImageInfo::get_PlaceholderImageProperty()
    @_property
    @typing.final
    def placeholder_image_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingItemImageInfo::get_PointerOverImageProperty()
    @_property
    @typing.final
    def pointer_over_image_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingItemImageInfo::get_PointerOverPlaceholderImageProperty()
    @_property
    @typing.final
    def pointer_over_placeholder_image_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RatingItemImageInfo::get_UnsetImageProperty()
    @_property
    @typing.final
    def unset_image_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RatingItemImageInfo(RatingItemInfo, metaclass=RatingItemImageInfo_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.ImageSource Microsoft.UI.Xaml.Controls.RatingItemImageInfo::get_UnsetImage()
    @_property
    def unset_image(self) -> windows_ui_xaml_media.ImageSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingItemImageInfo::put_UnsetImage(Windows.UI.Xaml.Media.ImageSource)
    @unset_image.setter
    @typing.final
    def unset_image(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    # Windows.UI.Xaml.Media.ImageSource Microsoft.UI.Xaml.Controls.RatingItemImageInfo::get_PointerOverPlaceholderImage()
    @_property
    def pointer_over_placeholder_image(self) -> windows_ui_xaml_media.ImageSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingItemImageInfo::put_PointerOverPlaceholderImage(Windows.UI.Xaml.Media.ImageSource)
    @pointer_over_placeholder_image.setter
    @typing.final
    def pointer_over_placeholder_image(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    # Windows.UI.Xaml.Media.ImageSource Microsoft.UI.Xaml.Controls.RatingItemImageInfo::get_PointerOverImage()
    @_property
    def pointer_over_image(self) -> windows_ui_xaml_media.ImageSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingItemImageInfo::put_PointerOverImage(Windows.UI.Xaml.Media.ImageSource)
    @pointer_over_image.setter
    @typing.final
    def pointer_over_image(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    # Windows.UI.Xaml.Media.ImageSource Microsoft.UI.Xaml.Controls.RatingItemImageInfo::get_PlaceholderImage()
    @_property
    def placeholder_image(self) -> windows_ui_xaml_media.ImageSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingItemImageInfo::put_PlaceholderImage(Windows.UI.Xaml.Media.ImageSource)
    @placeholder_image.setter
    @typing.final
    def placeholder_image(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    # Windows.UI.Xaml.Media.ImageSource Microsoft.UI.Xaml.Controls.RatingItemImageInfo::get_Image()
    @_property
    def image(self) -> windows_ui_xaml_media.ImageSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingItemImageInfo::put_Image(Windows.UI.Xaml.Media.ImageSource)
    @image.setter
    @typing.final
    def image(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    # Windows.UI.Xaml.Media.ImageSource Microsoft.UI.Xaml.Controls.RatingItemImageInfo::get_DisabledImage()
    @_property
    def disabled_image(self) -> windows_ui_xaml_media.ImageSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.RatingItemImageInfo::put_DisabledImage(Windows.UI.Xaml.Media.ImageSource)
    @disabled_image.setter
    @typing.final
    def disabled_image(self, value: windows_ui_xaml_media.ImageSource) -> None: ...

class RatingItemInfo_Static(windows_ui_xaml.DependencyObject_Static):
    pass

class RatingItemInfo(windows_ui_xaml.DependencyObject, metaclass=RatingItemInfo_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

class RefreshContainer_Static(windows_ui_xaml_controls.ContentControl_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RefreshContainer::get_PullDirectionProperty()
    @_property
    @typing.final
    def pull_direction_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RefreshContainer::get_VisualizerProperty()
    @_property
    @typing.final
    def visualizer_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RefreshContainer(windows_ui_xaml_controls.ContentControl, metaclass=RefreshContainer_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.RefreshContainer::RequestRefresh()
    def request_refresh(self) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.RefreshContainer::add_RefreshRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.RefreshContainer,Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs>)
    def add_refresh_requested(self, handler: windows_foundation.TypedEventHandler[RefreshContainer, RefreshRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.RefreshContainer::remove_RefreshRequested(Windows.Foundation.EventRegistrationToken)
    def remove_refresh_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Microsoft.UI.Xaml.Controls.RefreshVisualizer Microsoft.UI.Xaml.Controls.RefreshContainer::get_Visualizer()
    @_property
    def visualizer(self) -> RefreshVisualizer: ...
    # System.Void Microsoft.UI.Xaml.Controls.RefreshContainer::put_Visualizer(Microsoft.UI.Xaml.Controls.RefreshVisualizer)
    @visualizer.setter
    @typing.final
    def visualizer(self, value: RefreshVisualizer) -> None: ...
    # Microsoft.UI.Xaml.Controls.RefreshPullDirection Microsoft.UI.Xaml.Controls.RefreshContainer::get_PullDirection()
    @_property
    def pull_direction(self) -> RefreshPullDirection: ...
    # System.Void Microsoft.UI.Xaml.Controls.RefreshContainer::put_PullDirection(Microsoft.UI.Xaml.Controls.RefreshPullDirection)
    @pull_direction.setter
    @typing.final
    def pull_direction(self, value: RefreshPullDirection) -> None: ...

@typing.final
class RefreshInteractionRatioChangedEventArgs(winrt.system.Object):
    # System.Double Microsoft.UI.Xaml.Controls.RefreshInteractionRatioChangedEventArgs::get_InteractionRatio()
    @_property
    def interaction_ratio(self) -> winrt.system.Double: ...

@typing.final
class RefreshRequestedEventArgs(winrt.system.Object):
    # Windows.Foundation.Deferral Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...

@typing.final
class RefreshStateChangedEventArgs(winrt.system.Object):
    # Microsoft.UI.Xaml.Controls.RefreshVisualizerState Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs::get_NewState()
    @_property
    def new_state(self) -> RefreshVisualizerState: ...
    # Microsoft.UI.Xaml.Controls.RefreshVisualizerState Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs::get_OldState()
    @_property
    def old_state(self) -> RefreshVisualizerState: ...

class RefreshVisualizer_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RefreshVisualizer::get_ContentProperty()
    @_property
    @typing.final
    def content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RefreshVisualizer::get_InfoProviderProperty()
    @_property
    @typing.final
    def info_provider_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RefreshVisualizer::get_OrientationProperty()
    @_property
    @typing.final
    def orientation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.RefreshVisualizer::get_StateProperty()
    @_property
    @typing.final
    def state_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RefreshVisualizer(windows_ui_xaml_controls.Control, metaclass=RefreshVisualizer_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.RefreshVisualizer::RequestRefresh()
    def request_refresh(self) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.RefreshVisualizer::add_RefreshRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.RefreshVisualizer,Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs>)
    def add_refresh_requested(self, handler: windows_foundation.TypedEventHandler[RefreshVisualizer, RefreshRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.RefreshVisualizer::remove_RefreshRequested(Windows.Foundation.EventRegistrationToken)
    def remove_refresh_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.RefreshVisualizer::add_RefreshStateChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.RefreshVisualizer,Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs>)
    def add_refresh_state_changed(self, handler: windows_foundation.TypedEventHandler[RefreshVisualizer, RefreshStateChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.RefreshVisualizer::remove_RefreshStateChanged(Windows.Foundation.EventRegistrationToken)
    def remove_refresh_state_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation Microsoft.UI.Xaml.Controls.RefreshVisualizer::get_Orientation()
    @_property
    def orientation(self) -> RefreshVisualizerOrientation: ...
    # System.Void Microsoft.UI.Xaml.Controls.RefreshVisualizer::put_Orientation(Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation)
    @orientation.setter
    @typing.final
    def orientation(self, value: RefreshVisualizerOrientation) -> None: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.RefreshVisualizer::get_Content()
    @_property
    def content(self) -> windows_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.RefreshVisualizer::put_Content(Windows.UI.Xaml.UIElement)
    @content.setter
    @typing.final
    def content(self, value: windows_ui_xaml.UIElement) -> None: ...
    # Microsoft.UI.Xaml.Controls.RefreshVisualizerState Microsoft.UI.Xaml.Controls.RefreshVisualizer::get_State()
    @_property
    @typing.final
    def state(self) -> RefreshVisualizerState: ...

class RevealListViewItemPresenter_Static(windows_ui_xaml_controls_primitives.ListViewItemPresenter_Static):
    pass

class RevealListViewItemPresenter(windows_ui_xaml_controls_primitives.ListViewItemPresenter, metaclass=RevealListViewItemPresenter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

class SplitButton_Static(windows_ui_xaml_controls.ContentControl_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SplitButton::get_CommandParameterProperty()
    @_property
    @typing.final
    def command_parameter_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SplitButton::get_CommandProperty()
    @_property
    @typing.final
    def command_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SplitButton::get_FlyoutProperty()
    @_property
    @typing.final
    def flyout_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SplitButton(windows_ui_xaml_controls.ContentControl, metaclass=SplitButton_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.SplitButton::add_Click(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.SplitButton,Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs>)
    def add_click(self, handler: windows_foundation.TypedEventHandler[SplitButton, SplitButtonClickEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.SplitButton::remove_Click(Windows.Foundation.EventRegistrationToken)
    def remove_click(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.UI.Xaml.Controls.Primitives.FlyoutBase Microsoft.UI.Xaml.Controls.SplitButton::get_Flyout()
    @_property
    def flyout(self) -> windows_ui_xaml_controls_primitives.FlyoutBase: ...
    # System.Void Microsoft.UI.Xaml.Controls.SplitButton::put_Flyout(Windows.UI.Xaml.Controls.Primitives.FlyoutBase)
    @flyout.setter
    @typing.final
    def flyout(self, value: windows_ui_xaml_controls_primitives.FlyoutBase) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.SplitButton::get_CommandParameter()
    @_property
    def command_parameter(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.SplitButton::put_CommandParameter(System.Object)
    @command_parameter.setter
    @typing.final
    def command_parameter(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.Input.ICommand Microsoft.UI.Xaml.Controls.SplitButton::get_Command()
    @_property
    def command(self) -> windows_ui_xaml_input.ICommand: ...
    # System.Void Microsoft.UI.Xaml.Controls.SplitButton::put_Command(Windows.UI.Xaml.Input.ICommand)
    @command.setter
    @typing.final
    def command(self, value: windows_ui_xaml_input.ICommand) -> None: ...

@typing.final
class SplitButtonClickEventArgs(winrt.system.Object):
    pass

class StackLayout_Static(VirtualizingLayout_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.StackLayout::get_OrientationProperty()
    @_property
    @typing.final
    def orientation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.StackLayout::get_SpacingProperty()
    @_property
    @typing.final
    def spacing_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class StackLayout(VirtualizingLayout, metaclass=StackLayout_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Microsoft.UI.Xaml.Controls.StackLayout::get_Spacing()
    @_property
    def spacing(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.StackLayout::put_Spacing(System.Double)
    @spacing.setter
    @typing.final
    def spacing(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Controls.Orientation Microsoft.UI.Xaml.Controls.StackLayout::get_Orientation()
    @_property
    def orientation(self) -> windows_ui_xaml_controls.Orientation: ...
    # System.Void Microsoft.UI.Xaml.Controls.StackLayout::put_Orientation(Windows.UI.Xaml.Controls.Orientation)
    @orientation.setter
    @typing.final
    def orientation(self, value: windows_ui_xaml_controls.Orientation) -> None: ...

class SwipeControl_Static(windows_ui_xaml_controls.ContentControl_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SwipeControl::get_BottomItemsProperty()
    @_property
    @typing.final
    def bottom_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SwipeControl::get_LeftItemsProperty()
    @_property
    @typing.final
    def left_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SwipeControl::get_RightItemsProperty()
    @_property
    @typing.final
    def right_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SwipeControl::get_TopItemsProperty()
    @_property
    @typing.final
    def top_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SwipeControl(windows_ui_xaml_controls.ContentControl, metaclass=SwipeControl_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.SwipeControl::Close()
    def close(self) -> None: ...
    # Microsoft.UI.Xaml.Controls.SwipeItems Microsoft.UI.Xaml.Controls.SwipeControl::get_TopItems()
    @_property
    def top_items(self) -> SwipeItems: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeControl::put_TopItems(Microsoft.UI.Xaml.Controls.SwipeItems)
    @top_items.setter
    @typing.final
    def top_items(self, value: SwipeItems) -> None: ...
    # Microsoft.UI.Xaml.Controls.SwipeItems Microsoft.UI.Xaml.Controls.SwipeControl::get_RightItems()
    @_property
    def right_items(self) -> SwipeItems: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeControl::put_RightItems(Microsoft.UI.Xaml.Controls.SwipeItems)
    @right_items.setter
    @typing.final
    def right_items(self, value: SwipeItems) -> None: ...
    # Microsoft.UI.Xaml.Controls.SwipeItems Microsoft.UI.Xaml.Controls.SwipeControl::get_LeftItems()
    @_property
    def left_items(self) -> SwipeItems: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeControl::put_LeftItems(Microsoft.UI.Xaml.Controls.SwipeItems)
    @left_items.setter
    @typing.final
    def left_items(self, value: SwipeItems) -> None: ...
    # Microsoft.UI.Xaml.Controls.SwipeItems Microsoft.UI.Xaml.Controls.SwipeControl::get_BottomItems()
    @_property
    def bottom_items(self) -> SwipeItems: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeControl::put_BottomItems(Microsoft.UI.Xaml.Controls.SwipeItems)
    @bottom_items.setter
    @typing.final
    def bottom_items(self, value: SwipeItems) -> None: ...

class SwipeItem_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SwipeItem::get_BackgroundProperty()
    @_property
    @typing.final
    def background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SwipeItem::get_BehaviorOnInvokedProperty()
    @_property
    @typing.final
    def behavior_on_invoked_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SwipeItem::get_CommandParameterProperty()
    @_property
    @typing.final
    def command_parameter_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SwipeItem::get_CommandProperty()
    @_property
    @typing.final
    def command_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SwipeItem::get_ForegroundProperty()
    @_property
    @typing.final
    def foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SwipeItem::get_IconSourceProperty()
    @_property
    @typing.final
    def icon_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SwipeItem::get_TextProperty()
    @_property
    @typing.final
    def text_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SwipeItem(windows_ui_xaml.DependencyObject, metaclass=SwipeItem_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.SwipeItem::add_Invoked(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.SwipeItem,Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs>)
    def add_invoked(self, handler: windows_foundation.TypedEventHandler[SwipeItem, SwipeItemInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItem::remove_Invoked(Windows.Foundation.EventRegistrationToken)
    def remove_invoked(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.SwipeItem::get_Text()
    @_property
    def text(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItem::put_Text(System.String)
    @text.setter
    @typing.final
    def text(self, value: str) -> None: ...
    # Microsoft.UI.Xaml.Controls.IconSource Microsoft.UI.Xaml.Controls.SwipeItem::get_IconSource()
    @_property
    def icon_source(self) -> IconSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItem::put_IconSource(Microsoft.UI.Xaml.Controls.IconSource)
    @icon_source.setter
    @typing.final
    def icon_source(self, value: IconSource) -> None: ...
    # Windows.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.SwipeItem::get_Foreground()
    @_property
    def foreground(self) -> windows_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItem::put_Foreground(Windows.UI.Xaml.Media.Brush)
    @foreground.setter
    @typing.final
    def foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.SwipeItem::get_CommandParameter()
    @_property
    def command_parameter(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItem::put_CommandParameter(System.Object)
    @command_parameter.setter
    @typing.final
    def command_parameter(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.Input.ICommand Microsoft.UI.Xaml.Controls.SwipeItem::get_Command()
    @_property
    def command(self) -> windows_ui_xaml_input.ICommand: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItem::put_Command(Windows.UI.Xaml.Input.ICommand)
    @command.setter
    @typing.final
    def command(self, value: windows_ui_xaml_input.ICommand) -> None: ...
    # Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked Microsoft.UI.Xaml.Controls.SwipeItem::get_BehaviorOnInvoked()
    @_property
    def behavior_on_invoked(self) -> SwipeBehaviorOnInvoked: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItem::put_BehaviorOnInvoked(Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked)
    @behavior_on_invoked.setter
    @typing.final
    def behavior_on_invoked(self, value: SwipeBehaviorOnInvoked) -> None: ...
    # Windows.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.SwipeItem::get_Background()
    @_property
    def background(self) -> windows_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItem::put_Background(Windows.UI.Xaml.Media.Brush)
    @background.setter
    @typing.final
    def background(self, value: windows_ui_xaml_media.Brush) -> None: ...

@typing.final
class SwipeItemInvokedEventArgs(winrt.system.Object):
    # Microsoft.UI.Xaml.Controls.SwipeControl Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs::get_SwipeControl()
    @_property
    def swipe_control(self) -> SwipeControl: ...

class SwipeItems_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SwipeItems::get_ModeProperty()
    @_property
    @typing.final
    def mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SwipeItems(windows_ui_xaml.DependencyObject, winrt._winrt.MutableSequence[SwipeItem], metaclass=SwipeItems_Static):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[SwipeItem]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> SwipeItem: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[SwipeItem]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: SwipeItem) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[SwipeItem]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItems::Append(Microsoft.UI.Xaml.Controls.SwipeItem)
    def append(self, value: SwipeItem, /) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItems::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.SwipeItem> Microsoft.UI.Xaml.Controls.SwipeItems::First()
    def first(self) -> windows_foundation_collections.IIterator[SwipeItem]: ...
    # Microsoft.UI.Xaml.Controls.SwipeItem Microsoft.UI.Xaml.Controls.SwipeItems::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> SwipeItem: ...
    # System.UInt32 Microsoft.UI.Xaml.Controls.SwipeItems::GetMany(System.UInt32,Microsoft.UI.Xaml.Controls.SwipeItem[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[SwipeItem], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.SwipeItem> Microsoft.UI.Xaml.Controls.SwipeItems::GetView()
    def get_view(self) -> typing.Sequence[SwipeItem]: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.SwipeItems::IndexOf(Microsoft.UI.Xaml.Controls.SwipeItem,System.UInt32&)
    def index_of(self, value: SwipeItem, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItems::InsertAt(System.UInt32,Microsoft.UI.Xaml.Controls.SwipeItem)
    def insert_at(self, index: winrt.system.UInt32, value: SwipeItem, /) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItems::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItems::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItems::ReplaceAll(Microsoft.UI.Xaml.Controls.SwipeItem[])
    def replace_all(self, items: typing.Union[winrt.system.Array[SwipeItem], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItems::SetAt(System.UInt32,Microsoft.UI.Xaml.Controls.SwipeItem)
    def set_at(self, index: winrt.system.UInt32, value: SwipeItem, /) -> None: ...
    # Microsoft.UI.Xaml.Controls.SwipeMode Microsoft.UI.Xaml.Controls.SwipeItems::get_Mode()
    @_property
    def mode(self) -> SwipeMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.SwipeItems::put_Mode(Microsoft.UI.Xaml.Controls.SwipeMode)
    @mode.setter
    @typing.final
    def mode(self, value: SwipeMode) -> None: ...
    # System.UInt32 Microsoft.UI.Xaml.Controls.SwipeItems::get_Size()
    @_property
    @typing.final
    def size(self) -> winrt.system.UInt32: ...

class SymbolIconSource_Static(IconSource_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.SymbolIconSource::get_SymbolProperty()
    @_property
    @typing.final
    def symbol_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SymbolIconSource(IconSource, metaclass=SymbolIconSource_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Controls.Symbol Microsoft.UI.Xaml.Controls.SymbolIconSource::get_Symbol()
    @_property
    def symbol(self) -> windows_ui_xaml_controls.Symbol: ...
    # System.Void Microsoft.UI.Xaml.Controls.SymbolIconSource::put_Symbol(Windows.UI.Xaml.Controls.Symbol)
    @symbol.setter
    @typing.final
    def symbol(self, value: windows_ui_xaml_controls.Symbol) -> None: ...

class TabView_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_AddTabButtonCommandParameterProperty()
    @_property
    @typing.final
    def add_tab_button_command_parameter_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_AddTabButtonCommandProperty()
    @_property
    @typing.final
    def add_tab_button_command_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_AllowDropTabsProperty()
    @_property
    @typing.final
    def allow_drop_tabs_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_CanDragTabsProperty()
    @_property
    @typing.final
    def can_drag_tabs_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_CanReorderTabsProperty()
    @_property
    @typing.final
    def can_reorder_tabs_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_CloseButtonOverlayModeProperty()
    @_property
    @typing.final
    def close_button_overlay_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_IsAddTabButtonVisibleProperty()
    @_property
    @typing.final
    def is_add_tab_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_SelectedIndexProperty()
    @_property
    @typing.final
    def selected_index_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_SelectedItemProperty()
    @_property
    @typing.final
    def selected_item_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_TabItemTemplateProperty()
    @_property
    @typing.final
    def tab_item_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_TabItemTemplateSelectorProperty()
    @_property
    @typing.final
    def tab_item_template_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_TabItemsProperty()
    @_property
    @typing.final
    def tab_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_TabItemsSourceProperty()
    @_property
    @typing.final
    def tab_items_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_TabStripFooterProperty()
    @_property
    @typing.final
    def tab_strip_footer_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_TabStripFooterTemplateProperty()
    @_property
    @typing.final
    def tab_strip_footer_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_TabStripHeaderProperty()
    @_property
    @typing.final
    def tab_strip_header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_TabStripHeaderTemplateProperty()
    @_property
    @typing.final
    def tab_strip_header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabView::get_TabWidthModeProperty()
    @_property
    @typing.final
    def tab_width_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TabView(windows_ui_xaml_controls.Control, metaclass=TabView_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.UI.Xaml.DependencyObject Microsoft.UI.Xaml.Controls.TabView::ContainerFromIndex(System.Int32)
    def container_from_index(self, index: winrt.system.Int32, /) -> windows_ui_xaml.DependencyObject: ...
    @typing.final
    # Windows.UI.Xaml.DependencyObject Microsoft.UI.Xaml.Controls.TabView::ContainerFromItem(System.Object)
    def container_from_item(self, item: winrt.system.Object, /) -> windows_ui_xaml.DependencyObject: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TabView::add_AddTabButtonClick(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TabView,System.Object>)
    def add_add_tab_button_click(self, handler: windows_foundation.TypedEventHandler[TabView, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TabView::remove_AddTabButtonClick(Windows.Foundation.EventRegistrationToken)
    def remove_add_tab_button_click(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TabView::add_SelectionChanged(Windows.UI.Xaml.Controls.SelectionChangedEventHandler)
    def add_selection_changed(self, handler: windows_ui_xaml_controls.SelectionChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TabView::remove_SelectionChanged(Windows.Foundation.EventRegistrationToken)
    def remove_selection_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TabView::add_TabCloseRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TabView,Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs>)
    def add_tab_close_requested(self, handler: windows_foundation.TypedEventHandler[TabView, TabViewTabCloseRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TabView::remove_TabCloseRequested(Windows.Foundation.EventRegistrationToken)
    def remove_tab_close_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TabView::add_TabDragCompleted(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TabView,Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs>)
    def add_tab_drag_completed(self, handler: windows_foundation.TypedEventHandler[TabView, TabViewTabDragCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TabView::remove_TabDragCompleted(Windows.Foundation.EventRegistrationToken)
    def remove_tab_drag_completed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TabView::add_TabDragStarting(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TabView,Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs>)
    def add_tab_drag_starting(self, handler: windows_foundation.TypedEventHandler[TabView, TabViewTabDragStartingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TabView::remove_TabDragStarting(Windows.Foundation.EventRegistrationToken)
    def remove_tab_drag_starting(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TabView::add_TabDroppedOutside(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TabView,Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs>)
    def add_tab_dropped_outside(self, handler: windows_foundation.TypedEventHandler[TabView, TabViewTabDroppedOutsideEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TabView::remove_TabDroppedOutside(Windows.Foundation.EventRegistrationToken)
    def remove_tab_dropped_outside(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TabView::add_TabItemsChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TabView,Windows.Foundation.Collections.IVectorChangedEventArgs>)
    def add_tab_items_changed(self, handler: windows_foundation.TypedEventHandler[TabView, windows_foundation_collections.IVectorChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TabView::remove_TabItemsChanged(Windows.Foundation.EventRegistrationToken)
    def remove_tab_items_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TabView::add_TabStripDragOver(Windows.UI.Xaml.DragEventHandler)
    def add_tab_strip_drag_over(self, handler: windows_ui_xaml.DragEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TabView::remove_TabStripDragOver(Windows.Foundation.EventRegistrationToken)
    def remove_tab_strip_drag_over(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TabView::add_TabStripDrop(Windows.UI.Xaml.DragEventHandler)
    def add_tab_strip_drop(self, handler: windows_ui_xaml.DragEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TabView::remove_TabStripDrop(Windows.Foundation.EventRegistrationToken)
    def remove_tab_strip_drop(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Microsoft.UI.Xaml.Controls.TabViewWidthMode Microsoft.UI.Xaml.Controls.TabView::get_TabWidthMode()
    @_property
    def tab_width_mode(self) -> TabViewWidthMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_TabWidthMode(Microsoft.UI.Xaml.Controls.TabViewWidthMode)
    @tab_width_mode.setter
    @typing.final
    def tab_width_mode(self, value: TabViewWidthMode) -> None: ...
    # Windows.UI.Xaml.DataTemplate Microsoft.UI.Xaml.Controls.TabView::get_TabStripHeaderTemplate()
    @_property
    def tab_strip_header_template(self) -> windows_ui_xaml.DataTemplate: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_TabStripHeaderTemplate(Windows.UI.Xaml.DataTemplate)
    @tab_strip_header_template.setter
    @typing.final
    def tab_strip_header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.TabView::get_TabStripHeader()
    @_property
    def tab_strip_header(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_TabStripHeader(System.Object)
    @tab_strip_header.setter
    @typing.final
    def tab_strip_header(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.DataTemplate Microsoft.UI.Xaml.Controls.TabView::get_TabStripFooterTemplate()
    @_property
    def tab_strip_footer_template(self) -> windows_ui_xaml.DataTemplate: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_TabStripFooterTemplate(Windows.UI.Xaml.DataTemplate)
    @tab_strip_footer_template.setter
    @typing.final
    def tab_strip_footer_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.TabView::get_TabStripFooter()
    @_property
    def tab_strip_footer(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_TabStripFooter(System.Object)
    @tab_strip_footer.setter
    @typing.final
    def tab_strip_footer(self, value: winrt.system.Object) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.TabView::get_TabItemsSource()
    @_property
    def tab_items_source(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_TabItemsSource(System.Object)
    @tab_items_source.setter
    @typing.final
    def tab_items_source(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.Controls.DataTemplateSelector Microsoft.UI.Xaml.Controls.TabView::get_TabItemTemplateSelector()
    @_property
    def tab_item_template_selector(self) -> windows_ui_xaml_controls.DataTemplateSelector: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_TabItemTemplateSelector(Windows.UI.Xaml.Controls.DataTemplateSelector)
    @tab_item_template_selector.setter
    @typing.final
    def tab_item_template_selector(self, value: windows_ui_xaml_controls.DataTemplateSelector) -> None: ...
    # Windows.UI.Xaml.DataTemplate Microsoft.UI.Xaml.Controls.TabView::get_TabItemTemplate()
    @_property
    def tab_item_template(self) -> windows_ui_xaml.DataTemplate: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_TabItemTemplate(Windows.UI.Xaml.DataTemplate)
    @tab_item_template.setter
    @typing.final
    def tab_item_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.TabView::get_SelectedItem()
    @_property
    def selected_item(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_SelectedItem(System.Object)
    @selected_item.setter
    @typing.final
    def selected_item(self, value: winrt.system.Object) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.TabView::get_SelectedIndex()
    @_property
    def selected_index(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_SelectedIndex(System.Int32)
    @selected_index.setter
    @typing.final
    def selected_index(self, value: winrt.system.Int32) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TabView::get_IsAddTabButtonVisible()
    @_property
    def is_add_tab_button_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_IsAddTabButtonVisible(System.Boolean)
    @is_add_tab_button_visible.setter
    @typing.final
    def is_add_tab_button_visible(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode Microsoft.UI.Xaml.Controls.TabView::get_CloseButtonOverlayMode()
    @_property
    def close_button_overlay_mode(self) -> TabViewCloseButtonOverlayMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_CloseButtonOverlayMode(Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode)
    @close_button_overlay_mode.setter
    @typing.final
    def close_button_overlay_mode(self, value: TabViewCloseButtonOverlayMode) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TabView::get_CanReorderTabs()
    @_property
    def can_reorder_tabs(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_CanReorderTabs(System.Boolean)
    @can_reorder_tabs.setter
    @typing.final
    def can_reorder_tabs(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TabView::get_CanDragTabs()
    @_property
    def can_drag_tabs(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_CanDragTabs(System.Boolean)
    @can_drag_tabs.setter
    @typing.final
    def can_drag_tabs(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TabView::get_AllowDropTabs()
    @_property
    def allow_drop_tabs(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_AllowDropTabs(System.Boolean)
    @allow_drop_tabs.setter
    @typing.final
    def allow_drop_tabs(self, value: bool) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.TabView::get_AddTabButtonCommandParameter()
    @_property
    def add_tab_button_command_parameter(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_AddTabButtonCommandParameter(System.Object)
    @add_tab_button_command_parameter.setter
    @typing.final
    def add_tab_button_command_parameter(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.Input.ICommand Microsoft.UI.Xaml.Controls.TabView::get_AddTabButtonCommand()
    @_property
    def add_tab_button_command(self) -> windows_ui_xaml_input.ICommand: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabView::put_AddTabButtonCommand(Windows.UI.Xaml.Input.ICommand)
    @add_tab_button_command.setter
    @typing.final
    def add_tab_button_command(self, value: windows_ui_xaml_input.ICommand) -> None: ...
    # Windows.Foundation.Collections.IVector`1<System.Object> Microsoft.UI.Xaml.Controls.TabView::get_TabItems()
    @_property
    @typing.final
    def tab_items(self) -> typing.MutableSequence[winrt.system.Object]: ...

class TabViewItem_Static(windows_ui_xaml_controls.ListViewItem_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabViewItem::get_HeaderProperty()
    @_property
    @typing.final
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabViewItem::get_HeaderTemplateProperty()
    @_property
    @typing.final
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabViewItem::get_IconSourceProperty()
    @_property
    @typing.final
    def icon_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabViewItem::get_IsClosableProperty()
    @_property
    @typing.final
    def is_closable_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabViewItem::get_TabViewTemplateSettingsProperty()
    @_property
    @typing.final
    def tab_view_template_settings_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TabViewItem(windows_ui_xaml_controls.ListViewItem, metaclass=TabViewItem_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TabViewItem::add_CloseRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TabViewItem,Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs>)
    def add_close_requested(self, handler: windows_foundation.TypedEventHandler[TabViewItem, TabViewTabCloseRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TabViewItem::remove_CloseRequested(Windows.Foundation.EventRegistrationToken)
    def remove_close_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TabViewItem::get_IsClosable()
    @_property
    def is_closable(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabViewItem::put_IsClosable(System.Boolean)
    @is_closable.setter
    @typing.final
    def is_closable(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.IconSource Microsoft.UI.Xaml.Controls.TabViewItem::get_IconSource()
    @_property
    def icon_source(self) -> IconSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabViewItem::put_IconSource(Microsoft.UI.Xaml.Controls.IconSource)
    @icon_source.setter
    @typing.final
    def icon_source(self, value: IconSource) -> None: ...
    # Windows.UI.Xaml.DataTemplate Microsoft.UI.Xaml.Controls.TabViewItem::get_HeaderTemplate()
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabViewItem::put_HeaderTemplate(Windows.UI.Xaml.DataTemplate)
    @header_template.setter
    @typing.final
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.TabViewItem::get_Header()
    @_property
    def header(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabViewItem::put_Header(System.Object)
    @header.setter
    @typing.final
    def header(self, value: winrt.system.Object) -> None: ...
    # Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings Microsoft.UI.Xaml.Controls.TabViewItem::get_TabViewTemplateSettings()
    @_property
    @typing.final
    def tab_view_template_settings(self) -> TabViewItemTemplateSettings: ...

class TabViewItemTemplateSettings_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings::get_IconElementProperty()
    @_property
    @typing.final
    def icon_element_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings::get_TabGeometryProperty()
    @_property
    @typing.final
    def tab_geometry_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TabViewItemTemplateSettings(windows_ui_xaml.DependencyObject, metaclass=TabViewItemTemplateSettings_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Controls.IconElement Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings::get_IconElement()
    @_property
    def icon_element(self) -> windows_ui_xaml_controls.IconElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings::put_IconElement(Windows.UI.Xaml.Controls.IconElement)
    @icon_element.setter
    @typing.final
    def icon_element(self, value: windows_ui_xaml_controls.IconElement) -> None: ...
    # Windows.UI.Xaml.Media.Geometry Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings::get_TabGeometry()
    @_property
    def tab_geometry(self) -> windows_ui_xaml_media.Geometry: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings::put_TabGeometry(Windows.UI.Xaml.Media.Geometry)
    @tab_geometry.setter
    @typing.final
    def tab_geometry(self, value: windows_ui_xaml_media.Geometry) -> None: ...

@typing.final
class TabViewTabCloseRequestedEventArgs(winrt.system.Object):
    # System.Object Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs::get_Item()
    @_property
    def item(self) -> winrt.system.Object: ...
    # Microsoft.UI.Xaml.Controls.TabViewItem Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs::get_Tab()
    @_property
    def tab(self) -> TabViewItem: ...

@typing.final
class TabViewTabDragCompletedEventArgs(winrt.system.Object):
    # Windows.ApplicationModel.DataTransfer.DataPackageOperation Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs::get_DropResult()
    @_property
    def drop_result(self) -> windows_applicationmodel_datatransfer.DataPackageOperation: ...
    # System.Object Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs::get_Item()
    @_property
    def item(self) -> winrt.system.Object: ...
    # Microsoft.UI.Xaml.Controls.TabViewItem Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs::get_Tab()
    @_property
    def tab(self) -> TabViewItem: ...

@typing.final
class TabViewTabDragStartingEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs::get_Cancel()
    @_property
    def cancel(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs::put_Cancel(System.Boolean)
    @cancel.setter
    def cancel(self, value: bool) -> None: ...
    # Windows.ApplicationModel.DataTransfer.DataPackage Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs::get_Data()
    @_property
    def data(self) -> windows_applicationmodel_datatransfer.DataPackage: ...
    # System.Object Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs::get_Item()
    @_property
    def item(self) -> winrt.system.Object: ...
    # Microsoft.UI.Xaml.Controls.TabViewItem Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs::get_Tab()
    @_property
    def tab(self) -> TabViewItem: ...

@typing.final
class TabViewTabDroppedOutsideEventArgs(winrt.system.Object):
    # System.Object Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs::get_Item()
    @_property
    def item(self) -> winrt.system.Object: ...
    # Microsoft.UI.Xaml.Controls.TabViewItem Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs::get_Tab()
    @_property
    def tab(self) -> TabViewItem: ...

class TeachingTip_Static(windows_ui_xaml_controls.ContentControl_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_ActionButtonCommandParameterProperty()
    @_property
    @typing.final
    def action_button_command_parameter_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_ActionButtonCommandProperty()
    @_property
    @typing.final
    def action_button_command_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_ActionButtonContentProperty()
    @_property
    @typing.final
    def action_button_content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_ActionButtonStyleProperty()
    @_property
    @typing.final
    def action_button_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_CloseButtonCommandParameterProperty()
    @_property
    @typing.final
    def close_button_command_parameter_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_CloseButtonCommandProperty()
    @_property
    @typing.final
    def close_button_command_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_CloseButtonContentProperty()
    @_property
    @typing.final
    def close_button_content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_CloseButtonStyleProperty()
    @_property
    @typing.final
    def close_button_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_HeroContentPlacementProperty()
    @_property
    @typing.final
    def hero_content_placement_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_HeroContentProperty()
    @_property
    @typing.final
    def hero_content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_IconSourceProperty()
    @_property
    @typing.final
    def icon_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_IsLightDismissEnabledProperty()
    @_property
    @typing.final
    def is_light_dismiss_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_IsOpenProperty()
    @_property
    @typing.final
    def is_open_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_PlacementMarginProperty()
    @_property
    @typing.final
    def placement_margin_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_PreferredPlacementProperty()
    @_property
    @typing.final
    def preferred_placement_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_ShouldConstrainToRootBoundsProperty()
    @_property
    @typing.final
    def should_constrain_to_root_bounds_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_SubtitleProperty()
    @_property
    @typing.final
    def subtitle_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_TailVisibilityProperty()
    @_property
    @typing.final
    def tail_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_TargetProperty()
    @_property
    @typing.final
    def target_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_TemplateSettingsProperty()
    @_property
    @typing.final
    def template_settings_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTip::get_TitleProperty()
    @_property
    @typing.final
    def title_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TeachingTip(windows_ui_xaml_controls.ContentControl, metaclass=TeachingTip_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TeachingTip::add_ActionButtonClick(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TeachingTip,System.Object>)
    def add_action_button_click(self, handler: windows_foundation.TypedEventHandler[TeachingTip, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::remove_ActionButtonClick(Windows.Foundation.EventRegistrationToken)
    def remove_action_button_click(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TeachingTip::add_CloseButtonClick(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TeachingTip,System.Object>)
    def add_close_button_click(self, handler: windows_foundation.TypedEventHandler[TeachingTip, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::remove_CloseButtonClick(Windows.Foundation.EventRegistrationToken)
    def remove_close_button_click(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TeachingTip::add_Closed(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TeachingTip,Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs>)
    def add_closed(self, handler: windows_foundation.TypedEventHandler[TeachingTip, TeachingTipClosedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::remove_Closed(Windows.Foundation.EventRegistrationToken)
    def remove_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TeachingTip::add_Closing(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TeachingTip,Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs>)
    def add_closing(self, handler: windows_foundation.TypedEventHandler[TeachingTip, TeachingTipClosingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::remove_Closing(Windows.Foundation.EventRegistrationToken)
    def remove_closing(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.TeachingTip::get_Title()
    @_property
    def title(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_Title(System.String)
    @title.setter
    @typing.final
    def title(self, value: str) -> None: ...
    # Windows.UI.Xaml.FrameworkElement Microsoft.UI.Xaml.Controls.TeachingTip::get_Target()
    @_property
    def target(self) -> windows_ui_xaml.FrameworkElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_Target(Windows.UI.Xaml.FrameworkElement)
    @target.setter
    @typing.final
    def target(self, value: windows_ui_xaml.FrameworkElement) -> None: ...
    # Microsoft.UI.Xaml.Controls.TeachingTipTailVisibility Microsoft.UI.Xaml.Controls.TeachingTip::get_TailVisibility()
    @_property
    def tail_visibility(self) -> TeachingTipTailVisibility: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_TailVisibility(Microsoft.UI.Xaml.Controls.TeachingTipTailVisibility)
    @tail_visibility.setter
    @typing.final
    def tail_visibility(self, value: TeachingTipTailVisibility) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.TeachingTip::get_Subtitle()
    @_property
    def subtitle(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_Subtitle(System.String)
    @subtitle.setter
    @typing.final
    def subtitle(self, value: str) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TeachingTip::get_ShouldConstrainToRootBounds()
    @_property
    def should_constrain_to_root_bounds(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_ShouldConstrainToRootBounds(System.Boolean)
    @should_constrain_to_root_bounds.setter
    @typing.final
    def should_constrain_to_root_bounds(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode Microsoft.UI.Xaml.Controls.TeachingTip::get_PreferredPlacement()
    @_property
    def preferred_placement(self) -> TeachingTipPlacementMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_PreferredPlacement(Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode)
    @preferred_placement.setter
    @typing.final
    def preferred_placement(self, value: TeachingTipPlacementMode) -> None: ...
    # Windows.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.TeachingTip::get_PlacementMargin()
    @_property
    def placement_margin(self) -> windows_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_PlacementMargin(Windows.UI.Xaml.Thickness)
    @placement_margin.setter
    @typing.final
    def placement_margin(self, value: typing.Union[windows_ui_xaml.Thickness, typing.Tuple[winrt.system.Double, winrt.system.Double, winrt.system.Double, winrt.system.Double]]) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TeachingTip::get_IsOpen()
    @_property
    def is_open(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_IsOpen(System.Boolean)
    @is_open.setter
    @typing.final
    def is_open(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TeachingTip::get_IsLightDismissEnabled()
    @_property
    def is_light_dismiss_enabled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_IsLightDismissEnabled(System.Boolean)
    @is_light_dismiss_enabled.setter
    @typing.final
    def is_light_dismiss_enabled(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.IconSource Microsoft.UI.Xaml.Controls.TeachingTip::get_IconSource()
    @_property
    def icon_source(self) -> IconSource: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_IconSource(Microsoft.UI.Xaml.Controls.IconSource)
    @icon_source.setter
    @typing.final
    def icon_source(self, value: IconSource) -> None: ...
    # Microsoft.UI.Xaml.Controls.TeachingTipHeroContentPlacementMode Microsoft.UI.Xaml.Controls.TeachingTip::get_HeroContentPlacement()
    @_property
    def hero_content_placement(self) -> TeachingTipHeroContentPlacementMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_HeroContentPlacement(Microsoft.UI.Xaml.Controls.TeachingTipHeroContentPlacementMode)
    @hero_content_placement.setter
    @typing.final
    def hero_content_placement(self, value: TeachingTipHeroContentPlacementMode) -> None: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.TeachingTip::get_HeroContent()
    @_property
    def hero_content(self) -> windows_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_HeroContent(Windows.UI.Xaml.UIElement)
    @hero_content.setter
    @typing.final
    def hero_content(self, value: windows_ui_xaml.UIElement) -> None: ...
    # Windows.UI.Xaml.Style Microsoft.UI.Xaml.Controls.TeachingTip::get_CloseButtonStyle()
    @_property
    def close_button_style(self) -> windows_ui_xaml.Style: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_CloseButtonStyle(Windows.UI.Xaml.Style)
    @close_button_style.setter
    @typing.final
    def close_button_style(self, value: windows_ui_xaml.Style) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.TeachingTip::get_CloseButtonContent()
    @_property
    def close_button_content(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_CloseButtonContent(System.Object)
    @close_button_content.setter
    @typing.final
    def close_button_content(self, value: winrt.system.Object) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.TeachingTip::get_CloseButtonCommandParameter()
    @_property
    def close_button_command_parameter(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_CloseButtonCommandParameter(System.Object)
    @close_button_command_parameter.setter
    @typing.final
    def close_button_command_parameter(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.Input.ICommand Microsoft.UI.Xaml.Controls.TeachingTip::get_CloseButtonCommand()
    @_property
    def close_button_command(self) -> windows_ui_xaml_input.ICommand: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_CloseButtonCommand(Windows.UI.Xaml.Input.ICommand)
    @close_button_command.setter
    @typing.final
    def close_button_command(self, value: windows_ui_xaml_input.ICommand) -> None: ...
    # Windows.UI.Xaml.Style Microsoft.UI.Xaml.Controls.TeachingTip::get_ActionButtonStyle()
    @_property
    def action_button_style(self) -> windows_ui_xaml.Style: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_ActionButtonStyle(Windows.UI.Xaml.Style)
    @action_button_style.setter
    @typing.final
    def action_button_style(self, value: windows_ui_xaml.Style) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.TeachingTip::get_ActionButtonContent()
    @_property
    def action_button_content(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_ActionButtonContent(System.Object)
    @action_button_content.setter
    @typing.final
    def action_button_content(self, value: winrt.system.Object) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.TeachingTip::get_ActionButtonCommandParameter()
    @_property
    def action_button_command_parameter(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_ActionButtonCommandParameter(System.Object)
    @action_button_command_parameter.setter
    @typing.final
    def action_button_command_parameter(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.Input.ICommand Microsoft.UI.Xaml.Controls.TeachingTip::get_ActionButtonCommand()
    @_property
    def action_button_command(self) -> windows_ui_xaml_input.ICommand: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTip::put_ActionButtonCommand(Windows.UI.Xaml.Input.ICommand)
    @action_button_command.setter
    @typing.final
    def action_button_command(self, value: windows_ui_xaml_input.ICommand) -> None: ...
    # Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings Microsoft.UI.Xaml.Controls.TeachingTip::get_TemplateSettings()
    @_property
    @typing.final
    def template_settings(self) -> TeachingTipTemplateSettings: ...

@typing.final
class TeachingTipClosedEventArgs(winrt.system.Object):
    # Microsoft.UI.Xaml.Controls.TeachingTipCloseReason Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs::get_Reason()
    @_property
    def reason(self) -> TeachingTipCloseReason: ...

@typing.final
class TeachingTipClosingEventArgs(winrt.system.Object):
    # Windows.Foundation.Deferral Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs::get_Cancel()
    @_property
    def cancel(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs::put_Cancel(System.Boolean)
    @cancel.setter
    def cancel(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.TeachingTipCloseReason Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs::get_Reason()
    @_property
    def reason(self) -> TeachingTipCloseReason: ...

class TeachingTipTemplateSettings_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings::get_IconElementProperty()
    @_property
    @typing.final
    def icon_element_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings::get_TopLeftHighlightMarginProperty()
    @_property
    @typing.final
    def top_left_highlight_margin_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings::get_TopRightHighlightMarginProperty()
    @_property
    @typing.final
    def top_right_highlight_margin_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TeachingTipTemplateSettings(windows_ui_xaml.DependencyObject, metaclass=TeachingTipTemplateSettings_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings::get_TopRightHighlightMargin()
    @_property
    def top_right_highlight_margin(self) -> windows_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings::put_TopRightHighlightMargin(Windows.UI.Xaml.Thickness)
    @top_right_highlight_margin.setter
    @typing.final
    def top_right_highlight_margin(self, value: typing.Union[windows_ui_xaml.Thickness, typing.Tuple[winrt.system.Double, winrt.system.Double, winrt.system.Double, winrt.system.Double]]) -> None: ...
    # Windows.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings::get_TopLeftHighlightMargin()
    @_property
    def top_left_highlight_margin(self) -> windows_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings::put_TopLeftHighlightMargin(Windows.UI.Xaml.Thickness)
    @top_left_highlight_margin.setter
    @typing.final
    def top_left_highlight_margin(self, value: typing.Union[windows_ui_xaml.Thickness, typing.Tuple[winrt.system.Double, winrt.system.Double, winrt.system.Double, winrt.system.Double]]) -> None: ...
    # Windows.UI.Xaml.Controls.IconElement Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings::get_IconElement()
    @_property
    def icon_element(self) -> windows_ui_xaml_controls.IconElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings::put_IconElement(Windows.UI.Xaml.Controls.IconElement)
    @icon_element.setter
    @typing.final
    def icon_element(self, value: windows_ui_xaml_controls.IconElement) -> None: ...

class TextCommandBarFlyout_Static(CommandBarFlyout_Static):
    pass

class TextCommandBarFlyout(CommandBarFlyout, metaclass=TextCommandBarFlyout_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

class ToggleSplitButton_Static(SplitButton_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.ToggleSplitButton::get_IsCheckedProperty()
    @_property
    @typing.final
    def is_checked_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ToggleSplitButton(SplitButton, metaclass=ToggleSplitButton_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.ToggleSplitButton::add_IsCheckedChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ToggleSplitButton,Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs>)
    def add_is_checked_changed(self, handler: windows_foundation.TypedEventHandler[ToggleSplitButton, ToggleSplitButtonIsCheckedChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.ToggleSplitButton::remove_IsCheckedChanged(Windows.Foundation.EventRegistrationToken)
    def remove_is_checked_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.ToggleSplitButton::get_IsChecked()
    @_property
    def is_checked(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.ToggleSplitButton::put_IsChecked(System.Boolean)
    @is_checked.setter
    @typing.final
    def is_checked(self, value: bool) -> None: ...

@typing.final
class ToggleSplitButtonIsCheckedChangedEventArgs(winrt.system.Object):
    pass

class TreeView_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeView::get_SelectedItemProperty()
    @_property
    @typing.final
    def selected_item_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeView::get_SelectionModeProperty()
    @_property
    @typing.final
    def selection_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeView::get_CanDragItemsProperty()
    @_property
    @typing.final
    def can_drag_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeView::get_CanReorderItemsProperty()
    @_property
    @typing.final
    def can_reorder_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeView::get_ItemContainerStyleProperty()
    @_property
    @typing.final
    def item_container_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeView::get_ItemContainerStyleSelectorProperty()
    @_property
    @typing.final
    def item_container_style_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeView::get_ItemContainerTransitionsProperty()
    @_property
    @typing.final
    def item_container_transitions_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeView::get_ItemTemplateProperty()
    @_property
    @typing.final
    def item_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeView::get_ItemTemplateSelectorProperty()
    @_property
    @typing.final
    def item_template_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeView::get_ItemsSourceProperty()
    @_property
    @typing.final
    def items_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TreeView(windows_ui_xaml_controls.Control, metaclass=TreeView_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::Collapse(Microsoft.UI.Xaml.Controls.TreeViewNode)
    def collapse(self, value: TreeViewNode, /) -> None: ...
    @typing.final
    # Windows.UI.Xaml.DependencyObject Microsoft.UI.Xaml.Controls.TreeView::ContainerFromItem(System.Object)
    def container_from_item(self, item: winrt.system.Object, /) -> windows_ui_xaml.DependencyObject: ...
    @typing.final
    # Windows.UI.Xaml.DependencyObject Microsoft.UI.Xaml.Controls.TreeView::ContainerFromNode(Microsoft.UI.Xaml.Controls.TreeViewNode)
    def container_from_node(self, node: TreeViewNode, /) -> windows_ui_xaml.DependencyObject: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::Expand(Microsoft.UI.Xaml.Controls.TreeViewNode)
    def expand(self, value: TreeViewNode, /) -> None: ...
    @typing.final
    # System.Object Microsoft.UI.Xaml.Controls.TreeView::ItemFromContainer(Windows.UI.Xaml.DependencyObject)
    def item_from_container(self, container: windows_ui_xaml.DependencyObject, /) -> winrt.system.Object: ...
    @typing.final
    # Microsoft.UI.Xaml.Controls.TreeViewNode Microsoft.UI.Xaml.Controls.TreeView::NodeFromContainer(Windows.UI.Xaml.DependencyObject)
    def node_from_container(self, container: windows_ui_xaml.DependencyObject, /) -> TreeViewNode: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::SelectAll()
    def select_all(self) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TreeView::add_Collapsed(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TreeView,Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs>)
    def add_collapsed(self, handler: windows_foundation.TypedEventHandler[TreeView, TreeViewCollapsedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::remove_Collapsed(Windows.Foundation.EventRegistrationToken)
    def remove_collapsed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TreeView::add_Expanding(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TreeView,Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs>)
    def add_expanding(self, handler: windows_foundation.TypedEventHandler[TreeView, TreeViewExpandingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::remove_Expanding(Windows.Foundation.EventRegistrationToken)
    def remove_expanding(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TreeView::add_ItemInvoked(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TreeView,Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs>)
    def add_item_invoked(self, handler: windows_foundation.TypedEventHandler[TreeView, TreeViewItemInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::remove_ItemInvoked(Windows.Foundation.EventRegistrationToken)
    def remove_item_invoked(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TreeView::add_DragItemsCompleted(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TreeView,Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs>)
    def add_drag_items_completed(self, handler: windows_foundation.TypedEventHandler[TreeView, TreeViewDragItemsCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::remove_DragItemsCompleted(Windows.Foundation.EventRegistrationToken)
    def remove_drag_items_completed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TreeView::add_DragItemsStarting(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TreeView,Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs>)
    def add_drag_items_starting(self, handler: windows_foundation.TypedEventHandler[TreeView, TreeViewDragItemsStartingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::remove_DragItemsStarting(Windows.Foundation.EventRegistrationToken)
    def remove_drag_items_starting(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Microsoft.UI.Xaml.Controls.TreeViewSelectionMode Microsoft.UI.Xaml.Controls.TreeView::get_SelectionMode()
    @_property
    def selection_mode(self) -> TreeViewSelectionMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::put_SelectionMode(Microsoft.UI.Xaml.Controls.TreeViewSelectionMode)
    @selection_mode.setter
    @typing.final
    def selection_mode(self, value: TreeViewSelectionMode) -> None: ...
    # Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.TreeViewNode> Microsoft.UI.Xaml.Controls.TreeView::get_RootNodes()
    @_property
    @typing.final
    def root_nodes(self) -> typing.MutableSequence[TreeViewNode]: ...
    # Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.TreeViewNode> Microsoft.UI.Xaml.Controls.TreeView::get_SelectedNodes()
    @_property
    @typing.final
    def selected_nodes(self) -> typing.MutableSequence[TreeViewNode]: ...
    # Microsoft.UI.Xaml.Controls.TreeViewNode Microsoft.UI.Xaml.Controls.TreeView::get_SelectedNode()
    @_property
    def selected_node(self) -> TreeViewNode: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::put_SelectedNode(Microsoft.UI.Xaml.Controls.TreeViewNode)
    @selected_node.setter
    @typing.final
    def selected_node(self, value: TreeViewNode) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.TreeView::get_SelectedItem()
    @_property
    def selected_item(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::put_SelectedItem(System.Object)
    @selected_item.setter
    @typing.final
    def selected_item(self, value: winrt.system.Object) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.TreeView::get_ItemsSource()
    @_property
    def items_source(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::put_ItemsSource(System.Object)
    @items_source.setter
    @typing.final
    def items_source(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.Controls.DataTemplateSelector Microsoft.UI.Xaml.Controls.TreeView::get_ItemTemplateSelector()
    @_property
    def item_template_selector(self) -> windows_ui_xaml_controls.DataTemplateSelector: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::put_ItemTemplateSelector(Windows.UI.Xaml.Controls.DataTemplateSelector)
    @item_template_selector.setter
    @typing.final
    def item_template_selector(self, value: windows_ui_xaml_controls.DataTemplateSelector) -> None: ...
    # Windows.UI.Xaml.DataTemplate Microsoft.UI.Xaml.Controls.TreeView::get_ItemTemplate()
    @_property
    def item_template(self) -> windows_ui_xaml.DataTemplate: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::put_ItemTemplate(Windows.UI.Xaml.DataTemplate)
    @item_template.setter
    @typing.final
    def item_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    # Windows.UI.Xaml.Media.Animation.TransitionCollection Microsoft.UI.Xaml.Controls.TreeView::get_ItemContainerTransitions()
    @_property
    def item_container_transitions(self) -> windows_ui_xaml_media_animation.TransitionCollection: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::put_ItemContainerTransitions(Windows.UI.Xaml.Media.Animation.TransitionCollection)
    @item_container_transitions.setter
    @typing.final
    def item_container_transitions(self, value: windows_ui_xaml_media_animation.TransitionCollection) -> None: ...
    # Windows.UI.Xaml.Controls.StyleSelector Microsoft.UI.Xaml.Controls.TreeView::get_ItemContainerStyleSelector()
    @_property
    def item_container_style_selector(self) -> windows_ui_xaml_controls.StyleSelector: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::put_ItemContainerStyleSelector(Windows.UI.Xaml.Controls.StyleSelector)
    @item_container_style_selector.setter
    @typing.final
    def item_container_style_selector(self, value: windows_ui_xaml_controls.StyleSelector) -> None: ...
    # Windows.UI.Xaml.Style Microsoft.UI.Xaml.Controls.TreeView::get_ItemContainerStyle()
    @_property
    def item_container_style(self) -> windows_ui_xaml.Style: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::put_ItemContainerStyle(Windows.UI.Xaml.Style)
    @item_container_style.setter
    @typing.final
    def item_container_style(self, value: windows_ui_xaml.Style) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TreeView::get_CanReorderItems()
    @_property
    def can_reorder_items(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::put_CanReorderItems(System.Boolean)
    @can_reorder_items.setter
    @typing.final
    def can_reorder_items(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TreeView::get_CanDragItems()
    @_property
    def can_drag_items(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeView::put_CanDragItems(System.Boolean)
    @can_drag_items.setter
    @typing.final
    def can_drag_items(self, value: bool) -> None: ...
    # Windows.Foundation.Collections.IVector`1<System.Object> Microsoft.UI.Xaml.Controls.TreeView::get_SelectedItems()
    @_property
    @typing.final
    def selected_items(self) -> typing.MutableSequence[winrt.system.Object]: ...

@typing.final
class TreeViewCollapsedEventArgs(winrt.system.Object):
    # Microsoft.UI.Xaml.Controls.TreeViewNode Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs::get_Node()
    @_property
    def node(self) -> TreeViewNode: ...
    # System.Object Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs::get_Item()
    @_property
    def item(self) -> winrt.system.Object: ...

@typing.final
class TreeViewDragItemsCompletedEventArgs(winrt.system.Object):
    # Windows.ApplicationModel.DataTransfer.DataPackageOperation Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs::get_DropResult()
    @_property
    def drop_result(self) -> windows_applicationmodel_datatransfer.DataPackageOperation: ...
    # Windows.Foundation.Collections.IVectorView`1<System.Object> Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs::get_Items()
    @_property
    def items(self) -> typing.Sequence[winrt.system.Object]: ...
    # System.Object Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs::get_NewParentItem()
    @_property
    def new_parent_item(self) -> winrt.system.Object: ...

@typing.final
class TreeViewDragItemsStartingEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs::get_Cancel()
    @_property
    def cancel(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs::put_Cancel(System.Boolean)
    @cancel.setter
    def cancel(self, value: bool) -> None: ...
    # Windows.ApplicationModel.DataTransfer.DataPackage Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs::get_Data()
    @_property
    def data(self) -> windows_applicationmodel_datatransfer.DataPackage: ...
    # Windows.Foundation.Collections.IVector`1<System.Object> Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs::get_Items()
    @_property
    def items(self) -> typing.MutableSequence[winrt.system.Object]: ...

@typing.final
class TreeViewExpandingEventArgs(winrt.system.Object):
    # Microsoft.UI.Xaml.Controls.TreeViewNode Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs::get_Node()
    @_property
    def node(self) -> TreeViewNode: ...
    # System.Object Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs::get_Item()
    @_property
    def item(self) -> winrt.system.Object: ...

class TreeViewItem_Static(windows_ui_xaml_controls.ListViewItem_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewItem::get_CollapsedGlyphProperty()
    @_property
    @typing.final
    def collapsed_glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewItem::get_ExpandedGlyphProperty()
    @_property
    @typing.final
    def expanded_glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewItem::get_GlyphBrushProperty()
    @_property
    @typing.final
    def glyph_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewItem::get_GlyphOpacityProperty()
    @_property
    @typing.final
    def glyph_opacity_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewItem::get_GlyphSizeProperty()
    @_property
    @typing.final
    def glyph_size_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewItem::get_IsExpandedProperty()
    @_property
    @typing.final
    def is_expanded_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewItem::get_TreeViewItemTemplateSettingsProperty()
    @_property
    @typing.final
    def tree_view_item_template_settings_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewItem::get_HasUnrealizedChildrenProperty()
    @_property
    @typing.final
    def has_unrealized_children_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewItem::get_ItemsSourceProperty()
    @_property
    @typing.final
    def items_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TreeViewItem(windows_ui_xaml_controls.ListViewItem, metaclass=TreeViewItem_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TreeViewItem::get_IsExpanded()
    @_property
    def is_expanded(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeViewItem::put_IsExpanded(System.Boolean)
    @is_expanded.setter
    @typing.final
    def is_expanded(self, value: bool) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.TreeViewItem::get_GlyphSize()
    @_property
    def glyph_size(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeViewItem::put_GlyphSize(System.Double)
    @glyph_size.setter
    @typing.final
    def glyph_size(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.TreeViewItem::get_GlyphOpacity()
    @_property
    def glyph_opacity(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeViewItem::put_GlyphOpacity(System.Double)
    @glyph_opacity.setter
    @typing.final
    def glyph_opacity(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.TreeViewItem::get_GlyphBrush()
    @_property
    def glyph_brush(self) -> windows_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeViewItem::put_GlyphBrush(Windows.UI.Xaml.Media.Brush)
    @glyph_brush.setter
    @typing.final
    def glyph_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.TreeViewItem::get_ExpandedGlyph()
    @_property
    def expanded_glyph(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeViewItem::put_ExpandedGlyph(System.String)
    @expanded_glyph.setter
    @typing.final
    def expanded_glyph(self, value: str) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.TreeViewItem::get_CollapsedGlyph()
    @_property
    def collapsed_glyph(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeViewItem::put_CollapsedGlyph(System.String)
    @collapsed_glyph.setter
    @typing.final
    def collapsed_glyph(self, value: str) -> None: ...
    # Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings Microsoft.UI.Xaml.Controls.TreeViewItem::get_TreeViewItemTemplateSettings()
    @_property
    @typing.final
    def tree_view_item_template_settings(self) -> TreeViewItemTemplateSettings: ...
    # System.Object Microsoft.UI.Xaml.Controls.TreeViewItem::get_ItemsSource()
    @_property
    def items_source(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeViewItem::put_ItemsSource(System.Object)
    @items_source.setter
    @typing.final
    def items_source(self, value: winrt.system.Object) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TreeViewItem::get_HasUnrealizedChildren()
    @_property
    def has_unrealized_children(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeViewItem::put_HasUnrealizedChildren(System.Boolean)
    @has_unrealized_children.setter
    @typing.final
    def has_unrealized_children(self, value: bool) -> None: ...

@typing.final
class TreeViewItemInvokedEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs::get_InvokedItem()
    @_property
    def invoked_item(self) -> winrt.system.Object: ...

class TreeViewItemTemplateSettings_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings::get_CollapsedGlyphVisibilityProperty()
    @_property
    @typing.final
    def collapsed_glyph_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings::get_DragItemsCountProperty()
    @_property
    @typing.final
    def drag_items_count_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings::get_ExpandedGlyphVisibilityProperty()
    @_property
    @typing.final
    def expanded_glyph_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings::get_IndentationProperty()
    @_property
    @typing.final
    def indentation_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TreeViewItemTemplateSettings(windows_ui_xaml.DependencyObject, metaclass=TreeViewItemTemplateSettings_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Visibility Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings::get_CollapsedGlyphVisibility()
    @_property
    @typing.final
    def collapsed_glyph_visibility(self) -> windows_ui_xaml.Visibility: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings::get_DragItemsCount()
    @_property
    @typing.final
    def drag_items_count(self) -> winrt.system.Int32: ...
    # Windows.UI.Xaml.Visibility Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings::get_ExpandedGlyphVisibility()
    @_property
    @typing.final
    def expanded_glyph_visibility(self) -> windows_ui_xaml.Visibility: ...
    # Windows.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings::get_Indentation()
    @_property
    @typing.final
    def indentation(self) -> windows_ui_xaml.Thickness: ...

class TreeViewList_Static(windows_ui_xaml_controls.ListView_Static):
    pass

class TreeViewList(windows_ui_xaml_controls.ListView, metaclass=TreeViewList_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

class TreeViewNode_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewNode::get_ContentProperty()
    @_property
    @typing.final
    def content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewNode::get_DepthProperty()
    @_property
    @typing.final
    def depth_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewNode::get_HasChildrenProperty()
    @_property
    @typing.final
    def has_children_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TreeViewNode::get_IsExpandedProperty()
    @_property
    @typing.final
    def is_expanded_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TreeViewNode(windows_ui_xaml.DependencyObject, metaclass=TreeViewNode_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TreeViewNode::get_IsExpanded()
    @_property
    def is_expanded(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeViewNode::put_IsExpanded(System.Boolean)
    @is_expanded.setter
    @typing.final
    def is_expanded(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TreeViewNode::get_HasUnrealizedChildren()
    @_property
    def has_unrealized_children(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeViewNode::put_HasUnrealizedChildren(System.Boolean)
    @has_unrealized_children.setter
    @typing.final
    def has_unrealized_children(self, value: bool) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.TreeViewNode::get_Content()
    @_property
    def content(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.TreeViewNode::put_Content(System.Object)
    @content.setter
    @typing.final
    def content(self, value: winrt.system.Object) -> None: ...
    # Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.TreeViewNode> Microsoft.UI.Xaml.Controls.TreeViewNode::get_Children()
    @_property
    @typing.final
    def children(self) -> typing.MutableSequence[TreeViewNode]: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.TreeViewNode::get_Depth()
    @_property
    @typing.final
    def depth(self) -> winrt.system.Int32: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.TreeViewNode::get_HasChildren()
    @_property
    @typing.final
    def has_children(self) -> bool: ...
    # Microsoft.UI.Xaml.Controls.TreeViewNode Microsoft.UI.Xaml.Controls.TreeViewNode::get_Parent()
    @_property
    @typing.final
    def parent(self) -> TreeViewNode: ...

class TwoPaneView_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TwoPaneView::get_MinTallModeHeightProperty()
    @_property
    @typing.final
    def min_tall_mode_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TwoPaneView::get_MinWideModeWidthProperty()
    @_property
    @typing.final
    def min_wide_mode_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TwoPaneView::get_ModeProperty()
    @_property
    @typing.final
    def mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TwoPaneView::get_Pane1LengthProperty()
    @_property
    @typing.final
    def pane1_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TwoPaneView::get_Pane1Property()
    @_property
    @typing.final
    def pane1_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TwoPaneView::get_Pane2LengthProperty()
    @_property
    @typing.final
    def pane2_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TwoPaneView::get_Pane2Property()
    @_property
    @typing.final
    def pane2_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TwoPaneView::get_PanePriorityProperty()
    @_property
    @typing.final
    def pane_priority_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TwoPaneView::get_TallModeConfigurationProperty()
    @_property
    @typing.final
    def tall_mode_configuration_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.TwoPaneView::get_WideModeConfigurationProperty()
    @_property
    @typing.final
    def wide_mode_configuration_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TwoPaneView(windows_ui_xaml_controls.Control, metaclass=TwoPaneView_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.TwoPaneView::add_ModeChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.TwoPaneView,System.Object>)
    def add_mode_changed(self, handler: windows_foundation.TypedEventHandler[TwoPaneView, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.TwoPaneView::remove_ModeChanged(Windows.Foundation.EventRegistrationToken)
    def remove_mode_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration Microsoft.UI.Xaml.Controls.TwoPaneView::get_WideModeConfiguration()
    @_property
    def wide_mode_configuration(self) -> TwoPaneViewWideModeConfiguration: ...
    # System.Void Microsoft.UI.Xaml.Controls.TwoPaneView::put_WideModeConfiguration(Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration)
    @wide_mode_configuration.setter
    @typing.final
    def wide_mode_configuration(self, value: TwoPaneViewWideModeConfiguration) -> None: ...
    # Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration Microsoft.UI.Xaml.Controls.TwoPaneView::get_TallModeConfiguration()
    @_property
    def tall_mode_configuration(self) -> TwoPaneViewTallModeConfiguration: ...
    # System.Void Microsoft.UI.Xaml.Controls.TwoPaneView::put_TallModeConfiguration(Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration)
    @tall_mode_configuration.setter
    @typing.final
    def tall_mode_configuration(self, value: TwoPaneViewTallModeConfiguration) -> None: ...
    # Microsoft.UI.Xaml.Controls.TwoPaneViewPriority Microsoft.UI.Xaml.Controls.TwoPaneView::get_PanePriority()
    @_property
    def pane_priority(self) -> TwoPaneViewPriority: ...
    # System.Void Microsoft.UI.Xaml.Controls.TwoPaneView::put_PanePriority(Microsoft.UI.Xaml.Controls.TwoPaneViewPriority)
    @pane_priority.setter
    @typing.final
    def pane_priority(self, value: TwoPaneViewPriority) -> None: ...
    # Windows.UI.Xaml.GridLength Microsoft.UI.Xaml.Controls.TwoPaneView::get_Pane2Length()
    @_property
    def pane2_length(self) -> windows_ui_xaml.GridLength: ...
    # System.Void Microsoft.UI.Xaml.Controls.TwoPaneView::put_Pane2Length(Windows.UI.Xaml.GridLength)
    @pane2_length.setter
    @typing.final
    def pane2_length(self, value: typing.Union[windows_ui_xaml.GridLength, typing.Tuple[winrt.system.Double, windows_ui_xaml.GridUnitType]]) -> None: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.TwoPaneView::get_Pane2()
    @_property
    def pane2(self) -> windows_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.TwoPaneView::put_Pane2(Windows.UI.Xaml.UIElement)
    @pane2.setter
    @typing.final
    def pane2(self, value: windows_ui_xaml.UIElement) -> None: ...
    # Windows.UI.Xaml.GridLength Microsoft.UI.Xaml.Controls.TwoPaneView::get_Pane1Length()
    @_property
    def pane1_length(self) -> windows_ui_xaml.GridLength: ...
    # System.Void Microsoft.UI.Xaml.Controls.TwoPaneView::put_Pane1Length(Windows.UI.Xaml.GridLength)
    @pane1_length.setter
    @typing.final
    def pane1_length(self, value: typing.Union[windows_ui_xaml.GridLength, typing.Tuple[winrt.system.Double, windows_ui_xaml.GridUnitType]]) -> None: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.TwoPaneView::get_Pane1()
    @_property
    def pane1(self) -> windows_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.TwoPaneView::put_Pane1(Windows.UI.Xaml.UIElement)
    @pane1.setter
    @typing.final
    def pane1(self, value: windows_ui_xaml.UIElement) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.TwoPaneView::get_MinWideModeWidth()
    @_property
    def min_wide_mode_width(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.TwoPaneView::put_MinWideModeWidth(System.Double)
    @min_wide_mode_width.setter
    @typing.final
    def min_wide_mode_width(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.TwoPaneView::get_MinTallModeHeight()
    @_property
    def min_tall_mode_height(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.TwoPaneView::put_MinTallModeHeight(System.Double)
    @min_tall_mode_height.setter
    @typing.final
    def min_tall_mode_height(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Controls.TwoPaneViewMode Microsoft.UI.Xaml.Controls.TwoPaneView::get_Mode()
    @_property
    @typing.final
    def mode(self) -> TwoPaneViewMode: ...

class UniformGridLayout_Static(VirtualizingLayout_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.UniformGridLayout::get_ItemsJustificationProperty()
    @_property
    @typing.final
    def items_justification_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.UniformGridLayout::get_ItemsStretchProperty()
    @_property
    @typing.final
    def items_stretch_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.UniformGridLayout::get_MaximumRowsOrColumnsProperty()
    @_property
    @typing.final
    def maximum_rows_or_columns_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.UniformGridLayout::get_MinColumnSpacingProperty()
    @_property
    @typing.final
    def min_column_spacing_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.UniformGridLayout::get_MinItemHeightProperty()
    @_property
    @typing.final
    def min_item_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.UniformGridLayout::get_MinItemWidthProperty()
    @_property
    @typing.final
    def min_item_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.UniformGridLayout::get_MinRowSpacingProperty()
    @_property
    @typing.final
    def min_row_spacing_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.UniformGridLayout::get_OrientationProperty()
    @_property
    @typing.final
    def orientation_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class UniformGridLayout(VirtualizingLayout, metaclass=UniformGridLayout_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Controls.Orientation Microsoft.UI.Xaml.Controls.UniformGridLayout::get_Orientation()
    @_property
    def orientation(self) -> windows_ui_xaml_controls.Orientation: ...
    # System.Void Microsoft.UI.Xaml.Controls.UniformGridLayout::put_Orientation(Windows.UI.Xaml.Controls.Orientation)
    @orientation.setter
    @typing.final
    def orientation(self, value: windows_ui_xaml_controls.Orientation) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.UniformGridLayout::get_MinRowSpacing()
    @_property
    def min_row_spacing(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.UniformGridLayout::put_MinRowSpacing(System.Double)
    @min_row_spacing.setter
    @typing.final
    def min_row_spacing(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.UniformGridLayout::get_MinItemWidth()
    @_property
    def min_item_width(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.UniformGridLayout::put_MinItemWidth(System.Double)
    @min_item_width.setter
    @typing.final
    def min_item_width(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.UniformGridLayout::get_MinItemHeight()
    @_property
    def min_item_height(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.UniformGridLayout::put_MinItemHeight(System.Double)
    @min_item_height.setter
    @typing.final
    def min_item_height(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.UniformGridLayout::get_MinColumnSpacing()
    @_property
    def min_column_spacing(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.UniformGridLayout::put_MinColumnSpacing(System.Double)
    @min_column_spacing.setter
    @typing.final
    def min_column_spacing(self, value: winrt.system.Double) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.UniformGridLayout::get_MaximumRowsOrColumns()
    @_property
    def maximum_rows_or_columns(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.UniformGridLayout::put_MaximumRowsOrColumns(System.Int32)
    @maximum_rows_or_columns.setter
    @typing.final
    def maximum_rows_or_columns(self, value: winrt.system.Int32) -> None: ...
    # Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch Microsoft.UI.Xaml.Controls.UniformGridLayout::get_ItemsStretch()
    @_property
    def items_stretch(self) -> UniformGridLayoutItemsStretch: ...
    # System.Void Microsoft.UI.Xaml.Controls.UniformGridLayout::put_ItemsStretch(Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch)
    @items_stretch.setter
    @typing.final
    def items_stretch(self, value: UniformGridLayoutItemsStretch) -> None: ...
    # Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification Microsoft.UI.Xaml.Controls.UniformGridLayout::get_ItemsJustification()
    @_property
    def items_justification(self) -> UniformGridLayoutItemsJustification: ...
    # System.Void Microsoft.UI.Xaml.Controls.UniformGridLayout::put_ItemsJustification(Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification)
    @items_justification.setter
    @typing.final
    def items_justification(self, value: UniformGridLayoutItemsJustification) -> None: ...

class VirtualizingLayout_Static(Layout_Static):
    pass

class VirtualizingLayout(Layout, metaclass=VirtualizingLayout_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.Size Microsoft.UI.Xaml.Controls.VirtualizingLayout::ArrangeOverride(Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext,Windows.Foundation.Size)
    def _arrange_override(self, context: VirtualizingLayoutContext, final_size: typing.Union[windows_foundation.Size, typing.Tuple[winrt.system.Single, winrt.system.Single]], /) -> windows_foundation.Size: ...
    # System.Void Microsoft.UI.Xaml.Controls.VirtualizingLayout::InitializeForContextCore(Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext)
    def _initialize_for_context_core(self, context: VirtualizingLayoutContext, /) -> None: ...
    # Windows.Foundation.Size Microsoft.UI.Xaml.Controls.VirtualizingLayout::MeasureOverride(Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext,Windows.Foundation.Size)
    def _measure_override(self, context: VirtualizingLayoutContext, available_size: typing.Union[windows_foundation.Size, typing.Tuple[winrt.system.Single, winrt.system.Single]], /) -> windows_foundation.Size: ...
    # System.Void Microsoft.UI.Xaml.Controls.VirtualizingLayout::OnItemsChangedCore(Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext,System.Object,Windows.UI.Xaml.Interop.NotifyCollectionChangedEventArgs)
    def _on_items_changed_core(self, context: VirtualizingLayoutContext, source: winrt.system.Object, args: windows_ui_xaml_interop.NotifyCollectionChangedEventArgs, /) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.VirtualizingLayout::UninitializeForContextCore(Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext)
    def _uninitialize_for_context_core(self, context: VirtualizingLayoutContext, /) -> None: ...

class VirtualizingLayoutContext_Static(LayoutContext_Static):
    pass

class VirtualizingLayoutContext(LayoutContext, metaclass=VirtualizingLayoutContext_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # System.Object Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext::GetItemAt(System.Int32)
    def get_item_at(self, index: winrt.system.Int32, /) -> winrt.system.Object: ...
    # System.Object Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext::GetItemAtCore(System.Int32)
    def _get_item_at_core(self, index: winrt.system.Int32, /) -> winrt.system.Object: ...
    @typing.final
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext::GetOrCreateElementAt(System.Int32)
    def get_or_create_element_at(self, index: winrt.system.Int32, /) -> windows_ui_xaml.UIElement: ...
    @typing.final
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext::GetOrCreateElementAt(System.Int32,Microsoft.UI.Xaml.Controls.ElementRealizationOptions)
    def get_or_create_element_at2(self, index: winrt.system.Int32, options: ElementRealizationOptions, /) -> windows_ui_xaml.UIElement: ...
    # Windows.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext::GetOrCreateElementAtCore(System.Int32,Microsoft.UI.Xaml.Controls.ElementRealizationOptions)
    def _get_or_create_element_at_core(self, index: winrt.system.Int32, options: ElementRealizationOptions, /) -> windows_ui_xaml.UIElement: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext::ItemCountCore()
    def _item_count_core(self) -> winrt.system.Int32: ...
    # Windows.Foundation.Rect Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext::RealizationRectCore()
    def _realization_rect_core(self) -> windows_foundation.Rect: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext::RecycleElement(Windows.UI.Xaml.UIElement)
    def recycle_element(self, element: windows_ui_xaml.UIElement, /) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext::RecycleElementCore(Windows.UI.Xaml.UIElement)
    def _recycle_element_core(self, element: windows_ui_xaml.UIElement, /) -> None: ...
    # Windows.Foundation.Point Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext::get_LayoutOrigin()
    @_property
    def layout_origin(self) -> windows_foundation.Point: ...
    # System.Void Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext::put_LayoutOrigin(Windows.Foundation.Point)
    @layout_origin.setter
    @typing.final
    def layout_origin(self, value: typing.Union[windows_foundation.Point, typing.Tuple[winrt.system.Single, winrt.system.Single]]) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext::get_ItemCount()
    @_property
    @typing.final
    def item_count(self) -> winrt.system.Int32: ...
    # Windows.Foundation.Rect Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext::get_RealizationRect()
    @_property
    @typing.final
    def realization_rect(self) -> windows_foundation.Rect: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext::get_RecommendedAnchorIndex()
    @_property
    @typing.final
    def recommended_anchor_index(self) -> winrt.system.Int32: ...

class WebView2_Static(windows_ui_xaml_controls.Control_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.WebView2::get_CanGoBackProperty()
    @_property
    @typing.final
    def can_go_back_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.WebView2::get_CanGoForwardProperty()
    @_property
    @typing.final
    def can_go_forward_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.WebView2::get_SourceProperty()
    @_property
    @typing.final
    def source_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class WebView2(windows_ui_xaml_controls.Control, metaclass=WebView2_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.WebView2::Close()
    def close(self) -> None: ...
    @typing.final
    # Windows.Foundation.IAsyncAction Microsoft.UI.Xaml.Controls.WebView2::EnsureCoreWebView2Async()
    def ensure_core_webview2_async(self) -> windows_foundation.IAsyncAction: ...
    @typing.final
    # Windows.Foundation.IAsyncOperation`1<System.String> Microsoft.UI.Xaml.Controls.WebView2::ExecuteScriptAsync(System.String)
    def execute_script_async(self, javascript_code: str, /) -> windows_foundation.IAsyncOperation[str]: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.WebView2::GoBack()
    def go_back(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.WebView2::GoForward()
    def go_forward(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.WebView2::NavigateToString(System.String)
    def navigate_to_string(self, html_content: str, /) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.WebView2::Reload()
    def reload(self) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.WebView2::add_CoreProcessFailed(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.WebView2,Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs>)
    def add_core_process_failed(self, handler: windows_foundation.TypedEventHandler[WebView2, microsoft_web_webview2_core.CoreWebView2ProcessFailedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.WebView2::remove_CoreProcessFailed(Windows.Foundation.EventRegistrationToken)
    def remove_core_process_failed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.WebView2::add_CoreWebView2Initialized(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.WebView2,Microsoft.UI.Xaml.Controls.CoreWebView2InitializedEventArgs>)
    def add_core_webview2_initialized(self, handler: windows_foundation.TypedEventHandler[WebView2, CoreWebView2InitializedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.WebView2::remove_CoreWebView2Initialized(Windows.Foundation.EventRegistrationToken)
    def remove_core_webview2_initialized(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.WebView2::add_NavigationCompleted(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.WebView2,Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs>)
    def add_navigation_completed(self, handler: windows_foundation.TypedEventHandler[WebView2, microsoft_web_webview2_core.CoreWebView2NavigationCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.WebView2::remove_NavigationCompleted(Windows.Foundation.EventRegistrationToken)
    def remove_navigation_completed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.WebView2::add_NavigationStarting(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.WebView2,Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs>)
    def add_navigation_starting(self, handler: windows_foundation.TypedEventHandler[WebView2, microsoft_web_webview2_core.CoreWebView2NavigationStartingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.WebView2::remove_NavigationStarting(Windows.Foundation.EventRegistrationToken)
    def remove_navigation_starting(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.WebView2::add_WebMessageReceived(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.WebView2,Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs>)
    def add_web_message_received(self, handler: windows_foundation.TypedEventHandler[WebView2, microsoft_web_webview2_core.CoreWebView2WebMessageReceivedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.WebView2::remove_WebMessageReceived(Windows.Foundation.EventRegistrationToken)
    def remove_web_message_received(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.Uri Microsoft.UI.Xaml.Controls.WebView2::get_Source()
    @_property
    def source(self) -> windows_foundation.Uri: ...
    # System.Void Microsoft.UI.Xaml.Controls.WebView2::put_Source(Windows.Foundation.Uri)
    @source.setter
    @typing.final
    def source(self, value: windows_foundation.Uri) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.WebView2::get_CanGoForward()
    @_property
    def can_go_forward(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.WebView2::put_CanGoForward(System.Boolean)
    @can_go_forward.setter
    @typing.final
    def can_go_forward(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.WebView2::get_CanGoBack()
    @_property
    def can_go_back(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.WebView2::put_CanGoBack(System.Boolean)
    @can_go_back.setter
    @typing.final
    def can_go_back(self, value: bool) -> None: ...
    # Microsoft.Web.WebView2.Core.CoreWebView2 Microsoft.UI.Xaml.Controls.WebView2::get_CoreWebView2()
    @_property
    @typing.final
    def core_webview2(self) -> microsoft_web_webview2_core.CoreWebView2: ...

@typing.final
class XamlControlsResources_Static(windows_ui_xaml.ResourceDictionary_Static):
    # System.Void Microsoft.UI.Xaml.Controls.XamlControlsResources::EnsureRevealLights(Windows.UI.Xaml.UIElement)
    def ensure_reveal_lights(cls, element: windows_ui_xaml.UIElement, /) -> None: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.XamlControlsResources::get_ControlsResourcesVersionProperty()
    @_property
    def controls_resources_version_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class XamlControlsResources(windows_ui_xaml.ResourceDictionary, metaclass=XamlControlsResources_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Microsoft.UI.Xaml.Controls.ControlsResourcesVersion Microsoft.UI.Xaml.Controls.XamlControlsResources::get_ControlsResourcesVersion()
    @_property
    def controls_resources_version(self) -> ControlsResourcesVersion: ...
    # System.Void Microsoft.UI.Xaml.Controls.XamlControlsResources::put_ControlsResourcesVersion(Microsoft.UI.Xaml.Controls.ControlsResourcesVersion)
    @controls_resources_version.setter
    def controls_resources_version(self, value: ControlsResourcesVersion) -> None: ...

@typing.final
class _IAnimatedVisual: ...

class IAnimatedVisual(windows_foundation.IClosable, winrt._winrt.IInspectable):
    # Windows.Foundation.TimeSpan Microsoft.UI.Xaml.Controls.IAnimatedVisual::get_Duration()
    @_property
    @abstractmethod
    def duration(self) -> datetime.timedelta: ...
    # Windows.UI.Composition.Visual Microsoft.UI.Xaml.Controls.IAnimatedVisual::get_RootVisual()
    @_property
    @abstractmethod
    def root_visual(self) -> windows_ui_composition.Visual: ...
    # Windows.Foundation.Numerics.Vector2 Microsoft.UI.Xaml.Controls.IAnimatedVisual::get_Size()
    @_property
    @abstractmethod
    def size(self) -> windows_foundation_numerics.Vector2: ...

@typing.final
class _IAnimatedVisual2: ...

class IAnimatedVisual2(IAnimatedVisual, windows_foundation.IClosable, winrt._winrt.IInspectable):
    # System.Void Microsoft.UI.Xaml.Controls.IAnimatedVisual2::CreateAnimations()
    @abstractmethod
    def create_animations(self) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.IAnimatedVisual2::DestroyAnimations()
    @abstractmethod
    def destroy_animations(self) -> None: ...

@typing.final
class _IAnimatedVisualSource: ...

class IAnimatedVisualSource(winrt._winrt.IInspectable):
    # Microsoft.UI.Xaml.Controls.IAnimatedVisual Microsoft.UI.Xaml.Controls.IAnimatedVisualSource::TryCreateAnimatedVisual(Windows.UI.Composition.Compositor,System.Object&)
    @abstractmethod
    def try_create_animated_visual(self, compositor: windows_ui_composition.Compositor, /) -> typing.Tuple[IAnimatedVisual, winrt.system.Object]: ...

@typing.final
class _IAnimatedVisualSource2: ...

class IAnimatedVisualSource2(IAnimatedVisualSource, winrt._winrt.IInspectable):
    # System.Void Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2::SetColorProperty(System.String,Windows.UI.Color)
    @abstractmethod
    def set_color_property(self, property_name: str, value: typing.Union[windows_ui.Color, typing.Tuple[winrt.system.UInt8, winrt.system.UInt8, winrt.system.UInt8, winrt.system.UInt8]], /) -> None: ...
    # Windows.Foundation.Collections.IMapView`2<System.String,System.Double> Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2::get_Markers()
    @_property
    @abstractmethod
    def markers(self) -> typing.Mapping[str, winrt.system.Double]: ...

@typing.final
class _IAnimatedVisualSource3: ...

class IAnimatedVisualSource3(winrt._winrt.IInspectable):
    # Microsoft.UI.Xaml.Controls.IAnimatedVisual2 Microsoft.UI.Xaml.Controls.IAnimatedVisualSource3::TryCreateAnimatedVisual(Windows.UI.Composition.Compositor,System.Object&,System.Boolean)
    @abstractmethod
    def try_create_animated_visual(self, compositor: windows_ui_composition.Compositor, create_animations: bool, /) -> typing.Tuple[IAnimatedVisual2, winrt.system.Object]: ...

@typing.final
class _IDynamicAnimatedVisualSource: ...

class IDynamicAnimatedVisualSource(IAnimatedVisualSource, winrt._winrt.IInspectable):
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource::add_AnimatedVisualInvalidated(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource,System.Object>)
    @abstractmethod
    def add_animated_visual_invalidated(self, handler: windows_foundation.TypedEventHandler[IDynamicAnimatedVisualSource, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource::remove_AnimatedVisualInvalidated(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_animated_visual_invalidated(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...

@typing.final
class _IKeyIndexMapping: ...

class IKeyIndexMapping(winrt._winrt.IInspectable):
    # System.Int32 Microsoft.UI.Xaml.Controls.IKeyIndexMapping::IndexFromKey(System.String)
    @abstractmethod
    def index_from_key(self, key: str, /) -> winrt.system.Int32: ...
    # System.String Microsoft.UI.Xaml.Controls.IKeyIndexMapping::KeyFromIndex(System.Int32)
    @abstractmethod
    def key_from_index(self, index: winrt.system.Int32, /) -> str: ...

