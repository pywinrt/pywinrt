# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.ui as windows_ui
import winrt.windows.ui.composition as windows_ui_composition
import winrt.windows.ui.xaml as windows_ui_xaml
import winrt.windows.ui.xaml.media as windows_ui_xaml_media

from winui2.microsoft.ui.xaml.media import AcrylicBackgroundSource, RevealBrushState

Self = typing.TypeVar('Self')

class AcrylicBrush_Static(windows_ui_xaml_media.XamlCompositionBrushBase_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.AcrylicBrush::get_AlwaysUseFallbackProperty()
    @_property
    @typing.final
    def always_use_fallback_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.AcrylicBrush::get_BackgroundSourceProperty()
    @_property
    @typing.final
    def background_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.AcrylicBrush::get_TintColorProperty()
    @_property
    @typing.final
    def tint_color_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.AcrylicBrush::get_TintOpacityProperty()
    @_property
    @typing.final
    def tint_opacity_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.AcrylicBrush::get_TintTransitionDurationProperty()
    @_property
    @typing.final
    def tint_transition_duration_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.AcrylicBrush::get_TintLuminosityOpacityProperty()
    @_property
    @typing.final
    def tint_luminosity_opacity_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class AcrylicBrush(windows_ui_xaml_media.XamlCompositionBrushBase, metaclass=AcrylicBrush_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.TimeSpan Microsoft.UI.Xaml.Media.AcrylicBrush::get_TintTransitionDuration()
    @_property
    def tint_transition_duration(self) -> datetime.timedelta: ...
    # System.Void Microsoft.UI.Xaml.Media.AcrylicBrush::put_TintTransitionDuration(Windows.Foundation.TimeSpan)
    @tint_transition_duration.setter
    @typing.final
    def tint_transition_duration(self, value: datetime.timedelta) -> None: ...
    # System.Double Microsoft.UI.Xaml.Media.AcrylicBrush::get_TintOpacity()
    @_property
    def tint_opacity(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Media.AcrylicBrush::put_TintOpacity(System.Double)
    @tint_opacity.setter
    @typing.final
    def tint_opacity(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Color Microsoft.UI.Xaml.Media.AcrylicBrush::get_TintColor()
    @_property
    def tint_color(self) -> windows_ui.Color: ...
    # System.Void Microsoft.UI.Xaml.Media.AcrylicBrush::put_TintColor(Windows.UI.Color)
    @tint_color.setter
    @typing.final
    def tint_color(self, value: typing.Union[windows_ui.Color, typing.Tuple[winrt.system.UInt8, winrt.system.UInt8, winrt.system.UInt8, winrt.system.UInt8]]) -> None: ...
    # Microsoft.UI.Xaml.Media.AcrylicBackgroundSource Microsoft.UI.Xaml.Media.AcrylicBrush::get_BackgroundSource()
    @_property
    def background_source(self) -> AcrylicBackgroundSource: ...
    # System.Void Microsoft.UI.Xaml.Media.AcrylicBrush::put_BackgroundSource(Microsoft.UI.Xaml.Media.AcrylicBackgroundSource)
    @background_source.setter
    @typing.final
    def background_source(self, value: AcrylicBackgroundSource) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Media.AcrylicBrush::get_AlwaysUseFallback()
    @_property
    def always_use_fallback(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Media.AcrylicBrush::put_AlwaysUseFallback(System.Boolean)
    @always_use_fallback.setter
    @typing.final
    def always_use_fallback(self, value: bool) -> None: ...
    # Windows.Foundation.IReference`1<System.Double> Microsoft.UI.Xaml.Media.AcrylicBrush::get_TintLuminosityOpacity()
    @_property
    def tint_luminosity_opacity(self) -> typing.Optional[winrt.system.Double]: ...
    # System.Void Microsoft.UI.Xaml.Media.AcrylicBrush::put_TintLuminosityOpacity(Windows.Foundation.IReference`1<System.Double>)
    @tint_luminosity_opacity.setter
    @typing.final
    def tint_luminosity_opacity(self, value: typing.Optional[winrt.system.Double]) -> None: ...

class RadialGradientBrush_Static(windows_ui_xaml_media.XamlCompositionBrushBase_Static):
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.RadialGradientBrush::get_CenterProperty()
    @_property
    @typing.final
    def center_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.RadialGradientBrush::get_GradientOriginProperty()
    @_property
    @typing.final
    def gradient_origin_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.RadialGradientBrush::get_InterpolationSpaceProperty()
    @_property
    @typing.final
    def interpolation_space_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.RadialGradientBrush::get_MappingModeProperty()
    @_property
    @typing.final
    def mapping_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.RadialGradientBrush::get_RadiusXProperty()
    @_property
    @typing.final
    def radius_x_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.RadialGradientBrush::get_RadiusYProperty()
    @_property
    @typing.final
    def radius_y_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.RadialGradientBrush::get_SpreadMethodProperty()
    @_property
    @typing.final
    def spread_method_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RadialGradientBrush(windows_ui_xaml_media.XamlCompositionBrushBase, metaclass=RadialGradientBrush_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.GradientSpreadMethod Microsoft.UI.Xaml.Media.RadialGradientBrush::get_SpreadMethod()
    @_property
    def spread_method(self) -> windows_ui_xaml_media.GradientSpreadMethod: ...
    # System.Void Microsoft.UI.Xaml.Media.RadialGradientBrush::put_SpreadMethod(Windows.UI.Xaml.Media.GradientSpreadMethod)
    @spread_method.setter
    @typing.final
    def spread_method(self, value: windows_ui_xaml_media.GradientSpreadMethod) -> None: ...
    # System.Double Microsoft.UI.Xaml.Media.RadialGradientBrush::get_RadiusY()
    @_property
    def radius_y(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Media.RadialGradientBrush::put_RadiusY(System.Double)
    @radius_y.setter
    @typing.final
    def radius_y(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Media.RadialGradientBrush::get_RadiusX()
    @_property
    def radius_x(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Media.RadialGradientBrush::put_RadiusX(System.Double)
    @radius_x.setter
    @typing.final
    def radius_x(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Media.BrushMappingMode Microsoft.UI.Xaml.Media.RadialGradientBrush::get_MappingMode()
    @_property
    def mapping_mode(self) -> windows_ui_xaml_media.BrushMappingMode: ...
    # System.Void Microsoft.UI.Xaml.Media.RadialGradientBrush::put_MappingMode(Windows.UI.Xaml.Media.BrushMappingMode)
    @mapping_mode.setter
    @typing.final
    def mapping_mode(self, value: windows_ui_xaml_media.BrushMappingMode) -> None: ...
    # Windows.UI.Composition.CompositionColorSpace Microsoft.UI.Xaml.Media.RadialGradientBrush::get_InterpolationSpace()
    @_property
    def interpolation_space(self) -> windows_ui_composition.CompositionColorSpace: ...
    # System.Void Microsoft.UI.Xaml.Media.RadialGradientBrush::put_InterpolationSpace(Windows.UI.Composition.CompositionColorSpace)
    @interpolation_space.setter
    @typing.final
    def interpolation_space(self, value: windows_ui_composition.CompositionColorSpace) -> None: ...
    # Windows.Foundation.Point Microsoft.UI.Xaml.Media.RadialGradientBrush::get_GradientOrigin()
    @_property
    def gradient_origin(self) -> windows_foundation.Point: ...
    # System.Void Microsoft.UI.Xaml.Media.RadialGradientBrush::put_GradientOrigin(Windows.Foundation.Point)
    @gradient_origin.setter
    @typing.final
    def gradient_origin(self, value: typing.Union[windows_foundation.Point, typing.Tuple[winrt.system.Single, winrt.system.Single]]) -> None: ...
    # Windows.Foundation.Point Microsoft.UI.Xaml.Media.RadialGradientBrush::get_Center()
    @_property
    def center(self) -> windows_foundation.Point: ...
    # System.Void Microsoft.UI.Xaml.Media.RadialGradientBrush::put_Center(Windows.Foundation.Point)
    @center.setter
    @typing.final
    def center(self, value: typing.Union[windows_foundation.Point, typing.Tuple[winrt.system.Single, winrt.system.Single]]) -> None: ...
    # Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.Media.GradientStop> Microsoft.UI.Xaml.Media.RadialGradientBrush::get_GradientStops()
    @_property
    @typing.final
    def gradient_stops(self) -> windows_foundation_collections.IObservableVector[windows_ui_xaml_media.GradientStop]: ...

class RevealBackgroundBrush_Static(RevealBrush_Static):
    pass

class RevealBackgroundBrush(RevealBrush, metaclass=RevealBackgroundBrush_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

class RevealBorderBrush_Static(RevealBrush_Static):
    pass

class RevealBorderBrush(RevealBrush, metaclass=RevealBorderBrush_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

class RevealBrush_Static(windows_ui_xaml_media.XamlCompositionBrushBase_Static):
    # Microsoft.UI.Xaml.Media.RevealBrushState Microsoft.UI.Xaml.Media.RevealBrush::GetState(Windows.UI.Xaml.UIElement)
    def get_state(cls, element: windows_ui_xaml.UIElement, /) -> RevealBrushState: ...
    # System.Void Microsoft.UI.Xaml.Media.RevealBrush::SetState(Windows.UI.Xaml.UIElement,Microsoft.UI.Xaml.Media.RevealBrushState)
    def set_state(cls, element: windows_ui_xaml.UIElement, value: RevealBrushState, /) -> None: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.RevealBrush::get_AlwaysUseFallbackProperty()
    @_property
    @typing.final
    def always_use_fallback_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.RevealBrush::get_ColorProperty()
    @_property
    @typing.final
    def color_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.RevealBrush::get_StateProperty()
    @_property
    @typing.final
    def state_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Media.RevealBrush::get_TargetThemeProperty()
    @_property
    @typing.final
    def target_theme_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RevealBrush(windows_ui_xaml_media.XamlCompositionBrushBase, metaclass=RevealBrush_Static):
    # Windows.UI.Xaml.ApplicationTheme Microsoft.UI.Xaml.Media.RevealBrush::get_TargetTheme()
    @_property
    def target_theme(self) -> windows_ui_xaml.ApplicationTheme: ...
    # System.Void Microsoft.UI.Xaml.Media.RevealBrush::put_TargetTheme(Windows.UI.Xaml.ApplicationTheme)
    @target_theme.setter
    @typing.final
    def target_theme(self, value: windows_ui_xaml.ApplicationTheme) -> None: ...
    # Windows.UI.Color Microsoft.UI.Xaml.Media.RevealBrush::get_Color()
    @_property
    def color(self) -> windows_ui.Color: ...
    # System.Void Microsoft.UI.Xaml.Media.RevealBrush::put_Color(Windows.UI.Color)
    @color.setter
    @typing.final
    def color(self, value: typing.Union[windows_ui.Color, typing.Tuple[winrt.system.UInt8, winrt.system.UInt8, winrt.system.UInt8, winrt.system.UInt8]]) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Media.RevealBrush::get_AlwaysUseFallback()
    @_property
    def always_use_fallback(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Media.RevealBrush::put_AlwaysUseFallback(System.Boolean)
    @always_use_fallback.setter
    @typing.final
    def always_use_fallback(self, value: bool) -> None: ...

