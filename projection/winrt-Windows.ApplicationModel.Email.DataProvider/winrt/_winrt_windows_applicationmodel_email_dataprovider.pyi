# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.email
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.security.cryptography.certificates

Self = typing.TypeVar('Self')

@typing.final
class EmailDataProviderConnection(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailDataProviderConnection: ...
    def start(self) -> None: ...
    def add_create_folder_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxCreateFolderRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_create_folder_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_delete_folder_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxDeleteFolderRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_delete_folder_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_download_attachment_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxDownloadAttachmentRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_download_attachment_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_download_message_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxDownloadMessageRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_download_message_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_empty_folder_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxEmptyFolderRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_empty_folder_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_forward_meeting_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxForwardMeetingRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_forward_meeting_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_get_auto_reply_settings_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxGetAutoReplySettingsRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_get_auto_reply_settings_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_mailbox_sync_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxSyncManagerSyncRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_mailbox_sync_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_move_folder_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxMoveFolderRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_move_folder_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_propose_new_time_for_meeting_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxProposeNewTimeForMeetingRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_propose_new_time_for_meeting_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_resolve_recipients_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxResolveRecipientsRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_resolve_recipients_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_server_search_read_batch_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxServerSearchReadBatchRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_server_search_read_batch_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_set_auto_reply_settings_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxSetAutoReplySettingsRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_set_auto_reply_settings_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_update_meeting_response_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxUpdateMeetingResponseRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_update_meeting_response_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_validate_certificates_requested(self, handler: winrt.windows.foundation.TypedEventHandler[EmailDataProviderConnection, EmailMailboxValidateCertificatesRequestEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_validate_certificates_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

@typing.final
class EmailDataProviderTriggerDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailDataProviderTriggerDetails: ...
    @_property
    def connection(self) -> typing.Optional[EmailDataProviderConnection]: ...

@typing.final
class EmailMailboxCreateFolderRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxCreateFolderRequest: ...
    def report_completed_async(self, folder: typing.Optional[winrt.windows.applicationmodel.email.EmailFolder], /) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self, status: winrt.windows.applicationmodel.email.EmailMailboxCreateFolderStatus, /) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def email_mailbox_id(self) -> str: ...
    @_property
    def name(self) -> str: ...
    @_property
    def parent_folder_id(self) -> str: ...

@typing.final
class EmailMailboxCreateFolderRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxCreateFolderRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxCreateFolderRequest]: ...

@typing.final
class EmailMailboxDeleteFolderRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxDeleteFolderRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self, status: winrt.windows.applicationmodel.email.EmailMailboxDeleteFolderStatus, /) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def email_folder_id(self) -> str: ...
    @_property
    def email_mailbox_id(self) -> str: ...

@typing.final
class EmailMailboxDeleteFolderRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxDeleteFolderRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxDeleteFolderRequest]: ...

@typing.final
class EmailMailboxDownloadAttachmentRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxDownloadAttachmentRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def email_attachment_id(self) -> str: ...
    @_property
    def email_mailbox_id(self) -> str: ...
    @_property
    def email_message_id(self) -> str: ...

@typing.final
class EmailMailboxDownloadAttachmentRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxDownloadAttachmentRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxDownloadAttachmentRequest]: ...

@typing.final
class EmailMailboxDownloadMessageRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxDownloadMessageRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def email_mailbox_id(self) -> str: ...
    @_property
    def email_message_id(self) -> str: ...

@typing.final
class EmailMailboxDownloadMessageRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxDownloadMessageRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxDownloadMessageRequest]: ...

@typing.final
class EmailMailboxEmptyFolderRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxEmptyFolderRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self, status: winrt.windows.applicationmodel.email.EmailMailboxEmptyFolderStatus, /) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def email_folder_id(self) -> str: ...
    @_property
    def email_mailbox_id(self) -> str: ...

@typing.final
class EmailMailboxEmptyFolderRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxEmptyFolderRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxEmptyFolderRequest]: ...

@typing.final
class EmailMailboxForwardMeetingRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxForwardMeetingRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def comment(self) -> str: ...
    @_property
    def email_mailbox_id(self) -> str: ...
    @_property
    def email_message_id(self) -> str: ...
    @_property
    def forward_header(self) -> str: ...
    @_property
    def forward_header_type(self) -> winrt.windows.applicationmodel.email.EmailMessageBodyKind: ...
    @_property
    def recipients(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.applicationmodel.email.EmailRecipient]]: ...
    @_property
    def subject(self) -> str: ...

@typing.final
class EmailMailboxForwardMeetingRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxForwardMeetingRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxForwardMeetingRequest]: ...

@typing.final
class EmailMailboxGetAutoReplySettingsRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxGetAutoReplySettingsRequest: ...
    def report_completed_async(self, auto_reply_settings: typing.Optional[winrt.windows.applicationmodel.email.EmailMailboxAutoReplySettings], /) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def email_mailbox_id(self) -> str: ...
    @_property
    def requested_format(self) -> winrt.windows.applicationmodel.email.EmailMailboxAutoReplyMessageResponseKind: ...

@typing.final
class EmailMailboxGetAutoReplySettingsRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxGetAutoReplySettingsRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxGetAutoReplySettingsRequest]: ...

@typing.final
class EmailMailboxMoveFolderRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxMoveFolderRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def email_folder_id(self) -> str: ...
    @_property
    def email_mailbox_id(self) -> str: ...
    @_property
    def new_folder_name(self) -> str: ...
    @_property
    def new_parent_folder_id(self) -> str: ...

@typing.final
class EmailMailboxMoveFolderRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxMoveFolderRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxMoveFolderRequest]: ...

@typing.final
class EmailMailboxProposeNewTimeForMeetingRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxProposeNewTimeForMeetingRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def comment(self) -> str: ...
    @_property
    def email_mailbox_id(self) -> str: ...
    @_property
    def email_message_id(self) -> str: ...
    @_property
    def new_duration(self) -> datetime.timedelta: ...
    @_property
    def new_start_time(self) -> datetime.datetime: ...
    @_property
    def subject(self) -> str: ...

@typing.final
class EmailMailboxProposeNewTimeForMeetingRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxProposeNewTimeForMeetingRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxProposeNewTimeForMeetingRequest]: ...

@typing.final
class EmailMailboxResolveRecipientsRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxResolveRecipientsRequest: ...
    def report_completed_async(self, resolution_results: typing.Iterable[winrt.windows.applicationmodel.email.EmailRecipientResolutionResult], /) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def email_mailbox_id(self) -> str: ...
    @_property
    def recipients(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[str]]: ...

@typing.final
class EmailMailboxResolveRecipientsRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxResolveRecipientsRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxResolveRecipientsRequest]: ...

@typing.final
class EmailMailboxServerSearchReadBatchRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxServerSearchReadBatchRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self, batch_status: winrt.windows.applicationmodel.email.EmailBatchStatus, /) -> winrt.windows.foundation.IAsyncAction: ...
    def save_message_async(self, message: typing.Optional[winrt.windows.applicationmodel.email.EmailMessage], /) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def email_folder_id(self) -> str: ...
    @_property
    def email_mailbox_id(self) -> str: ...
    @_property
    def options(self) -> typing.Optional[winrt.windows.applicationmodel.email.EmailQueryOptions]: ...
    @_property
    def session_id(self) -> str: ...
    @_property
    def suggested_batch_size(self) -> winrt.system.UInt32: ...

@typing.final
class EmailMailboxServerSearchReadBatchRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxServerSearchReadBatchRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxServerSearchReadBatchRequest]: ...

@typing.final
class EmailMailboxSetAutoReplySettingsRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxSetAutoReplySettingsRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def auto_reply_settings(self) -> typing.Optional[winrt.windows.applicationmodel.email.EmailMailboxAutoReplySettings]: ...
    @_property
    def email_mailbox_id(self) -> str: ...

@typing.final
class EmailMailboxSetAutoReplySettingsRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxSetAutoReplySettingsRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxSetAutoReplySettingsRequest]: ...

@typing.final
class EmailMailboxSyncManagerSyncRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxSyncManagerSyncRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def email_mailbox_id(self) -> str: ...

@typing.final
class EmailMailboxSyncManagerSyncRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxSyncManagerSyncRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxSyncManagerSyncRequest]: ...

@typing.final
class EmailMailboxUpdateMeetingResponseRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxUpdateMeetingResponseRequest: ...
    def report_completed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def comment(self) -> str: ...
    @_property
    def email_mailbox_id(self) -> str: ...
    @_property
    def email_message_id(self) -> str: ...
    @_property
    def response(self) -> winrt.windows.applicationmodel.email.EmailMeetingResponseType: ...
    @_property
    def send_update(self) -> bool: ...
    @_property
    def subject(self) -> str: ...

@typing.final
class EmailMailboxUpdateMeetingResponseRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxUpdateMeetingResponseRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxUpdateMeetingResponseRequest]: ...

@typing.final
class EmailMailboxValidateCertificatesRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxValidateCertificatesRequest: ...
    def report_completed_async(self, validation_statuses: typing.Iterable[winrt.windows.applicationmodel.email.EmailCertificateValidationStatus], /) -> winrt.windows.foundation.IAsyncAction: ...
    def report_failed_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    @_property
    def certificates(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.security.cryptography.certificates.Certificate]]: ...
    @_property
    def email_mailbox_id(self) -> str: ...

@typing.final
class EmailMailboxValidateCertificatesRequestEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EmailMailboxValidateCertificatesRequestEventArgs: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def request(self) -> typing.Optional[EmailMailboxValidateCertificatesRequest]: ...

