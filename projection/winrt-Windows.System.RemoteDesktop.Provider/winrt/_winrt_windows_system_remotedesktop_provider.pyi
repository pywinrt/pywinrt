# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.ui

from winrt.windows.system.remotedesktop.provider import RemoteDesktopConnectionStatus, RemoteDesktopLocalAction

Self = typing.TypeVar('Self')

@typing.final
class PerformLocalActionRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PerformLocalActionRequestedEventArgs: ...
    @_property
    def action(self) -> RemoteDesktopLocalAction: ...

@typing.final
class RemoteDesktopConnectionInfo_Static(type):
    def get_for_launch_uri(cls, launch_uri: typing.Optional[winrt.windows.foundation.Uri], window_id: winrt.windows.ui.WindowId, /) -> typing.Optional[RemoteDesktopConnectionInfo]: ...

@typing.final
class RemoteDesktopConnectionInfo(winrt.system.Object, metaclass=RemoteDesktopConnectionInfo_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RemoteDesktopConnectionInfo: ...
    def set_connection_status(self, value: RemoteDesktopConnectionStatus, /) -> None: ...
    def switch_to_local_session(self) -> None: ...

@typing.final
class RemoteDesktopConnectionRemoteInfo_Static(type):
    def get_for_launch_uri(cls, launch_uri: typing.Optional[winrt.windows.foundation.Uri], /) -> typing.Optional[RemoteDesktopConnectionRemoteInfo]: ...
    def is_switch_supported(cls) -> bool: ...

@typing.final
class RemoteDesktopConnectionRemoteInfo(winrt.system.Object, metaclass=RemoteDesktopConnectionRemoteInfo_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RemoteDesktopConnectionRemoteInfo: ...
    def close(self) -> None: ...
    def report_switched(self) -> None: ...
    def add_perform_local_action_requested(self, handler: winrt.windows.foundation.TypedEventHandler[RemoteDesktopConnectionRemoteInfo, PerformLocalActionRequestedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_perform_local_action_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_switch_to_local_session_requested(self, handler: winrt.windows.foundation.TypedEventHandler[RemoteDesktopConnectionRemoteInfo, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_switch_to_local_session_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

@typing.final
class RemoteDesktopInfo(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RemoteDesktopInfo: ...
    def __new__(cls: typing.Type[RemoteDesktopInfo], id: str, display_name: str) -> RemoteDesktopInfo:...
    @_property
    def display_name(self) -> str: ...
    @_property
    def id(self) -> str: ...

@typing.final
class RemoteDesktopRegistrar_Static(type):
    def is_switch_to_local_session_enabled(cls) -> bool: ...
    @_property
    def desktop_infos(cls) -> typing.Optional[winrt.windows.foundation.collections.IVector[RemoteDesktopInfo]]: ...

@typing.final
class RemoteDesktopRegistrar(winrt.system.Object, metaclass=RemoteDesktopRegistrar_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RemoteDesktopRegistrar: ...

