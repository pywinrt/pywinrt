# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.microsoft.ui.composition as microsoft_ui_composition
import winrt.microsoft.ui.xaml as microsoft_ui_xaml
import winrt.microsoft.ui.xaml.controls as microsoft_ui_xaml_controls
import winrt.microsoft.ui.xaml.controls.primitives as microsoft_ui_xaml_controls_primitives
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.ui as windows_ui

from winrt.microsoft.ui.xaml.media.animation import ClockState, ConnectedAnimationComponent, EasingMode, FillBehavior, RepeatBehaviorType, SlideNavigationTransitionEffect

Self = typing.TypeVar('Self')

@typing.final
class KeyTime:
    time_span: datetime.timedelta
    def __init__(self, time_span: datetime.timedelta = datetime.timedelta(0)) -> None: ...

@typing.final
class RepeatBehavior:
    count: winrt.system.Double
    duration: datetime.timedelta
    type: RepeatBehaviorType
    def __init__(self, count: winrt.system.Double = 0, duration: datetime.timedelta = datetime.timedelta(0), type: RepeatBehaviorType = RepeatBehaviorType(0)) -> None: ...

@typing.final
class AddDeleteThemeTransition(Transition):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AddDeleteThemeTransition: ...
    def __new__(cls: typing.Type[AddDeleteThemeTransition]) -> AddDeleteThemeTransition: ...

@typing.final
class BackEase_Static(EasingFunctionBase_Static):
    @_property
    def amplitude_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class BackEase(EasingFunctionBase, metaclass=BackEase_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BackEase: ...
    def __new__(cls: typing.Type[BackEase]) -> BackEase: ...
    @_property
    def amplitude(self) -> winrt.system.Double: ...
    @amplitude.setter
    def amplitude(self, value: winrt.system.Double) -> None: ...

class BasicConnectedAnimationConfiguration_Static(ConnectedAnimationConfiguration_Static):
    pass

class BasicConnectedAnimationConfiguration(ConnectedAnimationConfiguration, metaclass=BasicConnectedAnimationConfiguration_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BasicConnectedAnimationConfiguration: ...
    def __new__(cls: typing.Type[BasicConnectedAnimationConfiguration]) -> BasicConnectedAnimationConfiguration: ...

@typing.final
class BeginStoryboard_Static(microsoft_ui_xaml.TriggerAction_Static):
    @_property
    def storyboard_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class BeginStoryboard(microsoft_ui_xaml.TriggerAction, metaclass=BeginStoryboard_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BeginStoryboard: ...
    def __new__(cls: typing.Type[BeginStoryboard]) -> BeginStoryboard: ...
    @_property
    def storyboard(self) -> Storyboard: ...
    @storyboard.setter
    def storyboard(self, value: Storyboard) -> None: ...

@typing.final
class BounceEase_Static(EasingFunctionBase_Static):
    @_property
    def bounces_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def bounciness_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class BounceEase(EasingFunctionBase, metaclass=BounceEase_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BounceEase: ...
    def __new__(cls: typing.Type[BounceEase]) -> BounceEase: ...
    @_property
    def bounciness(self) -> winrt.system.Double: ...
    @bounciness.setter
    def bounciness(self, value: winrt.system.Double) -> None: ...
    @_property
    def bounces(self) -> winrt.system.Int32: ...
    @bounces.setter
    def bounces(self, value: winrt.system.Int32) -> None: ...

@typing.final
class CircleEase(EasingFunctionBase):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CircleEase: ...
    def __new__(cls: typing.Type[CircleEase]) -> CircleEase: ...

@typing.final
class ColorAnimation_Static(Timeline_Static):
    @_property
    def by_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def easing_function_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def enable_dependent_animation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def from_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def to_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class ColorAnimation(Timeline, metaclass=ColorAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ColorAnimation: ...
    def __new__(cls: typing.Type[ColorAnimation]) -> ColorAnimation: ...
    @_property
    def to(self) -> typing.Optional[windows_ui.Color]: ...
    @to.setter
    def to(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    @_property
    def from_(self) -> typing.Optional[windows_ui.Color]: ...
    @from_.setter
    def from_(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    @_property
    def enable_dependent_animation(self) -> bool: ...
    @enable_dependent_animation.setter
    def enable_dependent_animation(self, value: bool) -> None: ...
    @_property
    def easing_function(self) -> EasingFunctionBase: ...
    @easing_function.setter
    def easing_function(self, value: EasingFunctionBase) -> None: ...
    @_property
    def by(self) -> typing.Optional[windows_ui.Color]: ...
    @by.setter
    def by(self, value: typing.Optional[windows_ui.Color]) -> None: ...

@typing.final
class ColorAnimationUsingKeyFrames_Static(Timeline_Static):
    @_property
    def enable_dependent_animation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class ColorAnimationUsingKeyFrames(Timeline, metaclass=ColorAnimationUsingKeyFrames_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ColorAnimationUsingKeyFrames: ...
    def __new__(cls: typing.Type[ColorAnimationUsingKeyFrames]) -> ColorAnimationUsingKeyFrames: ...
    @_property
    def enable_dependent_animation(self) -> bool: ...
    @enable_dependent_animation.setter
    def enable_dependent_animation(self, value: bool) -> None: ...
    @_property
    def key_frames(self) -> ColorKeyFrameCollection: ...

class ColorKeyFrame_Static(microsoft_ui_xaml.DependencyObject_Static):
    @_property
    def key_time_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def value_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ColorKeyFrame(microsoft_ui_xaml.DependencyObject, metaclass=ColorKeyFrame_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ColorKeyFrame: ...
    @_property
    def value(self) -> windows_ui.Color: ...
    @value.setter
    def value(self, value: windows_ui.Color) -> None: ...
    @_property
    def key_time(self) -> KeyTime: ...
    @key_time.setter
    def key_time(self, value: KeyTime) -> None: ...

@typing.final
class ColorKeyFrameCollection(winrt.system.Object, winrt._winrt.MutableSequence[ColorKeyFrame]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[ColorKeyFrame]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> ColorKeyFrame: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[ColorKeyFrame]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: ColorKeyFrame) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[ColorKeyFrame]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ColorKeyFrameCollection: ...
    def __new__(cls: typing.Type[ColorKeyFrameCollection]) -> ColorKeyFrameCollection: ...
    def append(self, value: ColorKeyFrame, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[ColorKeyFrame]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> ColorKeyFrame: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[ColorKeyFrame], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[ColorKeyFrame]: ...
    def index_of(self, value: ColorKeyFrame, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: ColorKeyFrame, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[ColorKeyFrame], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: ColorKeyFrame, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class CommonNavigationTransitionInfo_Static(NavigationTransitionInfo_Static):
    def get_is_stagger_element(cls, element: microsoft_ui_xaml.UIElement, /) -> bool: ...
    def set_is_stagger_element(cls, element: microsoft_ui_xaml.UIElement, value: bool, /) -> None: ...
    @_property
    def is_stagger_element_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_staggering_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class CommonNavigationTransitionInfo(NavigationTransitionInfo, metaclass=CommonNavigationTransitionInfo_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CommonNavigationTransitionInfo: ...
    def __new__(cls: typing.Type[CommonNavigationTransitionInfo]) -> CommonNavigationTransitionInfo: ...
    @_property
    def is_staggering_enabled(self) -> bool: ...
    @is_staggering_enabled.setter
    def is_staggering_enabled(self, value: bool) -> None: ...

@typing.final
class ConnectedAnimation(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ConnectedAnimation: ...
    def cancel(self) -> None: ...
    def set_animation_component(self, component: ConnectedAnimationComponent, animation: microsoft_ui_composition.ImplementsICompositionAnimationBase, /) -> None: ...
    def try_start(self, destination: microsoft_ui_xaml.UIElement, /) -> bool: ...
    def try_start_with_coordinated_elements(self, destination: microsoft_ui_xaml.UIElement, coordinated_elements: typing.Iterable[microsoft_ui_xaml.UIElement], /) -> bool: ...
    def add_completed(self, handler: windows_foundation.TypedEventHandler[ConnectedAnimation, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def is_scale_animation_enabled(self) -> bool: ...
    @is_scale_animation_enabled.setter
    def is_scale_animation_enabled(self, value: bool) -> None: ...
    @_property
    def configuration(self) -> ConnectedAnimationConfiguration: ...
    @configuration.setter
    def configuration(self, value: ConnectedAnimationConfiguration) -> None: ...

class ConnectedAnimationConfiguration_Static(type):
    pass

class ConnectedAnimationConfiguration(winrt.system.Object, metaclass=ConnectedAnimationConfiguration_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ConnectedAnimationConfiguration: ...

@typing.final
class ConnectedAnimationService_Static(type):
    def get_for_current_view(cls) -> ConnectedAnimationService: ...

@typing.final
class ConnectedAnimationService(winrt.system.Object, metaclass=ConnectedAnimationService_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ConnectedAnimationService: ...
    def get_animation(self, key: str, /) -> ConnectedAnimation: ...
    def prepare_to_animate(self, key: str, source: microsoft_ui_xaml.UIElement, /) -> ConnectedAnimation: ...
    @_property
    def default_easing_function(self) -> microsoft_ui_composition.CompositionEasingFunction: ...
    @default_easing_function.setter
    def default_easing_function(self, value: microsoft_ui_composition.CompositionEasingFunction) -> None: ...
    @_property
    def default_duration(self) -> datetime.timedelta: ...
    @default_duration.setter
    def default_duration(self, value: datetime.timedelta) -> None: ...

@typing.final
class ContentThemeTransition_Static(Transition_Static):
    @_property
    def horizontal_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class ContentThemeTransition(Transition, metaclass=ContentThemeTransition_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentThemeTransition: ...
    def __new__(cls: typing.Type[ContentThemeTransition]) -> ContentThemeTransition: ...
    @_property
    def vertical_offset(self) -> winrt.system.Double: ...
    @vertical_offset.setter
    def vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def horizontal_offset(self) -> winrt.system.Double: ...
    @horizontal_offset.setter
    def horizontal_offset(self, value: winrt.system.Double) -> None: ...

@typing.final
class ContinuumNavigationTransitionInfo_Static(NavigationTransitionInfo_Static):
    def get_exit_element_container(cls, element: microsoft_ui_xaml_controls.ListViewBase, /) -> bool: ...
    def get_is_entrance_element(cls, element: microsoft_ui_xaml.UIElement, /) -> bool: ...
    def get_is_exit_element(cls, element: microsoft_ui_xaml.UIElement, /) -> bool: ...
    def set_exit_element_container(cls, element: microsoft_ui_xaml_controls.ListViewBase, value: bool, /) -> None: ...
    def set_is_entrance_element(cls, element: microsoft_ui_xaml.UIElement, value: bool, /) -> None: ...
    def set_is_exit_element(cls, element: microsoft_ui_xaml.UIElement, value: bool, /) -> None: ...
    @_property
    def exit_element_container_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def exit_element_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_entrance_element_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_exit_element_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class ContinuumNavigationTransitionInfo(NavigationTransitionInfo, metaclass=ContinuumNavigationTransitionInfo_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContinuumNavigationTransitionInfo: ...
    def __new__(cls: typing.Type[ContinuumNavigationTransitionInfo]) -> ContinuumNavigationTransitionInfo: ...
    @_property
    def exit_element(self) -> microsoft_ui_xaml.UIElement: ...
    @exit_element.setter
    def exit_element(self, value: microsoft_ui_xaml.UIElement) -> None: ...

@typing.final
class CubicEase(EasingFunctionBase):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CubicEase: ...
    def __new__(cls: typing.Type[CubicEase]) -> CubicEase: ...

class DirectConnectedAnimationConfiguration_Static(ConnectedAnimationConfiguration_Static):
    pass

class DirectConnectedAnimationConfiguration(ConnectedAnimationConfiguration, metaclass=DirectConnectedAnimationConfiguration_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DirectConnectedAnimationConfiguration: ...
    def __new__(cls: typing.Type[DirectConnectedAnimationConfiguration]) -> DirectConnectedAnimationConfiguration: ...

@typing.final
class DiscreteColorKeyFrame(ColorKeyFrame):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DiscreteColorKeyFrame: ...
    def __new__(cls: typing.Type[DiscreteColorKeyFrame]) -> DiscreteColorKeyFrame: ...

@typing.final
class DiscreteDoubleKeyFrame(DoubleKeyFrame):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DiscreteDoubleKeyFrame: ...
    def __new__(cls: typing.Type[DiscreteDoubleKeyFrame]) -> DiscreteDoubleKeyFrame: ...

@typing.final
class DiscreteObjectKeyFrame(ObjectKeyFrame):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DiscreteObjectKeyFrame: ...
    def __new__(cls: typing.Type[DiscreteObjectKeyFrame]) -> DiscreteObjectKeyFrame: ...

@typing.final
class DiscretePointKeyFrame(PointKeyFrame):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DiscretePointKeyFrame: ...
    def __new__(cls: typing.Type[DiscretePointKeyFrame]) -> DiscretePointKeyFrame: ...

@typing.final
class DoubleAnimation_Static(Timeline_Static):
    @_property
    def by_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def easing_function_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def enable_dependent_animation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def from_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def to_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class DoubleAnimation(Timeline, metaclass=DoubleAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DoubleAnimation: ...
    def __new__(cls: typing.Type[DoubleAnimation]) -> DoubleAnimation: ...
    @_property
    def to(self) -> typing.Optional[winrt.system.Double]: ...
    @to.setter
    def to(self, value: typing.Optional[winrt.system.Double]) -> None: ...
    @_property
    def from_(self) -> typing.Optional[winrt.system.Double]: ...
    @from_.setter
    def from_(self, value: typing.Optional[winrt.system.Double]) -> None: ...
    @_property
    def enable_dependent_animation(self) -> bool: ...
    @enable_dependent_animation.setter
    def enable_dependent_animation(self, value: bool) -> None: ...
    @_property
    def easing_function(self) -> EasingFunctionBase: ...
    @easing_function.setter
    def easing_function(self, value: EasingFunctionBase) -> None: ...
    @_property
    def by(self) -> typing.Optional[winrt.system.Double]: ...
    @by.setter
    def by(self, value: typing.Optional[winrt.system.Double]) -> None: ...

@typing.final
class DoubleAnimationUsingKeyFrames_Static(Timeline_Static):
    @_property
    def enable_dependent_animation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class DoubleAnimationUsingKeyFrames(Timeline, metaclass=DoubleAnimationUsingKeyFrames_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DoubleAnimationUsingKeyFrames: ...
    def __new__(cls: typing.Type[DoubleAnimationUsingKeyFrames]) -> DoubleAnimationUsingKeyFrames: ...
    @_property
    def enable_dependent_animation(self) -> bool: ...
    @enable_dependent_animation.setter
    def enable_dependent_animation(self, value: bool) -> None: ...
    @_property
    def key_frames(self) -> DoubleKeyFrameCollection: ...

class DoubleKeyFrame_Static(microsoft_ui_xaml.DependencyObject_Static):
    @_property
    def key_time_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def value_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class DoubleKeyFrame(microsoft_ui_xaml.DependencyObject, metaclass=DoubleKeyFrame_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DoubleKeyFrame: ...
    @_property
    def value(self) -> winrt.system.Double: ...
    @value.setter
    def value(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_time(self) -> KeyTime: ...
    @key_time.setter
    def key_time(self, value: KeyTime) -> None: ...

@typing.final
class DoubleKeyFrameCollection(winrt.system.Object, winrt._winrt.MutableSequence[DoubleKeyFrame]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[DoubleKeyFrame]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> DoubleKeyFrame: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[DoubleKeyFrame]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: DoubleKeyFrame) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[DoubleKeyFrame]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DoubleKeyFrameCollection: ...
    def __new__(cls: typing.Type[DoubleKeyFrameCollection]) -> DoubleKeyFrameCollection: ...
    def append(self, value: DoubleKeyFrame, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[DoubleKeyFrame]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> DoubleKeyFrame: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[DoubleKeyFrame], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[DoubleKeyFrame]: ...
    def index_of(self, value: DoubleKeyFrame, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: DoubleKeyFrame, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[DoubleKeyFrame], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: DoubleKeyFrame, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class DragItemThemeAnimation_Static(Timeline_Static):
    @_property
    def target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class DragItemThemeAnimation(Timeline, metaclass=DragItemThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DragItemThemeAnimation: ...
    def __new__(cls: typing.Type[DragItemThemeAnimation]) -> DragItemThemeAnimation: ...
    @_property
    def target_name(self) -> str: ...
    @target_name.setter
    def target_name(self, value: str) -> None: ...

@typing.final
class DragOverThemeAnimation_Static(Timeline_Static):
    @_property
    def direction_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def to_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class DragOverThemeAnimation(Timeline, metaclass=DragOverThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DragOverThemeAnimation: ...
    def __new__(cls: typing.Type[DragOverThemeAnimation]) -> DragOverThemeAnimation: ...
    @_property
    def to_offset(self) -> winrt.system.Double: ...
    @to_offset.setter
    def to_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def target_name(self) -> str: ...
    @target_name.setter
    def target_name(self, value: str) -> None: ...
    @_property
    def direction(self) -> microsoft_ui_xaml_controls_primitives.AnimationDirection: ...
    @direction.setter
    def direction(self, value: microsoft_ui_xaml_controls_primitives.AnimationDirection) -> None: ...

@typing.final
class DrillInNavigationTransitionInfo(NavigationTransitionInfo):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DrillInNavigationTransitionInfo: ...
    def __new__(cls: typing.Type[DrillInNavigationTransitionInfo]) -> DrillInNavigationTransitionInfo: ...

@typing.final
class DrillInThemeAnimation_Static(Timeline_Static):
    @_property
    def entrance_target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def entrance_target_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def exit_target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def exit_target_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class DrillInThemeAnimation(Timeline, metaclass=DrillInThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DrillInThemeAnimation: ...
    def __new__(cls: typing.Type[DrillInThemeAnimation]) -> DrillInThemeAnimation: ...
    @_property
    def exit_target_name(self) -> str: ...
    @exit_target_name.setter
    def exit_target_name(self, value: str) -> None: ...
    @_property
    def exit_target(self) -> microsoft_ui_xaml.DependencyObject: ...
    @exit_target.setter
    def exit_target(self, value: microsoft_ui_xaml.DependencyObject) -> None: ...
    @_property
    def entrance_target_name(self) -> str: ...
    @entrance_target_name.setter
    def entrance_target_name(self, value: str) -> None: ...
    @_property
    def entrance_target(self) -> microsoft_ui_xaml.DependencyObject: ...
    @entrance_target.setter
    def entrance_target(self, value: microsoft_ui_xaml.DependencyObject) -> None: ...

@typing.final
class DrillOutThemeAnimation_Static(Timeline_Static):
    @_property
    def entrance_target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def entrance_target_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def exit_target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def exit_target_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class DrillOutThemeAnimation(Timeline, metaclass=DrillOutThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DrillOutThemeAnimation: ...
    def __new__(cls: typing.Type[DrillOutThemeAnimation]) -> DrillOutThemeAnimation: ...
    @_property
    def exit_target_name(self) -> str: ...
    @exit_target_name.setter
    def exit_target_name(self, value: str) -> None: ...
    @_property
    def exit_target(self) -> microsoft_ui_xaml.DependencyObject: ...
    @exit_target.setter
    def exit_target(self, value: microsoft_ui_xaml.DependencyObject) -> None: ...
    @_property
    def entrance_target_name(self) -> str: ...
    @entrance_target_name.setter
    def entrance_target_name(self, value: str) -> None: ...
    @_property
    def entrance_target(self) -> microsoft_ui_xaml.DependencyObject: ...
    @entrance_target.setter
    def entrance_target(self, value: microsoft_ui_xaml.DependencyObject) -> None: ...

@typing.final
class DropTargetItemThemeAnimation_Static(Timeline_Static):
    @_property
    def target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class DropTargetItemThemeAnimation(Timeline, metaclass=DropTargetItemThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DropTargetItemThemeAnimation: ...
    def __new__(cls: typing.Type[DropTargetItemThemeAnimation]) -> DropTargetItemThemeAnimation: ...
    @_property
    def target_name(self) -> str: ...
    @target_name.setter
    def target_name(self, value: str) -> None: ...

@typing.final
class EasingColorKeyFrame_Static(ColorKeyFrame_Static):
    @_property
    def easing_function_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class EasingColorKeyFrame(ColorKeyFrame, metaclass=EasingColorKeyFrame_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EasingColorKeyFrame: ...
    def __new__(cls: typing.Type[EasingColorKeyFrame]) -> EasingColorKeyFrame: ...
    @_property
    def easing_function(self) -> EasingFunctionBase: ...
    @easing_function.setter
    def easing_function(self, value: EasingFunctionBase) -> None: ...

@typing.final
class EasingDoubleKeyFrame_Static(DoubleKeyFrame_Static):
    @_property
    def easing_function_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class EasingDoubleKeyFrame(DoubleKeyFrame, metaclass=EasingDoubleKeyFrame_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EasingDoubleKeyFrame: ...
    def __new__(cls: typing.Type[EasingDoubleKeyFrame]) -> EasingDoubleKeyFrame: ...
    @_property
    def easing_function(self) -> EasingFunctionBase: ...
    @easing_function.setter
    def easing_function(self, value: EasingFunctionBase) -> None: ...

class EasingFunctionBase_Static(microsoft_ui_xaml.DependencyObject_Static):
    @_property
    def easing_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class EasingFunctionBase(microsoft_ui_xaml.DependencyObject, metaclass=EasingFunctionBase_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EasingFunctionBase: ...
    def ease(self, normalized_time: winrt.system.Double, /) -> winrt.system.Double: ...
    @_property
    def easing_mode(self) -> EasingMode: ...
    @easing_mode.setter
    def easing_mode(self, value: EasingMode) -> None: ...

@typing.final
class EasingPointKeyFrame_Static(PointKeyFrame_Static):
    @_property
    def easing_function_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class EasingPointKeyFrame(PointKeyFrame, metaclass=EasingPointKeyFrame_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EasingPointKeyFrame: ...
    def __new__(cls: typing.Type[EasingPointKeyFrame]) -> EasingPointKeyFrame: ...
    @_property
    def easing_function(self) -> EasingFunctionBase: ...
    @easing_function.setter
    def easing_function(self, value: EasingFunctionBase) -> None: ...

@typing.final
class EdgeUIThemeTransition_Static(Transition_Static):
    @_property
    def edge_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class EdgeUIThemeTransition(Transition, metaclass=EdgeUIThemeTransition_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EdgeUIThemeTransition: ...
    def __new__(cls: typing.Type[EdgeUIThemeTransition]) -> EdgeUIThemeTransition: ...
    @_property
    def edge(self) -> microsoft_ui_xaml_controls_primitives.EdgeTransitionLocation: ...
    @edge.setter
    def edge(self, value: microsoft_ui_xaml_controls_primitives.EdgeTransitionLocation) -> None: ...

@typing.final
class ElasticEase_Static(EasingFunctionBase_Static):
    @_property
    def oscillations_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def springiness_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class ElasticEase(EasingFunctionBase, metaclass=ElasticEase_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ElasticEase: ...
    def __new__(cls: typing.Type[ElasticEase]) -> ElasticEase: ...
    @_property
    def springiness(self) -> winrt.system.Double: ...
    @springiness.setter
    def springiness(self, value: winrt.system.Double) -> None: ...
    @_property
    def oscillations(self) -> winrt.system.Int32: ...
    @oscillations.setter
    def oscillations(self, value: winrt.system.Int32) -> None: ...

@typing.final
class EntranceNavigationTransitionInfo_Static(NavigationTransitionInfo_Static):
    def get_is_target_element(cls, element: microsoft_ui_xaml.UIElement, /) -> bool: ...
    def set_is_target_element(cls, element: microsoft_ui_xaml.UIElement, value: bool, /) -> None: ...
    @_property
    def is_target_element_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class EntranceNavigationTransitionInfo(NavigationTransitionInfo, metaclass=EntranceNavigationTransitionInfo_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EntranceNavigationTransitionInfo: ...
    def __new__(cls: typing.Type[EntranceNavigationTransitionInfo]) -> EntranceNavigationTransitionInfo: ...

@typing.final
class EntranceThemeTransition_Static(Transition_Static):
    @_property
    def from_horizontal_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def from_vertical_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_staggering_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class EntranceThemeTransition(Transition, metaclass=EntranceThemeTransition_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> EntranceThemeTransition: ...
    def __new__(cls: typing.Type[EntranceThemeTransition]) -> EntranceThemeTransition: ...
    @_property
    def is_staggering_enabled(self) -> bool: ...
    @is_staggering_enabled.setter
    def is_staggering_enabled(self, value: bool) -> None: ...
    @_property
    def from_vertical_offset(self) -> winrt.system.Double: ...
    @from_vertical_offset.setter
    def from_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def from_horizontal_offset(self) -> winrt.system.Double: ...
    @from_horizontal_offset.setter
    def from_horizontal_offset(self, value: winrt.system.Double) -> None: ...

@typing.final
class ExponentialEase_Static(EasingFunctionBase_Static):
    @_property
    def exponent_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class ExponentialEase(EasingFunctionBase, metaclass=ExponentialEase_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ExponentialEase: ...
    def __new__(cls: typing.Type[ExponentialEase]) -> ExponentialEase: ...
    @_property
    def exponent(self) -> winrt.system.Double: ...
    @exponent.setter
    def exponent(self, value: winrt.system.Double) -> None: ...

@typing.final
class FadeInThemeAnimation_Static(Timeline_Static):
    @_property
    def target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class FadeInThemeAnimation(Timeline, metaclass=FadeInThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FadeInThemeAnimation: ...
    def __new__(cls: typing.Type[FadeInThemeAnimation]) -> FadeInThemeAnimation: ...
    @_property
    def target_name(self) -> str: ...
    @target_name.setter
    def target_name(self, value: str) -> None: ...

@typing.final
class FadeOutThemeAnimation_Static(Timeline_Static):
    @_property
    def target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class FadeOutThemeAnimation(Timeline, metaclass=FadeOutThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FadeOutThemeAnimation: ...
    def __new__(cls: typing.Type[FadeOutThemeAnimation]) -> FadeOutThemeAnimation: ...
    @_property
    def target_name(self) -> str: ...
    @target_name.setter
    def target_name(self, value: str) -> None: ...

class GravityConnectedAnimationConfiguration_Static(ConnectedAnimationConfiguration_Static):
    pass

class GravityConnectedAnimationConfiguration(ConnectedAnimationConfiguration, metaclass=GravityConnectedAnimationConfiguration_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GravityConnectedAnimationConfiguration: ...
    def __new__(cls: typing.Type[GravityConnectedAnimationConfiguration]) -> GravityConnectedAnimationConfiguration: ...
    @_property
    def is_shadow_enabled(self) -> bool: ...
    @is_shadow_enabled.setter
    def is_shadow_enabled(self, value: bool) -> None: ...

@typing.final
class KeySpline(microsoft_ui_xaml.DependencyObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> KeySpline: ...
    def __new__(cls: typing.Type[KeySpline]) -> KeySpline: ...
    @_property
    def control_point2(self) -> windows_foundation.Point: ...
    @control_point2.setter
    def control_point2(self, value: windows_foundation.Point) -> None: ...
    @_property
    def control_point1(self) -> windows_foundation.Point: ...
    @control_point1.setter
    def control_point1(self, value: windows_foundation.Point) -> None: ...

@typing.final
class KeyTimeHelper_Static(type):
    def from_time_span(cls, time_span: datetime.timedelta, /) -> KeyTime: ...

@typing.final
class KeyTimeHelper(winrt.system.Object, metaclass=KeyTimeHelper_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> KeyTimeHelper: ...

@typing.final
class LinearColorKeyFrame(ColorKeyFrame):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LinearColorKeyFrame: ...
    def __new__(cls: typing.Type[LinearColorKeyFrame]) -> LinearColorKeyFrame: ...

@typing.final
class LinearDoubleKeyFrame(DoubleKeyFrame):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LinearDoubleKeyFrame: ...
    def __new__(cls: typing.Type[LinearDoubleKeyFrame]) -> LinearDoubleKeyFrame: ...

@typing.final
class LinearPointKeyFrame(PointKeyFrame):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LinearPointKeyFrame: ...
    def __new__(cls: typing.Type[LinearPointKeyFrame]) -> LinearPointKeyFrame: ...

@typing.final
class NavigationThemeTransition_Static(Transition_Static):
    @_property
    def default_navigation_transition_info_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class NavigationThemeTransition(Transition, metaclass=NavigationThemeTransition_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> NavigationThemeTransition: ...
    def __new__(cls: typing.Type[NavigationThemeTransition]) -> NavigationThemeTransition: ...
    @_property
    def default_navigation_transition_info(self) -> NavigationTransitionInfo: ...
    @default_navigation_transition_info.setter
    def default_navigation_transition_info(self, value: NavigationTransitionInfo) -> None: ...

class NavigationTransitionInfo_Static(microsoft_ui_xaml.DependencyObject_Static):
    pass

class NavigationTransitionInfo(microsoft_ui_xaml.DependencyObject, metaclass=NavigationTransitionInfo_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> NavigationTransitionInfo: ...

@typing.final
class ObjectAnimationUsingKeyFrames_Static(Timeline_Static):
    @_property
    def enable_dependent_animation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class ObjectAnimationUsingKeyFrames(Timeline, metaclass=ObjectAnimationUsingKeyFrames_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ObjectAnimationUsingKeyFrames: ...
    def __new__(cls: typing.Type[ObjectAnimationUsingKeyFrames]) -> ObjectAnimationUsingKeyFrames: ...
    @_property
    def enable_dependent_animation(self) -> bool: ...
    @enable_dependent_animation.setter
    def enable_dependent_animation(self, value: bool) -> None: ...
    @_property
    def key_frames(self) -> ObjectKeyFrameCollection: ...

class ObjectKeyFrame_Static(microsoft_ui_xaml.DependencyObject_Static):
    @_property
    def key_time_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def value_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ObjectKeyFrame(microsoft_ui_xaml.DependencyObject, metaclass=ObjectKeyFrame_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ObjectKeyFrame: ...
    @_property
    def value(self) -> winrt.system.Object: ...
    @value.setter
    def value(self, value: winrt.system.Object) -> None: ...
    @_property
    def key_time(self) -> KeyTime: ...
    @key_time.setter
    def key_time(self, value: KeyTime) -> None: ...

@typing.final
class ObjectKeyFrameCollection(winrt.system.Object, winrt._winrt.MutableSequence[ObjectKeyFrame]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[ObjectKeyFrame]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> ObjectKeyFrame: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[ObjectKeyFrame]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: ObjectKeyFrame) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[ObjectKeyFrame]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ObjectKeyFrameCollection: ...
    def __new__(cls: typing.Type[ObjectKeyFrameCollection]) -> ObjectKeyFrameCollection: ...
    def append(self, value: ObjectKeyFrame, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[ObjectKeyFrame]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> ObjectKeyFrame: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[ObjectKeyFrame], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[ObjectKeyFrame]: ...
    def index_of(self, value: ObjectKeyFrame, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: ObjectKeyFrame, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[ObjectKeyFrame], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: ObjectKeyFrame, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class PaneThemeTransition_Static(Transition_Static):
    @_property
    def edge_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class PaneThemeTransition(Transition, metaclass=PaneThemeTransition_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PaneThemeTransition: ...
    def __new__(cls: typing.Type[PaneThemeTransition]) -> PaneThemeTransition: ...
    @_property
    def edge(self) -> microsoft_ui_xaml_controls_primitives.EdgeTransitionLocation: ...
    @edge.setter
    def edge(self, value: microsoft_ui_xaml_controls_primitives.EdgeTransitionLocation) -> None: ...

@typing.final
class PointAnimation_Static(Timeline_Static):
    @_property
    def by_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def easing_function_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def enable_dependent_animation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def from_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def to_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class PointAnimation(Timeline, metaclass=PointAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PointAnimation: ...
    def __new__(cls: typing.Type[PointAnimation]) -> PointAnimation: ...
    @_property
    def to(self) -> typing.Optional[windows_foundation.Point]: ...
    @to.setter
    def to(self, value: typing.Optional[windows_foundation.Point]) -> None: ...
    @_property
    def from_(self) -> typing.Optional[windows_foundation.Point]: ...
    @from_.setter
    def from_(self, value: typing.Optional[windows_foundation.Point]) -> None: ...
    @_property
    def enable_dependent_animation(self) -> bool: ...
    @enable_dependent_animation.setter
    def enable_dependent_animation(self, value: bool) -> None: ...
    @_property
    def easing_function(self) -> EasingFunctionBase: ...
    @easing_function.setter
    def easing_function(self, value: EasingFunctionBase) -> None: ...
    @_property
    def by(self) -> typing.Optional[windows_foundation.Point]: ...
    @by.setter
    def by(self, value: typing.Optional[windows_foundation.Point]) -> None: ...

@typing.final
class PointAnimationUsingKeyFrames_Static(Timeline_Static):
    @_property
    def enable_dependent_animation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class PointAnimationUsingKeyFrames(Timeline, metaclass=PointAnimationUsingKeyFrames_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PointAnimationUsingKeyFrames: ...
    def __new__(cls: typing.Type[PointAnimationUsingKeyFrames]) -> PointAnimationUsingKeyFrames: ...
    @_property
    def enable_dependent_animation(self) -> bool: ...
    @enable_dependent_animation.setter
    def enable_dependent_animation(self, value: bool) -> None: ...
    @_property
    def key_frames(self) -> PointKeyFrameCollection: ...

class PointKeyFrame_Static(microsoft_ui_xaml.DependencyObject_Static):
    @_property
    def key_time_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def value_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class PointKeyFrame(microsoft_ui_xaml.DependencyObject, metaclass=PointKeyFrame_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PointKeyFrame: ...
    @_property
    def value(self) -> windows_foundation.Point: ...
    @value.setter
    def value(self, value: windows_foundation.Point) -> None: ...
    @_property
    def key_time(self) -> KeyTime: ...
    @key_time.setter
    def key_time(self, value: KeyTime) -> None: ...

@typing.final
class PointKeyFrameCollection(winrt.system.Object, winrt._winrt.MutableSequence[PointKeyFrame]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[PointKeyFrame]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> PointKeyFrame: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[PointKeyFrame]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: PointKeyFrame) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[PointKeyFrame]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PointKeyFrameCollection: ...
    def __new__(cls: typing.Type[PointKeyFrameCollection]) -> PointKeyFrameCollection: ...
    def append(self, value: PointKeyFrame, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[PointKeyFrame]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> PointKeyFrame: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[PointKeyFrame], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[PointKeyFrame]: ...
    def index_of(self, value: PointKeyFrame, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: PointKeyFrame, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[PointKeyFrame], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: PointKeyFrame, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class PointerDownThemeAnimation_Static(Timeline_Static):
    @_property
    def target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class PointerDownThemeAnimation(Timeline, metaclass=PointerDownThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PointerDownThemeAnimation: ...
    def __new__(cls: typing.Type[PointerDownThemeAnimation]) -> PointerDownThemeAnimation: ...
    @_property
    def target_name(self) -> str: ...
    @target_name.setter
    def target_name(self, value: str) -> None: ...

@typing.final
class PointerUpThemeAnimation_Static(Timeline_Static):
    @_property
    def target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class PointerUpThemeAnimation(Timeline, metaclass=PointerUpThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PointerUpThemeAnimation: ...
    def __new__(cls: typing.Type[PointerUpThemeAnimation]) -> PointerUpThemeAnimation: ...
    @_property
    def target_name(self) -> str: ...
    @target_name.setter
    def target_name(self, value: str) -> None: ...

@typing.final
class PopInThemeAnimation_Static(Timeline_Static):
    @_property
    def from_horizontal_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def from_vertical_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class PopInThemeAnimation(Timeline, metaclass=PopInThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PopInThemeAnimation: ...
    def __new__(cls: typing.Type[PopInThemeAnimation]) -> PopInThemeAnimation: ...
    @_property
    def target_name(self) -> str: ...
    @target_name.setter
    def target_name(self, value: str) -> None: ...
    @_property
    def from_vertical_offset(self) -> winrt.system.Double: ...
    @from_vertical_offset.setter
    def from_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def from_horizontal_offset(self) -> winrt.system.Double: ...
    @from_horizontal_offset.setter
    def from_horizontal_offset(self, value: winrt.system.Double) -> None: ...

@typing.final
class PopOutThemeAnimation_Static(Timeline_Static):
    @_property
    def target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class PopOutThemeAnimation(Timeline, metaclass=PopOutThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PopOutThemeAnimation: ...
    def __new__(cls: typing.Type[PopOutThemeAnimation]) -> PopOutThemeAnimation: ...
    @_property
    def target_name(self) -> str: ...
    @target_name.setter
    def target_name(self, value: str) -> None: ...

@typing.final
class PopupThemeTransition_Static(Transition_Static):
    @_property
    def from_horizontal_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def from_vertical_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class PopupThemeTransition(Transition, metaclass=PopupThemeTransition_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PopupThemeTransition: ...
    def __new__(cls: typing.Type[PopupThemeTransition]) -> PopupThemeTransition: ...
    @_property
    def from_vertical_offset(self) -> winrt.system.Double: ...
    @from_vertical_offset.setter
    def from_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def from_horizontal_offset(self) -> winrt.system.Double: ...
    @from_horizontal_offset.setter
    def from_horizontal_offset(self, value: winrt.system.Double) -> None: ...

@typing.final
class PowerEase_Static(EasingFunctionBase_Static):
    @_property
    def power_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class PowerEase(EasingFunctionBase, metaclass=PowerEase_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PowerEase: ...
    def __new__(cls: typing.Type[PowerEase]) -> PowerEase: ...
    @_property
    def power(self) -> winrt.system.Double: ...
    @power.setter
    def power(self, value: winrt.system.Double) -> None: ...

@typing.final
class QuadraticEase(EasingFunctionBase):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> QuadraticEase: ...
    def __new__(cls: typing.Type[QuadraticEase]) -> QuadraticEase: ...

@typing.final
class QuarticEase(EasingFunctionBase):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> QuarticEase: ...
    def __new__(cls: typing.Type[QuarticEase]) -> QuarticEase: ...

@typing.final
class QuinticEase(EasingFunctionBase):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> QuinticEase: ...
    def __new__(cls: typing.Type[QuinticEase]) -> QuinticEase: ...

@typing.final
class ReorderThemeTransition(Transition):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ReorderThemeTransition: ...
    def __new__(cls: typing.Type[ReorderThemeTransition]) -> ReorderThemeTransition: ...

@typing.final
class RepeatBehaviorHelper_Static(type):
    def equals(cls, target: RepeatBehavior, value: RepeatBehavior, /) -> bool: ...
    def from_count(cls, count: winrt.system.Double, /) -> RepeatBehavior: ...
    def from_duration(cls, duration: datetime.timedelta, /) -> RepeatBehavior: ...
    def get_has_count(cls, target: RepeatBehavior, /) -> bool: ...
    def get_has_duration(cls, target: RepeatBehavior, /) -> bool: ...
    @_property
    def forever(cls) -> RepeatBehavior: ...

@typing.final
class RepeatBehaviorHelper(winrt.system.Object, metaclass=RepeatBehaviorHelper_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RepeatBehaviorHelper: ...

@typing.final
class RepositionThemeAnimation_Static(Timeline_Static):
    @_property
    def from_horizontal_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def from_vertical_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class RepositionThemeAnimation(Timeline, metaclass=RepositionThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RepositionThemeAnimation: ...
    def __new__(cls: typing.Type[RepositionThemeAnimation]) -> RepositionThemeAnimation: ...
    @_property
    def target_name(self) -> str: ...
    @target_name.setter
    def target_name(self, value: str) -> None: ...
    @_property
    def from_vertical_offset(self) -> winrt.system.Double: ...
    @from_vertical_offset.setter
    def from_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def from_horizontal_offset(self) -> winrt.system.Double: ...
    @from_horizontal_offset.setter
    def from_horizontal_offset(self, value: winrt.system.Double) -> None: ...

@typing.final
class RepositionThemeTransition_Static(Transition_Static):
    @_property
    def is_staggering_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class RepositionThemeTransition(Transition, metaclass=RepositionThemeTransition_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RepositionThemeTransition: ...
    def __new__(cls: typing.Type[RepositionThemeTransition]) -> RepositionThemeTransition: ...
    @_property
    def is_staggering_enabled(self) -> bool: ...
    @is_staggering_enabled.setter
    def is_staggering_enabled(self, value: bool) -> None: ...

@typing.final
class SineEase(EasingFunctionBase):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SineEase: ...
    def __new__(cls: typing.Type[SineEase]) -> SineEase: ...

@typing.final
class SlideNavigationTransitionInfo_Static(NavigationTransitionInfo_Static):
    @_property
    def effect_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class SlideNavigationTransitionInfo(NavigationTransitionInfo, metaclass=SlideNavigationTransitionInfo_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SlideNavigationTransitionInfo: ...
    def __new__(cls: typing.Type[SlideNavigationTransitionInfo]) -> SlideNavigationTransitionInfo: ...
    @_property
    def effect(self) -> SlideNavigationTransitionEffect: ...
    @effect.setter
    def effect(self, value: SlideNavigationTransitionEffect) -> None: ...

@typing.final
class SplineColorKeyFrame_Static(ColorKeyFrame_Static):
    @_property
    def key_spline_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class SplineColorKeyFrame(ColorKeyFrame, metaclass=SplineColorKeyFrame_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SplineColorKeyFrame: ...
    def __new__(cls: typing.Type[SplineColorKeyFrame]) -> SplineColorKeyFrame: ...
    @_property
    def key_spline(self) -> KeySpline: ...
    @key_spline.setter
    def key_spline(self, value: KeySpline) -> None: ...

@typing.final
class SplineDoubleKeyFrame_Static(DoubleKeyFrame_Static):
    @_property
    def key_spline_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class SplineDoubleKeyFrame(DoubleKeyFrame, metaclass=SplineDoubleKeyFrame_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SplineDoubleKeyFrame: ...
    def __new__(cls: typing.Type[SplineDoubleKeyFrame]) -> SplineDoubleKeyFrame: ...
    @_property
    def key_spline(self) -> KeySpline: ...
    @key_spline.setter
    def key_spline(self, value: KeySpline) -> None: ...

@typing.final
class SplinePointKeyFrame_Static(PointKeyFrame_Static):
    @_property
    def key_spline_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class SplinePointKeyFrame(PointKeyFrame, metaclass=SplinePointKeyFrame_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SplinePointKeyFrame: ...
    def __new__(cls: typing.Type[SplinePointKeyFrame]) -> SplinePointKeyFrame: ...
    @_property
    def key_spline(self) -> KeySpline: ...
    @key_spline.setter
    def key_spline(self, value: KeySpline) -> None: ...

@typing.final
class SplitCloseThemeAnimation_Static(Timeline_Static):
    @_property
    def closed_length_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def closed_target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def closed_target_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def content_target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def content_target_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def content_translation_direction_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def content_translation_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def offset_from_center_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def opened_length_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def opened_target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def opened_target_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class SplitCloseThemeAnimation(Timeline, metaclass=SplitCloseThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SplitCloseThemeAnimation: ...
    def __new__(cls: typing.Type[SplitCloseThemeAnimation]) -> SplitCloseThemeAnimation: ...
    @_property
    def opened_target_name(self) -> str: ...
    @opened_target_name.setter
    def opened_target_name(self, value: str) -> None: ...
    @_property
    def opened_target(self) -> microsoft_ui_xaml.DependencyObject: ...
    @opened_target.setter
    def opened_target(self, value: microsoft_ui_xaml.DependencyObject) -> None: ...
    @_property
    def opened_length(self) -> winrt.system.Double: ...
    @opened_length.setter
    def opened_length(self, value: winrt.system.Double) -> None: ...
    @_property
    def offset_from_center(self) -> winrt.system.Double: ...
    @offset_from_center.setter
    def offset_from_center(self, value: winrt.system.Double) -> None: ...
    @_property
    def content_translation_offset(self) -> winrt.system.Double: ...
    @content_translation_offset.setter
    def content_translation_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def content_translation_direction(self) -> microsoft_ui_xaml_controls_primitives.AnimationDirection: ...
    @content_translation_direction.setter
    def content_translation_direction(self, value: microsoft_ui_xaml_controls_primitives.AnimationDirection) -> None: ...
    @_property
    def content_target_name(self) -> str: ...
    @content_target_name.setter
    def content_target_name(self, value: str) -> None: ...
    @_property
    def content_target(self) -> microsoft_ui_xaml.DependencyObject: ...
    @content_target.setter
    def content_target(self, value: microsoft_ui_xaml.DependencyObject) -> None: ...
    @_property
    def closed_target_name(self) -> str: ...
    @closed_target_name.setter
    def closed_target_name(self, value: str) -> None: ...
    @_property
    def closed_target(self) -> microsoft_ui_xaml.DependencyObject: ...
    @closed_target.setter
    def closed_target(self, value: microsoft_ui_xaml.DependencyObject) -> None: ...
    @_property
    def closed_length(self) -> winrt.system.Double: ...
    @closed_length.setter
    def closed_length(self, value: winrt.system.Double) -> None: ...

@typing.final
class SplitOpenThemeAnimation_Static(Timeline_Static):
    @_property
    def closed_length_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def closed_target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def closed_target_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def content_target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def content_target_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def content_translation_direction_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def content_translation_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def offset_from_center_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def opened_length_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def opened_target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def opened_target_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class SplitOpenThemeAnimation(Timeline, metaclass=SplitOpenThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SplitOpenThemeAnimation: ...
    def __new__(cls: typing.Type[SplitOpenThemeAnimation]) -> SplitOpenThemeAnimation: ...
    @_property
    def opened_target_name(self) -> str: ...
    @opened_target_name.setter
    def opened_target_name(self, value: str) -> None: ...
    @_property
    def opened_target(self) -> microsoft_ui_xaml.DependencyObject: ...
    @opened_target.setter
    def opened_target(self, value: microsoft_ui_xaml.DependencyObject) -> None: ...
    @_property
    def opened_length(self) -> winrt.system.Double: ...
    @opened_length.setter
    def opened_length(self, value: winrt.system.Double) -> None: ...
    @_property
    def offset_from_center(self) -> winrt.system.Double: ...
    @offset_from_center.setter
    def offset_from_center(self, value: winrt.system.Double) -> None: ...
    @_property
    def content_translation_offset(self) -> winrt.system.Double: ...
    @content_translation_offset.setter
    def content_translation_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def content_translation_direction(self) -> microsoft_ui_xaml_controls_primitives.AnimationDirection: ...
    @content_translation_direction.setter
    def content_translation_direction(self, value: microsoft_ui_xaml_controls_primitives.AnimationDirection) -> None: ...
    @_property
    def content_target_name(self) -> str: ...
    @content_target_name.setter
    def content_target_name(self, value: str) -> None: ...
    @_property
    def content_target(self) -> microsoft_ui_xaml.DependencyObject: ...
    @content_target.setter
    def content_target(self, value: microsoft_ui_xaml.DependencyObject) -> None: ...
    @_property
    def closed_target_name(self) -> str: ...
    @closed_target_name.setter
    def closed_target_name(self, value: str) -> None: ...
    @_property
    def closed_target(self) -> microsoft_ui_xaml.DependencyObject: ...
    @closed_target.setter
    def closed_target(self, value: microsoft_ui_xaml.DependencyObject) -> None: ...
    @_property
    def closed_length(self) -> winrt.system.Double: ...
    @closed_length.setter
    def closed_length(self, value: winrt.system.Double) -> None: ...

@typing.final
class Storyboard_Static(Timeline_Static):
    def get_target_name(cls, element: Timeline, /) -> str: ...
    def get_target_property(cls, element: Timeline, /) -> str: ...
    def set_target(cls, timeline: Timeline, target: microsoft_ui_xaml.DependencyObject, /) -> None: ...
    def set_target_name(cls, element: Timeline, name: str, /) -> None: ...
    def set_target_property(cls, element: Timeline, path: str, /) -> None: ...
    @_property
    def target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def target_property_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class Storyboard(Timeline, metaclass=Storyboard_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Storyboard: ...
    def __new__(cls: typing.Type[Storyboard]) -> Storyboard: ...
    def begin(self) -> None: ...
    def get_current_state(self) -> ClockState: ...
    def get_current_time(self) -> datetime.timedelta: ...
    def pause(self) -> None: ...
    def resume(self) -> None: ...
    def seek(self, offset: datetime.timedelta, /) -> None: ...
    def seek_aligned_to_last_tick(self, offset: datetime.timedelta, /) -> None: ...
    def skip_to_fill(self) -> None: ...
    def stop(self) -> None: ...
    @_property
    def children(self) -> TimelineCollection: ...

@typing.final
class SuppressNavigationTransitionInfo(NavigationTransitionInfo):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SuppressNavigationTransitionInfo: ...
    def __new__(cls: typing.Type[SuppressNavigationTransitionInfo]) -> SuppressNavigationTransitionInfo: ...

@typing.final
class SwipeBackThemeAnimation_Static(Timeline_Static):
    @_property
    def from_horizontal_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def from_vertical_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class SwipeBackThemeAnimation(Timeline, metaclass=SwipeBackThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SwipeBackThemeAnimation: ...
    def __new__(cls: typing.Type[SwipeBackThemeAnimation]) -> SwipeBackThemeAnimation: ...
    @_property
    def target_name(self) -> str: ...
    @target_name.setter
    def target_name(self, value: str) -> None: ...
    @_property
    def from_vertical_offset(self) -> winrt.system.Double: ...
    @from_vertical_offset.setter
    def from_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def from_horizontal_offset(self) -> winrt.system.Double: ...
    @from_horizontal_offset.setter
    def from_horizontal_offset(self, value: winrt.system.Double) -> None: ...

@typing.final
class SwipeHintThemeAnimation_Static(Timeline_Static):
    @_property
    def target_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def to_horizontal_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def to_vertical_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class SwipeHintThemeAnimation(Timeline, metaclass=SwipeHintThemeAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SwipeHintThemeAnimation: ...
    def __new__(cls: typing.Type[SwipeHintThemeAnimation]) -> SwipeHintThemeAnimation: ...
    @_property
    def to_vertical_offset(self) -> winrt.system.Double: ...
    @to_vertical_offset.setter
    def to_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def to_horizontal_offset(self) -> winrt.system.Double: ...
    @to_horizontal_offset.setter
    def to_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def target_name(self) -> str: ...
    @target_name.setter
    def target_name(self, value: str) -> None: ...

class Timeline_Static(microsoft_ui_xaml.DependencyObject_Static):
    @_property
    def allow_dependent_animations(cls) -> bool: ...
    @allow_dependent_animations.setter
    def allow_dependent_animations(cls, value: bool) -> None: ...
    @_property
    def auto_reverse_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def begin_time_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def duration_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def fill_behavior_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def repeat_behavior_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def speed_ratio_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class Timeline(microsoft_ui_xaml.DependencyObject, metaclass=Timeline_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Timeline: ...
    def add_completed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def speed_ratio(self) -> winrt.system.Double: ...
    @speed_ratio.setter
    def speed_ratio(self, value: winrt.system.Double) -> None: ...
    @_property
    def repeat_behavior(self) -> RepeatBehavior: ...
    @repeat_behavior.setter
    def repeat_behavior(self, value: RepeatBehavior) -> None: ...
    @_property
    def fill_behavior(self) -> FillBehavior: ...
    @fill_behavior.setter
    def fill_behavior(self, value: FillBehavior) -> None: ...
    @_property
    def duration(self) -> microsoft_ui_xaml.Duration: ...
    @duration.setter
    def duration(self, value: microsoft_ui_xaml.Duration) -> None: ...
    @_property
    def begin_time(self) -> typing.Optional[datetime.timedelta]: ...
    @begin_time.setter
    def begin_time(self, value: typing.Optional[datetime.timedelta]) -> None: ...
    @_property
    def auto_reverse(self) -> bool: ...
    @auto_reverse.setter
    def auto_reverse(self, value: bool) -> None: ...

@typing.final
class TimelineCollection(winrt.system.Object, winrt._winrt.MutableSequence[Timeline]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[Timeline]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> Timeline: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[Timeline]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: Timeline) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[Timeline]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TimelineCollection: ...
    def __new__(cls: typing.Type[TimelineCollection]) -> TimelineCollection: ...
    def append(self, value: Timeline, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[Timeline]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> Timeline: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[Timeline], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[Timeline]: ...
    def index_of(self, value: Timeline, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: Timeline, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[Timeline], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: Timeline, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

class Transition_Static(microsoft_ui_xaml.DependencyObject_Static):
    pass

class Transition(microsoft_ui_xaml.DependencyObject, metaclass=Transition_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Transition: ...

@typing.final
class TransitionCollection(winrt.system.Object, winrt._winrt.MutableSequence[Transition]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[Transition]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> Transition: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[Transition]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: Transition) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[Transition]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TransitionCollection: ...
    def __new__(cls: typing.Type[TransitionCollection]) -> TransitionCollection: ...
    def append(self, value: Transition, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[Transition]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> Transition: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[Transition], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[Transition]: ...
    def index_of(self, value: Transition, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: Transition, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[Transition], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: Transition, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

