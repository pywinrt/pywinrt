# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.microsoft.ui as microsoft_ui
import winrt.microsoft.ui.content as microsoft_ui_content
import winrt.microsoft.ui.dispatching as microsoft_ui_dispatching
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.graphics as windows_graphics
import winrt.windows.system as windows_system
import winrt.windows.ui.core as windows_ui_core

from winrt.microsoft.ui.input import CrossSlidingState, DraggingState, FocusNavigationReason, FocusNavigationResult, GestureSettings, HoldingState, InputActivationState, InputPointerSourceDeviceKinds, InputSystemCursorShape, MoveSizeOperation, NonClientRegionKind, PointerDeviceType, PointerUpdateKind, VirtualKeyStates

Self = typing.TypeVar('Self')

@typing.final
class CrossSlideThresholds:
    @_property
    def selection_start(self) -> winrt.system.Single: ...
    @_property
    def speed_bump_start(self) -> winrt.system.Single: ...
    @_property
    def speed_bump_end(self) -> winrt.system.Single: ...
    @_property
    def rearrange_start(self) -> winrt.system.Single: ...
    def __new__(cls, selection_start: winrt.system.Single = 0, speed_bump_start: winrt.system.Single = 0, speed_bump_end: winrt.system.Single = 0, rearrange_start: winrt.system.Single = 0) -> CrossSlideThresholds: ...

@typing.final
class ManipulationDelta:
    @_property
    def translation(self) -> windows_foundation.Point: ...
    @_property
    def scale(self) -> winrt.system.Single: ...
    @_property
    def rotation(self) -> winrt.system.Single: ...
    @_property
    def expansion(self) -> winrt.system.Single: ...
    def __new__(cls, translation: windows_foundation.Point = windows_foundation.Point(), scale: winrt.system.Single = 0, rotation: winrt.system.Single = 0, expansion: winrt.system.Single = 0) -> ManipulationDelta: ...

@typing.final
class ManipulationVelocities:
    @_property
    def linear(self) -> windows_foundation.Point: ...
    @_property
    def angular(self) -> winrt.system.Single: ...
    @_property
    def expansion(self) -> winrt.system.Single: ...
    def __new__(cls, linear: windows_foundation.Point = windows_foundation.Point(), angular: winrt.system.Single = 0, expansion: winrt.system.Single = 0) -> ManipulationVelocities: ...

@typing.final
class PhysicalKeyStatus:
    @_property
    def repeat_count(self) -> winrt.system.UInt32: ...
    @_property
    def scan_code(self) -> winrt.system.UInt32: ...
    @_property
    def is_extended_key(self) -> bool: ...
    @_property
    def is_menu_key_down(self) -> bool: ...
    @_property
    def was_key_down(self) -> bool: ...
    @_property
    def is_key_released(self) -> bool: ...
    def __new__(cls, repeat_count: winrt.system.UInt32 = 0, scan_code: winrt.system.UInt32 = 0, is_extended_key: bool = False, is_menu_key_down: bool = False, was_key_down: bool = False, is_key_released: bool = False) -> PhysicalKeyStatus: ...

@typing.final
class CharacterReceivedEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Input.CharacterReceivedEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Microsoft.UI.Input.CharacterReceivedEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...
    # System.UInt32 Microsoft.UI.Input.CharacterReceivedEventArgs::get_KeyCode()
    @_property
    def key_code(self) -> winrt.system.UInt32: ...
    # Microsoft.UI.Input.PhysicalKeyStatus Microsoft.UI.Input.CharacterReceivedEventArgs::get_KeyStatus()
    @_property
    def key_status(self) -> PhysicalKeyStatus: ...

@typing.final
class ContextMenuKeyEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Input.ContextMenuKeyEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Microsoft.UI.Input.ContextMenuKeyEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...

@typing.final
class CrossSlidingEventArgs(winrt.system.Object):
    # Microsoft.UI.Input.CrossSlidingState Microsoft.UI.Input.CrossSlidingEventArgs::get_CrossSlidingState()
    @_property
    def cross_sliding_state(self) -> CrossSlidingState: ...
    # Microsoft.UI.Input.PointerDeviceType Microsoft.UI.Input.CrossSlidingEventArgs::get_PointerDeviceType()
    @_property
    def pointer_device_type(self) -> PointerDeviceType: ...
    # Windows.Foundation.Point Microsoft.UI.Input.CrossSlidingEventArgs::get_Position()
    @_property
    def position(self) -> windows_foundation.Point: ...

@typing.final
class DraggingEventArgs(winrt.system.Object):
    # Microsoft.UI.Input.DraggingState Microsoft.UI.Input.DraggingEventArgs::get_DraggingState()
    @_property
    def dragging_state(self) -> DraggingState: ...
    # Microsoft.UI.Input.PointerDeviceType Microsoft.UI.Input.DraggingEventArgs::get_PointerDeviceType()
    @_property
    def pointer_device_type(self) -> PointerDeviceType: ...
    # Windows.Foundation.Point Microsoft.UI.Input.DraggingEventArgs::get_Position()
    @_property
    def position(self) -> windows_foundation.Point: ...

@typing.final
class EnteredMoveSizeEventArgs(winrt.system.Object):
    # Microsoft.UI.Input.MoveSizeOperation Microsoft.UI.Input.EnteredMoveSizeEventArgs::get_MoveSizeOperation()
    @_property
    def move_size_operation(self) -> MoveSizeOperation: ...
    # Windows.Graphics.PointInt32 Microsoft.UI.Input.EnteredMoveSizeEventArgs::get_PointerScreenPoint()
    @_property
    def pointer_screen_point(self) -> windows_graphics.PointInt32: ...

@typing.final
class EnteringMoveSizeEventArgs(winrt.system.Object):
    # Microsoft.UI.WindowId Microsoft.UI.Input.EnteringMoveSizeEventArgs::get_MoveSizeWindowId()
    @_property
    def move_size_window_id(self) -> microsoft_ui.WindowId: ...
    # System.Void Microsoft.UI.Input.EnteringMoveSizeEventArgs::put_MoveSizeWindowId(Microsoft.UI.WindowId)
    @move_size_window_id.setter
    def move_size_window_id(self, value: typing.Union[microsoft_ui.WindowId, typing.Tuple[winrt.system.UInt64]]) -> None: ...
    # Microsoft.UI.Input.MoveSizeOperation Microsoft.UI.Input.EnteringMoveSizeEventArgs::get_MoveSizeOperation()
    @_property
    def move_size_operation(self) -> MoveSizeOperation: ...
    # Windows.Graphics.PointInt32 Microsoft.UI.Input.EnteringMoveSizeEventArgs::get_PointerScreenPoint()
    @_property
    def pointer_screen_point(self) -> windows_graphics.PointInt32: ...

@typing.final
class ExitedMoveSizeEventArgs(winrt.system.Object):
    # Microsoft.UI.Input.MoveSizeOperation Microsoft.UI.Input.ExitedMoveSizeEventArgs::get_MoveSizeOperation()
    @_property
    def move_size_operation(self) -> MoveSizeOperation: ...
    # Windows.Graphics.PointInt32 Microsoft.UI.Input.ExitedMoveSizeEventArgs::get_PointerScreenPoint()
    @_property
    def pointer_screen_point(self) -> windows_graphics.PointInt32: ...

@typing.final
class FocusChangedEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Input.FocusChangedEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Microsoft.UI.Input.FocusChangedEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...

@typing.final
class FocusNavigationRequest_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Input.FocusNavigationRequest Microsoft.UI.Input.FocusNavigationRequest::Create(Microsoft.UI.Input.FocusNavigationReason)
    def create(cls, reason: FocusNavigationReason, /) -> FocusNavigationRequest: ...
    # Microsoft.UI.Input.FocusNavigationRequest Microsoft.UI.Input.FocusNavigationRequest::Create(Microsoft.UI.Input.FocusNavigationReason,Windows.Foundation.Rect)
    def create_with_hint_rect(cls, reason: FocusNavigationReason, hint_rect: typing.Union[windows_foundation.Rect, typing.Tuple[winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single]], /) -> FocusNavigationRequest: ...
    # Microsoft.UI.Input.FocusNavigationRequest Microsoft.UI.Input.FocusNavigationRequest::Create(Microsoft.UI.Input.FocusNavigationReason,Windows.Foundation.Rect,System.Guid)
    def create_with_hint_rect_and_id(cls, reason: FocusNavigationReason, hint_rect: typing.Union[windows_foundation.Rect, typing.Tuple[winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single]], correlation_id: _uuid.UUID, /) -> FocusNavigationRequest: ...

@typing.final
class FocusNavigationRequest(winrt.system.Object, metaclass=FocusNavigationRequest_Static):
    # System.Guid Microsoft.UI.Input.FocusNavigationRequest::get_CorrelationId()
    @_property
    def correlation_id(self) -> _uuid.UUID: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.Rect> Microsoft.UI.Input.FocusNavigationRequest::get_HintRect()
    @_property
    def hint_rect(self) -> typing.Optional[windows_foundation.Rect]: ...
    # Microsoft.UI.Input.FocusNavigationReason Microsoft.UI.Input.FocusNavigationRequest::get_Reason()
    @_property
    def reason(self) -> FocusNavigationReason: ...

@typing.final
class FocusNavigationRequestEventArgs(winrt.system.Object):
    # Microsoft.UI.Input.FocusNavigationResult Microsoft.UI.Input.FocusNavigationRequestEventArgs::get_Result()
    @_property
    def result(self) -> FocusNavigationResult: ...
    # System.Void Microsoft.UI.Input.FocusNavigationRequestEventArgs::put_Result(Microsoft.UI.Input.FocusNavigationResult)
    @result.setter
    def result(self, value: FocusNavigationResult) -> None: ...
    # Microsoft.UI.Input.FocusNavigationRequest Microsoft.UI.Input.FocusNavigationRequestEventArgs::get_Request()
    @_property
    def request(self) -> FocusNavigationRequest: ...

@typing.final
class GestureRecognizer(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Microsoft.UI.Input.GestureRecognizer::CanBeDoubleTap(Microsoft.UI.Input.PointerPoint)
    def can_be_double_tap(self, value: PointerPoint, /) -> bool: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::CompleteGesture()
    def complete_gesture(self) -> None: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::ProcessDownEvent(Microsoft.UI.Input.PointerPoint)
    def process_down_event(self, value: PointerPoint, /) -> None: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::ProcessInertia()
    def process_inertia(self) -> None: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::ProcessMouseWheelEvent(Microsoft.UI.Input.PointerPoint,System.Boolean,System.Boolean)
    def process_mouse_wheel_event(self, value: PointerPoint, is_shift_key_down: bool, is_control_key_down: bool, /) -> None: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::ProcessMoveEvents(Windows.Foundation.Collections.IVector`1<Microsoft.UI.Input.PointerPoint>)
    def process_move_events(self, value: typing.MutableSequence[PointerPoint], /) -> None: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::ProcessUpEvent(Microsoft.UI.Input.PointerPoint)
    def process_up_event(self, value: PointerPoint, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.GestureRecognizer::add_CrossSliding(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.GestureRecognizer,Microsoft.UI.Input.CrossSlidingEventArgs>)
    def add_cross_sliding(self, handler: windows_foundation.TypedEventHandler[GestureRecognizer, CrossSlidingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::remove_CrossSliding(Windows.Foundation.EventRegistrationToken)
    def remove_cross_sliding(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.GestureRecognizer::add_Dragging(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.GestureRecognizer,Microsoft.UI.Input.DraggingEventArgs>)
    def add_dragging(self, handler: windows_foundation.TypedEventHandler[GestureRecognizer, DraggingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::remove_Dragging(Windows.Foundation.EventRegistrationToken)
    def remove_dragging(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.GestureRecognizer::add_Holding(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.GestureRecognizer,Microsoft.UI.Input.HoldingEventArgs>)
    def add_holding(self, handler: windows_foundation.TypedEventHandler[GestureRecognizer, HoldingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::remove_Holding(Windows.Foundation.EventRegistrationToken)
    def remove_holding(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.GestureRecognizer::add_ManipulationCompleted(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.GestureRecognizer,Microsoft.UI.Input.ManipulationCompletedEventArgs>)
    def add_manipulation_completed(self, handler: windows_foundation.TypedEventHandler[GestureRecognizer, ManipulationCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::remove_ManipulationCompleted(Windows.Foundation.EventRegistrationToken)
    def remove_manipulation_completed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.GestureRecognizer::add_ManipulationInertiaStarting(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.GestureRecognizer,Microsoft.UI.Input.ManipulationInertiaStartingEventArgs>)
    def add_manipulation_inertia_starting(self, handler: windows_foundation.TypedEventHandler[GestureRecognizer, ManipulationInertiaStartingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::remove_ManipulationInertiaStarting(Windows.Foundation.EventRegistrationToken)
    def remove_manipulation_inertia_starting(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.GestureRecognizer::add_ManipulationStarted(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.GestureRecognizer,Microsoft.UI.Input.ManipulationStartedEventArgs>)
    def add_manipulation_started(self, handler: windows_foundation.TypedEventHandler[GestureRecognizer, ManipulationStartedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::remove_ManipulationStarted(Windows.Foundation.EventRegistrationToken)
    def remove_manipulation_started(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.GestureRecognizer::add_ManipulationUpdated(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.GestureRecognizer,Microsoft.UI.Input.ManipulationUpdatedEventArgs>)
    def add_manipulation_updated(self, handler: windows_foundation.TypedEventHandler[GestureRecognizer, ManipulationUpdatedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::remove_ManipulationUpdated(Windows.Foundation.EventRegistrationToken)
    def remove_manipulation_updated(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.GestureRecognizer::add_RightTapped(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.GestureRecognizer,Microsoft.UI.Input.RightTappedEventArgs>)
    def add_right_tapped(self, handler: windows_foundation.TypedEventHandler[GestureRecognizer, RightTappedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::remove_RightTapped(Windows.Foundation.EventRegistrationToken)
    def remove_right_tapped(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.GestureRecognizer::add_Tapped(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.GestureRecognizer,Microsoft.UI.Input.TappedEventArgs>)
    def add_tapped(self, handler: windows_foundation.TypedEventHandler[GestureRecognizer, TappedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::remove_Tapped(Windows.Foundation.EventRegistrationToken)
    def remove_tapped(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Boolean Microsoft.UI.Input.GestureRecognizer::get_ShowGestureFeedback()
    @_property
    def show_gesture_feedback(self) -> bool: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_ShowGestureFeedback(System.Boolean)
    @show_gesture_feedback.setter
    def show_gesture_feedback(self, value: bool) -> None: ...
    # System.Single Microsoft.UI.Input.GestureRecognizer::get_PivotRadius()
    @_property
    def pivot_radius(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_PivotRadius(System.Single)
    @pivot_radius.setter
    def pivot_radius(self, value: winrt.system.Single) -> None: ...
    # Windows.Foundation.Point Microsoft.UI.Input.GestureRecognizer::get_PivotCenter()
    @_property
    def pivot_center(self) -> windows_foundation.Point: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_PivotCenter(Windows.Foundation.Point)
    @pivot_center.setter
    def pivot_center(self, value: typing.Union[windows_foundation.Point, typing.Tuple[winrt.system.Single, winrt.system.Single]]) -> None: ...
    # System.Boolean Microsoft.UI.Input.GestureRecognizer::get_ManipulationExact()
    @_property
    def manipulation_exact(self) -> bool: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_ManipulationExact(System.Boolean)
    @manipulation_exact.setter
    def manipulation_exact(self, value: bool) -> None: ...
    # System.Single Microsoft.UI.Input.GestureRecognizer::get_InertiaTranslationDisplacement()
    @_property
    def inertia_translation_displacement(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_InertiaTranslationDisplacement(System.Single)
    @inertia_translation_displacement.setter
    def inertia_translation_displacement(self, value: winrt.system.Single) -> None: ...
    # System.Single Microsoft.UI.Input.GestureRecognizer::get_InertiaTranslationDeceleration()
    @_property
    def inertia_translation_deceleration(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_InertiaTranslationDeceleration(System.Single)
    @inertia_translation_deceleration.setter
    def inertia_translation_deceleration(self, value: winrt.system.Single) -> None: ...
    # System.Single Microsoft.UI.Input.GestureRecognizer::get_InertiaRotationDeceleration()
    @_property
    def inertia_rotation_deceleration(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_InertiaRotationDeceleration(System.Single)
    @inertia_rotation_deceleration.setter
    def inertia_rotation_deceleration(self, value: winrt.system.Single) -> None: ...
    # System.Single Microsoft.UI.Input.GestureRecognizer::get_InertiaRotationAngle()
    @_property
    def inertia_rotation_angle(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_InertiaRotationAngle(System.Single)
    @inertia_rotation_angle.setter
    def inertia_rotation_angle(self, value: winrt.system.Single) -> None: ...
    # System.Single Microsoft.UI.Input.GestureRecognizer::get_InertiaExpansionDeceleration()
    @_property
    def inertia_expansion_deceleration(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_InertiaExpansionDeceleration(System.Single)
    @inertia_expansion_deceleration.setter
    def inertia_expansion_deceleration(self, value: winrt.system.Single) -> None: ...
    # System.Single Microsoft.UI.Input.GestureRecognizer::get_InertiaExpansion()
    @_property
    def inertia_expansion(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_InertiaExpansion(System.Single)
    @inertia_expansion.setter
    def inertia_expansion(self, value: winrt.system.Single) -> None: ...
    # Microsoft.UI.Input.GestureSettings Microsoft.UI.Input.GestureRecognizer::get_GestureSettings()
    @_property
    def gesture_settings(self) -> GestureSettings: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_GestureSettings(Microsoft.UI.Input.GestureSettings)
    @gesture_settings.setter
    def gesture_settings(self, value: GestureSettings) -> None: ...
    # Microsoft.UI.Input.CrossSlideThresholds Microsoft.UI.Input.GestureRecognizer::get_CrossSlideThresholds()
    @_property
    def cross_slide_thresholds(self) -> CrossSlideThresholds: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_CrossSlideThresholds(Microsoft.UI.Input.CrossSlideThresholds)
    @cross_slide_thresholds.setter
    def cross_slide_thresholds(self, value: typing.Union[CrossSlideThresholds, typing.Tuple[winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single]]) -> None: ...
    # System.Boolean Microsoft.UI.Input.GestureRecognizer::get_CrossSlideHorizontally()
    @_property
    def cross_slide_horizontally(self) -> bool: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_CrossSlideHorizontally(System.Boolean)
    @cross_slide_horizontally.setter
    def cross_slide_horizontally(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Input.GestureRecognizer::get_CrossSlideExact()
    @_property
    def cross_slide_exact(self) -> bool: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_CrossSlideExact(System.Boolean)
    @cross_slide_exact.setter
    def cross_slide_exact(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Input.GestureRecognizer::get_AutoProcessInertia()
    @_property
    def auto_process_inertia(self) -> bool: ...
    # System.Void Microsoft.UI.Input.GestureRecognizer::put_AutoProcessInertia(System.Boolean)
    @auto_process_inertia.setter
    def auto_process_inertia(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Input.GestureRecognizer::get_IsActive()
    @_property
    def is_active(self) -> bool: ...
    # System.Boolean Microsoft.UI.Input.GestureRecognizer::get_IsInertial()
    @_property
    def is_inertial(self) -> bool: ...
    # Microsoft.UI.Input.MouseWheelParameters Microsoft.UI.Input.GestureRecognizer::get_MouseWheelParameters()
    @_property
    def mouse_wheel_parameters(self) -> MouseWheelParameters: ...

@typing.final
class HoldingEventArgs(winrt.system.Object):
    # Microsoft.UI.Input.HoldingState Microsoft.UI.Input.HoldingEventArgs::get_HoldingState()
    @_property
    def holding_state(self) -> HoldingState: ...
    # Microsoft.UI.Input.PointerDeviceType Microsoft.UI.Input.HoldingEventArgs::get_PointerDeviceType()
    @_property
    def pointer_device_type(self) -> PointerDeviceType: ...
    # Windows.Foundation.Point Microsoft.UI.Input.HoldingEventArgs::get_Position()
    @_property
    def position(self) -> windows_foundation.Point: ...

@typing.final
class InputActivationListener_Static(InputObject_Static):
    # Microsoft.UI.Input.InputActivationListener Microsoft.UI.Input.InputActivationListener::GetForIsland(Microsoft.UI.Content.ContentIsland)
    def get_for_island(cls, island: microsoft_ui_content.ContentIsland, /) -> InputActivationListener: ...
    # Microsoft.UI.Input.InputActivationListener Microsoft.UI.Input.InputActivationListener::GetForWindowId(Microsoft.UI.WindowId)
    def get_for_window_id(cls, window_id: typing.Union[microsoft_ui.WindowId, typing.Tuple[winrt.system.UInt64]], /) -> InputActivationListener: ...

@typing.final
class InputActivationListener(InputObject, metaclass=InputActivationListener_Static):
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputActivationListener::add_InputActivationChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputActivationListener,Microsoft.UI.Input.InputActivationListenerActivationChangedEventArgs>)
    def add_input_activation_changed(self, handler: windows_foundation.TypedEventHandler[InputActivationListener, InputActivationListenerActivationChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputActivationListener::remove_InputActivationChanged(Windows.Foundation.EventRegistrationToken)
    def remove_input_activation_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Microsoft.UI.Input.InputActivationState Microsoft.UI.Input.InputActivationListener::get_State()
    @_property
    def state(self) -> InputActivationState: ...

@typing.final
class InputActivationListenerActivationChangedEventArgs(winrt.system.Object):
    pass

class InputCursor_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Input.InputCursor Microsoft.UI.Input.InputCursor::CreateFromCoreCursor(Windows.UI.Core.CoreCursor)
    def create_from_core_cursor(cls, cursor: windows_ui_core.CoreCursor, /) -> InputCursor: ...

class InputCursor(winrt.system.Object, windows_foundation.IClosable, metaclass=InputCursor_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Microsoft.UI.Input.InputCursor::Close()
    def close(self) -> None: ...

class InputCustomCursor_Static(InputCursor_Static):
    pass

class InputCustomCursor(InputCursor, metaclass=InputCustomCursor_Static):
    pass

@typing.final
class InputDesktopNamedResourceCursor_Static(InputCursor_Static):
    # Microsoft.UI.Input.InputDesktopNamedResourceCursor Microsoft.UI.Input.InputDesktopNamedResourceCursor::Create(System.String)
    def create(cls, resource_name: str, /) -> InputDesktopNamedResourceCursor: ...
    # Microsoft.UI.Input.InputDesktopNamedResourceCursor Microsoft.UI.Input.InputDesktopNamedResourceCursor::CreateFromModule(System.String,System.String)
    def create_from_module(cls, module_name: str, resource_name: str, /) -> InputDesktopNamedResourceCursor: ...

@typing.final
class InputDesktopNamedResourceCursor(InputCursor, metaclass=InputDesktopNamedResourceCursor_Static):
    # System.String Microsoft.UI.Input.InputDesktopNamedResourceCursor::get_ModuleName()
    @_property
    def module_name(self) -> str: ...
    # System.String Microsoft.UI.Input.InputDesktopNamedResourceCursor::get_ResourceName()
    @_property
    def resource_name(self) -> str: ...

@typing.final
class InputDesktopResourceCursor_Static(InputCursor_Static):
    # Microsoft.UI.Input.InputDesktopResourceCursor Microsoft.UI.Input.InputDesktopResourceCursor::Create(System.UInt32)
    def create(cls, resource_id: winrt.system.UInt32, /) -> InputDesktopResourceCursor: ...
    # Microsoft.UI.Input.InputDesktopResourceCursor Microsoft.UI.Input.InputDesktopResourceCursor::CreateFromModule(System.String,System.UInt32)
    def create_from_module(cls, module_name: str, resource_id: winrt.system.UInt32, /) -> InputDesktopResourceCursor: ...

@typing.final
class InputDesktopResourceCursor(InputCursor, metaclass=InputDesktopResourceCursor_Static):
    # System.String Microsoft.UI.Input.InputDesktopResourceCursor::get_ModuleName()
    @_property
    def module_name(self) -> str: ...
    # System.UInt32 Microsoft.UI.Input.InputDesktopResourceCursor::get_ResourceId()
    @_property
    def resource_id(self) -> winrt.system.UInt32: ...

@typing.final
class InputFocusController_Static(InputObject_Static):
    # Microsoft.UI.Input.InputFocusController Microsoft.UI.Input.InputFocusController::GetForIsland(Microsoft.UI.Content.ContentIsland)
    def get_for_island(cls, island: microsoft_ui_content.ContentIsland, /) -> InputFocusController: ...

@typing.final
class InputFocusController(InputObject, metaclass=InputFocusController_Static):
    # Microsoft.UI.Input.FocusNavigationResult Microsoft.UI.Input.InputFocusController::DepartFocus(Microsoft.UI.Input.FocusNavigationRequest)
    def depart_focus(self, request: FocusNavigationRequest, /) -> FocusNavigationResult: ...
    # System.Boolean Microsoft.UI.Input.InputFocusController::TrySetFocus()
    def try_set_focus(self) -> bool: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputFocusController::add_GotFocus(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputFocusController,Microsoft.UI.Input.FocusChangedEventArgs>)
    def add_got_focus(self, handler: windows_foundation.TypedEventHandler[InputFocusController, FocusChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputFocusController::remove_GotFocus(Windows.Foundation.EventRegistrationToken)
    def remove_got_focus(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputFocusController::add_LostFocus(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputFocusController,Microsoft.UI.Input.FocusChangedEventArgs>)
    def add_lost_focus(self, handler: windows_foundation.TypedEventHandler[InputFocusController, FocusChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputFocusController::remove_LostFocus(Windows.Foundation.EventRegistrationToken)
    def remove_lost_focus(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputFocusController::add_NavigateFocusRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputFocusController,Microsoft.UI.Input.FocusNavigationRequestEventArgs>)
    def add_navigate_focus_requested(self, handler: windows_foundation.TypedEventHandler[InputFocusController, FocusNavigationRequestEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputFocusController::remove_NavigateFocusRequested(Windows.Foundation.EventRegistrationToken)
    def remove_navigate_focus_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Boolean Microsoft.UI.Input.InputFocusController::get_HasFocus()
    @_property
    def has_focus(self) -> bool: ...

@typing.final
class InputFocusNavigationHost_Static(InputObject_Static):
    # Microsoft.UI.Input.InputFocusNavigationHost Microsoft.UI.Input.InputFocusNavigationHost::GetForSiteBridge(Microsoft.UI.Content.IContentSiteBridge)
    def get_for_site_bridge(cls, site: microsoft_ui_content.IContentSiteBridge, /) -> InputFocusNavigationHost: ...

@typing.final
class InputFocusNavigationHost(InputObject, metaclass=InputFocusNavigationHost_Static):
    # Microsoft.UI.Input.FocusNavigationResult Microsoft.UI.Input.InputFocusNavigationHost::NavigateFocus(Microsoft.UI.Input.FocusNavigationRequest)
    def navigate_focus(self, request: FocusNavigationRequest, /) -> FocusNavigationResult: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputFocusNavigationHost::add_DepartFocusRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputFocusNavigationHost,Microsoft.UI.Input.FocusNavigationRequestEventArgs>)
    def add_depart_focus_requested(self, handler: windows_foundation.TypedEventHandler[InputFocusNavigationHost, FocusNavigationRequestEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputFocusNavigationHost::remove_DepartFocusRequested(Windows.Foundation.EventRegistrationToken)
    def remove_depart_focus_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Boolean Microsoft.UI.Input.InputFocusNavigationHost::get_ContainsFocus()
    @_property
    def contains_focus(self) -> bool: ...

@typing.final
class InputKeyboardSource_Static(InputObject_Static):
    # Microsoft.UI.Input.InputKeyboardSource Microsoft.UI.Input.InputKeyboardSource::GetForIsland(Microsoft.UI.Content.ContentIsland)
    def get_for_island(cls, island: microsoft_ui_content.ContentIsland, /) -> InputKeyboardSource: ...
    # Windows.UI.Core.CoreVirtualKeyStates Microsoft.UI.Input.InputKeyboardSource::GetKeyStateForCurrentThread(Windows.System.VirtualKey)
    def get_key_state_for_current_thread(cls, virtual_key: windows_system.VirtualKey, /) -> windows_ui_core.CoreVirtualKeyStates: ...

@typing.final
class InputKeyboardSource(InputObject, metaclass=InputKeyboardSource_Static):
    # Microsoft.UI.Input.VirtualKeyStates Microsoft.UI.Input.InputKeyboardSource::GetCurrentKeyState(Windows.System.VirtualKey)
    def get_current_key_state(self, virtual_key: windows_system.VirtualKey, /) -> VirtualKeyStates: ...
    # Microsoft.UI.Input.VirtualKeyStates Microsoft.UI.Input.InputKeyboardSource::GetKeyState(Windows.System.VirtualKey)
    def get_key_state(self, virtual_key: windows_system.VirtualKey, /) -> VirtualKeyStates: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputKeyboardSource::add_CharacterReceived(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputKeyboardSource,Microsoft.UI.Input.CharacterReceivedEventArgs>)
    def add_character_received(self, handler: windows_foundation.TypedEventHandler[InputKeyboardSource, CharacterReceivedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputKeyboardSource::remove_CharacterReceived(Windows.Foundation.EventRegistrationToken)
    def remove_character_received(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputKeyboardSource::add_ContextMenuKey(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputKeyboardSource,Microsoft.UI.Input.ContextMenuKeyEventArgs>)
    def add_context_menu_key(self, handler: windows_foundation.TypedEventHandler[InputKeyboardSource, ContextMenuKeyEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputKeyboardSource::remove_ContextMenuKey(Windows.Foundation.EventRegistrationToken)
    def remove_context_menu_key(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputKeyboardSource::add_KeyDown(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputKeyboardSource,Microsoft.UI.Input.KeyEventArgs>)
    def add_key_down(self, handler: windows_foundation.TypedEventHandler[InputKeyboardSource, KeyEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputKeyboardSource::remove_KeyDown(Windows.Foundation.EventRegistrationToken)
    def remove_key_down(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputKeyboardSource::add_KeyUp(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputKeyboardSource,Microsoft.UI.Input.KeyEventArgs>)
    def add_key_up(self, handler: windows_foundation.TypedEventHandler[InputKeyboardSource, KeyEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputKeyboardSource::remove_KeyUp(Windows.Foundation.EventRegistrationToken)
    def remove_key_up(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputKeyboardSource::add_SystemKeyDown(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputKeyboardSource,Microsoft.UI.Input.KeyEventArgs>)
    def add_system_key_down(self, handler: windows_foundation.TypedEventHandler[InputKeyboardSource, KeyEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputKeyboardSource::remove_SystemKeyDown(Windows.Foundation.EventRegistrationToken)
    def remove_system_key_down(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputKeyboardSource::add_SystemKeyUp(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputKeyboardSource,Microsoft.UI.Input.KeyEventArgs>)
    def add_system_key_up(self, handler: windows_foundation.TypedEventHandler[InputKeyboardSource, KeyEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputKeyboardSource::remove_SystemKeyUp(Windows.Foundation.EventRegistrationToken)
    def remove_system_key_up(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...

@typing.final
class InputLightDismissAction_Static(InputObject_Static):
    # Microsoft.UI.Input.InputLightDismissAction Microsoft.UI.Input.InputLightDismissAction::GetForWindowId(Microsoft.UI.WindowId)
    def get_for_window_id(cls, window_id: typing.Union[microsoft_ui.WindowId, typing.Tuple[winrt.system.UInt64]], /) -> InputLightDismissAction: ...

@typing.final
class InputLightDismissAction(InputObject, metaclass=InputLightDismissAction_Static):
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputLightDismissAction::add_Dismissed(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputLightDismissAction,Microsoft.UI.Input.InputLightDismissEventArgs>)
    def add_dismissed(self, handler: windows_foundation.TypedEventHandler[InputLightDismissAction, InputLightDismissEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputLightDismissAction::remove_Dismissed(Windows.Foundation.EventRegistrationToken)
    def remove_dismissed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...

@typing.final
class InputLightDismissEventArgs(winrt.system.Object):
    pass

@typing.final
class InputNonClientPointerSource_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Input.InputNonClientPointerSource Microsoft.UI.Input.InputNonClientPointerSource::GetForWindowId(Microsoft.UI.WindowId)
    def get_for_window_id(cls, window_id: typing.Union[microsoft_ui.WindowId, typing.Tuple[winrt.system.UInt64]], /) -> InputNonClientPointerSource: ...

@typing.final
class InputNonClientPointerSource(winrt.system.Object, metaclass=InputNonClientPointerSource_Static):
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::ClearAllRegionRects()
    def clear_all_region_rects(self) -> None: ...
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::ClearRegionRects(Microsoft.UI.Input.NonClientRegionKind)
    def clear_region_rects(self, region: NonClientRegionKind, /) -> None: ...
    # Windows.Graphics.RectInt32[] Microsoft.UI.Input.InputNonClientPointerSource::GetRegionRects(Microsoft.UI.Input.NonClientRegionKind)
    def get_region_rects(self, region: NonClientRegionKind, /) -> winrt.system.Array[windows_graphics.RectInt32]: ...
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::SetRegionRects(Microsoft.UI.Input.NonClientRegionKind,Windows.Graphics.RectInt32[])
    def set_region_rects(self, region: NonClientRegionKind, rects: typing.Union[winrt.system.Array[windows_graphics.RectInt32], winrt.system.ReadableBuffer], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputNonClientPointerSource::add_CaptionTapped(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputNonClientPointerSource,Microsoft.UI.Input.NonClientCaptionTappedEventArgs>)
    def add_caption_tapped(self, handler: windows_foundation.TypedEventHandler[InputNonClientPointerSource, NonClientCaptionTappedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::remove_CaptionTapped(Windows.Foundation.EventRegistrationToken)
    def remove_caption_tapped(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputNonClientPointerSource::add_PointerEntered(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputNonClientPointerSource,Microsoft.UI.Input.NonClientPointerEventArgs>)
    def add_pointer_entered(self, handler: windows_foundation.TypedEventHandler[InputNonClientPointerSource, NonClientPointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::remove_PointerEntered(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_entered(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputNonClientPointerSource::add_PointerExited(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputNonClientPointerSource,Microsoft.UI.Input.NonClientPointerEventArgs>)
    def add_pointer_exited(self, handler: windows_foundation.TypedEventHandler[InputNonClientPointerSource, NonClientPointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::remove_PointerExited(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_exited(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputNonClientPointerSource::add_PointerMoved(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputNonClientPointerSource,Microsoft.UI.Input.NonClientPointerEventArgs>)
    def add_pointer_moved(self, handler: windows_foundation.TypedEventHandler[InputNonClientPointerSource, NonClientPointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::remove_PointerMoved(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_moved(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputNonClientPointerSource::add_PointerPressed(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputNonClientPointerSource,Microsoft.UI.Input.NonClientPointerEventArgs>)
    def add_pointer_pressed(self, handler: windows_foundation.TypedEventHandler[InputNonClientPointerSource, NonClientPointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::remove_PointerPressed(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_pressed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputNonClientPointerSource::add_PointerReleased(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputNonClientPointerSource,Microsoft.UI.Input.NonClientPointerEventArgs>)
    def add_pointer_released(self, handler: windows_foundation.TypedEventHandler[InputNonClientPointerSource, NonClientPointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::remove_PointerReleased(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_released(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputNonClientPointerSource::add_RegionsChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputNonClientPointerSource,Microsoft.UI.Input.NonClientRegionsChangedEventArgs>)
    def add_regions_changed(self, handler: windows_foundation.TypedEventHandler[InputNonClientPointerSource, NonClientRegionsChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::remove_RegionsChanged(Windows.Foundation.EventRegistrationToken)
    def remove_regions_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputNonClientPointerSource::add_EnteredMoveSize(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputNonClientPointerSource,Microsoft.UI.Input.EnteredMoveSizeEventArgs>)
    def add_entered_move_size(self, handler: windows_foundation.TypedEventHandler[InputNonClientPointerSource, EnteredMoveSizeEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::remove_EnteredMoveSize(Windows.Foundation.EventRegistrationToken)
    def remove_entered_move_size(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputNonClientPointerSource::add_EnteringMoveSize(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputNonClientPointerSource,Microsoft.UI.Input.EnteringMoveSizeEventArgs>)
    def add_entering_move_size(self, handler: windows_foundation.TypedEventHandler[InputNonClientPointerSource, EnteringMoveSizeEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::remove_EnteringMoveSize(Windows.Foundation.EventRegistrationToken)
    def remove_entering_move_size(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputNonClientPointerSource::add_ExitedMoveSize(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputNonClientPointerSource,Microsoft.UI.Input.ExitedMoveSizeEventArgs>)
    def add_exited_move_size(self, handler: windows_foundation.TypedEventHandler[InputNonClientPointerSource, ExitedMoveSizeEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::remove_ExitedMoveSize(Windows.Foundation.EventRegistrationToken)
    def remove_exited_move_size(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputNonClientPointerSource::add_WindowRectChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputNonClientPointerSource,Microsoft.UI.Input.WindowRectChangedEventArgs>)
    def add_window_rect_changed(self, handler: windows_foundation.TypedEventHandler[InputNonClientPointerSource, WindowRectChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::remove_WindowRectChanged(Windows.Foundation.EventRegistrationToken)
    def remove_window_rect_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputNonClientPointerSource::add_WindowRectChanging(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputNonClientPointerSource,Microsoft.UI.Input.WindowRectChangingEventArgs>)
    def add_window_rect_changing(self, handler: windows_foundation.TypedEventHandler[InputNonClientPointerSource, WindowRectChangingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputNonClientPointerSource::remove_WindowRectChanging(Windows.Foundation.EventRegistrationToken)
    def remove_window_rect_changing(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Microsoft.UI.Dispatching.DispatcherQueue Microsoft.UI.Input.InputNonClientPointerSource::get_DispatcherQueue()
    @_property
    def dispatcher_queue(self) -> microsoft_ui_dispatching.DispatcherQueue: ...

class InputObject_Static(winrt._winrt.IInspectable_Static):
    pass

class InputObject(winrt.system.Object, metaclass=InputObject_Static):
    # Microsoft.UI.Dispatching.DispatcherQueue Microsoft.UI.Input.InputObject::get_DispatcherQueue()
    @_property
    @typing.final
    def dispatcher_queue(self) -> microsoft_ui_dispatching.DispatcherQueue: ...

@typing.final
class InputPointerSource_Static(InputObject_Static):
    # Microsoft.UI.Input.InputPointerSource Microsoft.UI.Input.InputPointerSource::GetForIsland(Microsoft.UI.Content.ContentIsland)
    def get_for_island(cls, island: microsoft_ui_content.ContentIsland, /) -> InputPointerSource: ...

@typing.final
class InputPointerSource(InputObject, metaclass=InputPointerSource_Static):
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputPointerSource::add_PointerCaptureLost(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputPointerSource,Microsoft.UI.Input.PointerEventArgs>)
    def add_pointer_capture_lost(self, handler: windows_foundation.TypedEventHandler[InputPointerSource, PointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputPointerSource::remove_PointerCaptureLost(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_capture_lost(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputPointerSource::add_PointerEntered(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputPointerSource,Microsoft.UI.Input.PointerEventArgs>)
    def add_pointer_entered(self, handler: windows_foundation.TypedEventHandler[InputPointerSource, PointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputPointerSource::remove_PointerEntered(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_entered(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputPointerSource::add_PointerExited(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputPointerSource,Microsoft.UI.Input.PointerEventArgs>)
    def add_pointer_exited(self, handler: windows_foundation.TypedEventHandler[InputPointerSource, PointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputPointerSource::remove_PointerExited(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_exited(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputPointerSource::add_PointerMoved(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputPointerSource,Microsoft.UI.Input.PointerEventArgs>)
    def add_pointer_moved(self, handler: windows_foundation.TypedEventHandler[InputPointerSource, PointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputPointerSource::remove_PointerMoved(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_moved(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputPointerSource::add_PointerPressed(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputPointerSource,Microsoft.UI.Input.PointerEventArgs>)
    def add_pointer_pressed(self, handler: windows_foundation.TypedEventHandler[InputPointerSource, PointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputPointerSource::remove_PointerPressed(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_pressed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputPointerSource::add_PointerReleased(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputPointerSource,Microsoft.UI.Input.PointerEventArgs>)
    def add_pointer_released(self, handler: windows_foundation.TypedEventHandler[InputPointerSource, PointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputPointerSource::remove_PointerReleased(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_released(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputPointerSource::add_PointerRoutedAway(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputPointerSource,Microsoft.UI.Input.PointerEventArgs>)
    def add_pointer_routed_away(self, handler: windows_foundation.TypedEventHandler[InputPointerSource, PointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputPointerSource::remove_PointerRoutedAway(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_routed_away(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputPointerSource::add_PointerRoutedReleased(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputPointerSource,Microsoft.UI.Input.PointerEventArgs>)
    def add_pointer_routed_released(self, handler: windows_foundation.TypedEventHandler[InputPointerSource, PointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputPointerSource::remove_PointerRoutedReleased(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_routed_released(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputPointerSource::add_PointerRoutedTo(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputPointerSource,Microsoft.UI.Input.PointerEventArgs>)
    def add_pointer_routed_to(self, handler: windows_foundation.TypedEventHandler[InputPointerSource, PointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputPointerSource::remove_PointerRoutedTo(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_routed_to(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Input.InputPointerSource::add_PointerWheelChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Input.InputPointerSource,Microsoft.UI.Input.PointerEventArgs>)
    def add_pointer_wheel_changed(self, handler: windows_foundation.TypedEventHandler[InputPointerSource, PointerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Input.InputPointerSource::remove_PointerWheelChanged(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_wheel_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Microsoft.UI.Input.InputCursor Microsoft.UI.Input.InputPointerSource::get_Cursor()
    @_property
    def cursor(self) -> InputCursor: ...
    # System.Void Microsoft.UI.Input.InputPointerSource::put_Cursor(Microsoft.UI.Input.InputCursor)
    @cursor.setter
    def cursor(self, value: InputCursor) -> None: ...
    # Microsoft.UI.Input.InputPointerSourceDeviceKinds Microsoft.UI.Input.InputPointerSource::get_DeviceKinds()
    @_property
    def device_kinds(self) -> InputPointerSourceDeviceKinds: ...

@typing.final
class InputPreTranslateKeyboardSource_Static(InputObject_Static):
    # Microsoft.UI.Input.InputPreTranslateKeyboardSource Microsoft.UI.Input.InputPreTranslateKeyboardSource::GetForIsland(Microsoft.UI.Content.ContentIsland)
    def get_for_island(cls, island: microsoft_ui_content.ContentIsland, /) -> InputPreTranslateKeyboardSource: ...

@typing.final
class InputPreTranslateKeyboardSource(InputObject, metaclass=InputPreTranslateKeyboardSource_Static):
    pass

@typing.final
class InputSystemCursor_Static(InputCursor_Static):
    # Microsoft.UI.Input.InputSystemCursor Microsoft.UI.Input.InputSystemCursor::Create(Microsoft.UI.Input.InputSystemCursorShape)
    def create(cls, type: InputSystemCursorShape, /) -> InputSystemCursor: ...

@typing.final
class InputSystemCursor(InputCursor, metaclass=InputSystemCursor_Static):
    # Microsoft.UI.Input.InputSystemCursorShape Microsoft.UI.Input.InputSystemCursor::get_CursorShape()
    @_property
    def cursor_shape(self) -> InputSystemCursorShape: ...

@typing.final
class KeyEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Input.KeyEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Microsoft.UI.Input.KeyEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...
    # Microsoft.UI.Input.PhysicalKeyStatus Microsoft.UI.Input.KeyEventArgs::get_KeyStatus()
    @_property
    def key_status(self) -> PhysicalKeyStatus: ...
    # System.UInt64 Microsoft.UI.Input.KeyEventArgs::get_Timestamp()
    @_property
    def timestamp(self) -> winrt.system.UInt64: ...
    # Windows.System.VirtualKey Microsoft.UI.Input.KeyEventArgs::get_VirtualKey()
    @_property
    def virtual_key(self) -> windows_system.VirtualKey: ...

@typing.final
class ManipulationCompletedEventArgs(winrt.system.Object):
    # Microsoft.UI.Input.ManipulationDelta Microsoft.UI.Input.ManipulationCompletedEventArgs::get_Cumulative()
    @_property
    def cumulative(self) -> ManipulationDelta: ...
    # Microsoft.UI.Input.PointerDeviceType Microsoft.UI.Input.ManipulationCompletedEventArgs::get_PointerDeviceType()
    @_property
    def pointer_device_type(self) -> PointerDeviceType: ...
    # Windows.Foundation.Point Microsoft.UI.Input.ManipulationCompletedEventArgs::get_Position()
    @_property
    def position(self) -> windows_foundation.Point: ...
    # Microsoft.UI.Input.ManipulationVelocities Microsoft.UI.Input.ManipulationCompletedEventArgs::get_Velocities()
    @_property
    def velocities(self) -> ManipulationVelocities: ...

@typing.final
class ManipulationInertiaStartingEventArgs(winrt.system.Object):
    # Microsoft.UI.Input.ManipulationDelta Microsoft.UI.Input.ManipulationInertiaStartingEventArgs::get_Cumulative()
    @_property
    def cumulative(self) -> ManipulationDelta: ...
    # Microsoft.UI.Input.ManipulationDelta Microsoft.UI.Input.ManipulationInertiaStartingEventArgs::get_Delta()
    @_property
    def delta(self) -> ManipulationDelta: ...
    # Microsoft.UI.Input.PointerDeviceType Microsoft.UI.Input.ManipulationInertiaStartingEventArgs::get_PointerDeviceType()
    @_property
    def pointer_device_type(self) -> PointerDeviceType: ...
    # Windows.Foundation.Point Microsoft.UI.Input.ManipulationInertiaStartingEventArgs::get_Position()
    @_property
    def position(self) -> windows_foundation.Point: ...
    # Microsoft.UI.Input.ManipulationVelocities Microsoft.UI.Input.ManipulationInertiaStartingEventArgs::get_Velocities()
    @_property
    def velocities(self) -> ManipulationVelocities: ...

@typing.final
class ManipulationStartedEventArgs(winrt.system.Object):
    # Microsoft.UI.Input.ManipulationDelta Microsoft.UI.Input.ManipulationStartedEventArgs::get_Cumulative()
    @_property
    def cumulative(self) -> ManipulationDelta: ...
    # Microsoft.UI.Input.PointerDeviceType Microsoft.UI.Input.ManipulationStartedEventArgs::get_PointerDeviceType()
    @_property
    def pointer_device_type(self) -> PointerDeviceType: ...
    # Windows.Foundation.Point Microsoft.UI.Input.ManipulationStartedEventArgs::get_Position()
    @_property
    def position(self) -> windows_foundation.Point: ...

@typing.final
class ManipulationUpdatedEventArgs(winrt.system.Object):
    # Microsoft.UI.Input.ManipulationDelta Microsoft.UI.Input.ManipulationUpdatedEventArgs::get_Cumulative()
    @_property
    def cumulative(self) -> ManipulationDelta: ...
    # Microsoft.UI.Input.ManipulationDelta Microsoft.UI.Input.ManipulationUpdatedEventArgs::get_Delta()
    @_property
    def delta(self) -> ManipulationDelta: ...
    # Microsoft.UI.Input.PointerDeviceType Microsoft.UI.Input.ManipulationUpdatedEventArgs::get_PointerDeviceType()
    @_property
    def pointer_device_type(self) -> PointerDeviceType: ...
    # Windows.Foundation.Point Microsoft.UI.Input.ManipulationUpdatedEventArgs::get_Position()
    @_property
    def position(self) -> windows_foundation.Point: ...
    # Microsoft.UI.Input.ManipulationVelocities Microsoft.UI.Input.ManipulationUpdatedEventArgs::get_Velocities()
    @_property
    def velocities(self) -> ManipulationVelocities: ...

@typing.final
class MouseWheelParameters(winrt.system.Object):
    # Windows.Foundation.Point Microsoft.UI.Input.MouseWheelParameters::get_PageTranslation()
    @_property
    def page_translation(self) -> windows_foundation.Point: ...
    # System.Void Microsoft.UI.Input.MouseWheelParameters::put_PageTranslation(Windows.Foundation.Point)
    @page_translation.setter
    def page_translation(self, value: typing.Union[windows_foundation.Point, typing.Tuple[winrt.system.Single, winrt.system.Single]]) -> None: ...
    # System.Single Microsoft.UI.Input.MouseWheelParameters::get_DeltaScale()
    @_property
    def delta_scale(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Input.MouseWheelParameters::put_DeltaScale(System.Single)
    @delta_scale.setter
    def delta_scale(self, value: winrt.system.Single) -> None: ...
    # System.Single Microsoft.UI.Input.MouseWheelParameters::get_DeltaRotationAngle()
    @_property
    def delta_rotation_angle(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Input.MouseWheelParameters::put_DeltaRotationAngle(System.Single)
    @delta_rotation_angle.setter
    def delta_rotation_angle(self, value: winrt.system.Single) -> None: ...
    # Windows.Foundation.Point Microsoft.UI.Input.MouseWheelParameters::get_CharTranslation()
    @_property
    def char_translation(self) -> windows_foundation.Point: ...
    # System.Void Microsoft.UI.Input.MouseWheelParameters::put_CharTranslation(Windows.Foundation.Point)
    @char_translation.setter
    def char_translation(self, value: typing.Union[windows_foundation.Point, typing.Tuple[winrt.system.Single, winrt.system.Single]]) -> None: ...

@typing.final
class NonClientCaptionTappedEventArgs(winrt.system.Object):
    # Windows.Foundation.Point Microsoft.UI.Input.NonClientCaptionTappedEventArgs::get_Point()
    @_property
    def point(self) -> windows_foundation.Point: ...
    # Microsoft.UI.Input.PointerDeviceType Microsoft.UI.Input.NonClientCaptionTappedEventArgs::get_PointerDeviceType()
    @_property
    def pointer_device_type(self) -> PointerDeviceType: ...

@typing.final
class NonClientPointerEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Input.NonClientPointerEventArgs::get_IsPointInRegion()
    @_property
    def is_point_in_region(self) -> bool: ...
    # Windows.Foundation.Point Microsoft.UI.Input.NonClientPointerEventArgs::get_Point()
    @_property
    def point(self) -> windows_foundation.Point: ...
    # Microsoft.UI.Input.PointerDeviceType Microsoft.UI.Input.NonClientPointerEventArgs::get_PointerDeviceType()
    @_property
    def pointer_device_type(self) -> PointerDeviceType: ...
    # Microsoft.UI.Input.NonClientRegionKind Microsoft.UI.Input.NonClientPointerEventArgs::get_RegionKind()
    @_property
    def region_kind(self) -> NonClientRegionKind: ...

@typing.final
class NonClientRegionsChangedEventArgs(winrt.system.Object):
    # Microsoft.UI.Input.NonClientRegionKind[] Microsoft.UI.Input.NonClientRegionsChangedEventArgs::get_ChangedRegions()
    @_property
    def changed_regions(self) -> NonClientRegionKind: ...

@typing.final
class PointerEventArgs(winrt.system.Object):
    # Windows.Foundation.Collections.IVector`1<Microsoft.UI.Input.PointerPoint> Microsoft.UI.Input.PointerEventArgs::GetIntermediatePoints()
    def get_intermediate_points(self) -> typing.MutableSequence[PointerPoint]: ...
    # Windows.Foundation.Collections.IVector`1<Microsoft.UI.Input.PointerPoint> Microsoft.UI.Input.PointerEventArgs::GetIntermediateTransformedPoints(Microsoft.UI.Input.IPointerPointTransform)
    def get_intermediate_transformed_points(self, transform: IPointerPointTransform, /) -> typing.MutableSequence[PointerPoint]: ...
    # System.Boolean Microsoft.UI.Input.PointerEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Microsoft.UI.Input.PointerEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...
    # Microsoft.UI.Input.PointerPoint Microsoft.UI.Input.PointerEventArgs::get_CurrentPoint()
    @_property
    def current_point(self) -> PointerPoint: ...
    # Windows.System.VirtualKeyModifiers Microsoft.UI.Input.PointerEventArgs::get_KeyModifiers()
    @_property
    def key_modifiers(self) -> windows_system.VirtualKeyModifiers: ...

@typing.final
class PointerPoint(winrt.system.Object):
    # Microsoft.UI.Input.PointerPoint Microsoft.UI.Input.PointerPoint::GetTransformedPoint(Microsoft.UI.Input.IPointerPointTransform)
    def get_transformed_point(self, transform: IPointerPointTransform, /) -> PointerPoint: ...
    # System.UInt32 Microsoft.UI.Input.PointerPoint::get_FrameId()
    @_property
    def frame_id(self) -> winrt.system.UInt32: ...
    # System.Boolean Microsoft.UI.Input.PointerPoint::get_IsInContact()
    @_property
    def is_in_contact(self) -> bool: ...
    # Microsoft.UI.Input.PointerDeviceType Microsoft.UI.Input.PointerPoint::get_PointerDeviceType()
    @_property
    def pointer_device_type(self) -> PointerDeviceType: ...
    # System.UInt32 Microsoft.UI.Input.PointerPoint::get_PointerId()
    @_property
    def pointer_id(self) -> winrt.system.UInt32: ...
    # Windows.Foundation.Point Microsoft.UI.Input.PointerPoint::get_Position()
    @_property
    def position(self) -> windows_foundation.Point: ...
    # Microsoft.UI.Input.PointerPointProperties Microsoft.UI.Input.PointerPoint::get_Properties()
    @_property
    def properties(self) -> PointerPointProperties: ...
    # System.UInt64 Microsoft.UI.Input.PointerPoint::get_Timestamp()
    @_property
    def timestamp(self) -> winrt.system.UInt64: ...

@typing.final
class PointerPointProperties(winrt.system.Object):
    # Windows.Foundation.Rect Microsoft.UI.Input.PointerPointProperties::get_ContactRect()
    @_property
    def contact_rect(self) -> windows_foundation.Rect: ...
    # System.Boolean Microsoft.UI.Input.PointerPointProperties::get_IsBarrelButtonPressed()
    @_property
    def is_barrel_button_pressed(self) -> bool: ...
    # System.Boolean Microsoft.UI.Input.PointerPointProperties::get_IsCanceled()
    @_property
    def is_canceled(self) -> bool: ...
    # System.Boolean Microsoft.UI.Input.PointerPointProperties::get_IsEraser()
    @_property
    def is_eraser(self) -> bool: ...
    # System.Boolean Microsoft.UI.Input.PointerPointProperties::get_IsHorizontalMouseWheel()
    @_property
    def is_horizontal_mouse_wheel(self) -> bool: ...
    # System.Boolean Microsoft.UI.Input.PointerPointProperties::get_IsInRange()
    @_property
    def is_in_range(self) -> bool: ...
    # System.Boolean Microsoft.UI.Input.PointerPointProperties::get_IsInverted()
    @_property
    def is_inverted(self) -> bool: ...
    # System.Boolean Microsoft.UI.Input.PointerPointProperties::get_IsLeftButtonPressed()
    @_property
    def is_left_button_pressed(self) -> bool: ...
    # System.Boolean Microsoft.UI.Input.PointerPointProperties::get_IsMiddleButtonPressed()
    @_property
    def is_middle_button_pressed(self) -> bool: ...
    # System.Boolean Microsoft.UI.Input.PointerPointProperties::get_IsPrimary()
    @_property
    def is_primary(self) -> bool: ...
    # System.Boolean Microsoft.UI.Input.PointerPointProperties::get_IsRightButtonPressed()
    @_property
    def is_right_button_pressed(self) -> bool: ...
    # System.Boolean Microsoft.UI.Input.PointerPointProperties::get_IsXButton1Pressed()
    @_property
    def is_x_button1_pressed(self) -> bool: ...
    # System.Boolean Microsoft.UI.Input.PointerPointProperties::get_IsXButton2Pressed()
    @_property
    def is_x_button2_pressed(self) -> bool: ...
    # System.Int32 Microsoft.UI.Input.PointerPointProperties::get_MouseWheelDelta()
    @_property
    def mouse_wheel_delta(self) -> winrt.system.Int32: ...
    # System.Single Microsoft.UI.Input.PointerPointProperties::get_Orientation()
    @_property
    def orientation(self) -> winrt.system.Single: ...
    # Microsoft.UI.Input.PointerUpdateKind Microsoft.UI.Input.PointerPointProperties::get_PointerUpdateKind()
    @_property
    def pointer_update_kind(self) -> PointerUpdateKind: ...
    # System.Single Microsoft.UI.Input.PointerPointProperties::get_Pressure()
    @_property
    def pressure(self) -> winrt.system.Single: ...
    # System.Boolean Microsoft.UI.Input.PointerPointProperties::get_TouchConfidence()
    @_property
    def touch_confidence(self) -> bool: ...
    # System.Single Microsoft.UI.Input.PointerPointProperties::get_Twist()
    @_property
    def twist(self) -> winrt.system.Single: ...
    # System.Single Microsoft.UI.Input.PointerPointProperties::get_XTilt()
    @_property
    def x_tilt(self) -> winrt.system.Single: ...
    # System.Single Microsoft.UI.Input.PointerPointProperties::get_YTilt()
    @_property
    def y_tilt(self) -> winrt.system.Single: ...

@typing.final
class PointerPredictor_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Input.PointerPredictor Microsoft.UI.Input.PointerPredictor::CreateForInputPointerSource(Microsoft.UI.Input.InputPointerSource)
    def create_for_input_pointer_source(cls, input_pointer_source: InputPointerSource, /) -> PointerPredictor: ...

@typing.final
class PointerPredictor(winrt.system.Object, windows_foundation.IClosable, metaclass=PointerPredictor_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Microsoft.UI.Input.PointerPredictor::Close()
    def close(self) -> None: ...
    # Microsoft.UI.Input.PointerPoint[] Microsoft.UI.Input.PointerPredictor::GetPredictedPoints(Microsoft.UI.Input.PointerPoint)
    def get_predicted_points(self, point: PointerPoint, /) -> winrt.system.Array[PointerPoint]: ...
    # Windows.Foundation.TimeSpan Microsoft.UI.Input.PointerPredictor::get_PredictionTime()
    @_property
    def prediction_time(self) -> datetime.timedelta: ...
    # System.Void Microsoft.UI.Input.PointerPredictor::put_PredictionTime(Windows.Foundation.TimeSpan)
    @prediction_time.setter
    def prediction_time(self, value: datetime.timedelta) -> None: ...

@typing.final
class RightTappedEventArgs(winrt.system.Object):
    # Microsoft.UI.Input.PointerDeviceType Microsoft.UI.Input.RightTappedEventArgs::get_PointerDeviceType()
    @_property
    def pointer_device_type(self) -> PointerDeviceType: ...
    # Windows.Foundation.Point Microsoft.UI.Input.RightTappedEventArgs::get_Position()
    @_property
    def position(self) -> windows_foundation.Point: ...

@typing.final
class TappedEventArgs(winrt.system.Object):
    # Microsoft.UI.Input.PointerDeviceType Microsoft.UI.Input.TappedEventArgs::get_PointerDeviceType()
    @_property
    def pointer_device_type(self) -> PointerDeviceType: ...
    # Windows.Foundation.Point Microsoft.UI.Input.TappedEventArgs::get_Position()
    @_property
    def position(self) -> windows_foundation.Point: ...
    # System.UInt32 Microsoft.UI.Input.TappedEventArgs::get_TapCount()
    @_property
    def tap_count(self) -> winrt.system.UInt32: ...

@typing.final
class WindowRectChangedEventArgs(winrt.system.Object):
    # Microsoft.UI.Input.MoveSizeOperation Microsoft.UI.Input.WindowRectChangedEventArgs::get_MoveSizeOperation()
    @_property
    def move_size_operation(self) -> MoveSizeOperation: ...
    # Windows.Graphics.RectInt32 Microsoft.UI.Input.WindowRectChangedEventArgs::get_NewWindowRect()
    @_property
    def new_window_rect(self) -> windows_graphics.RectInt32: ...
    # Windows.Graphics.RectInt32 Microsoft.UI.Input.WindowRectChangedEventArgs::get_OldWindowRect()
    @_property
    def old_window_rect(self) -> windows_graphics.RectInt32: ...
    # Windows.Graphics.PointInt32 Microsoft.UI.Input.WindowRectChangedEventArgs::get_PointerScreenPoint()
    @_property
    def pointer_screen_point(self) -> windows_graphics.PointInt32: ...

@typing.final
class WindowRectChangingEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Input.WindowRectChangingEventArgs::get_ShowWindow()
    @_property
    def show_window(self) -> bool: ...
    # System.Void Microsoft.UI.Input.WindowRectChangingEventArgs::put_ShowWindow(System.Boolean)
    @show_window.setter
    def show_window(self, value: bool) -> None: ...
    # Windows.Graphics.RectInt32 Microsoft.UI.Input.WindowRectChangingEventArgs::get_NewWindowRect()
    @_property
    def new_window_rect(self) -> windows_graphics.RectInt32: ...
    # System.Void Microsoft.UI.Input.WindowRectChangingEventArgs::put_NewWindowRect(Windows.Graphics.RectInt32)
    @new_window_rect.setter
    def new_window_rect(self, value: typing.Union[windows_graphics.RectInt32, typing.Tuple[winrt.system.Int32, winrt.system.Int32, winrt.system.Int32, winrt.system.Int32]]) -> None: ...
    # System.Boolean Microsoft.UI.Input.WindowRectChangingEventArgs::get_AllowRectChange()
    @_property
    def allow_rect_change(self) -> bool: ...
    # System.Void Microsoft.UI.Input.WindowRectChangingEventArgs::put_AllowRectChange(System.Boolean)
    @allow_rect_change.setter
    def allow_rect_change(self, value: bool) -> None: ...
    # Microsoft.UI.Input.MoveSizeOperation Microsoft.UI.Input.WindowRectChangingEventArgs::get_MoveSizeOperation()
    @_property
    def move_size_operation(self) -> MoveSizeOperation: ...
    # Windows.Graphics.RectInt32 Microsoft.UI.Input.WindowRectChangingEventArgs::get_OldWindowRect()
    @_property
    def old_window_rect(self) -> windows_graphics.RectInt32: ...
    # Windows.Graphics.PointInt32 Microsoft.UI.Input.WindowRectChangingEventArgs::get_PointerScreenPoint()
    @_property
    def pointer_screen_point(self) -> windows_graphics.PointInt32: ...

@typing.final
class _IPointerPointTransform: ...

class IPointerPointTransform(winrt._winrt.IInspectable):
    # System.Boolean Microsoft.UI.Input.IPointerPointTransform::TryTransform(Windows.Foundation.Point,Windows.Foundation.Point&)
    @abstractmethod
    def try_transform(self, in_point: typing.Union[windows_foundation.Point, typing.Tuple[winrt.system.Single, winrt.system.Single]], /) -> typing.Tuple[bool, windows_foundation.Point]: ...
    # System.Boolean Microsoft.UI.Input.IPointerPointTransform::TryTransformBounds(Windows.Foundation.Rect,Windows.Foundation.Rect&)
    @abstractmethod
    def try_transform_bounds(self, in_rect: typing.Union[windows_foundation.Rect, typing.Tuple[winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single]], /) -> typing.Tuple[bool, windows_foundation.Rect]: ...
    # Microsoft.UI.Input.IPointerPointTransform Microsoft.UI.Input.IPointerPointTransform::get_Inverse()
    @_property
    @abstractmethod
    def inverse(self) -> IPointerPointTransform: ...

