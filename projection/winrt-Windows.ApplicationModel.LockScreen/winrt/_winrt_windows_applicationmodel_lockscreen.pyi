# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.storage.streams

Self = typing.TypeVar('Self')

@typing.final
class LockApplicationHost_Static(type):
    def get_for_current_view(cls) -> typing.Optional[LockApplicationHost]: ...

@typing.final
class LockApplicationHost(winrt.system.Object, metaclass=LockApplicationHost_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LockApplicationHost: ...
    def request_unlock(self) -> None: ...
    def add_unlocking(self, handler: winrt.windows.foundation.TypedEventHandler[LockApplicationHost, LockScreenUnlockingEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_unlocking(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

@typing.final
class LockScreenBadge(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LockScreenBadge: ...
    def launch_app(self) -> None: ...
    @_property
    def automation_name(self) -> str: ...
    @_property
    def glyph(self) -> typing.Optional[winrt.windows.storage.streams.IRandomAccessStream]: ...
    @_property
    def logo(self) -> typing.Optional[winrt.windows.storage.streams.IRandomAccessStream]: ...
    @_property
    def number(self) -> typing.Optional[typing.Optional[winrt.system.UInt32]]: ...

@typing.final
class LockScreenInfo(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LockScreenInfo: ...
    def add_alarm_icon_changed(self, handler: winrt.windows.foundation.TypedEventHandler[LockScreenInfo, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_alarm_icon_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_badges_changed(self, handler: winrt.windows.foundation.TypedEventHandler[LockScreenInfo, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_badges_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_detail_text_changed(self, handler: winrt.windows.foundation.TypedEventHandler[LockScreenInfo, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_detail_text_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_lock_screen_image_changed(self, handler: winrt.windows.foundation.TypedEventHandler[LockScreenInfo, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_lock_screen_image_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def alarm_icon(self) -> typing.Optional[winrt.windows.storage.streams.IRandomAccessStream]: ...
    @_property
    def badges(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[LockScreenBadge]]: ...
    @_property
    def detail_text(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[str]]: ...
    @_property
    def lock_screen_image(self) -> typing.Optional[winrt.windows.storage.streams.IRandomAccessStream]: ...

@typing.final
class LockScreenUnlockingDeferral(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LockScreenUnlockingDeferral: ...
    def complete(self) -> None: ...

@typing.final
class LockScreenUnlockingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LockScreenUnlockingEventArgs: ...
    def get_deferral(self) -> typing.Optional[LockScreenUnlockingDeferral]: ...
    @_property
    def deadline(self) -> datetime.datetime: ...

