# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.devices.humaninterfacedevice as windows_devices_humaninterfacedevice
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections

from winrt.windows.devices.input.preview import GazeDeviceConfigurationStatePreview

Self = typing.TypeVar('Self')

@typing.final
class GazeDevicePreview(winrt.system.Object):
    # Windows.Foundation.Collections.IVectorView`1<Windows.Devices.HumanInterfaceDevice.HidBooleanControlDescription> Windows.Devices.Input.Preview.GazeDevicePreview::GetBooleanControlDescriptions(System.UInt16,System.UInt16)
    def get_boolean_control_descriptions(self, usage_page: winrt.system.UInt16, usage_id: winrt.system.UInt16, /) -> typing.Sequence[windows_devices_humaninterfacedevice.HidBooleanControlDescription]: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Devices.HumanInterfaceDevice.HidNumericControlDescription> Windows.Devices.Input.Preview.GazeDevicePreview::GetNumericControlDescriptions(System.UInt16,System.UInt16)
    def get_numeric_control_descriptions(self, usage_page: winrt.system.UInt16, usage_id: winrt.system.UInt16, /) -> typing.Sequence[windows_devices_humaninterfacedevice.HidNumericControlDescription]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.Devices.Input.Preview.GazeDevicePreview::RequestCalibrationAsync()
    def request_calibration_async(self) -> windows_foundation.IAsyncOperation[bool]: ...
    # System.Boolean Windows.Devices.Input.Preview.GazeDevicePreview::get_CanTrackEyes()
    @_property
    def can_track_eyes(self) -> bool: ...
    # System.Boolean Windows.Devices.Input.Preview.GazeDevicePreview::get_CanTrackHead()
    @_property
    def can_track_head(self) -> bool: ...
    # Windows.Devices.Input.Preview.GazeDeviceConfigurationStatePreview Windows.Devices.Input.Preview.GazeDevicePreview::get_ConfigurationState()
    @_property
    def configuration_state(self) -> GazeDeviceConfigurationStatePreview: ...
    # System.UInt32 Windows.Devices.Input.Preview.GazeDevicePreview::get_Id()
    @_property
    def id(self) -> winrt.system.UInt32: ...

@typing.final
class GazeDeviceWatcherAddedPreviewEventArgs(winrt.system.Object):
    # Windows.Devices.Input.Preview.GazeDevicePreview Windows.Devices.Input.Preview.GazeDeviceWatcherAddedPreviewEventArgs::get_Device()
    @_property
    def device(self) -> GazeDevicePreview: ...

@typing.final
class GazeDeviceWatcherPreview(winrt.system.Object):
    # System.Void Windows.Devices.Input.Preview.GazeDeviceWatcherPreview::Start()
    def start(self) -> None: ...
    # System.Void Windows.Devices.Input.Preview.GazeDeviceWatcherPreview::Stop()
    def stop(self) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Devices.Input.Preview.GazeDeviceWatcherPreview::add_Added(Windows.Foundation.TypedEventHandler`2<Windows.Devices.Input.Preview.GazeDeviceWatcherPreview,Windows.Devices.Input.Preview.GazeDeviceWatcherAddedPreviewEventArgs>)
    def add_added(self, handler: windows_foundation.TypedEventHandler[GazeDeviceWatcherPreview, GazeDeviceWatcherAddedPreviewEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Devices.Input.Preview.GazeDeviceWatcherPreview::remove_Added(Windows.Foundation.EventRegistrationToken)
    def remove_added(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Devices.Input.Preview.GazeDeviceWatcherPreview::add_EnumerationCompleted(Windows.Foundation.TypedEventHandler`2<Windows.Devices.Input.Preview.GazeDeviceWatcherPreview,System.Object>)
    def add_enumeration_completed(self, handler: windows_foundation.TypedEventHandler[GazeDeviceWatcherPreview, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Devices.Input.Preview.GazeDeviceWatcherPreview::remove_EnumerationCompleted(Windows.Foundation.EventRegistrationToken)
    def remove_enumeration_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Devices.Input.Preview.GazeDeviceWatcherPreview::add_Removed(Windows.Foundation.TypedEventHandler`2<Windows.Devices.Input.Preview.GazeDeviceWatcherPreview,Windows.Devices.Input.Preview.GazeDeviceWatcherRemovedPreviewEventArgs>)
    def add_removed(self, handler: windows_foundation.TypedEventHandler[GazeDeviceWatcherPreview, GazeDeviceWatcherRemovedPreviewEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Devices.Input.Preview.GazeDeviceWatcherPreview::remove_Removed(Windows.Foundation.EventRegistrationToken)
    def remove_removed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Devices.Input.Preview.GazeDeviceWatcherPreview::add_Updated(Windows.Foundation.TypedEventHandler`2<Windows.Devices.Input.Preview.GazeDeviceWatcherPreview,Windows.Devices.Input.Preview.GazeDeviceWatcherUpdatedPreviewEventArgs>)
    def add_updated(self, handler: windows_foundation.TypedEventHandler[GazeDeviceWatcherPreview, GazeDeviceWatcherUpdatedPreviewEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Devices.Input.Preview.GazeDeviceWatcherPreview::remove_Updated(Windows.Foundation.EventRegistrationToken)
    def remove_updated(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...

@typing.final
class GazeDeviceWatcherRemovedPreviewEventArgs(winrt.system.Object):
    # Windows.Devices.Input.Preview.GazeDevicePreview Windows.Devices.Input.Preview.GazeDeviceWatcherRemovedPreviewEventArgs::get_Device()
    @_property
    def device(self) -> GazeDevicePreview: ...

@typing.final
class GazeDeviceWatcherUpdatedPreviewEventArgs(winrt.system.Object):
    # Windows.Devices.Input.Preview.GazeDevicePreview Windows.Devices.Input.Preview.GazeDeviceWatcherUpdatedPreviewEventArgs::get_Device()
    @_property
    def device(self) -> GazeDevicePreview: ...

@typing.final
class GazeEnteredPreviewEventArgs(winrt.system.Object):
    # System.Boolean Windows.Devices.Input.Preview.GazeEnteredPreviewEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Windows.Devices.Input.Preview.GazeEnteredPreviewEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...
    # Windows.Devices.Input.Preview.GazePointPreview Windows.Devices.Input.Preview.GazeEnteredPreviewEventArgs::get_CurrentPoint()
    @_property
    def current_point(self) -> GazePointPreview: ...

@typing.final
class GazeExitedPreviewEventArgs(winrt.system.Object):
    # System.Boolean Windows.Devices.Input.Preview.GazeExitedPreviewEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Windows.Devices.Input.Preview.GazeExitedPreviewEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...
    # Windows.Devices.Input.Preview.GazePointPreview Windows.Devices.Input.Preview.GazeExitedPreviewEventArgs::get_CurrentPoint()
    @_property
    def current_point(self) -> GazePointPreview: ...

@typing.final
class GazeInputSourcePreview_Static(type):
    # Windows.Devices.Input.Preview.GazeDeviceWatcherPreview Windows.Devices.Input.Preview.GazeInputSourcePreview::CreateWatcher()
    def create_watcher(cls) -> GazeDeviceWatcherPreview: ...
    # Windows.Devices.Input.Preview.GazeInputSourcePreview Windows.Devices.Input.Preview.GazeInputSourcePreview::GetForCurrentView()
    def get_for_current_view(cls) -> GazeInputSourcePreview: ...

@typing.final
class GazeInputSourcePreview(winrt.system.Object, metaclass=GazeInputSourcePreview_Static):
    # Windows.Foundation.EventRegistrationToken Windows.Devices.Input.Preview.GazeInputSourcePreview::add_GazeEntered(Windows.Foundation.TypedEventHandler`2<Windows.Devices.Input.Preview.GazeInputSourcePreview,Windows.Devices.Input.Preview.GazeEnteredPreviewEventArgs>)
    def add_gaze_entered(self, handler: windows_foundation.TypedEventHandler[GazeInputSourcePreview, GazeEnteredPreviewEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Devices.Input.Preview.GazeInputSourcePreview::remove_GazeEntered(Windows.Foundation.EventRegistrationToken)
    def remove_gaze_entered(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Devices.Input.Preview.GazeInputSourcePreview::add_GazeExited(Windows.Foundation.TypedEventHandler`2<Windows.Devices.Input.Preview.GazeInputSourcePreview,Windows.Devices.Input.Preview.GazeExitedPreviewEventArgs>)
    def add_gaze_exited(self, handler: windows_foundation.TypedEventHandler[GazeInputSourcePreview, GazeExitedPreviewEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Devices.Input.Preview.GazeInputSourcePreview::remove_GazeExited(Windows.Foundation.EventRegistrationToken)
    def remove_gaze_exited(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Devices.Input.Preview.GazeInputSourcePreview::add_GazeMoved(Windows.Foundation.TypedEventHandler`2<Windows.Devices.Input.Preview.GazeInputSourcePreview,Windows.Devices.Input.Preview.GazeMovedPreviewEventArgs>)
    def add_gaze_moved(self, handler: windows_foundation.TypedEventHandler[GazeInputSourcePreview, GazeMovedPreviewEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Devices.Input.Preview.GazeInputSourcePreview::remove_GazeMoved(Windows.Foundation.EventRegistrationToken)
    def remove_gaze_moved(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...

@typing.final
class GazeMovedPreviewEventArgs(winrt.system.Object):
    # Windows.Foundation.Collections.IVector`1<Windows.Devices.Input.Preview.GazePointPreview> Windows.Devices.Input.Preview.GazeMovedPreviewEventArgs::GetIntermediatePoints()
    def get_intermediate_points(self) -> typing.MutableSequence[GazePointPreview]: ...
    # System.Boolean Windows.Devices.Input.Preview.GazeMovedPreviewEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Windows.Devices.Input.Preview.GazeMovedPreviewEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...
    # Windows.Devices.Input.Preview.GazePointPreview Windows.Devices.Input.Preview.GazeMovedPreviewEventArgs::get_CurrentPoint()
    @_property
    def current_point(self) -> GazePointPreview: ...

@typing.final
class GazePointPreview(winrt.system.Object):
    # Windows.Foundation.IReference`1<Windows.Foundation.Point> Windows.Devices.Input.Preview.GazePointPreview::get_EyeGazePosition()
    @_property
    def eye_gaze_position(self) -> typing.Optional[windows_foundation.Point]: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.Point> Windows.Devices.Input.Preview.GazePointPreview::get_HeadGazePosition()
    @_property
    def head_gaze_position(self) -> typing.Optional[windows_foundation.Point]: ...
    # Windows.Devices.HumanInterfaceDevice.HidInputReport Windows.Devices.Input.Preview.GazePointPreview::get_HidInputReport()
    @_property
    def hid_input_report(self) -> windows_devices_humaninterfacedevice.HidInputReport: ...
    # Windows.Devices.Input.Preview.GazeDevicePreview Windows.Devices.Input.Preview.GazePointPreview::get_SourceDevice()
    @_property
    def source_device(self) -> GazeDevicePreview: ...
    # System.UInt64 Windows.Devices.Input.Preview.GazePointPreview::get_Timestamp()
    @_property
    def timestamp(self) -> winrt.system.UInt64: ...

