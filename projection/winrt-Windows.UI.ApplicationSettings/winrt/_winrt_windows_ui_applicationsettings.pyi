# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.security.credentials as windows_security_credentials
import winrt.windows.system as windows_system
import winrt.windows.ui.popups as windows_ui_popups

from winrt.windows.ui.applicationsettings import SettingsEdgeLocation, SupportedWebAccountActions, WebAccountAction
from winrt.windows.ui.applicationsettings import CredentialCommandCredentialDeletedHandler, WebAccountCommandInvokedHandler, WebAccountProviderCommandInvokedHandler

Self = typing.TypeVar('Self')

@typing.final
class AccountsSettingsPane_Static(type):
    def get_for_current_view(cls) -> AccountsSettingsPane: ...
    def show(cls) -> None: ...
    def show_add_account_async(cls) -> windows_foundation.IAsyncAction: ...
    def show_add_account_for_user_async(cls, user: windows_system.User, /) -> windows_foundation.IAsyncAction: ...
    def show_manage_accounts_async(cls) -> windows_foundation.IAsyncAction: ...
    def show_manage_accounts_for_user_async(cls, user: windows_system.User, /) -> windows_foundation.IAsyncAction: ...

@typing.final
class AccountsSettingsPane(winrt.system.Object, metaclass=AccountsSettingsPane_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AccountsSettingsPane: ...
    def add_account_commands_requested(self, handler: windows_foundation.TypedEventHandler[AccountsSettingsPane, AccountsSettingsPaneCommandsRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_account_commands_requested(self, cookie: windows_foundation.EventRegistrationToken, /) -> None: ...

@typing.final
class AccountsSettingsPaneCommandsRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AccountsSettingsPaneCommandsRequestedEventArgs: ...
    def get_deferral(self) -> AccountsSettingsPaneEventDeferral: ...
    @_property
    def header_text(self) -> str: ...
    @header_text.setter
    def header_text(self, value: str) -> None: ...
    @_property
    def commands(self) -> typing.MutableSequence[SettingsCommand]: ...
    @_property
    def credential_commands(self) -> typing.MutableSequence[CredentialCommand]: ...
    @_property
    def web_account_commands(self) -> typing.MutableSequence[WebAccountCommand]: ...
    @_property
    def web_account_provider_commands(self) -> typing.MutableSequence[WebAccountProviderCommand]: ...
    @_property
    def user(self) -> windows_system.User: ...

@typing.final
class AccountsSettingsPaneEventDeferral(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AccountsSettingsPaneEventDeferral: ...
    def complete(self) -> None: ...

@typing.final
class CredentialCommand(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CredentialCommand: ...
    @typing.overload
    def __new__(cls: typing.Type[CredentialCommand], password_credential: windows_security_credentials.PasswordCredential) -> CredentialCommand: ...
    @typing.overload
    def __new__(cls: typing.Type[CredentialCommand], password_credential: windows_security_credentials.PasswordCredential, deleted: CredentialCommandCredentialDeletedHandler) -> CredentialCommand: ...
    @_property
    def credential_deleted(self) -> CredentialCommandCredentialDeletedHandler: ...
    @_property
    def password_credential(self) -> windows_security_credentials.PasswordCredential: ...

@typing.final
class SettingsCommand_Static(type):
    @_property
    def accounts_command(cls) -> SettingsCommand: ...

@typing.final
class SettingsCommand(windows_ui_popups.IUICommand, winrt.system.Object, metaclass=SettingsCommand_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SettingsCommand: ...
    def __new__(cls: typing.Type[SettingsCommand], settings_command_id: winrt.system.Object, label: str, handler: windows_ui_popups.UICommandInvokedHandler) -> SettingsCommand: ...
    @_property
    def label(self) -> str: ...
    @label.setter
    def label(self, value: str) -> None: ...
    @_property
    def invoked(self) -> windows_ui_popups.UICommandInvokedHandler: ...
    @invoked.setter
    def invoked(self, value: windows_ui_popups.UICommandInvokedHandler) -> None: ...
    @_property
    def id(self) -> winrt.system.Object: ...
    @id.setter
    def id(self, value: winrt.system.Object) -> None: ...

@typing.final
class SettingsPane_Static(type):
    def get_for_current_view(cls) -> SettingsPane: ...
    def show(cls) -> None: ...
    @_property
    def edge(cls) -> SettingsEdgeLocation: ...

@typing.final
class SettingsPane(winrt.system.Object, metaclass=SettingsPane_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SettingsPane: ...
    def add_commands_requested(self, handler: windows_foundation.TypedEventHandler[SettingsPane, SettingsPaneCommandsRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_commands_requested(self, cookie: windows_foundation.EventRegistrationToken, /) -> None: ...

@typing.final
class SettingsPaneCommandsRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SettingsPaneCommandsRequest: ...
    @_property
    def application_commands(self) -> typing.MutableSequence[SettingsCommand]: ...

@typing.final
class SettingsPaneCommandsRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SettingsPaneCommandsRequestedEventArgs: ...
    @_property
    def request(self) -> SettingsPaneCommandsRequest: ...

@typing.final
class WebAccountCommand(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebAccountCommand: ...
    def __new__(cls: typing.Type[WebAccountCommand], web_account: windows_security_credentials.WebAccount, invoked: WebAccountCommandInvokedHandler, actions: SupportedWebAccountActions) -> WebAccountCommand: ...
    @_property
    def actions(self) -> SupportedWebAccountActions: ...
    @_property
    def invoked(self) -> WebAccountCommandInvokedHandler: ...
    @_property
    def web_account(self) -> windows_security_credentials.WebAccount: ...

@typing.final
class WebAccountInvokedArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebAccountInvokedArgs: ...
    @_property
    def action(self) -> WebAccountAction: ...

@typing.final
class WebAccountProviderCommand(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebAccountProviderCommand: ...
    def __new__(cls: typing.Type[WebAccountProviderCommand], web_account_provider: windows_security_credentials.WebAccountProvider, invoked: WebAccountProviderCommandInvokedHandler) -> WebAccountProviderCommand: ...
    @_property
    def invoked(self) -> WebAccountProviderCommandInvokedHandler: ...
    @_property
    def web_account_provider(self) -> windows_security_credentials.WebAccountProvider: ...

