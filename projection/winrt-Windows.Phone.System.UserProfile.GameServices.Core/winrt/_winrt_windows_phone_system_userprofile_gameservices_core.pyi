# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.storage.streams as windows_storage_streams

from winrt.windows.phone.system.userprofile.gameservices.core import GameServiceGameOutcome, GameServiceScoreKind

Self = typing.TypeVar('Self')

@typing.final
class GameService_Static(type):
    # System.UInt32 Windows.Phone.System.UserProfile.GameServices.Core.GameService::GetAuthenticationStatus()
    def get_authentication_status(cls) -> winrt.system.UInt32: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Phone.System.UserProfile.GameServices.Core.GameServicePropertyCollection> Windows.Phone.System.UserProfile.GameServices.Core.GameService::GetGamerProfileAsync()
    def get_gamer_profile_async(cls) -> windows_foundation.IAsyncOperation[GameServicePropertyCollection]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Phone.System.UserProfile.GameServices.Core.GameServicePropertyCollection> Windows.Phone.System.UserProfile.GameServices.Core.GameService::GetInstalledGameItemsAsync()
    def get_installed_game_items_async(cls) -> windows_foundation.IAsyncOperation[GameServicePropertyCollection]: ...
    # Windows.Foundation.IAsyncOperation`1<System.String> Windows.Phone.System.UserProfile.GameServices.Core.GameService::GetPartnerTokenAsync(Windows.Foundation.Uri)
    def get_partner_token_async(cls, audience_uri: windows_foundation.Uri, /) -> windows_foundation.IAsyncOperation[str]: ...
    # Windows.Foundation.IAsyncOperation`1<System.String> Windows.Phone.System.UserProfile.GameServices.Core.GameService::GetPrivilegesAsync()
    def get_privileges_async(cls) -> windows_foundation.IAsyncOperation[str]: ...
    # System.Void Windows.Phone.System.UserProfile.GameServices.Core.GameService::GrantAchievement(System.UInt32)
    def grant_achievement(cls, achievement_id: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Phone.System.UserProfile.GameServices.Core.GameService::GrantAvatarAward(System.UInt32)
    def grant_avatar_award(cls, avatar_award_id: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Phone.System.UserProfile.GameServices.Core.GameService::NotifyPartnerTokenExpired(Windows.Foundation.Uri)
    def notify_partner_token_expired(cls, audience_uri: windows_foundation.Uri, /) -> None: ...
    # System.Void Windows.Phone.System.UserProfile.GameServices.Core.GameService::PostResult(System.UInt32,Windows.Phone.System.UserProfile.GameServices.Core.GameServiceScoreKind,System.Int64,Windows.Phone.System.UserProfile.GameServices.Core.GameServiceGameOutcome,Windows.Storage.Streams.IBuffer)
    def post_result(cls, game_variant: winrt.system.UInt32, score_kind: GameServiceScoreKind, score_value: winrt.system.Int64, game_outcome: GameServiceGameOutcome, buffer: windows_storage_streams.ImplementsIBuffer, /) -> None: ...
    # Windows.Foundation.Uri Windows.Phone.System.UserProfile.GameServices.Core.GameService::get_ServiceUri()
    @_property
    def service_uri(cls) -> windows_foundation.Uri: ...

@typing.final
class GameService(winrt.system.Object, metaclass=GameService_Static):
    pass

@typing.final
class GameServicePropertyCollection(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<System.Object> Windows.Phone.System.UserProfile.GameServices.Core.GameServicePropertyCollection::GetPropertyAsync(System.String)
    def get_property_async(self, property_name: str, /) -> windows_foundation.IAsyncOperation[winrt.system.Object]: ...

