# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.security.credentials as windows_security_credentials
import winrt.windows.system as windows_system

from winrt.windows.security.authentication.web.core import FindAllWebAccountsStatus, WebAuthenticationAddAccountStatus, WebTokenRequestPromptType, WebTokenRequestStatus

Self = typing.TypeVar('Self')

@typing.final
class FindAllAccountsResult(winrt.system.Object):
    # Windows.Foundation.Collections.IVectorView`1<Windows.Security.Credentials.WebAccount> Windows.Security.Authentication.Web.Core.FindAllAccountsResult::get_Accounts()
    @_property
    def accounts(self) -> typing.Sequence[windows_security_credentials.WebAccount]: ...
    # Windows.Security.Authentication.Web.Core.WebProviderError Windows.Security.Authentication.Web.Core.FindAllAccountsResult::get_ProviderError()
    @_property
    def provider_error(self) -> WebProviderError: ...
    # Windows.Security.Authentication.Web.Core.FindAllWebAccountsStatus Windows.Security.Authentication.Web.Core.FindAllAccountsResult::get_Status()
    @_property
    def status(self) -> FindAllWebAccountsStatus: ...

@typing.final
class WebAccountEventArgs(winrt.system.Object):
    # Windows.Security.Credentials.WebAccount Windows.Security.Authentication.Web.Core.WebAccountEventArgs::get_Account()
    @_property
    def account(self) -> windows_security_credentials.WebAccount: ...

@typing.final
class WebAccountMonitor(winrt.system.Object):
    # Windows.Foundation.EventRegistrationToken Windows.Security.Authentication.Web.Core.WebAccountMonitor::add_DefaultSignInAccountChanged(Windows.Foundation.TypedEventHandler`2<Windows.Security.Authentication.Web.Core.WebAccountMonitor,System.Object>)
    def add_default_sign_in_account_changed(self, handler: windows_foundation.TypedEventHandler[WebAccountMonitor, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Security.Authentication.Web.Core.WebAccountMonitor::remove_DefaultSignInAccountChanged(Windows.Foundation.EventRegistrationToken)
    def remove_default_sign_in_account_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Security.Authentication.Web.Core.WebAccountMonitor::add_Removed(Windows.Foundation.TypedEventHandler`2<Windows.Security.Authentication.Web.Core.WebAccountMonitor,Windows.Security.Authentication.Web.Core.WebAccountEventArgs>)
    def add_removed(self, handler: windows_foundation.TypedEventHandler[WebAccountMonitor, WebAccountEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Security.Authentication.Web.Core.WebAccountMonitor::remove_Removed(Windows.Foundation.EventRegistrationToken)
    def remove_removed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Security.Authentication.Web.Core.WebAccountMonitor::add_Updated(Windows.Foundation.TypedEventHandler`2<Windows.Security.Authentication.Web.Core.WebAccountMonitor,Windows.Security.Authentication.Web.Core.WebAccountEventArgs>)
    def add_updated(self, handler: windows_foundation.TypedEventHandler[WebAccountMonitor, WebAccountEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Security.Authentication.Web.Core.WebAccountMonitor::remove_Updated(Windows.Foundation.EventRegistrationToken)
    def remove_updated(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Security.Authentication.Web.Core.WebAccountMonitor::add_AccountPictureUpdated(Windows.Foundation.TypedEventHandler`2<Windows.Security.Authentication.Web.Core.WebAccountMonitor,Windows.Security.Authentication.Web.Core.WebAccountEventArgs>)
    def add_account_picture_updated(self, handler: windows_foundation.TypedEventHandler[WebAccountMonitor, WebAccountEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Security.Authentication.Web.Core.WebAccountMonitor::remove_AccountPictureUpdated(Windows.Foundation.EventRegistrationToken)
    def remove_account_picture_updated(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...

@typing.final
class WebAuthenticationAddAccountResponse(winrt.system.Object):
    def __new__(cls: typing.Type[Self], web_account: windows_security_credentials.WebAccount) -> Self: ...
    # Windows.Foundation.Collections.IMap`2<System.String,System.String> Windows.Security.Authentication.Web.Core.WebAuthenticationAddAccountResponse::get_Properties()
    @_property
    def properties(self) -> typing.MutableMapping[str, str]: ...
    # Windows.Security.Credentials.WebAccount Windows.Security.Authentication.Web.Core.WebAuthenticationAddAccountResponse::get_WebAccount()
    @_property
    def web_account(self) -> windows_security_credentials.WebAccount: ...

@typing.final
class WebAuthenticationAddAccountResult(winrt.system.Object):
    # Windows.Security.Authentication.Web.Core.WebAuthenticationAddAccountResponse Windows.Security.Authentication.Web.Core.WebAuthenticationAddAccountResult::get_ResponseData()
    @_property
    def response_data(self) -> WebAuthenticationAddAccountResponse: ...
    # Windows.Security.Authentication.Web.Core.WebProviderError Windows.Security.Authentication.Web.Core.WebAuthenticationAddAccountResult::get_ResponseError()
    @_property
    def response_error(self) -> WebProviderError: ...
    # Windows.Security.Authentication.Web.Core.WebAuthenticationAddAccountStatus Windows.Security.Authentication.Web.Core.WebAuthenticationAddAccountResult::get_ResponseStatus()
    @_property
    def response_status(self) -> WebAuthenticationAddAccountStatus: ...

@typing.final
class WebAuthenticationCoreManager_Static(winrt._winrt.IInspectable_Static):
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Authentication.Web.Core.WebAuthenticationAddAccountResult> Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::AddAccountWithTransferTokenAsync(Windows.Security.Authentication.Web.Core.WebAuthenticationTransferTokenRequest)
    def add_account_with_transfer_token_async(cls, request: WebAuthenticationTransferTokenRequest, /) -> windows_foundation.IAsyncOperation[WebAuthenticationAddAccountResult]: ...
    # Windows.Security.Authentication.Web.Core.WebAccountMonitor Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::CreateWebAccountMonitor(Windows.Foundation.Collections.IIterable`1<Windows.Security.Credentials.WebAccount>)
    def create_web_account_monitor(cls, web_accounts: typing.Iterable[windows_security_credentials.WebAccount], /) -> WebAccountMonitor: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.WebAccount> Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::FindAccountAsync(Windows.Security.Credentials.WebAccountProvider,System.String)
    def find_account_async(cls, provider: windows_security_credentials.WebAccountProvider, web_account_id: str, /) -> windows_foundation.IAsyncOperation[windows_security_credentials.WebAccount]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.WebAccountProvider> Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::FindAccountProviderAsync(System.String)
    def find_account_provider_async(cls, web_account_provider_id: str, /) -> windows_foundation.IAsyncOperation[windows_security_credentials.WebAccountProvider]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.WebAccountProvider> Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::FindAccountProviderAsync(System.String,System.String)
    def find_account_provider_with_authority_async(cls, web_account_provider_id: str, authority: str, /) -> windows_foundation.IAsyncOperation[windows_security_credentials.WebAccountProvider]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.WebAccountProvider> Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::FindAccountProviderAsync(System.String,System.String,Windows.System.User)
    def find_account_provider_with_authority_for_user_async(cls, web_account_provider_id: str, authority: str, user: windows_system.User, /) -> windows_foundation.IAsyncOperation[windows_security_credentials.WebAccountProvider]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Authentication.Web.Core.FindAllAccountsResult> Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::FindAllAccountsAsync(Windows.Security.Credentials.WebAccountProvider)
    def find_all_accounts_async(cls, provider: windows_security_credentials.WebAccountProvider, /) -> windows_foundation.IAsyncOperation[FindAllAccountsResult]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Authentication.Web.Core.FindAllAccountsResult> Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::FindAllAccountsAsync(Windows.Security.Credentials.WebAccountProvider,System.String)
    def find_all_accounts_with_client_id_async(cls, provider: windows_security_credentials.WebAccountProvider, client_id: str, /) -> windows_foundation.IAsyncOperation[FindAllAccountsResult]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.WebAccountProvider> Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::FindSystemAccountProviderAsync(System.String)
    def find_system_account_provider_async(cls, web_account_provider_id: str, /) -> windows_foundation.IAsyncOperation[windows_security_credentials.WebAccountProvider]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.WebAccountProvider> Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::FindSystemAccountProviderAsync(System.String,System.String)
    def find_system_account_provider_with_authority_async(cls, web_account_provider_id: str, authority: str, /) -> windows_foundation.IAsyncOperation[windows_security_credentials.WebAccountProvider]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.WebAccountProvider> Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::FindSystemAccountProviderAsync(System.String,System.String,Windows.System.User)
    def find_system_account_provider_with_authority_for_user_async(cls, web_account_provider_id: str, authority: str, user: windows_system.User, /) -> windows_foundation.IAsyncOperation[windows_security_credentials.WebAccountProvider]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Authentication.Web.Core.WebTokenRequestResult> Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::GetTokenSilentlyAsync(Windows.Security.Authentication.Web.Core.WebTokenRequest)
    def get_token_silently_async(cls, request: WebTokenRequest, /) -> windows_foundation.IAsyncOperation[WebTokenRequestResult]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Authentication.Web.Core.WebTokenRequestResult> Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::GetTokenSilentlyAsync(Windows.Security.Authentication.Web.Core.WebTokenRequest,Windows.Security.Credentials.WebAccount)
    def get_token_silently_with_web_account_async(cls, request: WebTokenRequest, web_account: windows_security_credentials.WebAccount, /) -> windows_foundation.IAsyncOperation[WebTokenRequestResult]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Authentication.Web.Core.WebTokenRequestResult> Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::RequestTokenAsync(Windows.Security.Authentication.Web.Core.WebTokenRequest)
    def request_token_async(cls, request: WebTokenRequest, /) -> windows_foundation.IAsyncOperation[WebTokenRequestResult]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Authentication.Web.Core.WebTokenRequestResult> Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager::RequestTokenAsync(Windows.Security.Authentication.Web.Core.WebTokenRequest,Windows.Security.Credentials.WebAccount)
    def request_token_with_web_account_async(cls, request: WebTokenRequest, web_account: windows_security_credentials.WebAccount, /) -> windows_foundation.IAsyncOperation[WebTokenRequestResult]: ...

@typing.final
class WebAuthenticationCoreManager(winrt.system.Object, metaclass=WebAuthenticationCoreManager_Static):
    pass

@typing.final
class WebAuthenticationTransferTokenRequest(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], provider: windows_security_credentials.WebAccountProvider, transfer_token: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], provider: windows_security_credentials.WebAccountProvider, transfer_token: str, correlation_id: str) -> Self: ...
    # System.String Windows.Security.Authentication.Web.Core.WebAuthenticationTransferTokenRequest::get_TransferToken()
    @_property
    def transfer_token(self) -> str: ...
    # System.Void Windows.Security.Authentication.Web.Core.WebAuthenticationTransferTokenRequest::put_TransferToken(System.String)
    @transfer_token.setter
    def transfer_token(self, value: str) -> None: ...
    # System.String Windows.Security.Authentication.Web.Core.WebAuthenticationTransferTokenRequest::get_CorrelationId()
    @_property
    def correlation_id(self) -> str: ...
    # System.Void Windows.Security.Authentication.Web.Core.WebAuthenticationTransferTokenRequest::put_CorrelationId(System.String)
    @correlation_id.setter
    def correlation_id(self, value: str) -> None: ...
    # Windows.Foundation.Collections.IMap`2<System.String,System.String> Windows.Security.Authentication.Web.Core.WebAuthenticationTransferTokenRequest::get_Properties()
    @_property
    def properties(self) -> typing.MutableMapping[str, str]: ...
    # Windows.Security.Credentials.WebAccountProvider Windows.Security.Authentication.Web.Core.WebAuthenticationTransferTokenRequest::get_WebAccountProvider()
    @_property
    def web_account_provider(self) -> windows_security_credentials.WebAccountProvider: ...

@typing.final
class WebProviderError(winrt.system.Object):
    def __new__(cls: typing.Type[Self], error_code: winrt.system.UInt32, error_message: str) -> Self: ...
    # System.UInt32 Windows.Security.Authentication.Web.Core.WebProviderError::get_ErrorCode()
    @_property
    def error_code(self) -> winrt.system.UInt32: ...
    # System.String Windows.Security.Authentication.Web.Core.WebProviderError::get_ErrorMessage()
    @_property
    def error_message(self) -> str: ...
    # Windows.Foundation.Collections.IMap`2<System.String,System.String> Windows.Security.Authentication.Web.Core.WebProviderError::get_Properties()
    @_property
    def properties(self) -> typing.MutableMapping[str, str]: ...

@typing.final
class WebTokenRequest(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], provider: windows_security_credentials.WebAccountProvider, scope: str, client_id: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], provider: windows_security_credentials.WebAccountProvider, scope: str, client_id: str, prompt_type: WebTokenRequestPromptType) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], provider: windows_security_credentials.WebAccountProvider) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], provider: windows_security_credentials.WebAccountProvider, scope: str) -> Self: ...
    # System.String Windows.Security.Authentication.Web.Core.WebTokenRequest::get_ClientId()
    @_property
    def client_id(self) -> str: ...
    # Windows.Security.Authentication.Web.Core.WebTokenRequestPromptType Windows.Security.Authentication.Web.Core.WebTokenRequest::get_PromptType()
    @_property
    def prompt_type(self) -> WebTokenRequestPromptType: ...
    # Windows.Foundation.Collections.IMap`2<System.String,System.String> Windows.Security.Authentication.Web.Core.WebTokenRequest::get_Properties()
    @_property
    def properties(self) -> typing.MutableMapping[str, str]: ...
    # System.String Windows.Security.Authentication.Web.Core.WebTokenRequest::get_Scope()
    @_property
    def scope(self) -> str: ...
    # Windows.Security.Credentials.WebAccountProvider Windows.Security.Authentication.Web.Core.WebTokenRequest::get_WebAccountProvider()
    @_property
    def web_account_provider(self) -> windows_security_credentials.WebAccountProvider: ...
    # Windows.Foundation.Collections.IMap`2<System.String,System.String> Windows.Security.Authentication.Web.Core.WebTokenRequest::get_AppProperties()
    @_property
    def app_properties(self) -> typing.MutableMapping[str, str]: ...
    # System.String Windows.Security.Authentication.Web.Core.WebTokenRequest::get_CorrelationId()
    @_property
    def correlation_id(self) -> str: ...
    # System.Void Windows.Security.Authentication.Web.Core.WebTokenRequest::put_CorrelationId(System.String)
    @correlation_id.setter
    def correlation_id(self, value: str) -> None: ...

@typing.final
class WebTokenRequestResult(winrt.system.Object):
    # Windows.Foundation.IAsyncAction Windows.Security.Authentication.Web.Core.WebTokenRequestResult::InvalidateCacheAsync()
    def invalidate_cache_async(self) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Security.Authentication.Web.Core.WebTokenResponse> Windows.Security.Authentication.Web.Core.WebTokenRequestResult::get_ResponseData()
    @_property
    def response_data(self) -> typing.Sequence[WebTokenResponse]: ...
    # Windows.Security.Authentication.Web.Core.WebProviderError Windows.Security.Authentication.Web.Core.WebTokenRequestResult::get_ResponseError()
    @_property
    def response_error(self) -> WebProviderError: ...
    # Windows.Security.Authentication.Web.Core.WebTokenRequestStatus Windows.Security.Authentication.Web.Core.WebTokenRequestResult::get_ResponseStatus()
    @_property
    def response_status(self) -> WebTokenRequestStatus: ...

@typing.final
class WebTokenResponse(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], token: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], token: str, web_account: windows_security_credentials.WebAccount) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], token: str, web_account: windows_security_credentials.WebAccount, error: WebProviderError) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.Collections.IMap`2<System.String,System.String> Windows.Security.Authentication.Web.Core.WebTokenResponse::get_Properties()
    @_property
    def properties(self) -> typing.MutableMapping[str, str]: ...
    # Windows.Security.Authentication.Web.Core.WebProviderError Windows.Security.Authentication.Web.Core.WebTokenResponse::get_ProviderError()
    @_property
    def provider_error(self) -> WebProviderError: ...
    # System.String Windows.Security.Authentication.Web.Core.WebTokenResponse::get_Token()
    @_property
    def token(self) -> str: ...
    # Windows.Security.Credentials.WebAccount Windows.Security.Authentication.Web.Core.WebTokenResponse::get_WebAccount()
    @_property
    def web_account(self) -> windows_security_credentials.WebAccount: ...

