# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.activation as windows_applicationmodel_activation
import winrt.windows.devices.printers as windows_devices_printers
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.graphics.printing.printticket as windows_graphics_printing_printticket
import winrt.windows.storage as windows_storage
import winrt.windows.storage.streams as windows_storage_streams
import winrt.windows.system as windows_system

from winrt.windows.graphics.printing.workflow import PdlConversionHostBasedProcessingOperations, PrintWorkflowAttributesMergePolicy, PrintWorkflowJobAbortReason, PrintWorkflowJobIssueKind, PrintWorkflowPdlConversionType, PrintWorkflowPrinterJobStatus, PrintWorkflowSessionStatus, PrintWorkflowSubmittedStatus, PrintWorkflowUICompletionStatus

Self = typing.TypeVar('Self')

@typing.final
class PrintWorkflowBackgroundSession(winrt.system.Object):
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowBackgroundSession::Start()
    def start(self) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Graphics.Printing.Workflow.PrintWorkflowBackgroundSession::add_SetupRequested(Windows.Foundation.TypedEventHandler`2<Windows.Graphics.Printing.Workflow.PrintWorkflowBackgroundSession,Windows.Graphics.Printing.Workflow.PrintWorkflowBackgroundSetupRequestedEventArgs>)
    def add_setup_requested(self, setup_event_handler: windows_foundation.TypedEventHandler[PrintWorkflowBackgroundSession, PrintWorkflowBackgroundSetupRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowBackgroundSession::remove_SetupRequested(Windows.Foundation.EventRegistrationToken)
    def remove_setup_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Graphics.Printing.Workflow.PrintWorkflowBackgroundSession::add_Submitted(Windows.Foundation.TypedEventHandler`2<Windows.Graphics.Printing.Workflow.PrintWorkflowBackgroundSession,Windows.Graphics.Printing.Workflow.PrintWorkflowSubmittedEventArgs>)
    def add_submitted(self, submitted_event_handler: windows_foundation.TypedEventHandler[PrintWorkflowBackgroundSession, PrintWorkflowSubmittedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowBackgroundSession::remove_Submitted(Windows.Foundation.EventRegistrationToken)
    def remove_submitted(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowSessionStatus Windows.Graphics.Printing.Workflow.PrintWorkflowBackgroundSession::get_Status()
    @_property
    def status(self) -> PrintWorkflowSessionStatus: ...

@typing.final
class PrintWorkflowBackgroundSetupRequestedEventArgs(winrt.system.Object):
    # Windows.Foundation.Deferral Windows.Graphics.Printing.Workflow.PrintWorkflowBackgroundSetupRequestedEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket> Windows.Graphics.Printing.Workflow.PrintWorkflowBackgroundSetupRequestedEventArgs::GetUserPrintTicketAsync()
    def get_user_print_ticket_async(self) -> windows_foundation.IAsyncOperation[windows_graphics_printing_printticket.WorkflowPrintTicket]: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowBackgroundSetupRequestedEventArgs::SetRequiresUI()
    def set_requires_ui(self) -> None: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowConfiguration Windows.Graphics.Printing.Workflow.PrintWorkflowBackgroundSetupRequestedEventArgs::get_Configuration()
    @_property
    def configuration(self) -> PrintWorkflowConfiguration: ...

@typing.final
class PrintWorkflowConfiguration(winrt.system.Object):
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowConfiguration::AbortPrintFlow(Windows.Graphics.Printing.Workflow.PrintWorkflowJobAbortReason)
    def abort_print_flow(self, reason: PrintWorkflowJobAbortReason, /) -> None: ...
    # System.String Windows.Graphics.Printing.Workflow.PrintWorkflowConfiguration::get_JobTitle()
    @_property
    def job_title(self) -> str: ...
    # System.String Windows.Graphics.Printing.Workflow.PrintWorkflowConfiguration::get_SessionId()
    @_property
    def session_id(self) -> str: ...
    # System.String Windows.Graphics.Printing.Workflow.PrintWorkflowConfiguration::get_SourceAppDisplayName()
    @_property
    def source_app_display_name(self) -> str: ...

@typing.final
class PrintWorkflowForegroundSession(winrt.system.Object):
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowForegroundSession::Start()
    def start(self) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Graphics.Printing.Workflow.PrintWorkflowForegroundSession::add_SetupRequested(Windows.Foundation.TypedEventHandler`2<Windows.Graphics.Printing.Workflow.PrintWorkflowForegroundSession,Windows.Graphics.Printing.Workflow.PrintWorkflowForegroundSetupRequestedEventArgs>)
    def add_setup_requested(self, setup_event_handler: windows_foundation.TypedEventHandler[PrintWorkflowForegroundSession, PrintWorkflowForegroundSetupRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowForegroundSession::remove_SetupRequested(Windows.Foundation.EventRegistrationToken)
    def remove_setup_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Graphics.Printing.Workflow.PrintWorkflowForegroundSession::add_XpsDataAvailable(Windows.Foundation.TypedEventHandler`2<Windows.Graphics.Printing.Workflow.PrintWorkflowForegroundSession,Windows.Graphics.Printing.Workflow.PrintWorkflowXpsDataAvailableEventArgs>)
    def add_xps_data_available(self, xps_data_available_event_handler: windows_foundation.TypedEventHandler[PrintWorkflowForegroundSession, PrintWorkflowXpsDataAvailableEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowForegroundSession::remove_XpsDataAvailable(Windows.Foundation.EventRegistrationToken)
    def remove_xps_data_available(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowSessionStatus Windows.Graphics.Printing.Workflow.PrintWorkflowForegroundSession::get_Status()
    @_property
    def status(self) -> PrintWorkflowSessionStatus: ...

@typing.final
class PrintWorkflowForegroundSetupRequestedEventArgs(winrt.system.Object):
    # Windows.Foundation.Deferral Windows.Graphics.Printing.Workflow.PrintWorkflowForegroundSetupRequestedEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket> Windows.Graphics.Printing.Workflow.PrintWorkflowForegroundSetupRequestedEventArgs::GetUserPrintTicketAsync()
    def get_user_print_ticket_async(self) -> windows_foundation.IAsyncOperation[windows_graphics_printing_printticket.WorkflowPrintTicket]: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowConfiguration Windows.Graphics.Printing.Workflow.PrintWorkflowForegroundSetupRequestedEventArgs::get_Configuration()
    @_property
    def configuration(self) -> PrintWorkflowConfiguration: ...

@typing.final
class PrintWorkflowJobActivatedEventArgs(winrt.system.Object, windows_applicationmodel_activation.IActivatedEventArgsWithUser, windows_applicationmodel_activation.IActivatedEventArgs):
    # Windows.ApplicationModel.Activation.ActivationKind Windows.Graphics.Printing.Workflow.PrintWorkflowJobActivatedEventArgs::get_Kind()
    @_property
    def kind(self) -> windows_applicationmodel_activation.ActivationKind: ...
    # Windows.ApplicationModel.Activation.ApplicationExecutionState Windows.Graphics.Printing.Workflow.PrintWorkflowJobActivatedEventArgs::get_PreviousExecutionState()
    @_property
    def previous_execution_state(self) -> windows_applicationmodel_activation.ApplicationExecutionState: ...
    # Windows.ApplicationModel.Activation.SplashScreen Windows.Graphics.Printing.Workflow.PrintWorkflowJobActivatedEventArgs::get_SplashScreen()
    @_property
    def splash_screen(self) -> windows_applicationmodel_activation.SplashScreen: ...
    # Windows.System.User Windows.Graphics.Printing.Workflow.PrintWorkflowJobActivatedEventArgs::get_User()
    @_property
    def user(self) -> windows_system.User: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowJobUISession Windows.Graphics.Printing.Workflow.PrintWorkflowJobActivatedEventArgs::get_Session()
    @_property
    def session(self) -> PrintWorkflowJobUISession: ...

@typing.final
class PrintWorkflowJobBackgroundSession(winrt.system.Object):
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowJobBackgroundSession::Start()
    def start(self) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Graphics.Printing.Workflow.PrintWorkflowJobBackgroundSession::add_JobStarting(Windows.Foundation.TypedEventHandler`2<Windows.Graphics.Printing.Workflow.PrintWorkflowJobBackgroundSession,Windows.Graphics.Printing.Workflow.PrintWorkflowJobStartingEventArgs>)
    def add_job_starting(self, handler: windows_foundation.TypedEventHandler[PrintWorkflowJobBackgroundSession, PrintWorkflowJobStartingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowJobBackgroundSession::remove_JobStarting(Windows.Foundation.EventRegistrationToken)
    def remove_job_starting(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Graphics.Printing.Workflow.PrintWorkflowJobBackgroundSession::add_PdlModificationRequested(Windows.Foundation.TypedEventHandler`2<Windows.Graphics.Printing.Workflow.PrintWorkflowJobBackgroundSession,Windows.Graphics.Printing.Workflow.PrintWorkflowPdlModificationRequestedEventArgs>)
    def add_pdl_modification_requested(self, handler: windows_foundation.TypedEventHandler[PrintWorkflowJobBackgroundSession, PrintWorkflowPdlModificationRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowJobBackgroundSession::remove_PdlModificationRequested(Windows.Foundation.EventRegistrationToken)
    def remove_pdl_modification_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Graphics.Printing.Workflow.PrintWorkflowJobBackgroundSession::add_JobIssueDetected(Windows.Foundation.TypedEventHandler`2<Windows.Graphics.Printing.Workflow.PrintWorkflowJobBackgroundSession,Windows.Graphics.Printing.Workflow.PrintWorkflowJobIssueDetectedEventArgs>)
    def add_job_issue_detected(self, handler: windows_foundation.TypedEventHandler[PrintWorkflowJobBackgroundSession, PrintWorkflowJobIssueDetectedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowJobBackgroundSession::remove_JobIssueDetected(Windows.Foundation.EventRegistrationToken)
    def remove_job_issue_detected(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowSessionStatus Windows.Graphics.Printing.Workflow.PrintWorkflowJobBackgroundSession::get_Status()
    @_property
    def status(self) -> PrintWorkflowSessionStatus: ...

@typing.final
class PrintWorkflowJobIssueDetectedEventArgs(winrt.system.Object):
    # Windows.Foundation.Deferral Windows.Graphics.Printing.Workflow.PrintWorkflowJobIssueDetectedEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...
    # System.Boolean Windows.Graphics.Printing.Workflow.PrintWorkflowJobIssueDetectedEventArgs::get_SkipSystemErrorToast()
    @_property
    def skip_system_error_toast(self) -> bool: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowJobIssueDetectedEventArgs::put_SkipSystemErrorToast(System.Boolean)
    @skip_system_error_toast.setter
    def skip_system_error_toast(self, value: bool) -> None: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowConfiguration Windows.Graphics.Printing.Workflow.PrintWorkflowJobIssueDetectedEventArgs::get_Configuration()
    @_property
    def configuration(self) -> PrintWorkflowConfiguration: ...
    # Windows.Foundation.HResult Windows.Graphics.Printing.Workflow.PrintWorkflowJobIssueDetectedEventArgs::get_ExtendedError()
    @_property
    def extended_error(self) -> windows_foundation.HResult: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowJobIssueKind Windows.Graphics.Printing.Workflow.PrintWorkflowJobIssueDetectedEventArgs::get_JobIssueKind()
    @_property
    def job_issue_kind(self) -> PrintWorkflowJobIssueKind: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPrinterJob Windows.Graphics.Printing.Workflow.PrintWorkflowJobIssueDetectedEventArgs::get_PrinterJob()
    @_property
    def printer_job(self) -> PrintWorkflowPrinterJob: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowUILauncher Windows.Graphics.Printing.Workflow.PrintWorkflowJobIssueDetectedEventArgs::get_UILauncher()
    @_property
    def ui_launcher(self) -> PrintWorkflowUILauncher: ...

@typing.final
class PrintWorkflowJobNotificationEventArgs(winrt.system.Object):
    # Windows.Foundation.Deferral Windows.Graphics.Printing.Workflow.PrintWorkflowJobNotificationEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowConfiguration Windows.Graphics.Printing.Workflow.PrintWorkflowJobNotificationEventArgs::get_Configuration()
    @_property
    def configuration(self) -> PrintWorkflowConfiguration: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPrinterJob Windows.Graphics.Printing.Workflow.PrintWorkflowJobNotificationEventArgs::get_PrinterJob()
    @_property
    def printer_job(self) -> PrintWorkflowPrinterJob: ...

@typing.final
class PrintWorkflowJobStartingEventArgs(winrt.system.Object):
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowJobStartingEventArgs::DisableIppCompressionForJob()
    def disable_ipp_compression_for_job(self) -> None: ...
    # Windows.Foundation.Deferral Windows.Graphics.Printing.Workflow.PrintWorkflowJobStartingEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowJobStartingEventArgs::SetSkipSystemRendering()
    def set_skip_system_rendering(self) -> None: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowConfiguration Windows.Graphics.Printing.Workflow.PrintWorkflowJobStartingEventArgs::get_Configuration()
    @_property
    def configuration(self) -> PrintWorkflowConfiguration: ...
    # Windows.Devices.Printers.IppPrintDevice Windows.Graphics.Printing.Workflow.PrintWorkflowJobStartingEventArgs::get_Printer()
    @_property
    def printer(self) -> windows_devices_printers.IppPrintDevice: ...
    # System.Boolean Windows.Graphics.Printing.Workflow.PrintWorkflowJobStartingEventArgs::get_SkipSystemFaxUI()
    @_property
    def skip_system_fax_ui(self) -> bool: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowJobStartingEventArgs::put_SkipSystemFaxUI(System.Boolean)
    @skip_system_fax_ui.setter
    def skip_system_fax_ui(self, value: bool) -> None: ...
    # System.Boolean Windows.Graphics.Printing.Workflow.PrintWorkflowJobStartingEventArgs::get_IsIppCompressionEnabled()
    @_property
    def is_ipp_compression_enabled(self) -> bool: ...

@typing.final
class PrintWorkflowJobTriggerDetails(winrt.system.Object):
    # Windows.Graphics.Printing.Workflow.PrintWorkflowJobBackgroundSession Windows.Graphics.Printing.Workflow.PrintWorkflowJobTriggerDetails::get_PrintWorkflowJobSession()
    @_property
    def print_workflow_job_session(self) -> PrintWorkflowJobBackgroundSession: ...

@typing.final
class PrintWorkflowJobUISession(winrt.system.Object):
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowJobUISession::Start()
    def start(self) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Graphics.Printing.Workflow.PrintWorkflowJobUISession::add_JobNotification(Windows.Foundation.TypedEventHandler`2<Windows.Graphics.Printing.Workflow.PrintWorkflowJobUISession,Windows.Graphics.Printing.Workflow.PrintWorkflowJobNotificationEventArgs>)
    def add_job_notification(self, handler: windows_foundation.TypedEventHandler[PrintWorkflowJobUISession, PrintWorkflowJobNotificationEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowJobUISession::remove_JobNotification(Windows.Foundation.EventRegistrationToken)
    def remove_job_notification(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Graphics.Printing.Workflow.PrintWorkflowJobUISession::add_PdlDataAvailable(Windows.Foundation.TypedEventHandler`2<Windows.Graphics.Printing.Workflow.PrintWorkflowJobUISession,Windows.Graphics.Printing.Workflow.PrintWorkflowPdlDataAvailableEventArgs>)
    def add_pdl_data_available(self, handler: windows_foundation.TypedEventHandler[PrintWorkflowJobUISession, PrintWorkflowPdlDataAvailableEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowJobUISession::remove_PdlDataAvailable(Windows.Foundation.EventRegistrationToken)
    def remove_pdl_data_available(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Graphics.Printing.Workflow.PrintWorkflowJobUISession::add_VirtualPrinterUIDataAvailable(Windows.Foundation.TypedEventHandler`2<Windows.Graphics.Printing.Workflow.PrintWorkflowJobUISession,Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterUIEventArgs>)
    def add_virtual_printer_ui_data_available(self, handler: windows_foundation.TypedEventHandler[PrintWorkflowJobUISession, PrintWorkflowVirtualPrinterUIEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowJobUISession::remove_VirtualPrinterUIDataAvailable(Windows.Foundation.EventRegistrationToken)
    def remove_virtual_printer_ui_data_available(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowSessionStatus Windows.Graphics.Printing.Workflow.PrintWorkflowJobUISession::get_Status()
    @_property
    def status(self) -> PrintWorkflowSessionStatus: ...

@typing.final
class PrintWorkflowObjectModelSourceFileContent(winrt.system.Object):
    def __new__(cls: typing.Type[Self], xps_stream: windows_storage_streams.IInputStream) -> Self: ...

@typing.final
class PrintWorkflowObjectModelTargetPackage(winrt.system.Object):
    pass

@typing.final
class PrintWorkflowPdlConverter(winrt.system.Object):
    @typing.overload
    # Windows.Foundation.IAsyncAction Windows.Graphics.Printing.Workflow.PrintWorkflowPdlConverter::ConvertPdlAsync(Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket,Windows.Storage.Streams.IInputStream,Windows.Storage.Streams.IOutputStream)
    def convert_pdl_async(self, print_ticket: windows_graphics_printing_printticket.WorkflowPrintTicket, input_stream: windows_storage_streams.IInputStream, output_stream: windows_storage_streams.IOutputStream, /) -> windows_foundation.IAsyncAction: ...
    @typing.overload
    # Windows.Foundation.IAsyncAction Windows.Graphics.Printing.Workflow.PrintWorkflowPdlConverter::ConvertPdlAsync(Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket,Windows.Storage.Streams.IInputStream,Windows.Storage.Streams.IOutputStream,Windows.Graphics.Printing.Workflow.PdlConversionHostBasedProcessingOperations)
    def convert_pdl_async(self, print_ticket: windows_graphics_printing_printticket.WorkflowPrintTicket, input_stream: windows_storage_streams.IInputStream, output_stream: windows_storage_streams.IOutputStream, host_based_processing_operations: PdlConversionHostBasedProcessingOperations, /) -> windows_foundation.IAsyncAction: ...

@typing.final
class PrintWorkflowPdlDataAvailableEventArgs(winrt.system.Object):
    # Windows.Foundation.Deferral Windows.Graphics.Printing.Workflow.PrintWorkflowPdlDataAvailableEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowConfiguration Windows.Graphics.Printing.Workflow.PrintWorkflowPdlDataAvailableEventArgs::get_Configuration()
    @_property
    def configuration(self) -> PrintWorkflowConfiguration: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPrinterJob Windows.Graphics.Printing.Workflow.PrintWorkflowPdlDataAvailableEventArgs::get_PrinterJob()
    @_property
    def printer_job(self) -> PrintWorkflowPrinterJob: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPdlSourceContent Windows.Graphics.Printing.Workflow.PrintWorkflowPdlDataAvailableEventArgs::get_SourceContent()
    @_property
    def source_content(self) -> PrintWorkflowPdlSourceContent: ...

@typing.final
class PrintWorkflowPdlModificationRequestedEventArgs(winrt.system.Object):
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPdlTargetStream Windows.Graphics.Printing.Workflow.PrintWorkflowPdlModificationRequestedEventArgs::CreateJobOnPrinter(System.String)
    def create_job_on_printer(self, target_content_type: str, /) -> PrintWorkflowPdlTargetStream: ...
    @typing.overload
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPdlTargetStream Windows.Graphics.Printing.Workflow.PrintWorkflowPdlModificationRequestedEventArgs::CreateJobOnPrinterWithAttributes(Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<System.String,Windows.Devices.Printers.IppAttributeValue>>,System.String)
    def create_job_on_printer_with_attributes(self, job_attributes: typing.Iterable[windows_foundation_collections.IKeyValuePair[str, windows_devices_printers.IppAttributeValue]], target_content_type: str, /) -> PrintWorkflowPdlTargetStream: ...
    @typing.overload
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPdlTargetStream Windows.Graphics.Printing.Workflow.PrintWorkflowPdlModificationRequestedEventArgs::CreateJobOnPrinterWithAttributes(Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<System.String,Windows.Devices.Printers.IppAttributeValue>>,System.String,Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<System.String,Windows.Devices.Printers.IppAttributeValue>>,Windows.Graphics.Printing.Workflow.PrintWorkflowAttributesMergePolicy,Windows.Graphics.Printing.Workflow.PrintWorkflowAttributesMergePolicy)
    def create_job_on_printer_with_attributes(self, job_attributes: typing.Iterable[windows_foundation_collections.IKeyValuePair[str, windows_devices_printers.IppAttributeValue]], target_content_type: str, operation_attributes: typing.Iterable[windows_foundation_collections.IKeyValuePair[str, windows_devices_printers.IppAttributeValue]], job_attributes_merge_policy: PrintWorkflowAttributesMergePolicy, operation_attributes_merge_policy: PrintWorkflowAttributesMergePolicy, /) -> PrintWorkflowPdlTargetStream: ...
    @typing.overload
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPdlTargetStream Windows.Graphics.Printing.Workflow.PrintWorkflowPdlModificationRequestedEventArgs::CreateJobOnPrinterWithAttributesBuffer(Windows.Storage.Streams.IBuffer,System.String)
    def create_job_on_printer_with_attributes_buffer(self, job_attributes_buffer: windows_storage_streams.IBuffer, target_content_type: str, /) -> PrintWorkflowPdlTargetStream: ...
    @typing.overload
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPdlTargetStream Windows.Graphics.Printing.Workflow.PrintWorkflowPdlModificationRequestedEventArgs::CreateJobOnPrinterWithAttributesBuffer(Windows.Storage.Streams.IBuffer,System.String,Windows.Storage.Streams.IBuffer,Windows.Graphics.Printing.Workflow.PrintWorkflowAttributesMergePolicy,Windows.Graphics.Printing.Workflow.PrintWorkflowAttributesMergePolicy)
    def create_job_on_printer_with_attributes_buffer(self, job_attributes_buffer: windows_storage_streams.IBuffer, target_content_type: str, operation_attributes_buffer: windows_storage_streams.IBuffer, job_attributes_merge_policy: PrintWorkflowAttributesMergePolicy, operation_attributes_merge_policy: PrintWorkflowAttributesMergePolicy, /) -> PrintWorkflowPdlTargetStream: ...
    # Windows.Foundation.Deferral Windows.Graphics.Printing.Workflow.PrintWorkflowPdlModificationRequestedEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPdlConverter Windows.Graphics.Printing.Workflow.PrintWorkflowPdlModificationRequestedEventArgs::GetPdlConverter(Windows.Graphics.Printing.Workflow.PrintWorkflowPdlConversionType)
    def get_pdl_converter(self, conversion_type: PrintWorkflowPdlConversionType, /) -> PrintWorkflowPdlConverter: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowConfiguration Windows.Graphics.Printing.Workflow.PrintWorkflowPdlModificationRequestedEventArgs::get_Configuration()
    @_property
    def configuration(self) -> PrintWorkflowConfiguration: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPrinterJob Windows.Graphics.Printing.Workflow.PrintWorkflowPdlModificationRequestedEventArgs::get_PrinterJob()
    @_property
    def printer_job(self) -> PrintWorkflowPrinterJob: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPdlSourceContent Windows.Graphics.Printing.Workflow.PrintWorkflowPdlModificationRequestedEventArgs::get_SourceContent()
    @_property
    def source_content(self) -> PrintWorkflowPdlSourceContent: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowUILauncher Windows.Graphics.Printing.Workflow.PrintWorkflowPdlModificationRequestedEventArgs::get_UILauncher()
    @_property
    def ui_launcher(self) -> PrintWorkflowUILauncher: ...

@typing.final
class PrintWorkflowPdlSourceContent(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile> Windows.Graphics.Printing.Workflow.PrintWorkflowPdlSourceContent::GetContentFileAsync()
    def get_content_file_async(self) -> windows_foundation.IAsyncOperation[windows_storage.StorageFile]: ...
    # Windows.Storage.Streams.IInputStream Windows.Graphics.Printing.Workflow.PrintWorkflowPdlSourceContent::GetInputStream()
    def get_input_stream(self) -> windows_storage_streams.IInputStream: ...
    # System.String Windows.Graphics.Printing.Workflow.PrintWorkflowPdlSourceContent::get_ContentType()
    @_property
    def content_type(self) -> str: ...

@typing.final
class PrintWorkflowPdlTargetStream(winrt.system.Object):
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowPdlTargetStream::CompleteStreamSubmission(Windows.Graphics.Printing.Workflow.PrintWorkflowSubmittedStatus)
    def complete_stream_submission(self, status: PrintWorkflowSubmittedStatus, /) -> None: ...
    # Windows.Storage.Streams.IOutputStream Windows.Graphics.Printing.Workflow.PrintWorkflowPdlTargetStream::GetOutputStream()
    def get_output_stream(self) -> windows_storage_streams.IOutputStream: ...

@typing.final
class PrintWorkflowPrinterJob(winrt.system.Object):
    # Windows.Foundation.Collections.IMap`2<System.String,Windows.Devices.Printers.IppAttributeValue> Windows.Graphics.Printing.Workflow.PrintWorkflowPrinterJob::ConvertPrintTicketToJobAttributes(Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket,System.String)
    def convert_print_ticket_to_job_attributes(self, print_ticket: windows_graphics_printing_printticket.WorkflowPrintTicket, target_pdl_format: str, /) -> typing.MutableMapping[str, windows_devices_printers.IppAttributeValue]: ...
    # Windows.Foundation.Collections.IMap`2<System.String,Windows.Devices.Printers.IppAttributeValue> Windows.Graphics.Printing.Workflow.PrintWorkflowPrinterJob::GetJobAttributes(Windows.Foundation.Collections.IIterable`1<System.String>)
    def get_job_attributes(self, attribute_names: typing.Iterable[str], /) -> typing.MutableMapping[str, windows_devices_printers.IppAttributeValue]: ...
    # Windows.Storage.Streams.IBuffer Windows.Graphics.Printing.Workflow.PrintWorkflowPrinterJob::GetJobAttributesAsBuffer(Windows.Foundation.Collections.IIterable`1<System.String>)
    def get_job_attributes_as_buffer(self, attribute_names: typing.Iterable[str], /) -> windows_storage_streams.IBuffer: ...
    # Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket Windows.Graphics.Printing.Workflow.PrintWorkflowPrinterJob::GetJobPrintTicket()
    def get_job_print_ticket(self) -> windows_graphics_printing_printticket.WorkflowPrintTicket: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPrinterJobStatus Windows.Graphics.Printing.Workflow.PrintWorkflowPrinterJob::GetJobStatus()
    def get_job_status(self) -> PrintWorkflowPrinterJobStatus: ...
    # Windows.Devices.Printers.IppSetAttributesResult Windows.Graphics.Printing.Workflow.PrintWorkflowPrinterJob::SetJobAttributes(Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<System.String,Windows.Devices.Printers.IppAttributeValue>>)
    def set_job_attributes(self, job_attributes: typing.Iterable[windows_foundation_collections.IKeyValuePair[str, windows_devices_printers.IppAttributeValue]], /) -> windows_devices_printers.IppSetAttributesResult: ...
    # Windows.Devices.Printers.IppSetAttributesResult Windows.Graphics.Printing.Workflow.PrintWorkflowPrinterJob::SetJobAttributesFromBuffer(Windows.Storage.Streams.IBuffer)
    def set_job_attributes_from_buffer(self, job_attributes_buffer: windows_storage_streams.IBuffer, /) -> windows_devices_printers.IppSetAttributesResult: ...
    # System.Int32 Windows.Graphics.Printing.Workflow.PrintWorkflowPrinterJob::get_JobId()
    @_property
    def job_id(self) -> winrt.system.Int32: ...
    # Windows.Devices.Printers.IppPrintDevice Windows.Graphics.Printing.Workflow.PrintWorkflowPrinterJob::get_Printer()
    @_property
    def printer(self) -> windows_devices_printers.IppPrintDevice: ...

@typing.final
class PrintWorkflowSourceContent(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket> Windows.Graphics.Printing.Workflow.PrintWorkflowSourceContent::GetJobPrintTicketAsync()
    def get_job_print_ticket_async(self) -> windows_foundation.IAsyncOperation[windows_graphics_printing_printticket.WorkflowPrintTicket]: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowSpoolStreamContent Windows.Graphics.Printing.Workflow.PrintWorkflowSourceContent::GetSourceSpoolDataAsStreamContent()
    def get_source_spool_data_as_stream_content(self) -> PrintWorkflowSpoolStreamContent: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowObjectModelSourceFileContent Windows.Graphics.Printing.Workflow.PrintWorkflowSourceContent::GetSourceSpoolDataAsXpsObjectModel()
    def get_source_spool_data_as_xps_object_model(self) -> PrintWorkflowObjectModelSourceFileContent: ...

@typing.final
class PrintWorkflowSpoolStreamContent(winrt.system.Object):
    # Windows.Storage.Streams.IInputStream Windows.Graphics.Printing.Workflow.PrintWorkflowSpoolStreamContent::GetInputStream()
    def get_input_stream(self) -> windows_storage_streams.IInputStream: ...

@typing.final
class PrintWorkflowStreamTarget(winrt.system.Object):
    # Windows.Storage.Streams.IOutputStream Windows.Graphics.Printing.Workflow.PrintWorkflowStreamTarget::GetOutputStream()
    def get_output_stream(self) -> windows_storage_streams.IOutputStream: ...

@typing.final
class PrintWorkflowSubmittedEventArgs(winrt.system.Object):
    # Windows.Foundation.Deferral Windows.Graphics.Printing.Workflow.PrintWorkflowSubmittedEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowTarget Windows.Graphics.Printing.Workflow.PrintWorkflowSubmittedEventArgs::GetTarget(Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket)
    def get_target(self, job_print_ticket: windows_graphics_printing_printticket.WorkflowPrintTicket, /) -> PrintWorkflowTarget: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowSubmittedOperation Windows.Graphics.Printing.Workflow.PrintWorkflowSubmittedEventArgs::get_Operation()
    @_property
    def operation(self) -> PrintWorkflowSubmittedOperation: ...

@typing.final
class PrintWorkflowSubmittedOperation(winrt.system.Object):
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowSubmittedOperation::Complete(Windows.Graphics.Printing.Workflow.PrintWorkflowSubmittedStatus)
    def complete(self, status: PrintWorkflowSubmittedStatus, /) -> None: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowConfiguration Windows.Graphics.Printing.Workflow.PrintWorkflowSubmittedOperation::get_Configuration()
    @_property
    def configuration(self) -> PrintWorkflowConfiguration: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowSourceContent Windows.Graphics.Printing.Workflow.PrintWorkflowSubmittedOperation::get_XpsContent()
    @_property
    def xps_content(self) -> PrintWorkflowSourceContent: ...

@typing.final
class PrintWorkflowTarget(winrt.system.Object):
    # Windows.Graphics.Printing.Workflow.PrintWorkflowStreamTarget Windows.Graphics.Printing.Workflow.PrintWorkflowTarget::get_TargetAsStream()
    @_property
    def target_as_stream(self) -> PrintWorkflowStreamTarget: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowObjectModelTargetPackage Windows.Graphics.Printing.Workflow.PrintWorkflowTarget::get_TargetAsXpsObjectModelPackage()
    @_property
    def target_as_xps_object_model_package(self) -> PrintWorkflowObjectModelTargetPackage: ...

@typing.final
class PrintWorkflowTriggerDetails(winrt.system.Object):
    # Windows.Graphics.Printing.Workflow.PrintWorkflowBackgroundSession Windows.Graphics.Printing.Workflow.PrintWorkflowTriggerDetails::get_PrintWorkflowSession()
    @_property
    def print_workflow_session(self) -> PrintWorkflowBackgroundSession: ...

@typing.final
class PrintWorkflowUIActivatedEventArgs(winrt.system.Object, windows_applicationmodel_activation.IActivatedEventArgsWithUser, windows_applicationmodel_activation.IActivatedEventArgs):
    # Windows.ApplicationModel.Activation.ActivationKind Windows.Graphics.Printing.Workflow.PrintWorkflowUIActivatedEventArgs::get_Kind()
    @_property
    def kind(self) -> windows_applicationmodel_activation.ActivationKind: ...
    # Windows.ApplicationModel.Activation.ApplicationExecutionState Windows.Graphics.Printing.Workflow.PrintWorkflowUIActivatedEventArgs::get_PreviousExecutionState()
    @_property
    def previous_execution_state(self) -> windows_applicationmodel_activation.ApplicationExecutionState: ...
    # Windows.ApplicationModel.Activation.SplashScreen Windows.Graphics.Printing.Workflow.PrintWorkflowUIActivatedEventArgs::get_SplashScreen()
    @_property
    def splash_screen(self) -> windows_applicationmodel_activation.SplashScreen: ...
    # Windows.System.User Windows.Graphics.Printing.Workflow.PrintWorkflowUIActivatedEventArgs::get_User()
    @_property
    def user(self) -> windows_system.User: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowForegroundSession Windows.Graphics.Printing.Workflow.PrintWorkflowUIActivatedEventArgs::get_PrintWorkflowSession()
    @_property
    def print_workflow_session(self) -> PrintWorkflowForegroundSession: ...

@typing.final
class PrintWorkflowUILauncher(winrt.system.Object):
    # System.Boolean Windows.Graphics.Printing.Workflow.PrintWorkflowUILauncher::IsUILaunchEnabled()
    def is_ui_launch_enabled(self) -> bool: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Graphics.Printing.Workflow.PrintWorkflowUICompletionStatus> Windows.Graphics.Printing.Workflow.PrintWorkflowUILauncher::LaunchAndCompleteUIAsync()
    def launch_and_complete_ui_async(self) -> windows_foundation.IAsyncOperation[PrintWorkflowUICompletionStatus]: ...

@typing.final
class PrintWorkflowVirtualPrinterDataAvailableEventArgs(winrt.system.Object):
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterDataAvailableEventArgs::CompleteJob(Windows.Graphics.Printing.Workflow.PrintWorkflowSubmittedStatus)
    def complete_job(self, status: PrintWorkflowSubmittedStatus, /) -> None: ...
    # Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterDataAvailableEventArgs::GetJobPrintTicket()
    def get_job_print_ticket(self) -> windows_graphics_printing_printticket.WorkflowPrintTicket: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPdlConverter Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterDataAvailableEventArgs::GetPdlConverter(Windows.Graphics.Printing.Workflow.PrintWorkflowPdlConversionType)
    def get_pdl_converter(self, conversion_type: PrintWorkflowPdlConversionType, /) -> PrintWorkflowPdlConverter: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile> Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterDataAvailableEventArgs::GetTargetFileAsync()
    def get_target_file_async(self) -> windows_foundation.IAsyncOperation[windows_storage.StorageFile]: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowConfiguration Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterDataAvailableEventArgs::get_Configuration()
    @_property
    def configuration(self) -> PrintWorkflowConfiguration: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPdlSourceContent Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterDataAvailableEventArgs::get_SourceContent()
    @_property
    def source_content(self) -> PrintWorkflowPdlSourceContent: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowUILauncher Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterDataAvailableEventArgs::get_UILauncher()
    @_property
    def ui_launcher(self) -> PrintWorkflowUILauncher: ...

@typing.final
class PrintWorkflowVirtualPrinterSession(winrt.system.Object):
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterSession::Start()
    def start(self) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterSession::add_VirtualPrinterDataAvailable(Windows.Foundation.TypedEventHandler`2<Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterSession,Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterDataAvailableEventArgs>)
    def add_virtual_printer_data_available(self, handler: windows_foundation.TypedEventHandler[PrintWorkflowVirtualPrinterSession, PrintWorkflowVirtualPrinterDataAvailableEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterSession::remove_VirtualPrinterDataAvailable(Windows.Foundation.EventRegistrationToken)
    def remove_virtual_printer_data_available(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Devices.Printers.IppPrintDevice Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterSession::get_Printer()
    @_property
    def printer(self) -> windows_devices_printers.IppPrintDevice: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowSessionStatus Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterSession::get_Status()
    @_property
    def status(self) -> PrintWorkflowSessionStatus: ...

@typing.final
class PrintWorkflowVirtualPrinterTriggerDetails(winrt.system.Object):
    # Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterSession Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterTriggerDetails::get_VirtualPrinterSession()
    @_property
    def virtual_printer_session(self) -> PrintWorkflowVirtualPrinterSession: ...

@typing.final
class PrintWorkflowVirtualPrinterUIEventArgs(winrt.system.Object):
    # Windows.Foundation.Deferral Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterUIEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...
    # Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterUIEventArgs::GetJobPrintTicket()
    def get_job_print_ticket(self) -> windows_graphics_printing_printticket.WorkflowPrintTicket: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowConfiguration Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterUIEventArgs::get_Configuration()
    @_property
    def configuration(self) -> PrintWorkflowConfiguration: ...
    # Windows.Devices.Printers.IppPrintDevice Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterUIEventArgs::get_Printer()
    @_property
    def printer(self) -> windows_devices_printers.IppPrintDevice: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowPdlSourceContent Windows.Graphics.Printing.Workflow.PrintWorkflowVirtualPrinterUIEventArgs::get_SourceContent()
    @_property
    def source_content(self) -> PrintWorkflowPdlSourceContent: ...

@typing.final
class PrintWorkflowXpsDataAvailableEventArgs(winrt.system.Object):
    # Windows.Foundation.Deferral Windows.Graphics.Printing.Workflow.PrintWorkflowXpsDataAvailableEventArgs::GetDeferral()
    def get_deferral(self) -> windows_foundation.Deferral: ...
    # Windows.Graphics.Printing.Workflow.PrintWorkflowSubmittedOperation Windows.Graphics.Printing.Workflow.PrintWorkflowXpsDataAvailableEventArgs::get_Operation()
    @_property
    def operation(self) -> PrintWorkflowSubmittedOperation: ...

