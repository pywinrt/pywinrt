# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.core as windows_applicationmodel_core
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections

from winrt.microsoft.windows.applifecycle import ExtendedActivationKind

Self = typing.TypeVar('Self')

@typing.final
class ActivationRegistrationManager_Static(winrt._winrt.IInspectable_Static):
    # System.Void Microsoft.Windows.AppLifecycle.ActivationRegistrationManager::RegisterForFileTypeActivation(System.String[],System.String,System.String,System.String[],System.String)
    def register_for_file_type_activation(cls, supported_file_types: typing.Union[winrt.system.Array[str], winrt.system.ReadableBuffer], logo: str, display_name: str, supported_verbs: typing.Union[winrt.system.Array[str], winrt.system.ReadableBuffer], exe_path: str, /) -> None: ...
    # System.Void Microsoft.Windows.AppLifecycle.ActivationRegistrationManager::RegisterForProtocolActivation(System.String,System.String,System.String,System.String)
    def register_for_protocol_activation(cls, scheme: str, logo: str, display_name: str, exe_path: str, /) -> None: ...
    # System.Void Microsoft.Windows.AppLifecycle.ActivationRegistrationManager::RegisterForStartupActivation(System.String,System.String)
    def register_for_startup_activation(cls, task_id: str, exe_path: str, /) -> None: ...
    # System.Void Microsoft.Windows.AppLifecycle.ActivationRegistrationManager::UnregisterForFileTypeActivation(System.String[],System.String)
    def unregister_for_file_type_activation(cls, file_types: typing.Union[winrt.system.Array[str], winrt.system.ReadableBuffer], exe_path: str, /) -> None: ...
    # System.Void Microsoft.Windows.AppLifecycle.ActivationRegistrationManager::UnregisterForProtocolActivation(System.String,System.String)
    def unregister_for_protocol_activation(cls, scheme: str, exe_path: str, /) -> None: ...
    # System.Void Microsoft.Windows.AppLifecycle.ActivationRegistrationManager::UnregisterForStartupActivation(System.String)
    def unregister_for_startup_activation(cls, task_id: str, /) -> None: ...

@typing.final
class ActivationRegistrationManager(winrt.system.Object, metaclass=ActivationRegistrationManager_Static):
    pass

@typing.final
class AppActivationArguments(winrt.system.Object):
    # System.Object Microsoft.Windows.AppLifecycle.AppActivationArguments::get_Data()
    @_property
    def data(self) -> winrt.system.Object: ...
    # Microsoft.Windows.AppLifecycle.ExtendedActivationKind Microsoft.Windows.AppLifecycle.AppActivationArguments::get_Kind()
    @_property
    def kind(self) -> ExtendedActivationKind: ...

@typing.final
class AppInstance_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.Windows.AppLifecycle.AppInstance Microsoft.Windows.AppLifecycle.AppInstance::FindOrRegisterForKey(System.String)
    def find_or_register_for_key(cls, key: str, /) -> AppInstance: ...
    # Microsoft.Windows.AppLifecycle.AppInstance Microsoft.Windows.AppLifecycle.AppInstance::GetCurrent()
    def get_current(cls) -> AppInstance: ...
    # Windows.Foundation.Collections.IVector`1<Microsoft.Windows.AppLifecycle.AppInstance> Microsoft.Windows.AppLifecycle.AppInstance::GetInstances()
    def get_instances(cls) -> typing.MutableSequence[AppInstance]: ...
    # Windows.ApplicationModel.Core.AppRestartFailureReason Microsoft.Windows.AppLifecycle.AppInstance::Restart(System.String)
    def restart(cls, arguments: str, /) -> windows_applicationmodel_core.AppRestartFailureReason: ...

@typing.final
class AppInstance(winrt.system.Object, metaclass=AppInstance_Static):
    # Microsoft.Windows.AppLifecycle.AppActivationArguments Microsoft.Windows.AppLifecycle.AppInstance::GetActivatedEventArgs()
    def get_activated_event_args(self) -> AppActivationArguments: ...
    # Windows.Foundation.IAsyncAction Microsoft.Windows.AppLifecycle.AppInstance::RedirectActivationToAsync(Microsoft.Windows.AppLifecycle.AppActivationArguments)
    def redirect_activation_to_async(self, args: AppActivationArguments, /) -> windows_foundation.IAsyncAction: ...
    # System.Void Microsoft.Windows.AppLifecycle.AppInstance::UnregisterKey()
    def unregister_key(self) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.Windows.AppLifecycle.AppInstance::add_Activated(Windows.Foundation.EventHandler`1<Microsoft.Windows.AppLifecycle.AppActivationArguments>)
    def add_activated(self, handler: windows_foundation.EventHandler[AppActivationArguments], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.Windows.AppLifecycle.AppInstance::remove_Activated(Windows.Foundation.EventRegistrationToken)
    def remove_activated(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Boolean Microsoft.Windows.AppLifecycle.AppInstance::get_IsCurrent()
    @_property
    def is_current(self) -> bool: ...
    # System.String Microsoft.Windows.AppLifecycle.AppInstance::get_Key()
    @_property
    def key(self) -> str: ...
    # System.UInt32 Microsoft.Windows.AppLifecycle.AppInstance::get_ProcessId()
    @_property
    def process_id(self) -> winrt.system.UInt32: ...

