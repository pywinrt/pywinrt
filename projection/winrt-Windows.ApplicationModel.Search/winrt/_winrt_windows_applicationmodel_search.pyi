# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.storage
import winrt.windows.storage.streams

Self = typing.TypeVar('Self')

@typing.final
class LocalContentSuggestionSettings(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LocalContentSuggestionSettings: ...
    def __new__(cls: typing.Type[LocalContentSuggestionSettings]) -> LocalContentSuggestionSettings:...
    @_property
    def enabled(self) -> bool: ...
    @enabled.setter
    def enabled(self, value: bool) -> None: ...
    @_property
    def aqs_filter(self) -> str: ...
    @aqs_filter.setter
    def aqs_filter(self, value: str) -> None: ...
    @_property
    def locations(self) -> typing.Optional[winrt.windows.foundation.collections.IVector[winrt.windows.storage.StorageFolder]]: ...
    @_property
    def properties_to_match(self) -> typing.Optional[winrt.windows.foundation.collections.IVector[str]]: ...

@typing.final
class SearchPane_Static(type):
    def get_for_current_view(cls) -> typing.Optional[SearchPane]: ...
    def hide_this_application(cls) -> None: ...

@typing.final
class SearchPane(winrt.system.Object, metaclass=SearchPane_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPane: ...
    def set_local_content_suggestion_settings(self, settings: typing.Optional[LocalContentSuggestionSettings], /) -> None: ...
    @typing.overload
    def show(self) -> None: ...
    @typing.overload
    def show(self, query: str, /) -> None: ...
    def try_set_query_text(self, query: str, /) -> bool: ...
    def add_query_changed(self, handler: winrt.windows.foundation.TypedEventHandler[SearchPane, SearchPaneQueryChangedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_query_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_query_submitted(self, handler: winrt.windows.foundation.TypedEventHandler[SearchPane, SearchPaneQuerySubmittedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_query_submitted(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_result_suggestion_chosen(self, handler: winrt.windows.foundation.TypedEventHandler[SearchPane, SearchPaneResultSuggestionChosenEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_result_suggestion_chosen(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_suggestions_requested(self, handler: winrt.windows.foundation.TypedEventHandler[SearchPane, SearchPaneSuggestionsRequestedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_suggestions_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_visibility_changed(self, handler: winrt.windows.foundation.TypedEventHandler[SearchPane, SearchPaneVisibilityChangedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_visibility_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def show_on_keyboard_input(self) -> bool: ...
    @show_on_keyboard_input.setter
    def show_on_keyboard_input(self, value: bool) -> None: ...
    @_property
    def search_history_enabled(self) -> bool: ...
    @search_history_enabled.setter
    def search_history_enabled(self, value: bool) -> None: ...
    @_property
    def search_history_context(self) -> str: ...
    @search_history_context.setter
    def search_history_context(self, value: str) -> None: ...
    @_property
    def placeholder_text(self) -> str: ...
    @placeholder_text.setter
    def placeholder_text(self, value: str) -> None: ...
    @_property
    def language(self) -> str: ...
    @_property
    def query_text(self) -> str: ...
    @_property
    def visible(self) -> bool: ...

@typing.final
class SearchPaneQueryChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneQueryChangedEventArgs: ...
    @_property
    def language(self) -> str: ...
    @_property
    def linguistic_details(self) -> typing.Optional[SearchPaneQueryLinguisticDetails]: ...
    @_property
    def query_text(self) -> str: ...

@typing.final
class SearchPaneQueryLinguisticDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneQueryLinguisticDetails: ...
    @_property
    def query_text_alternatives(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[str]]: ...
    @_property
    def query_text_composition_length(self) -> winrt.system.UInt32: ...
    @_property
    def query_text_composition_start(self) -> winrt.system.UInt32: ...

@typing.final
class SearchPaneQuerySubmittedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneQuerySubmittedEventArgs: ...
    @_property
    def language(self) -> str: ...
    @_property
    def query_text(self) -> str: ...
    @_property
    def linguistic_details(self) -> typing.Optional[SearchPaneQueryLinguisticDetails]: ...

@typing.final
class SearchPaneResultSuggestionChosenEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneResultSuggestionChosenEventArgs: ...
    @_property
    def tag(self) -> str: ...

@typing.final
class SearchPaneSuggestionsRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneSuggestionsRequest: ...
    def get_deferral(self) -> typing.Optional[SearchPaneSuggestionsRequestDeferral]: ...
    @_property
    def is_canceled(self) -> bool: ...
    @_property
    def search_suggestion_collection(self) -> typing.Optional[SearchSuggestionCollection]: ...

@typing.final
class SearchPaneSuggestionsRequestDeferral(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneSuggestionsRequestDeferral: ...
    def complete(self) -> None: ...

@typing.final
class SearchPaneSuggestionsRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneSuggestionsRequestedEventArgs: ...
    @_property
    def language(self) -> str: ...
    @_property
    def linguistic_details(self) -> typing.Optional[SearchPaneQueryLinguisticDetails]: ...
    @_property
    def query_text(self) -> str: ...
    @_property
    def request(self) -> typing.Optional[SearchPaneSuggestionsRequest]: ...

@typing.final
class SearchPaneVisibilityChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchPaneVisibilityChangedEventArgs: ...
    @_property
    def visible(self) -> bool: ...

@typing.final
class SearchQueryLinguisticDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchQueryLinguisticDetails: ...
    def __new__(cls: typing.Type[SearchQueryLinguisticDetails], query_text_alternatives: typing.Iterable[str], query_text_composition_start: winrt.system.UInt32, query_text_composition_length: winrt.system.UInt32) -> SearchQueryLinguisticDetails:...
    @_property
    def query_text_alternatives(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[str]]: ...
    @_property
    def query_text_composition_length(self) -> winrt.system.UInt32: ...
    @_property
    def query_text_composition_start(self) -> winrt.system.UInt32: ...

@typing.final
class SearchSuggestionCollection(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchSuggestionCollection: ...
    def append_query_suggestion(self, text: str, /) -> None: ...
    def append_query_suggestions(self, suggestions: typing.Iterable[str], /) -> None: ...
    def append_result_suggestion(self, text: str, detail_text: str, tag: str, image: typing.Optional[winrt.windows.storage.streams.IRandomAccessStreamReference], image_alternate_text: str, /) -> None: ...
    def append_search_separator(self, label: str, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class SearchSuggestionsRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchSuggestionsRequest: ...
    def get_deferral(self) -> typing.Optional[SearchSuggestionsRequestDeferral]: ...
    @_property
    def is_canceled(self) -> bool: ...
    @_property
    def search_suggestion_collection(self) -> typing.Optional[SearchSuggestionCollection]: ...

@typing.final
class SearchSuggestionsRequestDeferral(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchSuggestionsRequestDeferral: ...
    def complete(self) -> None: ...

@typing.final
class ISearchPaneQueryChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ISearchPaneQueryChangedEventArgs: ...
    @_property
    def language(self) -> str: ...
    @_property
    def linguistic_details(self) -> typing.Optional[SearchPaneQueryLinguisticDetails]: ...
    @_property
    def query_text(self) -> str: ...

