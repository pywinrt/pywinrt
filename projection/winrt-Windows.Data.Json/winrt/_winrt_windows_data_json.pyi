# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections

from winrt.windows.data.json import JsonErrorStatus, JsonValueType

Self = typing.TypeVar('Self')

@typing.final
class JsonArray_Static(type):
    # Windows.Data.Json.JsonArray Windows.Data.Json.JsonArray::Parse(System.String)
    def parse(cls, input: str, /) -> JsonArray: ...
    # System.Boolean Windows.Data.Json.JsonArray::TryParse(System.String,Windows.Data.Json.JsonArray&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, JsonArray]: ...

@typing.final
class JsonArray(winrt.system.Object, windows_foundation.ImplementsIStringable, ImplementsIJsonValue, winrt._winrt.MutableSequence[IJsonValue], metaclass=JsonArray_Static):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[IJsonValue]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> IJsonValue: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[IJsonValue]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: ImplementsIJsonValue) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[ImplementsIJsonValue]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.Data.Json.JsonArray::Append(Windows.Data.Json.IJsonValue)
    def append(self, value: ImplementsIJsonValue, /) -> None: ...
    # System.Void Windows.Data.Json.JsonArray::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Data.Json.IJsonValue> Windows.Data.Json.JsonArray::First()
    def first(self) -> windows_foundation_collections.IIterator[IJsonValue]: ...
    # Windows.Data.Json.JsonArray Windows.Data.Json.JsonArray::GetArray()
    def get_array(self) -> JsonArray: ...
    # Windows.Data.Json.JsonArray Windows.Data.Json.JsonArray::GetArrayAt(System.UInt32)
    def get_array_at(self, index: winrt.system.UInt32, /) -> JsonArray: ...
    # Windows.Data.Json.IJsonValue Windows.Data.Json.JsonArray::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> IJsonValue: ...
    # System.Boolean Windows.Data.Json.JsonArray::GetBoolean()
    def get_boolean(self) -> bool: ...
    # System.Boolean Windows.Data.Json.JsonArray::GetBooleanAt(System.UInt32)
    def get_boolean_at(self, index: winrt.system.UInt32, /) -> bool: ...
    # System.UInt32 Windows.Data.Json.JsonArray::GetMany(System.UInt32,Windows.Data.Json.IJsonValue[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[IJsonValue], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # System.Double Windows.Data.Json.JsonArray::GetNumber()
    def get_number(self) -> winrt.system.Double: ...
    # System.Double Windows.Data.Json.JsonArray::GetNumberAt(System.UInt32)
    def get_number_at(self, index: winrt.system.UInt32, /) -> winrt.system.Double: ...
    # Windows.Data.Json.JsonObject Windows.Data.Json.JsonArray::GetObject()
    def get_object(self) -> JsonObject: ...
    # Windows.Data.Json.JsonObject Windows.Data.Json.JsonArray::GetObjectAt(System.UInt32)
    def get_object_at(self, index: winrt.system.UInt32, /) -> JsonObject: ...
    # System.String Windows.Data.Json.JsonArray::GetString()
    def get_string(self) -> str: ...
    # System.String Windows.Data.Json.JsonArray::GetStringAt(System.UInt32)
    def get_string_at(self, index: winrt.system.UInt32, /) -> str: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Data.Json.IJsonValue> Windows.Data.Json.JsonArray::GetView()
    def get_view(self) -> typing.Sequence[IJsonValue]: ...
    # System.Boolean Windows.Data.Json.JsonArray::IndexOf(Windows.Data.Json.IJsonValue,System.UInt32&)
    def index_of(self, value: ImplementsIJsonValue, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.Data.Json.JsonArray::InsertAt(System.UInt32,Windows.Data.Json.IJsonValue)
    def insert_at(self, index: winrt.system.UInt32, value: ImplementsIJsonValue, /) -> None: ...
    # System.Void Windows.Data.Json.JsonArray::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Data.Json.JsonArray::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.Data.Json.JsonArray::ReplaceAll(Windows.Data.Json.IJsonValue[])
    def replace_all(self, items: typing.Union[winrt.system.Array[ImplementsIJsonValue], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.Data.Json.JsonArray::SetAt(System.UInt32,Windows.Data.Json.IJsonValue)
    def set_at(self, index: winrt.system.UInt32, value: ImplementsIJsonValue, /) -> None: ...
    # System.String Windows.Data.Json.JsonArray::Stringify()
    def stringify(self) -> str: ...
    # System.String Windows.Data.Json.JsonArray::ToString()
    def to_string(self) -> str: ...
    # Windows.Data.Json.JsonValueType Windows.Data.Json.JsonArray::get_ValueType()
    @_property
    def value_type(self) -> JsonValueType: ...
    # System.UInt32 Windows.Data.Json.JsonArray::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class JsonError_Static(type):
    # Windows.Data.Json.JsonErrorStatus Windows.Data.Json.JsonError::GetJsonStatus(System.Int32)
    def get_json_status(cls, hresult: winrt.system.Int32, /) -> JsonErrorStatus: ...

@typing.final
class JsonError(winrt.system.Object, metaclass=JsonError_Static):
    pass

@typing.final
class JsonObject_Static(type):
    # Windows.Data.Json.JsonObject Windows.Data.Json.JsonObject::Parse(System.String)
    def parse(cls, input: str, /) -> JsonObject: ...
    # System.Boolean Windows.Data.Json.JsonObject::TryParse(System.String,Windows.Data.Json.JsonObject&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, JsonObject]: ...

@typing.final
class JsonObject(winrt.system.Object, windows_foundation.ImplementsIStringable, ImplementsIJsonValue, winrt._winrt.MutableMapping[str, IJsonValue], metaclass=JsonObject_Static):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[str]: ...
    def __contains__(self, key: object) -> bool: ...
    def __getitem__(self, key: str) -> IJsonValue: ...
    def __setitem__(self, key: str, value: ImplementsIJsonValue) -> None: ...
    def __delitem__(self, key: str) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.Data.Json.JsonObject::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<System.String,Windows.Data.Json.IJsonValue>> Windows.Data.Json.JsonObject::First()
    def first(self) -> windows_foundation_collections.IIterator[windows_foundation_collections.IKeyValuePair[str, IJsonValue]]: ...
    # Windows.Data.Json.JsonArray Windows.Data.Json.JsonObject::GetArray()
    def get_array(self) -> JsonArray: ...
    # System.Boolean Windows.Data.Json.JsonObject::GetBoolean()
    def get_boolean(self) -> bool: ...
    # Windows.Data.Json.JsonArray Windows.Data.Json.JsonObject::GetNamedArray(System.String)
    def get_named_array(self, name: str, /) -> JsonArray: ...
    # Windows.Data.Json.JsonArray Windows.Data.Json.JsonObject::GetNamedArray(System.String,Windows.Data.Json.JsonArray)
    def get_named_array_or_default(self, name: str, default_value: JsonArray, /) -> JsonArray: ...
    # System.Boolean Windows.Data.Json.JsonObject::GetNamedBoolean(System.String)
    def get_named_boolean(self, name: str, /) -> bool: ...
    # System.Boolean Windows.Data.Json.JsonObject::GetNamedBoolean(System.String,System.Boolean)
    def get_named_boolean_or_default(self, name: str, default_value: bool, /) -> bool: ...
    # System.Double Windows.Data.Json.JsonObject::GetNamedNumber(System.String)
    def get_named_number(self, name: str, /) -> winrt.system.Double: ...
    # System.Double Windows.Data.Json.JsonObject::GetNamedNumber(System.String,System.Double)
    def get_named_number_or_default(self, name: str, default_value: winrt.system.Double, /) -> winrt.system.Double: ...
    # Windows.Data.Json.JsonObject Windows.Data.Json.JsonObject::GetNamedObject(System.String)
    def get_named_object(self, name: str, /) -> JsonObject: ...
    # Windows.Data.Json.JsonObject Windows.Data.Json.JsonObject::GetNamedObject(System.String,Windows.Data.Json.JsonObject)
    def get_named_object_or_default(self, name: str, default_value: JsonObject, /) -> JsonObject: ...
    # System.String Windows.Data.Json.JsonObject::GetNamedString(System.String)
    def get_named_string(self, name: str, /) -> str: ...
    # System.String Windows.Data.Json.JsonObject::GetNamedString(System.String,System.String)
    def get_named_string_or_default(self, name: str, default_value: str, /) -> str: ...
    # Windows.Data.Json.JsonValue Windows.Data.Json.JsonObject::GetNamedValue(System.String)
    def get_named_value(self, name: str, /) -> JsonValue: ...
    # Windows.Data.Json.JsonValue Windows.Data.Json.JsonObject::GetNamedValue(System.String,Windows.Data.Json.JsonValue)
    def get_named_value_or_default(self, name: str, default_value: JsonValue, /) -> JsonValue: ...
    # System.Double Windows.Data.Json.JsonObject::GetNumber()
    def get_number(self) -> winrt.system.Double: ...
    # Windows.Data.Json.JsonObject Windows.Data.Json.JsonObject::GetObject()
    def get_object(self) -> JsonObject: ...
    # System.String Windows.Data.Json.JsonObject::GetString()
    def get_string(self) -> str: ...
    # Windows.Foundation.Collections.IMapView`2<System.String,Windows.Data.Json.IJsonValue> Windows.Data.Json.JsonObject::GetView()
    def get_view(self) -> typing.Mapping[str, IJsonValue]: ...
    # System.Boolean Windows.Data.Json.JsonObject::HasKey(System.String)
    def has_key(self, key: str, /) -> bool: ...
    # System.Boolean Windows.Data.Json.JsonObject::Insert(System.String,Windows.Data.Json.IJsonValue)
    def insert(self, key: str, value: ImplementsIJsonValue, /) -> bool: ...
    # Windows.Data.Json.IJsonValue Windows.Data.Json.JsonObject::Lookup(System.String)
    def lookup(self, key: str, /) -> IJsonValue: ...
    # System.Void Windows.Data.Json.JsonObject::Remove(System.String)
    def remove(self, key: str, /) -> None: ...
    # System.Void Windows.Data.Json.JsonObject::SetNamedValue(System.String,Windows.Data.Json.IJsonValue)
    def set_named_value(self, name: str, value: ImplementsIJsonValue, /) -> None: ...
    # System.String Windows.Data.Json.JsonObject::Stringify()
    def stringify(self) -> str: ...
    # System.String Windows.Data.Json.JsonObject::ToString()
    def to_string(self) -> str: ...
    # Windows.Data.Json.JsonValueType Windows.Data.Json.JsonObject::get_ValueType()
    @_property
    def value_type(self) -> JsonValueType: ...
    # System.UInt32 Windows.Data.Json.JsonObject::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class JsonValue_Static(type):
    # Windows.Data.Json.JsonValue Windows.Data.Json.JsonValue::CreateBooleanValue(System.Boolean)
    def create_boolean_value(cls, input: bool, /) -> JsonValue: ...
    # Windows.Data.Json.JsonValue Windows.Data.Json.JsonValue::CreateNullValue()
    def create_null_value(cls) -> JsonValue: ...
    # Windows.Data.Json.JsonValue Windows.Data.Json.JsonValue::CreateNumberValue(System.Double)
    def create_number_value(cls, input: winrt.system.Double, /) -> JsonValue: ...
    # Windows.Data.Json.JsonValue Windows.Data.Json.JsonValue::CreateStringValue(System.String)
    def create_string_value(cls, input: str, /) -> JsonValue: ...
    # Windows.Data.Json.JsonValue Windows.Data.Json.JsonValue::Parse(System.String)
    def parse(cls, input: str, /) -> JsonValue: ...
    # System.Boolean Windows.Data.Json.JsonValue::TryParse(System.String,Windows.Data.Json.JsonValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, JsonValue]: ...

@typing.final
class JsonValue(winrt.system.Object, windows_foundation.ImplementsIStringable, ImplementsIJsonValue, metaclass=JsonValue_Static):
    def __str__(self) -> str: ...
    # Windows.Data.Json.JsonArray Windows.Data.Json.JsonValue::GetArray()
    def get_array(self) -> JsonArray: ...
    # System.Boolean Windows.Data.Json.JsonValue::GetBoolean()
    def get_boolean(self) -> bool: ...
    # System.Double Windows.Data.Json.JsonValue::GetNumber()
    def get_number(self) -> winrt.system.Double: ...
    # Windows.Data.Json.JsonObject Windows.Data.Json.JsonValue::GetObject()
    def get_object(self) -> JsonObject: ...
    # System.String Windows.Data.Json.JsonValue::GetString()
    def get_string(self) -> str: ...
    # System.String Windows.Data.Json.JsonValue::Stringify()
    def stringify(self) -> str: ...
    # System.String Windows.Data.Json.JsonValue::ToString()
    def to_string(self) -> str: ...
    # Windows.Data.Json.JsonValueType Windows.Data.Json.JsonValue::get_ValueType()
    @_property
    def value_type(self) -> JsonValueType: ...

class ImplementsIJsonValue():
    pass

@typing.final
class IJsonValue(winrt.system.Object, ImplementsIJsonValue):
    # Windows.Data.Json.JsonArray Windows.Data.Json.IJsonValue::GetArray()
    def get_array(self) -> JsonArray: ...
    # System.Boolean Windows.Data.Json.IJsonValue::GetBoolean()
    def get_boolean(self) -> bool: ...
    # System.Double Windows.Data.Json.IJsonValue::GetNumber()
    def get_number(self) -> winrt.system.Double: ...
    # Windows.Data.Json.JsonObject Windows.Data.Json.IJsonValue::GetObject()
    def get_object(self) -> JsonObject: ...
    # System.String Windows.Data.Json.IJsonValue::GetString()
    def get_string(self) -> str: ...
    # System.String Windows.Data.Json.IJsonValue::Stringify()
    def stringify(self) -> str: ...
    # Windows.Data.Json.JsonValueType Windows.Data.Json.IJsonValue::get_ValueType()
    @_property
    def value_type(self) -> JsonValueType: ...

