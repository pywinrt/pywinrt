# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.foundation.numerics as windows_foundation_numerics
import winrt.windows.graphics.directx as windows_graphics_directx
import winrt.windows.ui.composition as windows_ui_composition

from winrt.windows.ui.composition.scenes import SceneAlphaMode, SceneAttributeSemantic, SceneComponentType, SceneWrappingMode

Self = typing.TypeVar('Self')

@typing.final
class SceneBoundingBox(SceneObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneBoundingBox: ...
    @_property
    def center(self) -> windows_foundation_numerics.Vector3: ...
    @_property
    def extents(self) -> windows_foundation_numerics.Vector3: ...
    @_property
    def max(self) -> windows_foundation_numerics.Vector3: ...
    @_property
    def min(self) -> windows_foundation_numerics.Vector3: ...
    @_property
    def size(self) -> windows_foundation_numerics.Vector3: ...

class SceneComponent_Static(SceneObject_Static):
    pass

class SceneComponent(SceneObject, metaclass=SceneComponent_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneComponent: ...
    @_property
    @typing.final
    def component_type(self) -> SceneComponentType: ...

@typing.final
class SceneComponentCollection(SceneObject, winrt._winrt.MutableSequence[SceneComponent]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[SceneComponent]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> SceneComponent: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[SceneComponent]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: SceneComponent) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[SceneComponent]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneComponentCollection: ...
    def append(self, value: SceneComponent, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[SceneComponent]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> SceneComponent: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[SceneComponent], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[SceneComponent]: ...
    def index_of(self, value: SceneComponent, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: SceneComponent, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[SceneComponent], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: SceneComponent, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

class SceneMaterial_Static(SceneObject_Static):
    pass

class SceneMaterial(SceneObject, metaclass=SceneMaterial_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneMaterial: ...

class SceneMaterialInput_Static(SceneObject_Static):
    pass

class SceneMaterialInput(SceneObject, metaclass=SceneMaterialInput_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneMaterialInput: ...

@typing.final
class SceneMesh_Static(SceneObject_Static):
    def create(cls, compositor: windows_ui_composition.Compositor, /) -> SceneMesh: ...

@typing.final
class SceneMesh(SceneObject, metaclass=SceneMesh_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneMesh: ...
    def fill_mesh_attribute(self, semantic: SceneAttributeSemantic, format: windows_graphics_directx.DirectXPixelFormat, memory: windows_foundation.MemoryBuffer, /) -> None: ...
    @_property
    def primitive_topology(self) -> windows_graphics_directx.DirectXPrimitiveTopology: ...
    @primitive_topology.setter
    def primitive_topology(self, value: windows_graphics_directx.DirectXPrimitiveTopology) -> None: ...
    @_property
    def bounds(self) -> SceneBoundingBox: ...

@typing.final
class SceneMeshMaterialAttributeMap(SceneObject, winrt._winrt.MutableMapping[str, SceneAttributeSemantic]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[str]: ...
    def __contains__(self, key: object) -> bool: ...
    def __getitem__(self, key: str) -> SceneAttributeSemantic: ...
    def __setitem__(self, key: str, value: SceneAttributeSemantic) -> None: ...
    def __delitem__(self, key: str) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneMeshMaterialAttributeMap: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[windows_foundation_collections.IKeyValuePair[str, SceneAttributeSemantic]]: ...
    def get_view(self) -> typing.Mapping[str, SceneAttributeSemantic]: ...
    def has_key(self, key: str, /) -> bool: ...
    def insert(self, key: str, value: SceneAttributeSemantic, /) -> bool: ...
    def lookup(self, key: str, /) -> SceneAttributeSemantic: ...
    def remove(self, key: str, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class SceneMeshRendererComponent_Static(SceneRendererComponent_Static):
    def create(cls, compositor: windows_ui_composition.Compositor, /) -> SceneMeshRendererComponent: ...

@typing.final
class SceneMeshRendererComponent(SceneRendererComponent, metaclass=SceneMeshRendererComponent_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneMeshRendererComponent: ...
    @_property
    def mesh(self) -> SceneMesh: ...
    @mesh.setter
    def mesh(self, value: SceneMesh) -> None: ...
    @_property
    def material(self) -> SceneMaterial: ...
    @material.setter
    def material(self, value: SceneMaterial) -> None: ...
    @_property
    def u_v_mappings(self) -> SceneMeshMaterialAttributeMap: ...

@typing.final
class SceneMetallicRoughnessMaterial_Static(ScenePbrMaterial_Static):
    def create(cls, compositor: windows_ui_composition.Compositor, /) -> SceneMetallicRoughnessMaterial: ...

@typing.final
class SceneMetallicRoughnessMaterial(ScenePbrMaterial, metaclass=SceneMetallicRoughnessMaterial_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneMetallicRoughnessMaterial: ...
    @_property
    def roughness_factor(self) -> winrt.system.Single: ...
    @roughness_factor.setter
    def roughness_factor(self, value: winrt.system.Single) -> None: ...
    @_property
    def metallic_roughness_input(self) -> SceneMaterialInput: ...
    @metallic_roughness_input.setter
    def metallic_roughness_input(self, value: SceneMaterialInput) -> None: ...
    @_property
    def metallic_factor(self) -> winrt.system.Single: ...
    @metallic_factor.setter
    def metallic_factor(self, value: winrt.system.Single) -> None: ...
    @_property
    def base_color_input(self) -> SceneMaterialInput: ...
    @base_color_input.setter
    def base_color_input(self, value: SceneMaterialInput) -> None: ...
    @_property
    def base_color_factor(self) -> windows_foundation_numerics.Vector4: ...
    @base_color_factor.setter
    def base_color_factor(self, value: windows_foundation_numerics.Vector4) -> None: ...

@typing.final
class SceneModelTransform(windows_ui_composition.CompositionTransform):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneModelTransform: ...
    @_property
    def translation(self) -> windows_foundation_numerics.Vector3: ...
    @translation.setter
    def translation(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def scale(self) -> windows_foundation_numerics.Vector3: ...
    @scale.setter
    def scale(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def rotation_axis(self) -> windows_foundation_numerics.Vector3: ...
    @rotation_axis.setter
    def rotation_axis(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def rotation_angle_in_degrees(self) -> winrt.system.Single: ...
    @rotation_angle_in_degrees.setter
    def rotation_angle_in_degrees(self, value: winrt.system.Single) -> None: ...
    @_property
    def rotation_angle(self) -> winrt.system.Single: ...
    @rotation_angle.setter
    def rotation_angle(self, value: winrt.system.Single) -> None: ...
    @_property
    def orientation(self) -> windows_foundation_numerics.Quaternion: ...
    @orientation.setter
    def orientation(self, value: windows_foundation_numerics.Quaternion) -> None: ...

@typing.final
class SceneNode_Static(SceneObject_Static):
    def create(cls, compositor: windows_ui_composition.Compositor, /) -> SceneNode: ...

@typing.final
class SceneNode(SceneObject, metaclass=SceneNode_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneNode: ...
    def find_first_component_of_type(self, value: SceneComponentType, /) -> SceneComponent: ...
    @_property
    def children(self) -> SceneNodeCollection: ...
    @_property
    def components(self) -> SceneComponentCollection: ...
    @_property
    def parent(self) -> SceneNode: ...
    @_property
    def transform(self) -> SceneModelTransform: ...

@typing.final
class SceneNodeCollection(SceneObject, winrt._winrt.MutableSequence[SceneNode]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[SceneNode]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> SceneNode: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[SceneNode]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: SceneNode) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[SceneNode]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneNodeCollection: ...
    def append(self, value: SceneNode, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[SceneNode]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> SceneNode: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[SceneNode], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[SceneNode]: ...
    def index_of(self, value: SceneNode, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: SceneNode, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[SceneNode], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: SceneNode, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

class SceneObject_Static(windows_ui_composition.CompositionObject_Static):
    pass

class SceneObject(windows_ui_composition.CompositionObject, metaclass=SceneObject_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneObject: ...

class ScenePbrMaterial_Static(SceneMaterial_Static):
    pass

class ScenePbrMaterial(SceneMaterial, metaclass=ScenePbrMaterial_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ScenePbrMaterial: ...
    @_property
    def occlusion_strength(self) -> winrt.system.Single: ...
    @occlusion_strength.setter
    @typing.final
    def occlusion_strength(self, value: winrt.system.Single) -> None: ...
    @_property
    def occlusion_input(self) -> SceneMaterialInput: ...
    @occlusion_input.setter
    @typing.final
    def occlusion_input(self, value: SceneMaterialInput) -> None: ...
    @_property
    def normal_scale(self) -> winrt.system.Single: ...
    @normal_scale.setter
    @typing.final
    def normal_scale(self, value: winrt.system.Single) -> None: ...
    @_property
    def normal_input(self) -> SceneMaterialInput: ...
    @normal_input.setter
    @typing.final
    def normal_input(self, value: SceneMaterialInput) -> None: ...
    @_property
    def is_double_sided(self) -> bool: ...
    @is_double_sided.setter
    @typing.final
    def is_double_sided(self, value: bool) -> None: ...
    @_property
    def emissive_input(self) -> SceneMaterialInput: ...
    @emissive_input.setter
    @typing.final
    def emissive_input(self, value: SceneMaterialInput) -> None: ...
    @_property
    def emissive_factor(self) -> windows_foundation_numerics.Vector3: ...
    @emissive_factor.setter
    @typing.final
    def emissive_factor(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def alpha_mode(self) -> SceneAlphaMode: ...
    @alpha_mode.setter
    @typing.final
    def alpha_mode(self, value: SceneAlphaMode) -> None: ...
    @_property
    def alpha_cutoff(self) -> winrt.system.Single: ...
    @alpha_cutoff.setter
    @typing.final
    def alpha_cutoff(self, value: winrt.system.Single) -> None: ...

class SceneRendererComponent_Static(SceneComponent_Static):
    pass

class SceneRendererComponent(SceneComponent, metaclass=SceneRendererComponent_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneRendererComponent: ...

@typing.final
class SceneSurfaceMaterialInput_Static(SceneMaterialInput_Static):
    def create(cls, compositor: windows_ui_composition.Compositor, /) -> SceneSurfaceMaterialInput: ...

@typing.final
class SceneSurfaceMaterialInput(SceneMaterialInput, metaclass=SceneSurfaceMaterialInput_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneSurfaceMaterialInput: ...
    @_property
    def wrapping_v_mode(self) -> SceneWrappingMode: ...
    @wrapping_v_mode.setter
    def wrapping_v_mode(self, value: SceneWrappingMode) -> None: ...
    @_property
    def wrapping_u_mode(self) -> SceneWrappingMode: ...
    @wrapping_u_mode.setter
    def wrapping_u_mode(self, value: SceneWrappingMode) -> None: ...
    @_property
    def surface(self) -> windows_ui_composition.ICompositionSurface: ...
    @surface.setter
    def surface(self, value: windows_ui_composition.ImplementsICompositionSurface) -> None: ...
    @_property
    def bitmap_interpolation_mode(self) -> windows_ui_composition.CompositionBitmapInterpolationMode: ...
    @bitmap_interpolation_mode.setter
    def bitmap_interpolation_mode(self, value: windows_ui_composition.CompositionBitmapInterpolationMode) -> None: ...

@typing.final
class SceneVisual_Static(windows_ui_composition.ContainerVisual_Static):
    def create(cls, compositor: windows_ui_composition.Compositor, /) -> SceneVisual: ...

@typing.final
class SceneVisual(windows_ui_composition.ContainerVisual, metaclass=SceneVisual_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SceneVisual: ...
    @_property
    def root(self) -> SceneNode: ...
    @root.setter
    def root(self, value: SceneNode) -> None: ...

