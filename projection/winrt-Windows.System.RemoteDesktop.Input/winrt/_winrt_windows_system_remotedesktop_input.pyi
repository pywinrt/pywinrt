# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system

from winrt.windows.system.remotedesktop.input import RemoteTextConnectionDataHandler

Self = typing.TypeVar('Self')

@typing.final
class RemoteTextConnection(winrt.system.Object):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RemoteTextConnection: ...
    def __new__(cls: typing.Type[RemoteTextConnection], connection_id: _uuid.UUID, pdu_forwarder: typing.Optional[RemoteTextConnectionDataHandler]) -> RemoteTextConnection:...
    def close(self) -> None: ...
    def register_thread(self, thread_id: winrt.system.UInt32, /) -> None: ...
    def report_data_received(self, pdu_data: winrt.system.Array[winrt.system.UInt8], /) -> None: ...
    def unregister_thread(self, thread_id: winrt.system.UInt32, /) -> None: ...
    @_property
    def is_enabled(self) -> bool: ...
    @is_enabled.setter
    def is_enabled(self, value: bool) -> None: ...

