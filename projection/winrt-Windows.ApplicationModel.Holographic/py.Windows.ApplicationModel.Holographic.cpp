// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

#include "py.Windows.ApplicationModel.Holographic.h"


namespace py::cpp::Windows::ApplicationModel::Holographic
{
    // ----- HolographicKeyboard class --------------------

    static PyObject* _new_HolographicKeyboard(PyTypeObject* /*unused*/, PyObject* /*unused*/, PyObject* /*unused*/) noexcept
    {
        static_assert(py::py_type<winrt::Windows::ApplicationModel::Holographic::HolographicKeyboard>::type_name);
        py::set_invalid_activation_error(py::py_type<winrt::Windows::ApplicationModel::Holographic::HolographicKeyboard>::type_name);
        return nullptr;
    }

    static void _dealloc_HolographicKeyboard(py::wrapper::Windows::ApplicationModel::Holographic::HolographicKeyboard* self) noexcept
    {
        auto tp = Py_TYPE(self);
        std::destroy_at(&self->obj);
        tp->tp_free(self);
        Py_DECREF(tp);
    }

    static PyObject* HolographicKeyboard_GetDefault(PyObject* /*unused*/, PyObject* args) noexcept
    {
        auto arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            if (!winrt::Windows::Foundation::Metadata::ApiInformation::IsMethodPresent(L"Windows.ApplicationModel.Holographic.HolographicKeyboard", L"GetDefault", 0))
            {
                py::set_arg_count_version_error(0);
                return nullptr;
            }

            try
            {
                return py::convert(winrt::Windows::ApplicationModel::Holographic::HolographicKeyboard::GetDefault());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* HolographicKeyboard_ResetPlacementOverride(py::wrapper::Windows::ApplicationModel::Holographic::HolographicKeyboard* self, PyObject* args) noexcept
    {
        auto arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            if (!winrt::Windows::Foundation::Metadata::ApiInformation::IsMethodPresent(L"Windows.ApplicationModel.Holographic.HolographicKeyboard", L"ResetPlacementOverride", 0))
            {
                py::set_arg_count_version_error(0);
                return nullptr;
            }

            try
            {
                self->obj.ResetPlacementOverride();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* HolographicKeyboard_SetPlacementOverride(py::wrapper::Windows::ApplicationModel::Holographic::HolographicKeyboard* self, PyObject* args) noexcept
    {
        auto arg_count = PyTuple_Size(args);

        if (arg_count == 3)
        {
            if (!winrt::Windows::Foundation::Metadata::ApiInformation::IsMethodPresent(L"Windows.ApplicationModel.Holographic.HolographicKeyboard", L"SetPlacementOverride", 3))
            {
                py::set_arg_count_version_error(3);
                return nullptr;
            }

            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::Spatial::SpatialCoordinateSystem>(args, 0);
                auto param1 = py::convert_to<winrt::Windows::Foundation::Numerics::float3>(args, 1);
                auto param2 = py::convert_to<winrt::Windows::Foundation::Numerics::quaternion>(args, 2);

                self->obj.SetPlacementOverride(param0, param1, param2);
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else if (arg_count == 4)
        {
            if (!winrt::Windows::Foundation::Metadata::ApiInformation::IsMethodPresent(L"Windows.ApplicationModel.Holographic.HolographicKeyboard", L"SetPlacementOverride", 4))
            {
                py::set_arg_count_version_error(4);
                return nullptr;
            }

            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::Spatial::SpatialCoordinateSystem>(args, 0);
                auto param1 = py::convert_to<winrt::Windows::Foundation::Numerics::float3>(args, 1);
                auto param2 = py::convert_to<winrt::Windows::Foundation::Numerics::quaternion>(args, 2);
                auto param3 = py::convert_to<winrt::Windows::Foundation::Numerics::float2>(args, 3);

                self->obj.SetPlacementOverride(param0, param1, param2, param3);
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* _assign_array_HolographicKeyboard(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        auto array = std::make_unique<py::ComArray<winrt::Windows::ApplicationModel::Holographic::HolographicKeyboard>>();
        if (!py::cpp::_winrt::Array_Assign(arg, std::move(array)))
        {
            return nullptr;
        }
        Py_RETURN_NONE;
    }

    static PyObject* _from_HolographicKeyboard(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Holographic::HolographicKeyboard>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_HolographicKeyboard[] = {
        { "reset_placement_override", reinterpret_cast<PyCFunction>(HolographicKeyboard_ResetPlacementOverride), METH_VARARGS, nullptr },
        { "set_placement_override", reinterpret_cast<PyCFunction>(HolographicKeyboard_SetPlacementOverride), METH_VARARGS, nullptr },
        { "_assign_array_", _assign_array_HolographicKeyboard, METH_O | METH_STATIC, nullptr },
        { "_from", reinterpret_cast<PyCFunction>(_from_HolographicKeyboard), METH_O | METH_STATIC, nullptr },
        { }
    };

    static PyGetSetDef _getset_HolographicKeyboard[] = {
        { }
    };

    static PyType_Slot _type_slots_HolographicKeyboard[] = 
    {
        { Py_tp_new, reinterpret_cast<void*>(_new_HolographicKeyboard) },
        { Py_tp_dealloc, reinterpret_cast<void*>(_dealloc_HolographicKeyboard) },
        { Py_tp_methods, reinterpret_cast<void*>(_methods_HolographicKeyboard) },
        { Py_tp_getset, reinterpret_cast<void*>(_getset_HolographicKeyboard) },
        { },
    };

    static PyType_Spec type_spec_HolographicKeyboard =
    {
        "winrt._winrt_windows_applicationmodel_holographic.HolographicKeyboard",
        sizeof(py::wrapper::Windows::ApplicationModel::Holographic::HolographicKeyboard),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_HolographicKeyboard
    };

    static PyGetSetDef getset_HolographicKeyboard_Static[] = {
        { }
    };

    static PyMethodDef methods_HolographicKeyboard_Static[] = {
        { "get_default", reinterpret_cast<PyCFunction>(HolographicKeyboard_GetDefault), METH_VARARGS, nullptr },
        { }
    };

    static PyType_Slot type_slots_HolographicKeyboard_Static[] = 
    {
        { Py_tp_base, reinterpret_cast<void*>(&PyType_Type) },
        { Py_tp_getset, reinterpret_cast<void*>(getset_HolographicKeyboard_Static) },
        { Py_tp_methods, reinterpret_cast<void*>(methods_HolographicKeyboard_Static) },
        { }
    };

    static PyType_Spec type_spec_HolographicKeyboard_Static =
    {
        "winrt._winrt_windows_applicationmodel_holographic.HolographicKeyboard_Static",
        static_cast<int>(PyType_Type.tp_basicsize),
        static_cast<int>(PyType_Type.tp_itemsize),
        Py_TPFLAGS_DEFAULT,
        type_slots_HolographicKeyboard_Static
    };

    // ----- Windows.ApplicationModel.Holographic Initialization --------------------
    PyDoc_STRVAR(module_doc, "Windows::ApplicationModel::Holographic");


    static PyModuleDef module_def
        = {PyModuleDef_HEAD_INIT,
           "_winrt_windows_applicationmodel_holographic",
           module_doc,
           0,
           nullptr,
           nullptr,
           nullptr,
           nullptr,
           nullptr};

} // py::cpp::Windows::ApplicationModel::Holographic

PyMODINIT_FUNC PyInit__winrt_windows_applicationmodel_holographic(void) noexcept
{
    using namespace py::cpp::Windows::ApplicationModel::Holographic;

    if (py::import_winrt_runtime() == -1)
    {
        return nullptr;
    }

    py::pyobj_handle module{PyModule_Create(&module_def)};

    if (!module)
    {
        return nullptr;
    }

    auto object_type = py::get_object_type();
    if (!object_type)
    {
        return nullptr;
    }

    py::pyobj_handle object_bases{PyTuple_Pack(1, object_type)};

    if (!object_bases)
    {
        return nullptr;
    }

    py::pyobj_handle type_HolographicKeyboard_Static{PyType_FromSpec(&type_spec_HolographicKeyboard_Static)};
    if (!type_HolographicKeyboard_Static)
    {
        return nullptr;
    }

    if (py::register_python_type(module.get(), &type_spec_HolographicKeyboard, object_bases.get(), reinterpret_cast<PyTypeObject*>(type_HolographicKeyboard_Static.get())) == -1)
    {
        return nullptr;
    }


    return module.detach();
}
