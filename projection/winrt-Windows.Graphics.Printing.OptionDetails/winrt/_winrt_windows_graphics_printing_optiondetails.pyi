# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.graphics.printing
import winrt.windows.storage.streams

from winrt.windows.graphics.printing.optiondetails import PrintOptionStates, PrintOptionType

Self = typing.TypeVar('Self')

@typing.final
class PrintBindingOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintBindingOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...
    @_property
    def items(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.system.Object]]: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class PrintBorderingOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintBorderingOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...
    @_property
    def items(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.system.Object]]: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class PrintCollationOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintCollationOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...
    @_property
    def items(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.system.Object]]: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class PrintColorModeOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintColorModeOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...
    @_property
    def items(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.system.Object]]: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class PrintCopiesOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintCopiesOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...
    @_property
    def max_value(self) -> winrt.system.UInt32: ...
    @_property
    def min_value(self) -> winrt.system.UInt32: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class PrintCustomItemDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintCustomItemDetails: ...
    @_property
    def item_display_name(self) -> str: ...
    @item_display_name.setter
    def item_display_name(self, value: str) -> None: ...
    @_property
    def item_id(self) -> str: ...

@typing.final
class PrintCustomItemListOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintCustomItemListOptionDetails: ...
    @typing.overload
    def add_item(self, item_id: str, display_name: str, /) -> None: ...
    @typing.overload
    def add_item(self, item_id: str, display_name: str, description: str, icon: typing.Optional[winrt.windows.storage.streams.IRandomAccessStreamWithContentType], /) -> None: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...
    @_property
    def display_name(self) -> str: ...
    @display_name.setter
    def display_name(self, value: str) -> None: ...
    @_property
    def items(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.system.Object]]: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class PrintCustomTextOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintCustomTextOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def display_name(self) -> str: ...
    @display_name.setter
    def display_name(self, value: str) -> None: ...
    @_property
    def max_characters(self) -> winrt.system.UInt32: ...
    @max_characters.setter
    def max_characters(self, value: winrt.system.UInt32) -> None: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class PrintCustomToggleOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintCustomToggleOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def display_name(self) -> str: ...
    @display_name.setter
    def display_name(self, value: str) -> None: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class PrintDuplexOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintDuplexOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...
    @_property
    def items(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.system.Object]]: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class PrintHolePunchOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintHolePunchOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...
    @_property
    def items(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.system.Object]]: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class PrintMediaSizeOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintMediaSizeOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def items(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.system.Object]]: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class PrintMediaTypeOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintMediaTypeOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def items(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.system.Object]]: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class PrintOrientationOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintOrientationOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def items(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.system.Object]]: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...

@typing.final
class PrintPageRangeOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintPageRangeOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...

@typing.final
class PrintQualityOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintQualityOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def items(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.system.Object]]: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...

@typing.final
class PrintStapleOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintStapleOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def items(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.system.Object]]: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...
    @_property
    def warning_text(self) -> str: ...
    @warning_text.setter
    def warning_text(self, value: str) -> None: ...
    @_property
    def description(self) -> str: ...
    @description.setter
    def description(self, value: str) -> None: ...

@typing.final
class PrintTaskOptionChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintTaskOptionChangedEventArgs: ...
    @_property
    def option_id(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class PrintTaskOptionDetails_Static(type):
    def get_from_print_task_options(cls, print_task_options: typing.Optional[winrt.windows.graphics.printing.PrintTaskOptions], /) -> typing.Optional[PrintTaskOptionDetails]: ...

@typing.final
class PrintTaskOptionDetails(winrt.system.Object, metaclass=PrintTaskOptionDetails_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintTaskOptionDetails: ...
    def create_item_list_option(self, option_id: str, display_name: str, /) -> typing.Optional[PrintCustomItemListOptionDetails]: ...
    def create_text_option(self, option_id: str, display_name: str, /) -> typing.Optional[PrintCustomTextOptionDetails]: ...
    def create_toggle_option(self, option_id: str, display_name: str, /) -> typing.Optional[PrintCustomToggleOptionDetails]: ...
    def get_page_description(self, job_page_number: winrt.system.UInt32, /) -> winrt.windows.graphics.printing.PrintPageDescription: ...
    def add_begin_validation(self, event_handler: winrt.windows.foundation.TypedEventHandler[PrintTaskOptionDetails, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_begin_validation(self, event_cookie: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_option_changed(self, event_handler: winrt.windows.foundation.TypedEventHandler[PrintTaskOptionDetails, PrintTaskOptionChangedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_option_changed(self, event_cookie: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def displayed_options(self) -> typing.Optional[winrt.windows.foundation.collections.IVector[str]]: ...
    @_property
    def options(self) -> typing.Optional[winrt.windows.foundation.collections.IMapView[str, IPrintOptionDetails]]: ...

@typing.final
class IPrintCustomOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IPrintCustomOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def display_name(self) -> str: ...
    @display_name.setter
    def display_name(self, value: str) -> None: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class IPrintItemListOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IPrintItemListOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def items(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.system.Object]]: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class IPrintNumberOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IPrintNumberOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def max_value(self) -> winrt.system.UInt32: ...
    @_property
    def min_value(self) -> winrt.system.UInt32: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class IPrintOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IPrintOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class IPrintTextOptionDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IPrintTextOptionDetails: ...
    def try_set_value(self, value: typing.Optional[winrt.system.Object], /) -> bool: ...
    @_property
    def max_characters(self) -> winrt.system.UInt32: ...
    @_property
    def error_text(self) -> str: ...
    @error_text.setter
    def error_text(self, value: str) -> None: ...
    @_property
    def option_id(self) -> str: ...
    @_property
    def option_type(self) -> PrintOptionType: ...
    @_property
    def state(self) -> PrintOptionStates: ...
    @state.setter
    def state(self, value: PrintOptionStates) -> None: ...
    @_property
    def value(self) -> typing.Optional[winrt.system.Object]: ...

