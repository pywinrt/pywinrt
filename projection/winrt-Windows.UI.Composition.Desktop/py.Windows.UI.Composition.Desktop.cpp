// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

#include "py.Windows.UI.Composition.Desktop.h"


namespace py::cpp::Windows::UI::Composition::Desktop
{
    // ----- DesktopWindowTarget class --------------------

    static PyObject* _new_DesktopWindowTarget(PyTypeObject* /*unused*/, PyObject* /*unused*/, PyObject* /*unused*/) noexcept
    {
        static_assert(py::py_type<winrt::Windows::UI::Composition::Desktop::DesktopWindowTarget>::type_name);
        py::set_invalid_activation_error(py::py_type<winrt::Windows::UI::Composition::Desktop::DesktopWindowTarget>::type_name);
        return nullptr;
    }

    static void _dealloc_DesktopWindowTarget(py::wrapper::Windows::UI::Composition::Desktop::DesktopWindowTarget* self) noexcept
    {
        auto tp = Py_TYPE(self);
        std::destroy_at(&self->obj);
        tp->tp_free(self);
        Py_DECREF(tp);
    }

    static PyObject* DesktopWindowTarget_get_IsTopmost(py::wrapper::Windows::UI::Composition::Desktop::DesktopWindowTarget* self, void* /*unused*/) noexcept
    {
        if (!winrt::Windows::Foundation::Metadata::ApiInformation::IsPropertyPresent(L"Windows.UI.Composition.Desktop.DesktopWindowTarget", L"IsTopmost"))
        {
            PyErr_SetString(PyExc_AttributeError, "property is not available in this version of Windows");
            return nullptr;
        }

        try
        {
            return py::convert(self->obj.IsTopmost());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _assign_array_DesktopWindowTarget(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        auto array = std::make_unique<py::ComArray<winrt::Windows::UI::Composition::Desktop::DesktopWindowTarget>>();
        if (!py::cpp::_winrt::Array_Assign(arg, std::move(array)))
        {
            return nullptr;
        }
        Py_RETURN_NONE;
    }

    static PyObject* _from_DesktopWindowTarget(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Composition::Desktop::DesktopWindowTarget>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_DesktopWindowTarget[] = {
        { "_assign_array_", _assign_array_DesktopWindowTarget, METH_O | METH_STATIC, nullptr },
        { "_from", reinterpret_cast<PyCFunction>(_from_DesktopWindowTarget), METH_O | METH_STATIC, nullptr },
        { }
    };

    static PyGetSetDef _getset_DesktopWindowTarget[] = {
        { "is_topmost", reinterpret_cast<getter>(DesktopWindowTarget_get_IsTopmost), nullptr, nullptr, nullptr },
        { }
    };

    static PyType_Slot _type_slots_DesktopWindowTarget[] = 
    {
        { Py_tp_new, reinterpret_cast<void*>(_new_DesktopWindowTarget) },
        { Py_tp_dealloc, reinterpret_cast<void*>(_dealloc_DesktopWindowTarget) },
        { Py_tp_methods, reinterpret_cast<void*>(_methods_DesktopWindowTarget) },
        { Py_tp_getset, reinterpret_cast<void*>(_getset_DesktopWindowTarget) },
        { },
    };

    static PyType_Spec type_spec_DesktopWindowTarget =
    {
        "winrt._winrt_windows_ui_composition_desktop.DesktopWindowTarget",
        sizeof(py::wrapper::Windows::UI::Composition::Desktop::DesktopWindowTarget),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_DesktopWindowTarget
    };

    // ----- Windows.UI.Composition.Desktop Initialization --------------------
    PyDoc_STRVAR(module_doc, "Windows::UI::Composition::Desktop");


    static PyModuleDef module_def
        = {PyModuleDef_HEAD_INIT,
           "_winrt_windows_ui_composition_desktop",
           module_doc,
           0,
           nullptr,
           nullptr,
           nullptr,
           nullptr,
           nullptr};

} // py::cpp::Windows::UI::Composition::Desktop

PyMODINIT_FUNC PyInit__winrt_windows_ui_composition_desktop(void) noexcept
{
    using namespace py::cpp::Windows::UI::Composition::Desktop;

    if (py::import_winrt_runtime() == -1)
    {
        return nullptr;
    }

    py::pyobj_handle module{PyModule_Create(&module_def)};

    if (!module)
    {
        return nullptr;
    }

    auto object_type = py::get_object_type();
    if (!object_type)
    {
        return nullptr;
    }

    py::pyobj_handle object_bases{PyTuple_Pack(1, object_type)};

    if (!object_bases)
    {
        return nullptr;
    }

    if (py::register_python_type(module.get(), &type_spec_DesktopWindowTarget, object_bases.get(), nullptr) == -1)
    {
        return nullptr;
    }


    return module.detach();
}
