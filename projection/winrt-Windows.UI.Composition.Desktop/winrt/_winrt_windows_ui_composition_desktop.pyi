# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.system as windows_system
import winrt.windows.ui.composition as windows_ui_composition
import winrt.windows.ui.core as windows_ui_core

Self = typing.TypeVar('Self')

@typing.final
class DesktopWindowTarget(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DesktopWindowTarget: ...
    def close(self) -> None: ...
    def populate_property_info(self, property_name: str, property_info: windows_ui_composition.AnimationPropertyInfo, /) -> None: ...
    def start_animation(self, property_name: str, animation: windows_ui_composition.CompositionAnimation, /) -> None: ...
    def start_animation_group(self, value: windows_ui_composition.ICompositionAnimationBase, /) -> None: ...
    def start_animation_with_controller(self, property_name: str, animation: windows_ui_composition.CompositionAnimation, animation_controller: windows_ui_composition.AnimationController, /) -> None: ...
    def stop_animation(self, property_name: str, /) -> None: ...
    def stop_animation_group(self, value: windows_ui_composition.ICompositionAnimationBase, /) -> None: ...
    def try_get_animation_controller(self, property_name: str, /) -> windows_ui_composition.AnimationController: ...
    @_property
    def is_topmost(self) -> bool: ...
    @_property
    def root(self) -> windows_ui_composition.Visual: ...
    @root.setter
    def root(self, value: windows_ui_composition.Visual) -> None: ...
    @_property
    def compositor(self) -> windows_ui_composition.Compositor: ...
    @_property
    def dispatcher(self) -> windows_ui_core.CoreDispatcher: ...
    @_property
    def properties(self) -> windows_ui_composition.CompositionPropertySet: ...
    @_property
    def implicit_animations(self) -> windows_ui_composition.ImplicitAnimationCollection: ...
    @implicit_animations.setter
    def implicit_animations(self, value: windows_ui_composition.ImplicitAnimationCollection) -> None: ...
    @_property
    def comment(self) -> str: ...
    @comment.setter
    def comment(self, value: str) -> None: ...
    @_property
    def dispatcher_queue(self) -> windows_system.DispatcherQueue: ...

