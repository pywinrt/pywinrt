# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.gaming.input as windows_gaming_input

from winrt.windows.ui.input.preview.injection import InjectedInputButtonChangeKind, InjectedInputKeyOptions, InjectedInputMouseOptions, InjectedInputPenButtons, InjectedInputPenParameters, InjectedInputPointerOptions, InjectedInputShortcut, InjectedInputTouchParameters, InjectedInputVisualizationMode

Self = typing.TypeVar('Self')

@typing.final
class InjectedInputPoint:
    position_x: winrt.system.Int32
    position_y: winrt.system.Int32
    def __init__(self, position_x: winrt.system.Int32 = 0, position_y: winrt.system.Int32 = 0) -> None: ...

@typing.final
class InjectedInputPointerInfo:
    pointer_id: winrt.system.UInt32
    pointer_options: InjectedInputPointerOptions
    pixel_location: InjectedInputPoint
    time_offset_in_milliseconds: winrt.system.UInt32
    performance_count: winrt.system.UInt64
    def __init__(self, pointer_id: winrt.system.UInt32 = 0, pointer_options: InjectedInputPointerOptions = InjectedInputPointerOptions(0), pixel_location: InjectedInputPoint = InjectedInputPoint(), time_offset_in_milliseconds: winrt.system.UInt32 = 0, performance_count: winrt.system.UInt64 = 0) -> None: ...

@typing.final
class InjectedInputRectangle:
    left: winrt.system.Int32
    top: winrt.system.Int32
    bottom: winrt.system.Int32
    right: winrt.system.Int32
    def __init__(self, left: winrt.system.Int32 = 0, top: winrt.system.Int32 = 0, bottom: winrt.system.Int32 = 0, right: winrt.system.Int32 = 0) -> None: ...

@typing.final
class InjectedInputGamepadInfo(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], reading: windows_gaming_input.GamepadReading) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo::get_RightTrigger()
    @_property
    def right_trigger(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo::put_RightTrigger(System.Double)
    @right_trigger.setter
    def right_trigger(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo::get_RightThumbstickY()
    @_property
    def right_thumbstick_y(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo::put_RightThumbstickY(System.Double)
    @right_thumbstick_y.setter
    def right_thumbstick_y(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo::get_RightThumbstickX()
    @_property
    def right_thumbstick_x(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo::put_RightThumbstickX(System.Double)
    @right_thumbstick_x.setter
    def right_thumbstick_x(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo::get_LeftTrigger()
    @_property
    def left_trigger(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo::put_LeftTrigger(System.Double)
    @left_trigger.setter
    def left_trigger(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo::get_LeftThumbstickY()
    @_property
    def left_thumbstick_y(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo::put_LeftThumbstickY(System.Double)
    @left_thumbstick_y.setter
    def left_thumbstick_y(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo::get_LeftThumbstickX()
    @_property
    def left_thumbstick_x(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo::put_LeftThumbstickX(System.Double)
    @left_thumbstick_x.setter
    def left_thumbstick_x(self, value: winrt.system.Double) -> None: ...
    # Windows.Gaming.Input.GamepadButtons Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo::get_Buttons()
    @_property
    def buttons(self) -> windows_gaming_input.GamepadButtons: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo::put_Buttons(Windows.Gaming.Input.GamepadButtons)
    @buttons.setter
    def buttons(self, value: windows_gaming_input.GamepadButtons) -> None: ...

@typing.final
class InjectedInputKeyboardInfo(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.UInt16 Windows.UI.Input.Preview.Injection.InjectedInputKeyboardInfo::get_VirtualKey()
    @_property
    def virtual_key(self) -> winrt.system.UInt16: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputKeyboardInfo::put_VirtualKey(System.UInt16)
    @virtual_key.setter
    def virtual_key(self, value: winrt.system.UInt16) -> None: ...
    # System.UInt16 Windows.UI.Input.Preview.Injection.InjectedInputKeyboardInfo::get_ScanCode()
    @_property
    def scan_code(self) -> winrt.system.UInt16: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputKeyboardInfo::put_ScanCode(System.UInt16)
    @scan_code.setter
    def scan_code(self, value: winrt.system.UInt16) -> None: ...
    # Windows.UI.Input.Preview.Injection.InjectedInputKeyOptions Windows.UI.Input.Preview.Injection.InjectedInputKeyboardInfo::get_KeyOptions()
    @_property
    def key_options(self) -> InjectedInputKeyOptions: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputKeyboardInfo::put_KeyOptions(Windows.UI.Input.Preview.Injection.InjectedInputKeyOptions)
    @key_options.setter
    def key_options(self, value: InjectedInputKeyOptions) -> None: ...

@typing.final
class InjectedInputMouseInfo(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.UInt32 Windows.UI.Input.Preview.Injection.InjectedInputMouseInfo::get_TimeOffsetInMilliseconds()
    @_property
    def time_offset_in_milliseconds(self) -> winrt.system.UInt32: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputMouseInfo::put_TimeOffsetInMilliseconds(System.UInt32)
    @time_offset_in_milliseconds.setter
    def time_offset_in_milliseconds(self, value: winrt.system.UInt32) -> None: ...
    # Windows.UI.Input.Preview.Injection.InjectedInputMouseOptions Windows.UI.Input.Preview.Injection.InjectedInputMouseInfo::get_MouseOptions()
    @_property
    def mouse_options(self) -> InjectedInputMouseOptions: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputMouseInfo::put_MouseOptions(Windows.UI.Input.Preview.Injection.InjectedInputMouseOptions)
    @mouse_options.setter
    def mouse_options(self, value: InjectedInputMouseOptions) -> None: ...
    # System.UInt32 Windows.UI.Input.Preview.Injection.InjectedInputMouseInfo::get_MouseData()
    @_property
    def mouse_data(self) -> winrt.system.UInt32: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputMouseInfo::put_MouseData(System.UInt32)
    @mouse_data.setter
    def mouse_data(self, value: winrt.system.UInt32) -> None: ...
    # System.Int32 Windows.UI.Input.Preview.Injection.InjectedInputMouseInfo::get_DeltaY()
    @_property
    def delta_y(self) -> winrt.system.Int32: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputMouseInfo::put_DeltaY(System.Int32)
    @delta_y.setter
    def delta_y(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Windows.UI.Input.Preview.Injection.InjectedInputMouseInfo::get_DeltaX()
    @_property
    def delta_x(self) -> winrt.system.Int32: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputMouseInfo::put_DeltaX(System.Int32)
    @delta_x.setter
    def delta_x(self, value: winrt.system.Int32) -> None: ...

@typing.final
class InjectedInputPenInfo(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Int32 Windows.UI.Input.Preview.Injection.InjectedInputPenInfo::get_TiltY()
    @_property
    def tilt_y(self) -> winrt.system.Int32: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputPenInfo::put_TiltY(System.Int32)
    @tilt_y.setter
    def tilt_y(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Windows.UI.Input.Preview.Injection.InjectedInputPenInfo::get_TiltX()
    @_property
    def tilt_x(self) -> winrt.system.Int32: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputPenInfo::put_TiltX(System.Int32)
    @tilt_x.setter
    def tilt_x(self, value: winrt.system.Int32) -> None: ...
    # System.Double Windows.UI.Input.Preview.Injection.InjectedInputPenInfo::get_Rotation()
    @_property
    def rotation(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputPenInfo::put_Rotation(System.Double)
    @rotation.setter
    def rotation(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Input.Preview.Injection.InjectedInputPenInfo::get_Pressure()
    @_property
    def pressure(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputPenInfo::put_Pressure(System.Double)
    @pressure.setter
    def pressure(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Input.Preview.Injection.InjectedInputPointerInfo Windows.UI.Input.Preview.Injection.InjectedInputPenInfo::get_PointerInfo()
    @_property
    def pointer_info(self) -> InjectedInputPointerInfo: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputPenInfo::put_PointerInfo(Windows.UI.Input.Preview.Injection.InjectedInputPointerInfo)
    @pointer_info.setter
    def pointer_info(self, value: InjectedInputPointerInfo) -> None: ...
    # Windows.UI.Input.Preview.Injection.InjectedInputPenParameters Windows.UI.Input.Preview.Injection.InjectedInputPenInfo::get_PenParameters()
    @_property
    def pen_parameters(self) -> InjectedInputPenParameters: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputPenInfo::put_PenParameters(Windows.UI.Input.Preview.Injection.InjectedInputPenParameters)
    @pen_parameters.setter
    def pen_parameters(self, value: InjectedInputPenParameters) -> None: ...
    # Windows.UI.Input.Preview.Injection.InjectedInputPenButtons Windows.UI.Input.Preview.Injection.InjectedInputPenInfo::get_PenButtons()
    @_property
    def pen_buttons(self) -> InjectedInputPenButtons: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputPenInfo::put_PenButtons(Windows.UI.Input.Preview.Injection.InjectedInputPenButtons)
    @pen_buttons.setter
    def pen_buttons(self, value: InjectedInputPenButtons) -> None: ...

@typing.final
class InjectedInputTouchInfo(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Input.Preview.Injection.InjectedInputTouchParameters Windows.UI.Input.Preview.Injection.InjectedInputTouchInfo::get_TouchParameters()
    @_property
    def touch_parameters(self) -> InjectedInputTouchParameters: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputTouchInfo::put_TouchParameters(Windows.UI.Input.Preview.Injection.InjectedInputTouchParameters)
    @touch_parameters.setter
    def touch_parameters(self, value: InjectedInputTouchParameters) -> None: ...
    # System.Double Windows.UI.Input.Preview.Injection.InjectedInputTouchInfo::get_Pressure()
    @_property
    def pressure(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputTouchInfo::put_Pressure(System.Double)
    @pressure.setter
    def pressure(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Input.Preview.Injection.InjectedInputPointerInfo Windows.UI.Input.Preview.Injection.InjectedInputTouchInfo::get_PointerInfo()
    @_property
    def pointer_info(self) -> InjectedInputPointerInfo: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputTouchInfo::put_PointerInfo(Windows.UI.Input.Preview.Injection.InjectedInputPointerInfo)
    @pointer_info.setter
    def pointer_info(self, value: InjectedInputPointerInfo) -> None: ...
    # System.Int32 Windows.UI.Input.Preview.Injection.InjectedInputTouchInfo::get_Orientation()
    @_property
    def orientation(self) -> winrt.system.Int32: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputTouchInfo::put_Orientation(System.Int32)
    @orientation.setter
    def orientation(self, value: winrt.system.Int32) -> None: ...
    # Windows.UI.Input.Preview.Injection.InjectedInputRectangle Windows.UI.Input.Preview.Injection.InjectedInputTouchInfo::get_Contact()
    @_property
    def contact(self) -> InjectedInputRectangle: ...
    # System.Void Windows.UI.Input.Preview.Injection.InjectedInputTouchInfo::put_Contact(Windows.UI.Input.Preview.Injection.InjectedInputRectangle)
    @contact.setter
    def contact(self, value: InjectedInputRectangle) -> None: ...

@typing.final
class InputInjector_Static(winrt._winrt.IInspectable_Static):
    # Windows.UI.Input.Preview.Injection.InputInjector Windows.UI.Input.Preview.Injection.InputInjector::TryCreate()
    def try_create(cls) -> typing.Optional[InputInjector]: ...
    # Windows.UI.Input.Preview.Injection.InputInjector Windows.UI.Input.Preview.Injection.InputInjector::TryCreateForAppBroadcastOnly()
    def try_create_for_app_broadcast_only(cls) -> typing.Optional[InputInjector]: ...

@typing.final
class InputInjector(winrt.system.Object, metaclass=InputInjector_Static):
    # System.Void Windows.UI.Input.Preview.Injection.InputInjector::InitializeGamepadInjection()
    def initialize_gamepad_injection(self) -> None: ...
    # System.Void Windows.UI.Input.Preview.Injection.InputInjector::InitializePenInjection(Windows.UI.Input.Preview.Injection.InjectedInputVisualizationMode)
    def initialize_pen_injection(self, visual_mode: InjectedInputVisualizationMode, /) -> None: ...
    # System.Void Windows.UI.Input.Preview.Injection.InputInjector::InitializeTouchInjection(Windows.UI.Input.Preview.Injection.InjectedInputVisualizationMode)
    def initialize_touch_injection(self, visual_mode: InjectedInputVisualizationMode, /) -> None: ...
    # System.Void Windows.UI.Input.Preview.Injection.InputInjector::InjectGamepadInput(Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo)
    def inject_gamepad_input(self, input: InjectedInputGamepadInfo, /) -> None: ...
    # System.Void Windows.UI.Input.Preview.Injection.InputInjector::InjectKeyboardInput(Windows.Foundation.Collections.IIterable`1<Windows.UI.Input.Preview.Injection.InjectedInputKeyboardInfo>)
    def inject_keyboard_input(self, input: typing.Iterable[InjectedInputKeyboardInfo], /) -> None: ...
    # System.Void Windows.UI.Input.Preview.Injection.InputInjector::InjectMouseInput(Windows.Foundation.Collections.IIterable`1<Windows.UI.Input.Preview.Injection.InjectedInputMouseInfo>)
    def inject_mouse_input(self, input: typing.Iterable[InjectedInputMouseInfo], /) -> None: ...
    # System.Void Windows.UI.Input.Preview.Injection.InputInjector::InjectPenInput(Windows.UI.Input.Preview.Injection.InjectedInputPenInfo)
    def inject_pen_input(self, input: InjectedInputPenInfo, /) -> None: ...
    # System.Void Windows.UI.Input.Preview.Injection.InputInjector::InjectShortcut(Windows.UI.Input.Preview.Injection.InjectedInputShortcut)
    def inject_shortcut(self, shortcut: InjectedInputShortcut, /) -> None: ...
    # System.Void Windows.UI.Input.Preview.Injection.InputInjector::InjectTouchInput(Windows.Foundation.Collections.IIterable`1<Windows.UI.Input.Preview.Injection.InjectedInputTouchInfo>)
    def inject_touch_input(self, input: typing.Iterable[InjectedInputTouchInfo], /) -> None: ...
    # System.Void Windows.UI.Input.Preview.Injection.InputInjector::UninitializeGamepadInjection()
    def uninitialize_gamepad_injection(self) -> None: ...
    # System.Void Windows.UI.Input.Preview.Injection.InputInjector::UninitializePenInjection()
    def uninitialize_pen_injection(self) -> None: ...
    # System.Void Windows.UI.Input.Preview.Injection.InputInjector::UninitializeTouchInjection()
    def uninitialize_touch_injection(self) -> None: ...

