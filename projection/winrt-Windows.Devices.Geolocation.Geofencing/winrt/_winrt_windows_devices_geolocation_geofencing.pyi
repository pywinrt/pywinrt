# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.devices.geolocation
import winrt.windows.foundation
import winrt.windows.foundation.collections

from winrt.windows.devices.geolocation.geofencing import GeofenceMonitorStatus, GeofenceRemovalReason, GeofenceState, MonitoredGeofenceStates

Self = typing.TypeVar('Self')

@typing.final
class Geofence(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Geofence: ...
    @typing.overload
    def __new__(cls: typing.Type[Geofence], id: str, geoshape: typing.Optional[winrt.windows.devices.geolocation.IGeoshape]) -> Geofence:...
    @typing.overload
    def __new__(cls: typing.Type[Geofence], id: str, geoshape: typing.Optional[winrt.windows.devices.geolocation.IGeoshape], monitored_states: MonitoredGeofenceStates, single_use: bool) -> Geofence:...
    @typing.overload
    def __new__(cls: typing.Type[Geofence], id: str, geoshape: typing.Optional[winrt.windows.devices.geolocation.IGeoshape], monitored_states: MonitoredGeofenceStates, single_use: bool, dwell_time: datetime.timedelta) -> Geofence:...
    @typing.overload
    def __new__(cls: typing.Type[Geofence], id: str, geoshape: typing.Optional[winrt.windows.devices.geolocation.IGeoshape], monitored_states: MonitoredGeofenceStates, single_use: bool, dwell_time: datetime.timedelta, start_time: datetime.datetime, duration: datetime.timedelta) -> Geofence:...
    @_property
    def duration(self) -> datetime.timedelta: ...
    @_property
    def dwell_time(self) -> datetime.timedelta: ...
    @_property
    def geoshape(self) -> typing.Optional[winrt.windows.devices.geolocation.IGeoshape]: ...
    @_property
    def id(self) -> str: ...
    @_property
    def monitored_states(self) -> MonitoredGeofenceStates: ...
    @_property
    def single_use(self) -> bool: ...
    @_property
    def start_time(self) -> datetime.datetime: ...

@typing.final
class GeofenceMonitor_Static(type):
    @_property
    def current(cls) -> typing.Optional[GeofenceMonitor]: ...

@typing.final
class GeofenceMonitor(winrt.system.Object, metaclass=GeofenceMonitor_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GeofenceMonitor: ...
    def read_reports(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[GeofenceStateChangeReport]]: ...
    def add_geofence_state_changed(self, event_handler: winrt.windows.foundation.TypedEventHandler[GeofenceMonitor, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_geofence_state_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_status_changed(self, event_handler: winrt.windows.foundation.TypedEventHandler[GeofenceMonitor, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_status_changed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def geofences(self) -> typing.Optional[winrt.windows.foundation.collections.IVector[Geofence]]: ...
    @_property
    def last_known_geoposition(self) -> typing.Optional[winrt.windows.devices.geolocation.Geoposition]: ...
    @_property
    def status(self) -> GeofenceMonitorStatus: ...

@typing.final
class GeofenceStateChangeReport(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GeofenceStateChangeReport: ...
    @_property
    def geofence(self) -> typing.Optional[Geofence]: ...
    @_property
    def geoposition(self) -> typing.Optional[winrt.windows.devices.geolocation.Geoposition]: ...
    @_property
    def new_state(self) -> GeofenceState: ...
    @_property
    def removal_reason(self) -> GeofenceRemovalReason: ...

