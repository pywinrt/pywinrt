# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.storage as windows_storage
import winrt.windows.storage.streams as windows_storage_streams

from winrt.windows.data.xml.dom import NodeType

Self = typing.TypeVar('Self')

@typing.final
class DtdEntity(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DtdEntity: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def normalize(self) -> None: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    @_property
    def notation_name(self) -> winrt.system.Object: ...
    @_property
    def public_id(self) -> winrt.system.Object: ...
    @_property
    def system_id(self) -> winrt.system.Object: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

@typing.final
class DtdNotation(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DtdNotation: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def normalize(self) -> None: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    @_property
    def public_id(self) -> winrt.system.Object: ...
    @_property
    def system_id(self) -> winrt.system.Object: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

@typing.final
class XmlAttribute(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XmlAttribute: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def normalize(self) -> None: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    @_property
    def value(self) -> str: ...
    @value.setter
    def value(self, value: str) -> None: ...
    @_property
    def specified(self) -> bool: ...
    @_property
    def name(self) -> str: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

@typing.final
class XmlCDataSection(IXmlText, IXmlCharacterData, IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XmlCDataSection: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def append_data(self, data: str, /) -> None: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def delete_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, /) -> None: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def insert_data(self, offset: winrt.system.UInt32, data: str, /) -> None: ...
    def normalize(self) -> None: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def replace_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, data: str, /) -> None: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    def split_text(self, offset: winrt.system.UInt32, /) -> IXmlText: ...
    def substring_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, /) -> str: ...
    @_property
    def data(self) -> str: ...
    @data.setter
    def data(self, value: str) -> None: ...
    @_property
    def length(self) -> winrt.system.UInt32: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

@typing.final
class XmlComment(IXmlCharacterData, IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XmlComment: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def append_data(self, data: str, /) -> None: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def delete_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, /) -> None: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def insert_data(self, offset: winrt.system.UInt32, data: str, /) -> None: ...
    def normalize(self) -> None: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def replace_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, data: str, /) -> None: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    def substring_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, /) -> str: ...
    @_property
    def data(self) -> str: ...
    @data.setter
    def data(self, value: str) -> None: ...
    @_property
    def length(self) -> winrt.system.UInt32: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

@typing.final
class XmlDocument_Static(type):
    def load_from_file_async(cls, file: windows_storage.IStorageFile, /) -> windows_foundation.IAsyncOperation[XmlDocument]: ...
    def load_from_file_with_settings_async(cls, file: windows_storage.IStorageFile, load_settings: XmlLoadSettings, /) -> windows_foundation.IAsyncOperation[XmlDocument]: ...
    def load_from_uri_async(cls, uri: windows_foundation.Uri, /) -> windows_foundation.IAsyncOperation[XmlDocument]: ...
    def load_from_uri_with_settings_async(cls, uri: windows_foundation.Uri, load_settings: XmlLoadSettings, /) -> windows_foundation.IAsyncOperation[XmlDocument]: ...

@typing.final
class XmlDocument(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object, metaclass=XmlDocument_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XmlDocument: ...
    def __new__(cls: typing.Type[XmlDocument]) -> XmlDocument: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def create_attribute(self, name: str, /) -> XmlAttribute: ...
    def create_attribute_ns(self, namespace_uri: winrt.system.Object, qualified_name: str, /) -> XmlAttribute: ...
    def create_c_data_section(self, data: str, /) -> XmlCDataSection: ...
    def create_comment(self, data: str, /) -> XmlComment: ...
    def create_document_fragment(self) -> XmlDocumentFragment: ...
    def create_element(self, tag_name: str, /) -> XmlElement: ...
    def create_element_ns(self, namespace_uri: winrt.system.Object, qualified_name: str, /) -> XmlElement: ...
    def create_entity_reference(self, name: str, /) -> XmlEntityReference: ...
    def create_processing_instruction(self, target: str, data: str, /) -> XmlProcessingInstruction: ...
    def create_text_node(self, data: str, /) -> XmlText: ...
    def get_element_by_id(self, element_id: str, /) -> XmlElement: ...
    def get_elements_by_tag_name(self, tag_name: str, /) -> XmlNodeList: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def import_node(self, node: IXmlNode, deep: bool, /) -> IXmlNode: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def load_xml(self, xml: str, /) -> None: ...
    def load_xml_from_buffer(self, buffer: windows_storage_streams.IBuffer, /) -> None: ...
    def load_xml_from_buffer_with_settings(self, buffer: windows_storage_streams.IBuffer, load_settings: XmlLoadSettings, /) -> None: ...
    def load_xml_with_settings(self, xml: str, load_settings: XmlLoadSettings, /) -> None: ...
    def normalize(self) -> None: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def save_to_file_async(self, file: windows_storage.IStorageFile, /) -> windows_foundation.IAsyncAction: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    @_property
    def doctype(self) -> XmlDocumentType: ...
    @_property
    def document_element(self) -> XmlElement: ...
    @_property
    def document_uri(self) -> str: ...
    @_property
    def implementation(self) -> XmlDomImplementation: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

@typing.final
class XmlDocumentFragment(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XmlDocumentFragment: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def normalize(self) -> None: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

@typing.final
class XmlDocumentType(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XmlDocumentType: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def normalize(self) -> None: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    @_property
    def entities(self) -> XmlNamedNodeMap: ...
    @_property
    def name(self) -> str: ...
    @_property
    def notations(self) -> XmlNamedNodeMap: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

@typing.final
class XmlDomImplementation(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XmlDomImplementation: ...
    def has_feature(self, feature: str, version: winrt.system.Object, /) -> bool: ...

@typing.final
class XmlElement(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XmlElement: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def get_attribute(self, attribute_name: str, /) -> str: ...
    def get_attribute_ns(self, namespace_uri: winrt.system.Object, local_name: str, /) -> str: ...
    def get_attribute_node(self, attribute_name: str, /) -> XmlAttribute: ...
    def get_attribute_node_ns(self, namespace_uri: winrt.system.Object, local_name: str, /) -> XmlAttribute: ...
    def get_elements_by_tag_name(self, tag_name: str, /) -> XmlNodeList: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def normalize(self) -> None: ...
    def remove_attribute(self, attribute_name: str, /) -> None: ...
    def remove_attribute_ns(self, namespace_uri: winrt.system.Object, local_name: str, /) -> None: ...
    def remove_attribute_node(self, attribute_node: XmlAttribute, /) -> XmlAttribute: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    def set_attribute(self, attribute_name: str, attribute_value: str, /) -> None: ...
    def set_attribute_ns(self, namespace_uri: winrt.system.Object, qualified_name: str, value: str, /) -> None: ...
    def set_attribute_node(self, new_attribute: XmlAttribute, /) -> XmlAttribute: ...
    def set_attribute_node_ns(self, new_attribute: XmlAttribute, /) -> XmlAttribute: ...
    @_property
    def tag_name(self) -> str: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

@typing.final
class XmlEntityReference(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XmlEntityReference: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def normalize(self) -> None: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

@typing.final
class XmlLoadSettings(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XmlLoadSettings: ...
    def __new__(cls: typing.Type[XmlLoadSettings]) -> XmlLoadSettings: ...
    @_property
    def validate_on_parse(self) -> bool: ...
    @validate_on_parse.setter
    def validate_on_parse(self, value: bool) -> None: ...
    @_property
    def resolve_externals(self) -> bool: ...
    @resolve_externals.setter
    def resolve_externals(self, value: bool) -> None: ...
    @_property
    def prohibit_dtd(self) -> bool: ...
    @prohibit_dtd.setter
    def prohibit_dtd(self, value: bool) -> None: ...
    @_property
    def max_element_depth(self) -> winrt.system.UInt32: ...
    @max_element_depth.setter
    def max_element_depth(self, value: winrt.system.UInt32) -> None: ...
    @_property
    def element_content_white_space(self) -> bool: ...
    @element_content_white_space.setter
    def element_content_white_space(self, value: bool) -> None: ...

@typing.final
class XmlNamedNodeMap(winrt.system.Object, winrt._winrt.Sequence[IXmlNode]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[IXmlNode]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> IXmlNode: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[IXmlNode]: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XmlNamedNodeMap: ...
    def first(self) -> windows_foundation_collections.IIterator[IXmlNode]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> IXmlNode: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[IXmlNode], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_named_item(self, name: str, /) -> IXmlNode: ...
    def get_named_item_ns(self, namespace_uri: winrt.system.Object, name: str, /) -> IXmlNode: ...
    def index_of(self, value: IXmlNode, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def item(self, index: winrt.system.UInt32, /) -> IXmlNode: ...
    def remove_named_item(self, name: str, /) -> IXmlNode: ...
    def remove_named_item_ns(self, namespace_uri: winrt.system.Object, name: str, /) -> IXmlNode: ...
    def set_named_item(self, node: IXmlNode, /) -> IXmlNode: ...
    def set_named_item_ns(self, node: IXmlNode, /) -> IXmlNode: ...
    @_property
    def length(self) -> winrt.system.UInt32: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class XmlNodeList(winrt.system.Object, winrt._winrt.Sequence[IXmlNode]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[IXmlNode]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> IXmlNode: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[IXmlNode]: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XmlNodeList: ...
    def first(self) -> windows_foundation_collections.IIterator[IXmlNode]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> IXmlNode: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[IXmlNode], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def index_of(self, value: IXmlNode, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def item(self, index: winrt.system.UInt32, /) -> IXmlNode: ...
    @_property
    def length(self) -> winrt.system.UInt32: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class XmlProcessingInstruction(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XmlProcessingInstruction: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def normalize(self) -> None: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...
    @_property
    def data(self) -> str: ...
    @data.setter
    def data(self, value: str) -> None: ...
    @_property
    def target(self) -> str: ...

@typing.final
class XmlText(IXmlText, IXmlCharacterData, IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> XmlText: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def append_data(self, data: str, /) -> None: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def delete_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, /) -> None: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def insert_data(self, offset: winrt.system.UInt32, data: str, /) -> None: ...
    def normalize(self) -> None: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def replace_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, data: str, /) -> None: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    def split_text(self, offset: winrt.system.UInt32, /) -> IXmlText: ...
    def substring_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, /) -> str: ...
    @_property
    def data(self) -> str: ...
    @data.setter
    def data(self, value: str) -> None: ...
    @_property
    def length(self) -> winrt.system.UInt32: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

class IXmlCharacterData(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IXmlCharacterData: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def append_data(self, data: str, /) -> None: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def delete_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, /) -> None: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def insert_data(self, offset: winrt.system.UInt32, data: str, /) -> None: ...
    def normalize(self) -> None: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def replace_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, data: str, /) -> None: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    def substring_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, /) -> str: ...
    @_property
    def data(self) -> str: ...
    @data.setter
    def data(self, value: str) -> None: ...
    @_property
    def length(self) -> winrt.system.UInt32: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

class IXmlNode(IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IXmlNode: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def normalize(self) -> None: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

class IXmlNodeSelector(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IXmlNodeSelector: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...

class IXmlNodeSerializer(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IXmlNodeSerializer: ...
    def get_xml(self) -> str: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

class IXmlText(IXmlCharacterData, IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IXmlText: ...
    def append_child(self, new_child: IXmlNode, /) -> IXmlNode: ...
    def append_data(self, data: str, /) -> None: ...
    def clone_node(self, deep: bool, /) -> IXmlNode: ...
    def delete_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, /) -> None: ...
    def get_xml(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def insert_data(self, offset: winrt.system.UInt32, data: str, /) -> None: ...
    def normalize(self) -> None: ...
    def remove_child(self, child_node: IXmlNode, /) -> IXmlNode: ...
    def replace_child(self, new_child: IXmlNode, reference_child: IXmlNode, /) -> IXmlNode: ...
    def replace_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, data: str, /) -> None: ...
    def select_nodes(self, xpath: str, /) -> XmlNodeList: ...
    def select_nodes_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> XmlNodeList: ...
    def select_single_node(self, xpath: str, /) -> IXmlNode: ...
    def select_single_node_ns(self, xpath: str, namespaces: winrt.system.Object, /) -> IXmlNode: ...
    def split_text(self, offset: winrt.system.UInt32, /) -> IXmlText: ...
    def substring_data(self, offset: winrt.system.UInt32, count: winrt.system.UInt32, /) -> str: ...
    @_property
    def data(self) -> str: ...
    @data.setter
    def data(self, value: str) -> None: ...
    @_property
    def length(self) -> winrt.system.UInt32: ...
    @_property
    def attributes(self) -> XmlNamedNodeMap: ...
    @_property
    def child_nodes(self) -> XmlNodeList: ...
    @_property
    def first_child(self) -> IXmlNode: ...
    @_property
    def last_child(self) -> IXmlNode: ...
    @_property
    def local_name(self) -> winrt.system.Object: ...
    @_property
    def namespace_uri(self) -> winrt.system.Object: ...
    @_property
    def next_sibling(self) -> IXmlNode: ...
    @_property
    def node_name(self) -> str: ...
    @_property
    def node_type(self) -> NodeType: ...
    @_property
    def node_value(self) -> winrt.system.Object: ...
    @node_value.setter
    def node_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def owner_document(self) -> XmlDocument: ...
    @_property
    def parent_node(self) -> IXmlNode: ...
    @_property
    def prefix(self) -> winrt.system.Object: ...
    @prefix.setter
    def prefix(self, value: winrt.system.Object) -> None: ...
    @_property
    def previous_sibling(self) -> IXmlNode: ...
    @_property
    def inner_text(self) -> str: ...
    @inner_text.setter
    def inner_text(self, value: str) -> None: ...

