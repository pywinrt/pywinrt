// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240111.5

#pragma once
#ifndef WINRT_Windows_ApplicationModel_ConversationalAgent_1_H
#define WINRT_Windows_ApplicationModel_ConversationalAgent_1_H
#include "winrt/impl/Windows.ApplicationModel.ConversationalAgent.0.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::ConversationalAgent
{
    struct WINRT_IMPL_EMPTY_BASES IActivationSignalDetectionConfiguration :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActivationSignalDetectionConfiguration>
    {
        IActivationSignalDetectionConfiguration(std::nullptr_t = nullptr) noexcept {}
        IActivationSignalDetectionConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IActivationSignalDetectionConfiguration2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActivationSignalDetectionConfiguration2>
    {
        IActivationSignalDetectionConfiguration2(std::nullptr_t = nullptr) noexcept {}
        IActivationSignalDetectionConfiguration2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IActivationSignalDetectionConfigurationCreationResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActivationSignalDetectionConfigurationCreationResult>
    {
        IActivationSignalDetectionConfigurationCreationResult(std::nullptr_t = nullptr) noexcept {}
        IActivationSignalDetectionConfigurationCreationResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IActivationSignalDetector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActivationSignalDetector>
    {
        IActivationSignalDetector(std::nullptr_t = nullptr) noexcept {}
        IActivationSignalDetector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IActivationSignalDetector2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActivationSignalDetector2>
    {
        IActivationSignalDetector2(std::nullptr_t = nullptr) noexcept {}
        IActivationSignalDetector2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IConversationalAgentDetectorManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentDetectorManager>
    {
        IConversationalAgentDetectorManager(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentDetectorManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IConversationalAgentDetectorManager2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentDetectorManager2>
    {
        IConversationalAgentDetectorManager2(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentDetectorManager2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IConversationalAgentDetectorManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentDetectorManagerStatics>
    {
        IConversationalAgentDetectorManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentDetectorManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IConversationalAgentSession :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentSession>
    {
        IConversationalAgentSession(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentSession(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IConversationalAgentSession2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentSession2>
    {
        IConversationalAgentSession2(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentSession2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IConversationalAgentSessionInterruptedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentSessionInterruptedEventArgs>
    {
        IConversationalAgentSessionInterruptedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentSessionInterruptedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IConversationalAgentSessionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentSessionStatics>
    {
        IConversationalAgentSessionStatics(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentSessionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IConversationalAgentSignal :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentSignal>
    {
        IConversationalAgentSignal(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentSignal(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IConversationalAgentSignal2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentSignal2>
    {
        IConversationalAgentSignal2(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentSignal2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IConversationalAgentSignalDetectedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentSignalDetectedEventArgs>
    {
        IConversationalAgentSignalDetectedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentSignalDetectedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IConversationalAgentSystemStateChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IConversationalAgentSystemStateChangedEventArgs>
    {
        IConversationalAgentSystemStateChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IConversationalAgentSystemStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDetectionConfigurationAvailabilityChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDetectionConfigurationAvailabilityChangedEventArgs>
    {
        IDetectionConfigurationAvailabilityChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDetectionConfigurationAvailabilityChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDetectionConfigurationAvailabilityInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDetectionConfigurationAvailabilityInfo>
    {
        IDetectionConfigurationAvailabilityInfo(std::nullptr_t = nullptr) noexcept {}
        IDetectionConfigurationAvailabilityInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDetectionConfigurationAvailabilityInfo2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDetectionConfigurationAvailabilityInfo2>
    {
        IDetectionConfigurationAvailabilityInfo2(std::nullptr_t = nullptr) noexcept {}
        IDetectionConfigurationAvailabilityInfo2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
