// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240111.5

#pragma once
#ifndef WINRT_Windows_ApplicationModel_UserDataAccounts_Provider_2_H
#define WINRT_Windows_ApplicationModel_UserDataAccounts_Provider_2_H
#include "winrt/impl/Windows.ApplicationModel.UserDataAccounts.Provider.1.h"
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::UserDataAccounts::Provider
{
    struct WINRT_IMPL_EMPTY_BASES UserDataAccountPartnerAccountInfo : winrt::Windows::ApplicationModel::UserDataAccounts::Provider::IUserDataAccountPartnerAccountInfo
    {
        UserDataAccountPartnerAccountInfo(std::nullptr_t) noexcept {}
        UserDataAccountPartnerAccountInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::UserDataAccounts::Provider::IUserDataAccountPartnerAccountInfo(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES UserDataAccountProviderAddAccountOperation : winrt::Windows::ApplicationModel::UserDataAccounts::Provider::IUserDataAccountProviderAddAccountOperation
    {
        UserDataAccountProviderAddAccountOperation(std::nullptr_t) noexcept {}
        UserDataAccountProviderAddAccountOperation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::UserDataAccounts::Provider::IUserDataAccountProviderAddAccountOperation(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES UserDataAccountProviderResolveErrorsOperation : winrt::Windows::ApplicationModel::UserDataAccounts::Provider::IUserDataAccountProviderResolveErrorsOperation
    {
        UserDataAccountProviderResolveErrorsOperation(std::nullptr_t) noexcept {}
        UserDataAccountProviderResolveErrorsOperation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::UserDataAccounts::Provider::IUserDataAccountProviderResolveErrorsOperation(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES UserDataAccountProviderSettingsOperation : winrt::Windows::ApplicationModel::UserDataAccounts::Provider::IUserDataAccountProviderSettingsOperation
    {
        UserDataAccountProviderSettingsOperation(std::nullptr_t) noexcept {}
        UserDataAccountProviderSettingsOperation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::ApplicationModel::UserDataAccounts::Provider::IUserDataAccountProviderSettingsOperation(ptr, take_ownership_from_abi) {}
    };
}
#endif
