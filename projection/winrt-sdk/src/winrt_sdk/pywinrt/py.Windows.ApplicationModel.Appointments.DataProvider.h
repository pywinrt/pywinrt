// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.0.0-beta.2"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.ApplicationModel.Appointments.h")
#include "py.Windows.ApplicationModel.Appointments.h"
#endif

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#include <winrt/Windows.ApplicationModel.Appointments.h>
#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>

#include <winrt/Windows.ApplicationModel.Appointments.DataProvider.h>

namespace py::proj::Windows::ApplicationModel::Appointments::DataProvider
{}

namespace py::impl::Windows::ApplicationModel::Appointments::DataProvider
{}

namespace py::wrapper::Windows::ApplicationModel::Appointments::DataProvider
{
    using AppointmentCalendarCancelMeetingRequest = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarCancelMeetingRequest>;
    using AppointmentCalendarCancelMeetingRequestEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarCancelMeetingRequestEventArgs>;
    using AppointmentCalendarCreateOrUpdateAppointmentRequest = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarCreateOrUpdateAppointmentRequest>;
    using AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs>;
    using AppointmentCalendarForwardMeetingRequest = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarForwardMeetingRequest>;
    using AppointmentCalendarForwardMeetingRequestEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarForwardMeetingRequestEventArgs>;
    using AppointmentCalendarProposeNewTimeForMeetingRequest = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarProposeNewTimeForMeetingRequest>;
    using AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs>;
    using AppointmentCalendarSyncManagerSyncRequest = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarSyncManagerSyncRequest>;
    using AppointmentCalendarSyncManagerSyncRequestEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarSyncManagerSyncRequestEventArgs>;
    using AppointmentCalendarUpdateMeetingResponseRequest = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarUpdateMeetingResponseRequest>;
    using AppointmentCalendarUpdateMeetingResponseRequestEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarUpdateMeetingResponseRequestEventArgs>;
    using AppointmentDataProviderConnection = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentDataProviderConnection>;
    using AppointmentDataProviderTriggerDetails = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentDataProviderTriggerDetails>;
}

namespace py
{

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarCancelMeetingRequest>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.appointments.dataprovider";
        static constexpr const char* type_name = "AppointmentCalendarCancelMeetingRequest";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarCancelMeetingRequestEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.appointments.dataprovider";
        static constexpr const char* type_name = "AppointmentCalendarCancelMeetingRequestEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarCreateOrUpdateAppointmentRequest>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.appointments.dataprovider";
        static constexpr const char* type_name = "AppointmentCalendarCreateOrUpdateAppointmentRequest";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.appointments.dataprovider";
        static constexpr const char* type_name = "AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarForwardMeetingRequest>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.appointments.dataprovider";
        static constexpr const char* type_name = "AppointmentCalendarForwardMeetingRequest";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarForwardMeetingRequestEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.appointments.dataprovider";
        static constexpr const char* type_name = "AppointmentCalendarForwardMeetingRequestEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarProposeNewTimeForMeetingRequest>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.appointments.dataprovider";
        static constexpr const char* type_name = "AppointmentCalendarProposeNewTimeForMeetingRequest";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.appointments.dataprovider";
        static constexpr const char* type_name = "AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarSyncManagerSyncRequest>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.appointments.dataprovider";
        static constexpr const char* type_name = "AppointmentCalendarSyncManagerSyncRequest";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarSyncManagerSyncRequestEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.appointments.dataprovider";
        static constexpr const char* type_name = "AppointmentCalendarSyncManagerSyncRequestEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarUpdateMeetingResponseRequest>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.appointments.dataprovider";
        static constexpr const char* type_name = "AppointmentCalendarUpdateMeetingResponseRequest";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentCalendarUpdateMeetingResponseRequestEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.appointments.dataprovider";
        static constexpr const char* type_name = "AppointmentCalendarUpdateMeetingResponseRequestEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentDataProviderConnection>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.appointments.dataprovider";
        static constexpr const char* type_name = "AppointmentDataProviderConnection";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::DataProvider::AppointmentDataProviderTriggerDetails>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.appointments.dataprovider";
        static constexpr const char* type_name = "AppointmentDataProviderTriggerDetails";
    };
}
