// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.2.0

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.2.0"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Security.Cryptography.Core.h")
#include "py.Windows.Security.Cryptography.Core.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#if __has_include("py.Windows.System.h")
#include "py.Windows.System.h"
#endif

#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.Security.Cryptography.Core.h>
#include <winrt/Windows.Storage.Streams.h>
#include <winrt/Windows.System.h>

#include <winrt/Windows.Security.Credentials.h>

namespace py::proj::Windows::Security::Credentials
{
}

namespace py::impl::Windows::Security::Credentials
{
}

namespace py::wrapper::Windows::Security::Credentials
{
    using KeyCredential = py::winrt_wrapper<winrt::Windows::Security::Credentials::KeyCredential>;
    using KeyCredentialAttestationResult = py::winrt_wrapper<winrt::Windows::Security::Credentials::KeyCredentialAttestationResult>;
    using KeyCredentialManager = py::winrt_wrapper<winrt::Windows::Security::Credentials::KeyCredentialManager>;
    using KeyCredentialOperationResult = py::winrt_wrapper<winrt::Windows::Security::Credentials::KeyCredentialOperationResult>;
    using KeyCredentialRetrievalResult = py::winrt_wrapper<winrt::Windows::Security::Credentials::KeyCredentialRetrievalResult>;
    using PasswordCredential = py::winrt_wrapper<winrt::Windows::Security::Credentials::PasswordCredential>;
    using PasswordCredentialPropertyStore = py::winrt_wrapper<winrt::Windows::Security::Credentials::PasswordCredentialPropertyStore>;
    using PasswordVault = py::winrt_wrapper<winrt::Windows::Security::Credentials::PasswordVault>;
    using WebAccount = py::winrt_wrapper<winrt::Windows::Security::Credentials::WebAccount>;
    using WebAccountProvider = py::winrt_wrapper<winrt::Windows::Security::Credentials::WebAccountProvider>;
    using IWebAccount = py::winrt_wrapper<winrt::Windows::Security::Credentials::IWebAccount>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Security::Credentials::KeyCredentialAttestationStatus> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Security::Credentials::KeyCredentialCreationOption> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Security::Credentials::KeyCredentialStatus> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Security::Credentials::WebAccountPictureSize> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Security::Credentials::WebAccountState> = "i";


    template<>
    struct py_type<winrt::Windows::Security::Credentials::KeyCredentialAttestationStatus>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.KeyCredentialAttestationStatus";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "KeyCredentialAttestationStatus";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::KeyCredentialCreationOption>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.KeyCredentialCreationOption";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "KeyCredentialCreationOption";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::KeyCredentialStatus>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.KeyCredentialStatus";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "KeyCredentialStatus";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::WebAccountPictureSize>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.WebAccountPictureSize";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "WebAccountPictureSize";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::WebAccountState>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.WebAccountState";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "WebAccountState";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::KeyCredential>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.KeyCredential";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "KeyCredential";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::KeyCredentialAttestationResult>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.KeyCredentialAttestationResult";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "KeyCredentialAttestationResult";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::KeyCredentialManager>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.KeyCredentialManager";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "KeyCredentialManager";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::KeyCredentialOperationResult>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.KeyCredentialOperationResult";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "KeyCredentialOperationResult";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::KeyCredentialRetrievalResult>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.KeyCredentialRetrievalResult";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "KeyCredentialRetrievalResult";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::PasswordCredential>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.PasswordCredential";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "PasswordCredential";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::PasswordCredentialPropertyStore>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.PasswordCredentialPropertyStore";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "PasswordCredentialPropertyStore";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::PasswordVault>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.PasswordVault";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "PasswordVault";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::WebAccount>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.WebAccount";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "WebAccount";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::WebAccountProvider>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.WebAccountProvider";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "WebAccountProvider";
    };

    template<>
    struct py_type<winrt::Windows::Security::Credentials::IWebAccount>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.credentials.IWebAccount";
        static constexpr const char* module_name = "winrt.windows.security.credentials";
        static constexpr const char* type_name = "IWebAccount";
    };
}
