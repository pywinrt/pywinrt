// WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "0.0.0"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.ApplicationModel.h")
#include "py.Windows.ApplicationModel.h"
#endif

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Storage.h")
#include "py.Windows.Storage.h"
#endif

#include <winrt/Windows.ApplicationModel.h>
#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.Storage.h>

#include <winrt/Windows.Gaming.Preview.GamesEnumeration.h>

namespace py::proj::Windows::Gaming::Preview::GamesEnumeration
{
}

namespace py::impl::Windows::Gaming::Preview::GamesEnumeration
{
    struct GameListChangedEventHandler
    {
        static winrt::Windows::Gaming::Preview::GamesEnumeration::GameListChangedEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](winrt::Windows::Gaming::Preview::GamesEnumeration::GameListEntry const& param0)
            {
                auto gil = py::ensure_gil();

                try
                {
                    py::pyobj_handle py_param0{py::convert(param0)};
                    if (!py_param0)
                    {
                        throw python_exception();
                    }

                    py::pyobj_handle return_value{PyObject_CallOneArg(delegate.callable(), py_param0.get())};
                    if (!return_value)
                    {
                        throw python_exception();
                    }
                }
                catch (python_exception)
                {
                    py::write_unraisable_and_throw();
                }
            };
        };
    };

    struct GameListRemovedEventHandler
    {
        static winrt::Windows::Gaming::Preview::GamesEnumeration::GameListRemovedEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](winrt::hstring const& param0)
            {
                auto gil = py::ensure_gil();

                try
                {
                    py::pyobj_handle py_param0{py::convert(param0)};
                    if (!py_param0)
                    {
                        throw python_exception();
                    }

                    py::pyobj_handle return_value{PyObject_CallOneArg(delegate.callable(), py_param0.get())};
                    if (!return_value)
                    {
                        throw python_exception();
                    }
                }
                catch (python_exception)
                {
                    py::write_unraisable_and_throw();
                }
            };
        };
    };
}

namespace py::wrapper::Windows::Gaming::Preview::GamesEnumeration
{
    using GameList = py::winrt_wrapper<winrt::Windows::Gaming::Preview::GamesEnumeration::GameList>;
    using GameListEntry = py::winrt_wrapper<winrt::Windows::Gaming::Preview::GamesEnumeration::GameListEntry>;
    using GameModeConfiguration = py::winrt_wrapper<winrt::Windows::Gaming::Preview::GamesEnumeration::GameModeConfiguration>;
    using GameModeUserConfiguration = py::winrt_wrapper<winrt::Windows::Gaming::Preview::GamesEnumeration::GameModeUserConfiguration>;
    using IGameListEntry = py::winrt_wrapper<winrt::Windows::Gaming::Preview::GamesEnumeration::IGameListEntry>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Preview::GamesEnumeration::GameListCategory> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Preview::GamesEnumeration::GameListEntryLaunchableState> = "i";


    template<>
    struct py_type<winrt::Windows::Gaming::Preview::GamesEnumeration::GameListCategory>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.gaming.preview.gamesenumeration.GameListCategory";
        static constexpr const char* module_name = "winrt.windows.gaming.preview.gamesenumeration";
        static constexpr const char* type_name = "GameListCategory";
    };

    template<>
    struct py_type<winrt::Windows::Gaming::Preview::GamesEnumeration::GameListEntryLaunchableState>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.gaming.preview.gamesenumeration.GameListEntryLaunchableState";
        static constexpr const char* module_name = "winrt.windows.gaming.preview.gamesenumeration";
        static constexpr const char* type_name = "GameListEntryLaunchableState";
    };

    template<>
    struct py_type<winrt::Windows::Gaming::Preview::GamesEnumeration::GameList>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.gaming.preview.gamesenumeration.GameList";
        static constexpr const char* module_name = "winrt.windows.gaming.preview.gamesenumeration";
        static constexpr const char* type_name = "GameList";
    };

    template<>
    struct py_type<winrt::Windows::Gaming::Preview::GamesEnumeration::GameListEntry>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.gaming.preview.gamesenumeration.GameListEntry";
        static constexpr const char* module_name = "winrt.windows.gaming.preview.gamesenumeration";
        static constexpr const char* type_name = "GameListEntry";
    };

    template<>
    struct py_type<winrt::Windows::Gaming::Preview::GamesEnumeration::GameModeConfiguration>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.gaming.preview.gamesenumeration.GameModeConfiguration";
        static constexpr const char* module_name = "winrt.windows.gaming.preview.gamesenumeration";
        static constexpr const char* type_name = "GameModeConfiguration";
    };

    template<>
    struct py_type<winrt::Windows::Gaming::Preview::GamesEnumeration::GameModeUserConfiguration>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.gaming.preview.gamesenumeration.GameModeUserConfiguration";
        static constexpr const char* module_name = "winrt.windows.gaming.preview.gamesenumeration";
        static constexpr const char* type_name = "GameModeUserConfiguration";
    };

    template<>
    struct py_type<winrt::Windows::Gaming::Preview::GamesEnumeration::IGameListEntry>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.gaming.preview.gamesenumeration._IGameListEntry";
        static constexpr const char* module_name = "winrt.windows.gaming.preview.gamesenumeration";
        static constexpr const char* type_name = "_IGameListEntry";
    };
    template <>
    struct delegate_python_type<winrt::Windows::Gaming::Preview::GamesEnumeration::GameListChangedEventHandler>
    {
        using type = py::impl::Windows::Gaming::Preview::GamesEnumeration::GameListChangedEventHandler;
    };

    template <>
    struct delegate_python_type<winrt::Windows::Gaming::Preview::GamesEnumeration::GameListRemovedEventHandler>
    {
        using type = py::impl::Windows::Gaming::Preview::GamesEnumeration::GameListRemovedEventHandler;
    };

}
