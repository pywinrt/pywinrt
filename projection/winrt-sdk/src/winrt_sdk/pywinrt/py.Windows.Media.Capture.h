// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.0.0-beta.2"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.Devices.Enumeration.h")
#include "py.Windows.Devices.Enumeration.h"
#endif

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Graphics.DirectX.Direct3D11.h")
#include "py.Windows.Graphics.DirectX.Direct3D11.h"
#endif

#if __has_include("py.Windows.Graphics.Imaging.h")
#include "py.Windows.Graphics.Imaging.h"
#endif

#if __has_include("py.Windows.Media.h")
#include "py.Windows.Media.h"
#endif

#if __has_include("py.Windows.Media.Capture.Core.h")
#include "py.Windows.Media.Capture.Core.h"
#endif

#if __has_include("py.Windows.Media.Capture.Frames.h")
#include "py.Windows.Media.Capture.Frames.h"
#endif

#if __has_include("py.Windows.Media.Core.h")
#include "py.Windows.Media.Core.h"
#endif

#if __has_include("py.Windows.Media.Devices.h")
#include "py.Windows.Media.Devices.h"
#endif

#if __has_include("py.Windows.Media.Effects.h")
#include "py.Windows.Media.Effects.h"
#endif

#if __has_include("py.Windows.Media.MediaProperties.h")
#include "py.Windows.Media.MediaProperties.h"
#endif

#if __has_include("py.Windows.Security.Authentication.Web.h")
#include "py.Windows.Security.Authentication.Web.h"
#endif

#if __has_include("py.Windows.Security.Credentials.h")
#include "py.Windows.Security.Credentials.h"
#endif

#if __has_include("py.Windows.Storage.h")
#include "py.Windows.Storage.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#if __has_include("py.Windows.System.h")
#include "py.Windows.System.h"
#endif

#if __has_include("py.Windows.UI.WindowManagement.h")
#include "py.Windows.UI.WindowManagement.h"
#endif

#include <winrt/Windows.Devices.Enumeration.h>
#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.Graphics.DirectX.Direct3D11.h>
#include <winrt/Windows.Graphics.Imaging.h>
#include <winrt/Windows.Media.h>
#include <winrt/Windows.Media.Capture.Core.h>
#include <winrt/Windows.Media.Capture.Frames.h>
#include <winrt/Windows.Media.Core.h>
#include <winrt/Windows.Media.Devices.h>
#include <winrt/Windows.Media.Effects.h>
#include <winrt/Windows.Media.MediaProperties.h>
#include <winrt/Windows.Security.Authentication.Web.h>
#include <winrt/Windows.Security.Credentials.h>
#include <winrt/Windows.Storage.h>
#include <winrt/Windows.Storage.Streams.h>
#include <winrt/Windows.System.h>
#include <winrt/Windows.UI.WindowManagement.h>

#include <winrt/Windows.Media.Capture.h>

namespace py::proj::Windows::Media::Capture
{}

namespace py::impl::Windows::Media::Capture
{
    struct MediaCaptureFailedEventHandler
    {
        static winrt::Windows::Media::Capture::MediaCaptureFailedEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0, auto param1)
            {
                auto gil = py::ensure_gil();

                py::pyobj_handle py_param0{ py::convert(param0) };

                if (!py_param0) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param0");
                }

                py::pyobj_handle py_param1{ py::convert(param1) };

                if (!py_param1) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param1");
                }

                py::pyobj_handle args{ PyTuple_Pack(2, py_param0.get(), py_param1.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };

    struct RecordLimitationExceededEventHandler
    {
        static winrt::Windows::Media::Capture::RecordLimitationExceededEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0)
            {
                auto gil = py::ensure_gil();

                py::pyobj_handle py_param0{ py::convert(param0) };

                if (!py_param0) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param0");
                }

                py::pyobj_handle args{ PyTuple_Pack(1, py_param0.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };
}

namespace py::wrapper::Windows::Media::Capture
{
    using AdvancedCapturedPhoto = py::winrt_wrapper<winrt::Windows::Media::Capture::AdvancedCapturedPhoto>;
    using AdvancedPhotoCapture = py::winrt_wrapper<winrt::Windows::Media::Capture::AdvancedPhotoCapture>;
    using AppBroadcastBackgroundService = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastBackgroundService>;
    using AppBroadcastBackgroundServiceSignInInfo = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastBackgroundServiceSignInInfo>;
    using AppBroadcastBackgroundServiceStreamInfo = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastBackgroundServiceStreamInfo>;
    using AppBroadcastCameraCaptureStateChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastCameraCaptureStateChangedEventArgs>;
    using AppBroadcastGlobalSettings = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastGlobalSettings>;
    using AppBroadcastHeartbeatRequestedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastHeartbeatRequestedEventArgs>;
    using AppBroadcastManager = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastManager>;
    using AppBroadcastMicrophoneCaptureStateChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastMicrophoneCaptureStateChangedEventArgs>;
    using AppBroadcastPlugIn = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastPlugIn>;
    using AppBroadcastPlugInManager = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastPlugInManager>;
    using AppBroadcastPlugInStateChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastPlugInStateChangedEventArgs>;
    using AppBroadcastPreview = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastPreview>;
    using AppBroadcastPreviewStateChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastPreviewStateChangedEventArgs>;
    using AppBroadcastPreviewStreamReader = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastPreviewStreamReader>;
    using AppBroadcastPreviewStreamVideoFrame = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastPreviewStreamVideoFrame>;
    using AppBroadcastPreviewStreamVideoHeader = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastPreviewStreamVideoHeader>;
    using AppBroadcastProviderSettings = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastProviderSettings>;
    using AppBroadcastServices = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastServices>;
    using AppBroadcastSignInStateChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastSignInStateChangedEventArgs>;
    using AppBroadcastState = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastState>;
    using AppBroadcastStreamAudioFrame = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastStreamAudioFrame>;
    using AppBroadcastStreamAudioHeader = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastStreamAudioHeader>;
    using AppBroadcastStreamReader = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastStreamReader>;
    using AppBroadcastStreamStateChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastStreamStateChangedEventArgs>;
    using AppBroadcastStreamVideoFrame = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastStreamVideoFrame>;
    using AppBroadcastStreamVideoHeader = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastStreamVideoHeader>;
    using AppBroadcastTriggerDetails = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastTriggerDetails>;
    using AppBroadcastViewerCountChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::AppBroadcastViewerCountChangedEventArgs>;
    using AppCapture = py::winrt_wrapper<winrt::Windows::Media::Capture::AppCapture>;
    using AppCaptureAlternateShortcutKeys = py::winrt_wrapper<winrt::Windows::Media::Capture::AppCaptureAlternateShortcutKeys>;
    using AppCaptureDurationGeneratedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::AppCaptureDurationGeneratedEventArgs>;
    using AppCaptureFileGeneratedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::AppCaptureFileGeneratedEventArgs>;
    using AppCaptureManager = py::winrt_wrapper<winrt::Windows::Media::Capture::AppCaptureManager>;
    using AppCaptureMetadataWriter = py::winrt_wrapper<winrt::Windows::Media::Capture::AppCaptureMetadataWriter>;
    using AppCaptureMicrophoneCaptureStateChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::AppCaptureMicrophoneCaptureStateChangedEventArgs>;
    using AppCaptureRecordOperation = py::winrt_wrapper<winrt::Windows::Media::Capture::AppCaptureRecordOperation>;
    using AppCaptureRecordingStateChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::AppCaptureRecordingStateChangedEventArgs>;
    using AppCaptureServices = py::winrt_wrapper<winrt::Windows::Media::Capture::AppCaptureServices>;
    using AppCaptureSettings = py::winrt_wrapper<winrt::Windows::Media::Capture::AppCaptureSettings>;
    using AppCaptureState = py::winrt_wrapper<winrt::Windows::Media::Capture::AppCaptureState>;
    using CameraCaptureUI = py::winrt_wrapper<winrt::Windows::Media::Capture::CameraCaptureUI>;
    using CameraCaptureUIPhotoCaptureSettings = py::winrt_wrapper<winrt::Windows::Media::Capture::CameraCaptureUIPhotoCaptureSettings>;
    using CameraCaptureUIVideoCaptureSettings = py::winrt_wrapper<winrt::Windows::Media::Capture::CameraCaptureUIVideoCaptureSettings>;
    using CameraOptionsUI = py::winrt_wrapper<winrt::Windows::Media::Capture::CameraOptionsUI>;
    using CapturedFrame = py::winrt_wrapper<winrt::Windows::Media::Capture::CapturedFrame>;
    using CapturedFrameControlValues = py::winrt_wrapper<winrt::Windows::Media::Capture::CapturedFrameControlValues>;
    using CapturedPhoto = py::winrt_wrapper<winrt::Windows::Media::Capture::CapturedPhoto>;
    using GameBarServices = py::winrt_wrapper<winrt::Windows::Media::Capture::GameBarServices>;
    using GameBarServicesCommandEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::GameBarServicesCommandEventArgs>;
    using GameBarServicesManager = py::winrt_wrapper<winrt::Windows::Media::Capture::GameBarServicesManager>;
    using GameBarServicesManagerGameBarServicesCreatedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::GameBarServicesManagerGameBarServicesCreatedEventArgs>;
    using GameBarServicesTargetInfo = py::winrt_wrapper<winrt::Windows::Media::Capture::GameBarServicesTargetInfo>;
    using LowLagMediaRecording = py::winrt_wrapper<winrt::Windows::Media::Capture::LowLagMediaRecording>;
    using LowLagPhotoCapture = py::winrt_wrapper<winrt::Windows::Media::Capture::LowLagPhotoCapture>;
    using LowLagPhotoSequenceCapture = py::winrt_wrapper<winrt::Windows::Media::Capture::LowLagPhotoSequenceCapture>;
    using MediaCapture = py::winrt_wrapper<winrt::Windows::Media::Capture::MediaCapture>;
    using MediaCaptureDeviceExclusiveControlStatusChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::MediaCaptureDeviceExclusiveControlStatusChangedEventArgs>;
    using MediaCaptureFailedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::MediaCaptureFailedEventArgs>;
    using MediaCaptureFocusChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::MediaCaptureFocusChangedEventArgs>;
    using MediaCaptureInitializationSettings = py::winrt_wrapper<winrt::Windows::Media::Capture::MediaCaptureInitializationSettings>;
    using MediaCapturePauseResult = py::winrt_wrapper<winrt::Windows::Media::Capture::MediaCapturePauseResult>;
    using MediaCaptureRelativePanelWatcher = py::winrt_wrapper<winrt::Windows::Media::Capture::MediaCaptureRelativePanelWatcher>;
    using MediaCaptureSettings = py::winrt_wrapper<winrt::Windows::Media::Capture::MediaCaptureSettings>;
    using MediaCaptureStopResult = py::winrt_wrapper<winrt::Windows::Media::Capture::MediaCaptureStopResult>;
    using MediaCaptureVideoProfile = py::winrt_wrapper<winrt::Windows::Media::Capture::MediaCaptureVideoProfile>;
    using MediaCaptureVideoProfileMediaDescription = py::winrt_wrapper<winrt::Windows::Media::Capture::MediaCaptureVideoProfileMediaDescription>;
    using OptionalReferencePhotoCapturedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::OptionalReferencePhotoCapturedEventArgs>;
    using PhotoCapturedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::PhotoCapturedEventArgs>;
    using PhotoConfirmationCapturedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::PhotoConfirmationCapturedEventArgs>;
    using ScreenCapture = py::winrt_wrapper<winrt::Windows::Media::Capture::ScreenCapture>;
    using SourceSuspensionChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Capture::SourceSuspensionChangedEventArgs>;
    using VideoStreamConfiguration = py::winrt_wrapper<winrt::Windows::Media::Capture::VideoStreamConfiguration>;
    using WhiteBalanceGain = py::winrt_struct_wrapper<winrt::Windows::Media::Capture::WhiteBalanceGain>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppBroadcastCameraCaptureState> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppBroadcastCameraOverlayLocation> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppBroadcastCameraOverlaySize> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppBroadcastCaptureTargetType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppBroadcastExitBroadcastModeReason> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppBroadcastMicrophoneCaptureState> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppBroadcastPlugInState> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppBroadcastPreviewState> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppBroadcastSignInResult> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppBroadcastSignInState> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppBroadcastStreamState> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppBroadcastTerminationReason> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppBroadcastVideoEncodingBitrateMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppBroadcastVideoEncodingResolutionMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppCaptureHistoricalBufferLengthUnit> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppCaptureMetadataPriority> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppCaptureMicrophoneCaptureState> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppCaptureRecordingState> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppCaptureVideoEncodingBitrateMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppCaptureVideoEncodingFrameRateMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::AppCaptureVideoEncodingResolutionMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::CameraCaptureUIMaxPhotoResolution> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::CameraCaptureUIMaxVideoResolution> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::CameraCaptureUIMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::CameraCaptureUIPhotoFormat> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::CameraCaptureUIVideoFormat> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::ForegroundActivationArgument> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::GameBarCommand> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::GameBarCommandOrigin> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::GameBarServicesDisplayMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::GameBarTargetCapturePolicy> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::KnownVideoProfile> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::MediaCaptureDeviceExclusiveControlReleaseMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::MediaCaptureDeviceExclusiveControlStatus> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::MediaCaptureMemoryPreference> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::MediaCaptureSharingMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::MediaCaptureThermalStatus> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::MediaCategory> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::MediaStreamType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::PhotoCaptureSource> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::PowerlineFrequency> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::StreamingCaptureMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::VideoDeviceCharacteristic> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::VideoRotation> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Media::Capture::WhiteBalanceGain> = "T{d:r:d:g:d:b:}";


    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastCameraCaptureState>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastCameraCaptureState";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastCameraOverlayLocation>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastCameraOverlayLocation";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastCameraOverlaySize>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastCameraOverlaySize";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastCaptureTargetType>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastCaptureTargetType";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastExitBroadcastModeReason>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastExitBroadcastModeReason";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastMicrophoneCaptureState>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastMicrophoneCaptureState";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastPlugInState>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastPlugInState";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastPreviewState>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastPreviewState";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastSignInResult>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastSignInResult";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastSignInState>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastSignInState";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastStreamState>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastStreamState";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastTerminationReason>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastTerminationReason";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastVideoEncodingBitrateMode>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastVideoEncodingBitrateMode";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastVideoEncodingResolutionMode>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastVideoEncodingResolutionMode";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureHistoricalBufferLengthUnit>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureHistoricalBufferLengthUnit";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureMetadataPriority>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureMetadataPriority";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureMicrophoneCaptureState>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureMicrophoneCaptureState";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureRecordingState>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureRecordingState";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureVideoEncodingBitrateMode>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureVideoEncodingBitrateMode";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureVideoEncodingFrameRateMode>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureVideoEncodingFrameRateMode";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureVideoEncodingResolutionMode>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureVideoEncodingResolutionMode";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::CameraCaptureUIMaxPhotoResolution>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "CameraCaptureUIMaxPhotoResolution";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::CameraCaptureUIMaxVideoResolution>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "CameraCaptureUIMaxVideoResolution";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::CameraCaptureUIMode>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "CameraCaptureUIMode";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::CameraCaptureUIPhotoFormat>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "CameraCaptureUIPhotoFormat";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::CameraCaptureUIVideoFormat>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "CameraCaptureUIVideoFormat";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::ForegroundActivationArgument>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "ForegroundActivationArgument";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::GameBarCommand>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "GameBarCommand";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::GameBarCommandOrigin>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "GameBarCommandOrigin";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::GameBarServicesDisplayMode>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "GameBarServicesDisplayMode";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::GameBarTargetCapturePolicy>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "GameBarTargetCapturePolicy";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::KnownVideoProfile>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "KnownVideoProfile";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCaptureDeviceExclusiveControlReleaseMode>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCaptureDeviceExclusiveControlReleaseMode";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCaptureDeviceExclusiveControlStatus>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCaptureDeviceExclusiveControlStatus";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCaptureMemoryPreference>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCaptureMemoryPreference";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCaptureSharingMode>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCaptureSharingMode";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCaptureThermalStatus>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCaptureThermalStatus";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCategory>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCategory";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaStreamType>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaStreamType";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::PhotoCaptureSource>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "PhotoCaptureSource";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::PowerlineFrequency>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "PowerlineFrequency";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::StreamingCaptureMode>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "StreamingCaptureMode";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::VideoDeviceCharacteristic>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "VideoDeviceCharacteristic";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::VideoRotation>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "VideoRotation";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AdvancedCapturedPhoto>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AdvancedCapturedPhoto";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AdvancedPhotoCapture>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AdvancedPhotoCapture";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastBackgroundService>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastBackgroundService";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastBackgroundServiceSignInInfo>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastBackgroundServiceSignInInfo";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastBackgroundServiceStreamInfo>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastBackgroundServiceStreamInfo";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastCameraCaptureStateChangedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastCameraCaptureStateChangedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastGlobalSettings>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastGlobalSettings";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastHeartbeatRequestedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastHeartbeatRequestedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastManager>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastManager";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastMicrophoneCaptureStateChangedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastMicrophoneCaptureStateChangedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastPlugIn>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastPlugIn";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastPlugInManager>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastPlugInManager";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastPlugInStateChangedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastPlugInStateChangedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastPreview>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastPreview";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastPreviewStateChangedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastPreviewStateChangedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastPreviewStreamReader>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastPreviewStreamReader";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastPreviewStreamVideoFrame>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastPreviewStreamVideoFrame";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastPreviewStreamVideoHeader>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastPreviewStreamVideoHeader";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastProviderSettings>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastProviderSettings";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastServices>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastServices";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastSignInStateChangedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastSignInStateChangedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastState>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastState";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastStreamAudioFrame>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastStreamAudioFrame";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastStreamAudioHeader>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastStreamAudioHeader";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastStreamReader>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastStreamReader";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastStreamStateChangedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastStreamStateChangedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastStreamVideoFrame>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastStreamVideoFrame";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastStreamVideoHeader>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastStreamVideoHeader";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastTriggerDetails>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastTriggerDetails";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppBroadcastViewerCountChangedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppBroadcastViewerCountChangedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCapture>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCapture";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureAlternateShortcutKeys>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureAlternateShortcutKeys";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureDurationGeneratedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureDurationGeneratedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureFileGeneratedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureFileGeneratedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureManager>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureManager";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureMetadataWriter>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureMetadataWriter";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureMicrophoneCaptureStateChangedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureMicrophoneCaptureStateChangedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureRecordOperation>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureRecordOperation";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureRecordingStateChangedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureRecordingStateChangedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureServices>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureServices";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureSettings>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureSettings";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::AppCaptureState>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "AppCaptureState";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::CameraCaptureUI>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "CameraCaptureUI";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::CameraCaptureUIPhotoCaptureSettings>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "CameraCaptureUIPhotoCaptureSettings";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::CameraCaptureUIVideoCaptureSettings>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "CameraCaptureUIVideoCaptureSettings";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::CameraOptionsUI>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "CameraOptionsUI";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::CapturedFrame>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "CapturedFrame";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::CapturedFrameControlValues>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "CapturedFrameControlValues";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::CapturedPhoto>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "CapturedPhoto";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::GameBarServices>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "GameBarServices";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::GameBarServicesCommandEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "GameBarServicesCommandEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::GameBarServicesManager>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "GameBarServicesManager";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::GameBarServicesManagerGameBarServicesCreatedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "GameBarServicesManagerGameBarServicesCreatedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::GameBarServicesTargetInfo>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "GameBarServicesTargetInfo";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::LowLagMediaRecording>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "LowLagMediaRecording";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::LowLagPhotoCapture>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "LowLagPhotoCapture";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::LowLagPhotoSequenceCapture>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "LowLagPhotoSequenceCapture";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCapture>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCapture";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCaptureDeviceExclusiveControlStatusChangedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCaptureDeviceExclusiveControlStatusChangedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCaptureFailedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCaptureFailedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCaptureFocusChangedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCaptureFocusChangedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCaptureInitializationSettings>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCaptureInitializationSettings";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCapturePauseResult>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCapturePauseResult";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCaptureRelativePanelWatcher>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCaptureRelativePanelWatcher";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCaptureSettings>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCaptureSettings";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCaptureStopResult>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCaptureStopResult";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCaptureVideoProfile>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCaptureVideoProfile";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::MediaCaptureVideoProfileMediaDescription>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "MediaCaptureVideoProfileMediaDescription";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::OptionalReferencePhotoCapturedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "OptionalReferencePhotoCapturedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::PhotoCapturedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "PhotoCapturedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::PhotoConfirmationCapturedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "PhotoConfirmationCapturedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::ScreenCapture>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "ScreenCapture";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::SourceSuspensionChangedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "SourceSuspensionChangedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::VideoStreamConfiguration>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "VideoStreamConfiguration";
    };

    template<>
    struct py_type<winrt::Windows::Media::Capture::WhiteBalanceGain>
    {
        static constexpr const char* module_name = "winrt.windows.media.capture";
        static constexpr const char* type_name = "WhiteBalanceGain";
    };
    template <>
    struct delegate_python_type<winrt::Windows::Media::Capture::MediaCaptureFailedEventHandler>
    {
        using type = py::impl::Windows::Media::Capture::MediaCaptureFailedEventHandler;
    };

    template <>
    struct delegate_python_type<winrt::Windows::Media::Capture::RecordLimitationExceededEventHandler>
    {
        using type = py::impl::Windows::Media::Capture::RecordLimitationExceededEventHandler;
    };

}
