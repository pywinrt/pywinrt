// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.0.0-beta.2"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Graphics.h")
#include "py.Windows.Graphics.h"
#endif

#if __has_include("py.Windows.Graphics.DirectX.Direct3D11.h")
#include "py.Windows.Graphics.DirectX.Direct3D11.h"
#endif

#if __has_include("py.Windows.Graphics.Imaging.h")
#include "py.Windows.Graphics.Imaging.h"
#endif

#if __has_include("py.Windows.Media.h")
#include "py.Windows.Media.h"
#endif

#if __has_include("py.Windows.Storage.h")
#include "py.Windows.Storage.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.Graphics.h>
#include <winrt/Windows.Graphics.DirectX.Direct3D11.h>
#include <winrt/Windows.Graphics.Imaging.h>
#include <winrt/Windows.Media.h>
#include <winrt/Windows.Storage.h>
#include <winrt/Windows.Storage.Streams.h>

#include <winrt/Windows.AI.MachineLearning.h>

namespace py::proj::Windows::AI::MachineLearning
{}

namespace py::impl::Windows::AI::MachineLearning
{}

namespace py::wrapper::Windows::AI::MachineLearning
{
    using ImageFeatureDescriptor = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::ImageFeatureDescriptor>;
    using ImageFeatureValue = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::ImageFeatureValue>;
    using LearningModel = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::LearningModel>;
    using LearningModelBinding = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::LearningModelBinding>;
    using LearningModelDevice = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::LearningModelDevice>;
    using LearningModelEvaluationResult = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::LearningModelEvaluationResult>;
    using LearningModelSession = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::LearningModelSession>;
    using LearningModelSessionOptions = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::LearningModelSessionOptions>;
    using MapFeatureDescriptor = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::MapFeatureDescriptor>;
    using SequenceFeatureDescriptor = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::SequenceFeatureDescriptor>;
    using TensorBoolean = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::TensorBoolean>;
    using TensorDouble = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::TensorDouble>;
    using TensorFeatureDescriptor = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::TensorFeatureDescriptor>;
    using TensorFloat = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::TensorFloat>;
    using TensorFloat16Bit = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::TensorFloat16Bit>;
    using TensorInt16Bit = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::TensorInt16Bit>;
    using TensorInt32Bit = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::TensorInt32Bit>;
    using TensorInt64Bit = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::TensorInt64Bit>;
    using TensorInt8Bit = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::TensorInt8Bit>;
    using TensorString = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::TensorString>;
    using TensorUInt16Bit = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::TensorUInt16Bit>;
    using TensorUInt32Bit = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::TensorUInt32Bit>;
    using TensorUInt64Bit = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::TensorUInt64Bit>;
    using TensorUInt8Bit = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::TensorUInt8Bit>;
    using ILearningModelFeatureDescriptor = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::ILearningModelFeatureDescriptor>;
    using ILearningModelFeatureValue = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::ILearningModelFeatureValue>;
    using ILearningModelOperatorProvider = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::ILearningModelOperatorProvider>;
    using ITensor = py::winrt_wrapper<winrt::Windows::AI::MachineLearning::ITensor>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::AI::MachineLearning::LearningModelDeviceKind> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::AI::MachineLearning::LearningModelFeatureKind> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::AI::MachineLearning::LearningModelPixelRange> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::AI::MachineLearning::TensorKind> = "i";


    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::LearningModelDeviceKind>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "LearningModelDeviceKind";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::LearningModelFeatureKind>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "LearningModelFeatureKind";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::LearningModelPixelRange>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "LearningModelPixelRange";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorKind>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorKind";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::ImageFeatureDescriptor>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "ImageFeatureDescriptor";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::ImageFeatureValue>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "ImageFeatureValue";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::LearningModel>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "LearningModel";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::LearningModelBinding>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "LearningModelBinding";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::LearningModelDevice>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "LearningModelDevice";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::LearningModelEvaluationResult>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "LearningModelEvaluationResult";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::LearningModelSession>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "LearningModelSession";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::LearningModelSessionOptions>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "LearningModelSessionOptions";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::MapFeatureDescriptor>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "MapFeatureDescriptor";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::SequenceFeatureDescriptor>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "SequenceFeatureDescriptor";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorBoolean>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorBoolean";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorDouble>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorDouble";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorFeatureDescriptor>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorFeatureDescriptor";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorFloat>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorFloat";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorFloat16Bit>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorFloat16Bit";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorInt16Bit>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorInt16Bit";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorInt32Bit>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorInt32Bit";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorInt64Bit>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorInt64Bit";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorInt8Bit>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorInt8Bit";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorString>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorString";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorUInt16Bit>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorUInt16Bit";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorUInt32Bit>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorUInt32Bit";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorUInt64Bit>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorUInt64Bit";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::TensorUInt8Bit>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "TensorUInt8Bit";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::ILearningModelFeatureDescriptor>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "ILearningModelFeatureDescriptor";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::ILearningModelFeatureValue>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "ILearningModelFeatureValue";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::ILearningModelOperatorProvider>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "ILearningModelOperatorProvider";
    };

    template<>
    struct py_type<winrt::Windows::AI::MachineLearning::ITensor>
    {
        static constexpr const char* module_name = "winrt.windows.ai.machinelearning";
        static constexpr const char* type_name = "ITensor";
    };
}
