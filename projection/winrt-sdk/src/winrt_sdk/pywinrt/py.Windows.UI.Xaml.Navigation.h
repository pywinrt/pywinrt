// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.0.0-beta.2"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.UI.Xaml.h")
#include "py.Windows.UI.Xaml.h"
#endif

#if __has_include("py.Windows.UI.Xaml.Interop.h")
#include "py.Windows.UI.Xaml.Interop.h"
#endif

#if __has_include("py.Windows.UI.Xaml.Media.Animation.h")
#include "py.Windows.UI.Xaml.Media.Animation.h"
#endif

#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.UI.Xaml.h>
#include <winrt/Windows.UI.Xaml.Interop.h>
#include <winrt/Windows.UI.Xaml.Media.Animation.h>

#include <winrt/Windows.UI.Xaml.Navigation.h>

namespace py::proj::Windows::UI::Xaml::Navigation
{}

namespace py::impl::Windows::UI::Xaml::Navigation
{
    struct LoadCompletedEventHandler
    {
        static winrt::Windows::UI::Xaml::Navigation::LoadCompletedEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0, auto param1)
            {
                auto gil = py::ensure_gil();

                py::pyobj_handle py_param0{ py::convert(param0) };

                if (!py_param0) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param0");
                }

                py::pyobj_handle py_param1{ py::convert(param1) };

                if (!py_param1) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param1");
                }

                py::pyobj_handle args{ PyTuple_Pack(2, py_param0.get(), py_param1.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };

    struct NavigatedEventHandler
    {
        static winrt::Windows::UI::Xaml::Navigation::NavigatedEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0, auto param1)
            {
                auto gil = py::ensure_gil();

                py::pyobj_handle py_param0{ py::convert(param0) };

                if (!py_param0) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param0");
                }

                py::pyobj_handle py_param1{ py::convert(param1) };

                if (!py_param1) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param1");
                }

                py::pyobj_handle args{ PyTuple_Pack(2, py_param0.get(), py_param1.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };

    struct NavigatingCancelEventHandler
    {
        static winrt::Windows::UI::Xaml::Navigation::NavigatingCancelEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0, auto param1)
            {
                auto gil = py::ensure_gil();

                py::pyobj_handle py_param0{ py::convert(param0) };

                if (!py_param0) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param0");
                }

                py::pyobj_handle py_param1{ py::convert(param1) };

                if (!py_param1) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param1");
                }

                py::pyobj_handle args{ PyTuple_Pack(2, py_param0.get(), py_param1.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };

    struct NavigationFailedEventHandler
    {
        static winrt::Windows::UI::Xaml::Navigation::NavigationFailedEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0, auto param1)
            {
                auto gil = py::ensure_gil();

                py::pyobj_handle py_param0{ py::convert(param0) };

                if (!py_param0) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param0");
                }

                py::pyobj_handle py_param1{ py::convert(param1) };

                if (!py_param1) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param1");
                }

                py::pyobj_handle args{ PyTuple_Pack(2, py_param0.get(), py_param1.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };

    struct NavigationStoppedEventHandler
    {
        static winrt::Windows::UI::Xaml::Navigation::NavigationStoppedEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0, auto param1)
            {
                auto gil = py::ensure_gil();

                py::pyobj_handle py_param0{ py::convert(param0) };

                if (!py_param0) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param0");
                }

                py::pyobj_handle py_param1{ py::convert(param1) };

                if (!py_param1) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param1");
                }

                py::pyobj_handle args{ PyTuple_Pack(2, py_param0.get(), py_param1.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };
}

namespace py::wrapper::Windows::UI::Xaml::Navigation
{
    using FrameNavigationOptions = py::winrt_wrapper<winrt::Windows::UI::Xaml::Navigation::FrameNavigationOptions>;
    using NavigatingCancelEventArgs = py::winrt_wrapper<winrt::Windows::UI::Xaml::Navigation::NavigatingCancelEventArgs>;
    using NavigationEventArgs = py::winrt_wrapper<winrt::Windows::UI::Xaml::Navigation::NavigationEventArgs>;
    using NavigationFailedEventArgs = py::winrt_wrapper<winrt::Windows::UI::Xaml::Navigation::NavigationFailedEventArgs>;
    using PageStackEntry = py::winrt_wrapper<winrt::Windows::UI::Xaml::Navigation::PageStackEntry>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::Xaml::Navigation::NavigationCacheMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::Xaml::Navigation::NavigationMode> = "i";


    template<>
    struct py_type<winrt::Windows::UI::Xaml::Navigation::NavigationCacheMode>
    {
        static constexpr const char* module_name = "winrt.windows.ui.xaml.navigation";
        static constexpr const char* type_name = "NavigationCacheMode";
    };

    template<>
    struct py_type<winrt::Windows::UI::Xaml::Navigation::NavigationMode>
    {
        static constexpr const char* module_name = "winrt.windows.ui.xaml.navigation";
        static constexpr const char* type_name = "NavigationMode";
    };

    template<>
    struct py_type<winrt::Windows::UI::Xaml::Navigation::FrameNavigationOptions>
    {
        static constexpr const char* module_name = "winrt.windows.ui.xaml.navigation";
        static constexpr const char* type_name = "FrameNavigationOptions";
    };

    template<>
    struct py_type<winrt::Windows::UI::Xaml::Navigation::NavigatingCancelEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.ui.xaml.navigation";
        static constexpr const char* type_name = "NavigatingCancelEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::UI::Xaml::Navigation::NavigationEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.ui.xaml.navigation";
        static constexpr const char* type_name = "NavigationEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::UI::Xaml::Navigation::NavigationFailedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.ui.xaml.navigation";
        static constexpr const char* type_name = "NavigationFailedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::UI::Xaml::Navigation::PageStackEntry>
    {
        static constexpr const char* module_name = "winrt.windows.ui.xaml.navigation";
        static constexpr const char* type_name = "PageStackEntry";
    };
    template <>
    struct delegate_python_type<winrt::Windows::UI::Xaml::Navigation::LoadCompletedEventHandler>
    {
        using type = py::impl::Windows::UI::Xaml::Navigation::LoadCompletedEventHandler;
    };

    template <>
    struct delegate_python_type<winrt::Windows::UI::Xaml::Navigation::NavigatedEventHandler>
    {
        using type = py::impl::Windows::UI::Xaml::Navigation::NavigatedEventHandler;
    };

    template <>
    struct delegate_python_type<winrt::Windows::UI::Xaml::Navigation::NavigatingCancelEventHandler>
    {
        using type = py::impl::Windows::UI::Xaml::Navigation::NavigatingCancelEventHandler;
    };

    template <>
    struct delegate_python_type<winrt::Windows::UI::Xaml::Navigation::NavigationFailedEventHandler>
    {
        using type = py::impl::Windows::UI::Xaml::Navigation::NavigationFailedEventHandler;
    };

    template <>
    struct delegate_python_type<winrt::Windows::UI::Xaml::Navigation::NavigationStoppedEventHandler>
    {
        using type = py::impl::Windows::UI::Xaml::Navigation::NavigationStoppedEventHandler;
    };

}
