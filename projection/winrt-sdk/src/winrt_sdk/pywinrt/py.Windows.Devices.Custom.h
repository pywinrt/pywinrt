// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.0.0-beta.2"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Storage.Streams.h>

#include <winrt/Windows.Devices.Custom.h>

namespace py::proj::Windows::Devices::Custom
{}

namespace py::impl::Windows::Devices::Custom
{}

namespace py::wrapper::Windows::Devices::Custom
{
    using CustomDevice = py::winrt_wrapper<winrt::Windows::Devices::Custom::CustomDevice>;
    using IOControlCode = py::winrt_wrapper<winrt::Windows::Devices::Custom::IOControlCode>;
    using KnownDeviceTypes = py::winrt_wrapper<winrt::Windows::Devices::Custom::KnownDeviceTypes>;
    using IIOControlCode = py::winrt_wrapper<winrt::Windows::Devices::Custom::IIOControlCode>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Devices::Custom::DeviceAccessMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Devices::Custom::DeviceSharingMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Devices::Custom::IOControlAccessMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Devices::Custom::IOControlBufferingMethod> = "i";


    template<>
    struct py_type<winrt::Windows::Devices::Custom::DeviceAccessMode>
    {
        static constexpr const char* module_name = "winrt.windows.devices.custom";
        static constexpr const char* type_name = "DeviceAccessMode";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Custom::DeviceSharingMode>
    {
        static constexpr const char* module_name = "winrt.windows.devices.custom";
        static constexpr const char* type_name = "DeviceSharingMode";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Custom::IOControlAccessMode>
    {
        static constexpr const char* module_name = "winrt.windows.devices.custom";
        static constexpr const char* type_name = "IOControlAccessMode";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Custom::IOControlBufferingMethod>
    {
        static constexpr const char* module_name = "winrt.windows.devices.custom";
        static constexpr const char* type_name = "IOControlBufferingMethod";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Custom::CustomDevice>
    {
        static constexpr const char* module_name = "winrt.windows.devices.custom";
        static constexpr const char* type_name = "CustomDevice";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Custom::IOControlCode>
    {
        static constexpr const char* module_name = "winrt.windows.devices.custom";
        static constexpr const char* type_name = "IOControlCode";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Custom::KnownDeviceTypes>
    {
        static constexpr const char* module_name = "winrt.windows.devices.custom";
        static constexpr const char* type_name = "KnownDeviceTypes";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Custom::IIOControlCode>
    {
        static constexpr const char* module_name = "winrt.windows.devices.custom";
        static constexpr const char* type_name = "IIOControlCode";
    };
}
