// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.0.0-beta.2"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Security.EnterpriseData.h")
#include "py.Windows.Security.EnterpriseData.h"
#endif

#if __has_include("py.Windows.Storage.h")
#include "py.Windows.Storage.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#if __has_include("py.Windows.UI.h")
#include "py.Windows.UI.h"
#endif

#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.Security.EnterpriseData.h>
#include <winrt/Windows.Storage.h>
#include <winrt/Windows.Storage.Streams.h>
#include <winrt/Windows.UI.h>

#include <winrt/Windows.ApplicationModel.DataTransfer.h>

namespace py::proj::Windows::ApplicationModel::DataTransfer
{}

namespace py::impl::Windows::ApplicationModel::DataTransfer
{
    struct DataProviderHandler
    {
        static winrt::Windows::ApplicationModel::DataTransfer::DataProviderHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0)
            {
                auto gil = py::ensure_gil();

                py::pyobj_handle py_param0{ py::convert(param0) };

                if (!py_param0) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param0");
                }

                py::pyobj_handle args{ PyTuple_Pack(1, py_param0.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };

    struct ShareProviderHandler
    {
        static winrt::Windows::ApplicationModel::DataTransfer::ShareProviderHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0)
            {
                auto gil = py::ensure_gil();

                py::pyobj_handle py_param0{ py::convert(param0) };

                if (!py_param0) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param0");
                }

                py::pyobj_handle args{ PyTuple_Pack(1, py_param0.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };
}

namespace py::wrapper::Windows::ApplicationModel::DataTransfer
{
    using Clipboard = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::Clipboard>;
    using ClipboardContentOptions = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::ClipboardContentOptions>;
    using ClipboardHistoryChangedEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::ClipboardHistoryChangedEventArgs>;
    using ClipboardHistoryItem = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem>;
    using ClipboardHistoryItemsResult = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResult>;
    using DataPackage = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::DataPackage>;
    using DataPackagePropertySet = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::DataPackagePropertySet>;
    using DataPackagePropertySetView = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::DataPackagePropertySetView>;
    using DataPackageView = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::DataPackageView>;
    using DataProviderDeferral = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::DataProviderDeferral>;
    using DataProviderRequest = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::DataProviderRequest>;
    using DataRequest = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::DataRequest>;
    using DataRequestDeferral = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::DataRequestDeferral>;
    using DataRequestedEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::DataRequestedEventArgs>;
    using DataTransferManager = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::DataTransferManager>;
    using HtmlFormatHelper = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::HtmlFormatHelper>;
    using OperationCompletedEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::OperationCompletedEventArgs>;
    using ShareCompletedEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::ShareCompletedEventArgs>;
    using ShareProvider = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::ShareProvider>;
    using ShareProviderOperation = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::ShareProviderOperation>;
    using ShareProvidersRequestedEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::ShareProvidersRequestedEventArgs>;
    using ShareTargetInfo = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::ShareTargetInfo>;
    using ShareUIOptions = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::ShareUIOptions>;
    using SharedStorageAccessManager = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::SharedStorageAccessManager>;
    using StandardDataFormats = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::StandardDataFormats>;
    using TargetApplicationChosenEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::DataTransfer::TargetApplicationChosenEventArgs>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResultStatus> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::DataTransfer::DataPackageOperation> = "I";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::DataTransfer::SetHistoryItemAsContentStatus> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::DataTransfer::ShareUITheme> = "i";


    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResultStatus>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "ClipboardHistoryItemsResultStatus";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::DataPackageOperation>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "DataPackageOperation";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::SetHistoryItemAsContentStatus>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "SetHistoryItemAsContentStatus";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::ShareUITheme>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "ShareUITheme";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::Clipboard>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "Clipboard";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::ClipboardContentOptions>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "ClipboardContentOptions";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::ClipboardHistoryChangedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "ClipboardHistoryChangedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "ClipboardHistoryItem";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResult>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "ClipboardHistoryItemsResult";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::DataPackage>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "DataPackage";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::DataPackagePropertySet>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "DataPackagePropertySet";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::DataPackagePropertySetView>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "DataPackagePropertySetView";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::DataPackageView>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "DataPackageView";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::DataProviderDeferral>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "DataProviderDeferral";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::DataProviderRequest>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "DataProviderRequest";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::DataRequest>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "DataRequest";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::DataRequestDeferral>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "DataRequestDeferral";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::DataRequestedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "DataRequestedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::DataTransferManager>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "DataTransferManager";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::HtmlFormatHelper>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "HtmlFormatHelper";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::OperationCompletedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "OperationCompletedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::ShareCompletedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "ShareCompletedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::ShareProvider>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "ShareProvider";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::ShareProviderOperation>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "ShareProviderOperation";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::ShareProvidersRequestedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "ShareProvidersRequestedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::ShareTargetInfo>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "ShareTargetInfo";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::ShareUIOptions>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "ShareUIOptions";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::SharedStorageAccessManager>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "SharedStorageAccessManager";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::StandardDataFormats>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "StandardDataFormats";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::DataTransfer::TargetApplicationChosenEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.datatransfer";
        static constexpr const char* type_name = "TargetApplicationChosenEventArgs";
    };
    template <>
    struct delegate_python_type<winrt::Windows::ApplicationModel::DataTransfer::DataProviderHandler>
    {
        using type = py::impl::Windows::ApplicationModel::DataTransfer::DataProviderHandler;
    };

    template <>
    struct delegate_python_type<winrt::Windows::ApplicationModel::DataTransfer::ShareProviderHandler>
    {
        using type = py::impl::Windows::ApplicationModel::DataTransfer::ShareProviderHandler;
    };

}
