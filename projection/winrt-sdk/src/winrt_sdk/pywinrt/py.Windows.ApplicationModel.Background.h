// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.0.0-beta.2"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.ApplicationModel.Activation.h")
#include "py.Windows.ApplicationModel.Activation.h"
#endif

#if __has_include("py.Windows.ApplicationModel.Calls.Background.h")
#include "py.Windows.ApplicationModel.Calls.Background.h"
#endif

#if __has_include("py.Windows.Devices.Bluetooth.h")
#include "py.Windows.Devices.Bluetooth.h"
#endif

#if __has_include("py.Windows.Devices.Bluetooth.Advertisement.h")
#include "py.Windows.Devices.Bluetooth.Advertisement.h"
#endif

#if __has_include("py.Windows.Devices.Bluetooth.Background.h")
#include "py.Windows.Devices.Bluetooth.Background.h"
#endif

#if __has_include("py.Windows.Devices.Bluetooth.GenericAttributeProfile.h")
#include "py.Windows.Devices.Bluetooth.GenericAttributeProfile.h"
#endif

#if __has_include("py.Windows.Devices.Geolocation.h")
#include "py.Windows.Devices.Geolocation.h"
#endif

#if __has_include("py.Windows.Devices.Sensors.h")
#include "py.Windows.Devices.Sensors.h"
#endif

#if __has_include("py.Windows.Devices.SmartCards.h")
#include "py.Windows.Devices.SmartCards.h"
#endif

#if __has_include("py.Windows.Devices.Sms.h")
#include "py.Windows.Devices.Sms.h"
#endif

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Networking.h")
#include "py.Windows.Networking.h"
#endif

#if __has_include("py.Windows.Networking.Sockets.h")
#include "py.Windows.Networking.Sockets.h"
#endif

#if __has_include("py.Windows.Storage.h")
#include "py.Windows.Storage.h"
#endif

#if __has_include("py.Windows.Storage.Provider.h")
#include "py.Windows.Storage.Provider.h"
#endif

#if __has_include("py.Windows.System.h")
#include "py.Windows.System.h"
#endif

#if __has_include("py.Windows.UI.Notifications.h")
#include "py.Windows.UI.Notifications.h"
#endif

#include <winrt/Windows.ApplicationModel.Activation.h>
#include <winrt/Windows.ApplicationModel.Calls.Background.h>
#include <winrt/Windows.Devices.Bluetooth.h>
#include <winrt/Windows.Devices.Bluetooth.Advertisement.h>
#include <winrt/Windows.Devices.Bluetooth.Background.h>
#include <winrt/Windows.Devices.Bluetooth.GenericAttributeProfile.h>
#include <winrt/Windows.Devices.Geolocation.h>
#include <winrt/Windows.Devices.Sensors.h>
#include <winrt/Windows.Devices.SmartCards.h>
#include <winrt/Windows.Devices.Sms.h>
#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.Networking.h>
#include <winrt/Windows.Networking.Sockets.h>
#include <winrt/Windows.Storage.h>
#include <winrt/Windows.Storage.Provider.h>
#include <winrt/Windows.System.h>
#include <winrt/Windows.UI.Notifications.h>

#include <winrt/Windows.ApplicationModel.Background.h>

namespace py::proj::Windows::ApplicationModel::Background
{}

namespace py::impl::Windows::ApplicationModel::Background
{
    struct BackgroundTaskCanceledEventHandler
    {
        static winrt::Windows::ApplicationModel::Background::BackgroundTaskCanceledEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0, auto param1)
            {
                auto gil = py::ensure_gil();

                py::pyobj_handle py_param0{ py::convert(param0) };

                if (!py_param0) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param0");
                }

                py::pyobj_handle py_param1{ py::convert(param1) };

                if (!py_param1) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param1");
                }

                py::pyobj_handle args{ PyTuple_Pack(2, py_param0.get(), py_param1.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };

    struct BackgroundTaskCompletedEventHandler
    {
        static winrt::Windows::ApplicationModel::Background::BackgroundTaskCompletedEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0, auto param1)
            {
                auto gil = py::ensure_gil();

                py::pyobj_handle py_param0{ py::convert(param0) };

                if (!py_param0) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param0");
                }

                py::pyobj_handle py_param1{ py::convert(param1) };

                if (!py_param1) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param1");
                }

                py::pyobj_handle args{ PyTuple_Pack(2, py_param0.get(), py_param1.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };

    struct BackgroundTaskProgressEventHandler
    {
        static winrt::Windows::ApplicationModel::Background::BackgroundTaskProgressEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0, auto param1)
            {
                auto gil = py::ensure_gil();

                py::pyobj_handle py_param0{ py::convert(param0) };

                if (!py_param0) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param0");
                }

                py::pyobj_handle py_param1{ py::convert(param1) };

                if (!py_param1) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param1");
                }

                py::pyobj_handle args{ PyTuple_Pack(2, py_param0.get(), py_param1.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };
}

namespace py::wrapper::Windows::ApplicationModel::Background
{
    using ActivitySensorTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::ActivitySensorTrigger>;
    using AlarmApplicationManager = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::AlarmApplicationManager>;
    using AppBroadcastTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::AppBroadcastTrigger>;
    using AppBroadcastTriggerProviderInfo = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::AppBroadcastTriggerProviderInfo>;
    using ApplicationTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::ApplicationTrigger>;
    using ApplicationTriggerDetails = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::ApplicationTriggerDetails>;
    using AppointmentStoreNotificationTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::AppointmentStoreNotificationTrigger>;
    using BackgroundExecutionManager = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::BackgroundExecutionManager>;
    using BackgroundTaskBuilder = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::BackgroundTaskBuilder>;
    using BackgroundTaskCompletedEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::BackgroundTaskCompletedEventArgs>;
    using BackgroundTaskDeferral = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::BackgroundTaskDeferral>;
    using BackgroundTaskProgressEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::BackgroundTaskProgressEventArgs>;
    using BackgroundTaskRegistration = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::BackgroundTaskRegistration>;
    using BackgroundTaskRegistrationGroup = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup>;
    using BackgroundWorkCost = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::BackgroundWorkCost>;
    using BluetoothLEAdvertisementPublisherTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::BluetoothLEAdvertisementPublisherTrigger>;
    using BluetoothLEAdvertisementWatcherTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::BluetoothLEAdvertisementWatcherTrigger>;
    using CachedFileUpdaterTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::CachedFileUpdaterTrigger>;
    using CachedFileUpdaterTriggerDetails = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::CachedFileUpdaterTriggerDetails>;
    using ChatMessageNotificationTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::ChatMessageNotificationTrigger>;
    using ChatMessageReceivedNotificationTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::ChatMessageReceivedNotificationTrigger>;
    using CommunicationBlockingAppSetAsActiveTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::CommunicationBlockingAppSetAsActiveTrigger>;
    using ContactStoreNotificationTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::ContactStoreNotificationTrigger>;
    using ContentPrefetchTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::ContentPrefetchTrigger>;
    using ConversationalAgentTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::ConversationalAgentTrigger>;
    using CustomSystemEventTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::CustomSystemEventTrigger>;
    using DeviceConnectionChangeTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::DeviceConnectionChangeTrigger>;
    using DeviceManufacturerNotificationTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::DeviceManufacturerNotificationTrigger>;
    using DeviceServicingTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::DeviceServicingTrigger>;
    using DeviceUseTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::DeviceUseTrigger>;
    using DeviceWatcherTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::DeviceWatcherTrigger>;
    using EmailStoreNotificationTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::EmailStoreNotificationTrigger>;
    using GattCharacteristicNotificationTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::GattCharacteristicNotificationTrigger>;
    using GattServiceProviderTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::GattServiceProviderTrigger>;
    using GattServiceProviderTriggerResult = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::GattServiceProviderTriggerResult>;
    using GeovisitTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::GeovisitTrigger>;
    using LocationTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::LocationTrigger>;
    using MaintenanceTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::MaintenanceTrigger>;
    using MediaProcessingTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::MediaProcessingTrigger>;
    using MobileBroadbandDeviceServiceNotificationTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::MobileBroadbandDeviceServiceNotificationTrigger>;
    using MobileBroadbandPcoDataChangeTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::MobileBroadbandPcoDataChangeTrigger>;
    using MobileBroadbandPinLockStateChangeTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::MobileBroadbandPinLockStateChangeTrigger>;
    using MobileBroadbandRadioStateChangeTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::MobileBroadbandRadioStateChangeTrigger>;
    using MobileBroadbandRegistrationStateChangeTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::MobileBroadbandRegistrationStateChangeTrigger>;
    using NetworkOperatorDataUsageTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::NetworkOperatorDataUsageTrigger>;
    using NetworkOperatorHotspotAuthenticationTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::NetworkOperatorHotspotAuthenticationTrigger>;
    using NetworkOperatorNotificationTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::NetworkOperatorNotificationTrigger>;
    using PaymentAppCanMakePaymentTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::PaymentAppCanMakePaymentTrigger>;
    using PhoneTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::PhoneTrigger>;
    using PushNotificationTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::PushNotificationTrigger>;
    using RcsEndUserMessageAvailableTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::RcsEndUserMessageAvailableTrigger>;
    using RfcommConnectionTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::RfcommConnectionTrigger>;
    using SecondaryAuthenticationFactorAuthenticationTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::SecondaryAuthenticationFactorAuthenticationTrigger>;
    using SensorDataThresholdTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::SensorDataThresholdTrigger>;
    using SmartCardTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::SmartCardTrigger>;
    using SmsMessageReceivedTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::SmsMessageReceivedTrigger>;
    using SocketActivityTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::SocketActivityTrigger>;
    using StorageLibraryChangeTrackerTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::StorageLibraryChangeTrackerTrigger>;
    using StorageLibraryContentChangedTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::StorageLibraryContentChangedTrigger>;
    using SystemCondition = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::SystemCondition>;
    using SystemTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::SystemTrigger>;
    using TetheringEntitlementCheckTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::TetheringEntitlementCheckTrigger>;
    using TimeTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::TimeTrigger>;
    using ToastNotificationActionTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::ToastNotificationActionTrigger>;
    using ToastNotificationHistoryChangedTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::ToastNotificationHistoryChangedTrigger>;
    using UserNotificationChangedTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::UserNotificationChangedTrigger>;
    using WiFiOnDemandHotspotConnectTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::WiFiOnDemandHotspotConnectTrigger>;
    using WiFiOnDemandHotspotUpdateMetadataTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::WiFiOnDemandHotspotUpdateMetadataTrigger>;
    using IBackgroundCondition = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::IBackgroundCondition>;
    using IBackgroundTask = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::IBackgroundTask>;
    using IBackgroundTaskInstance = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::IBackgroundTaskInstance>;
    using IBackgroundTaskInstance2 = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::IBackgroundTaskInstance2>;
    using IBackgroundTaskInstance4 = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::IBackgroundTaskInstance4>;
    using IBackgroundTaskRegistration = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::IBackgroundTaskRegistration>;
    using IBackgroundTaskRegistration2 = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::IBackgroundTaskRegistration2>;
    using IBackgroundTaskRegistration3 = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::IBackgroundTaskRegistration3>;
    using IBackgroundTrigger = py::winrt_wrapper<winrt::Windows::ApplicationModel::Background::IBackgroundTrigger>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Background::AlarmAccessStatus> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Background::ApplicationTriggerResult> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Background::BackgroundAccessRequestKind> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Background::BackgroundAccessStatus> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Background::BackgroundTaskCancellationReason> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Background::BackgroundTaskThrottleCounter> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Background::BackgroundWorkCostValue> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Background::CustomSystemEventTriggerRecurrence> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Background::DeviceTriggerResult> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Background::LocationTriggerType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Background::MediaProcessingTriggerResult> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Background::SystemConditionType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Background::SystemTriggerType> = "i";


    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::AlarmAccessStatus>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "AlarmAccessStatus";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::ApplicationTriggerResult>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "ApplicationTriggerResult";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BackgroundAccessRequestKind>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BackgroundAccessRequestKind";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BackgroundAccessStatus>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BackgroundAccessStatus";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BackgroundTaskCancellationReason>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BackgroundTaskCancellationReason";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BackgroundTaskThrottleCounter>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BackgroundTaskThrottleCounter";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BackgroundWorkCostValue>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BackgroundWorkCostValue";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::CustomSystemEventTriggerRecurrence>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "CustomSystemEventTriggerRecurrence";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::DeviceTriggerResult>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "DeviceTriggerResult";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::LocationTriggerType>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "LocationTriggerType";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::MediaProcessingTriggerResult>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "MediaProcessingTriggerResult";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::SystemConditionType>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "SystemConditionType";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::SystemTriggerType>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "SystemTriggerType";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::ActivitySensorTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "ActivitySensorTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::AlarmApplicationManager>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "AlarmApplicationManager";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::AppBroadcastTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "AppBroadcastTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::AppBroadcastTriggerProviderInfo>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "AppBroadcastTriggerProviderInfo";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::ApplicationTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "ApplicationTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::ApplicationTriggerDetails>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "ApplicationTriggerDetails";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::AppointmentStoreNotificationTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "AppointmentStoreNotificationTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BackgroundExecutionManager>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BackgroundExecutionManager";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BackgroundTaskBuilder>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BackgroundTaskBuilder";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BackgroundTaskCompletedEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BackgroundTaskCompletedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BackgroundTaskDeferral>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BackgroundTaskDeferral";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BackgroundTaskProgressEventArgs>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BackgroundTaskProgressEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BackgroundTaskRegistration>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BackgroundTaskRegistration";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BackgroundTaskRegistrationGroup";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BackgroundWorkCost>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BackgroundWorkCost";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BluetoothLEAdvertisementPublisherTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BluetoothLEAdvertisementPublisherTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::BluetoothLEAdvertisementWatcherTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "BluetoothLEAdvertisementWatcherTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::CachedFileUpdaterTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "CachedFileUpdaterTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::CachedFileUpdaterTriggerDetails>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "CachedFileUpdaterTriggerDetails";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::ChatMessageNotificationTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "ChatMessageNotificationTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::ChatMessageReceivedNotificationTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "ChatMessageReceivedNotificationTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::CommunicationBlockingAppSetAsActiveTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "CommunicationBlockingAppSetAsActiveTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::ContactStoreNotificationTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "ContactStoreNotificationTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::ContentPrefetchTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "ContentPrefetchTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::ConversationalAgentTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "ConversationalAgentTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::CustomSystemEventTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "CustomSystemEventTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::DeviceConnectionChangeTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "DeviceConnectionChangeTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::DeviceManufacturerNotificationTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "DeviceManufacturerNotificationTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::DeviceServicingTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "DeviceServicingTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::DeviceUseTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "DeviceUseTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::DeviceWatcherTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "DeviceWatcherTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::EmailStoreNotificationTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "EmailStoreNotificationTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::GattCharacteristicNotificationTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "GattCharacteristicNotificationTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::GattServiceProviderTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "GattServiceProviderTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::GattServiceProviderTriggerResult>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "GattServiceProviderTriggerResult";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::GeovisitTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "GeovisitTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::LocationTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "LocationTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::MaintenanceTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "MaintenanceTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::MediaProcessingTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "MediaProcessingTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::MobileBroadbandDeviceServiceNotificationTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "MobileBroadbandDeviceServiceNotificationTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::MobileBroadbandPcoDataChangeTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "MobileBroadbandPcoDataChangeTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::MobileBroadbandPinLockStateChangeTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "MobileBroadbandPinLockStateChangeTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::MobileBroadbandRadioStateChangeTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "MobileBroadbandRadioStateChangeTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::MobileBroadbandRegistrationStateChangeTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "MobileBroadbandRegistrationStateChangeTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::NetworkOperatorDataUsageTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "NetworkOperatorDataUsageTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::NetworkOperatorHotspotAuthenticationTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "NetworkOperatorHotspotAuthenticationTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::NetworkOperatorNotificationTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "NetworkOperatorNotificationTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::PaymentAppCanMakePaymentTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "PaymentAppCanMakePaymentTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::PhoneTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "PhoneTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::PushNotificationTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "PushNotificationTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::RcsEndUserMessageAvailableTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "RcsEndUserMessageAvailableTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::RfcommConnectionTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "RfcommConnectionTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::SecondaryAuthenticationFactorAuthenticationTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "SecondaryAuthenticationFactorAuthenticationTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::SensorDataThresholdTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "SensorDataThresholdTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::SmartCardTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "SmartCardTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::SmsMessageReceivedTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "SmsMessageReceivedTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::SocketActivityTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "SocketActivityTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::StorageLibraryChangeTrackerTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "StorageLibraryChangeTrackerTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::StorageLibraryContentChangedTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "StorageLibraryContentChangedTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::SystemCondition>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "SystemCondition";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::SystemTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "SystemTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::TetheringEntitlementCheckTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "TetheringEntitlementCheckTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::TimeTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "TimeTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::ToastNotificationActionTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "ToastNotificationActionTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::ToastNotificationHistoryChangedTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "ToastNotificationHistoryChangedTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::UserNotificationChangedTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "UserNotificationChangedTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::WiFiOnDemandHotspotConnectTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "WiFiOnDemandHotspotConnectTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::WiFiOnDemandHotspotUpdateMetadataTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "WiFiOnDemandHotspotUpdateMetadataTrigger";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::IBackgroundCondition>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "IBackgroundCondition";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::IBackgroundTask>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "IBackgroundTask";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::IBackgroundTaskInstance>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "IBackgroundTaskInstance";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::IBackgroundTaskInstance2>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "IBackgroundTaskInstance2";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::IBackgroundTaskInstance4>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "IBackgroundTaskInstance4";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::IBackgroundTaskRegistration>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "IBackgroundTaskRegistration";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::IBackgroundTaskRegistration2>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "IBackgroundTaskRegistration2";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::IBackgroundTaskRegistration3>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "IBackgroundTaskRegistration3";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Background::IBackgroundTrigger>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.background";
        static constexpr const char* type_name = "IBackgroundTrigger";
    };
    template <>
    struct delegate_python_type<winrt::Windows::ApplicationModel::Background::BackgroundTaskCanceledEventHandler>
    {
        using type = py::impl::Windows::ApplicationModel::Background::BackgroundTaskCanceledEventHandler;
    };

    template <>
    struct delegate_python_type<winrt::Windows::ApplicationModel::Background::BackgroundTaskCompletedEventHandler>
    {
        using type = py::impl::Windows::ApplicationModel::Background::BackgroundTaskCompletedEventHandler;
    };

    template <>
    struct delegate_python_type<winrt::Windows::ApplicationModel::Background::BackgroundTaskProgressEventHandler>
    {
        using type = py::impl::Windows::ApplicationModel::Background::BackgroundTaskProgressEventHandler;
    };

}
