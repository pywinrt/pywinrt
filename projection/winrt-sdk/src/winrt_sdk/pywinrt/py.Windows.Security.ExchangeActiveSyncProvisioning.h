// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.2.0

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.2.0"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#include <winrt/Windows.Foundation.h>

#include <winrt/Windows.Security.ExchangeActiveSyncProvisioning.h>

namespace py::proj::Windows::Security::ExchangeActiveSyncProvisioning
{
}

namespace py::impl::Windows::Security::ExchangeActiveSyncProvisioning
{
}

namespace py::wrapper::Windows::Security::ExchangeActiveSyncProvisioning
{
    using EasClientDeviceInformation = py::winrt_wrapper<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasClientDeviceInformation>;
    using EasClientSecurityPolicy = py::winrt_wrapper<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasClientSecurityPolicy>;
    using EasComplianceResults = py::winrt_wrapper<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasComplianceResults>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasDisallowConvenienceLogonResult> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasEncryptionProviderType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasMaxInactivityTimeLockResult> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasMaxPasswordFailedAttemptsResult> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasMinPasswordComplexCharactersResult> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasMinPasswordLengthResult> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasPasswordExpirationResult> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasPasswordHistoryResult> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasRequireEncryptionResult> = "i";


    template<>
    struct py_type<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasDisallowConvenienceLogonResult>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.exchangeactivesyncprovisioning.EasDisallowConvenienceLogonResult";
        static constexpr const char* module_name = "winrt.windows.security.exchangeactivesyncprovisioning";
        static constexpr const char* type_name = "EasDisallowConvenienceLogonResult";
    };

    template<>
    struct py_type<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasEncryptionProviderType>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.exchangeactivesyncprovisioning.EasEncryptionProviderType";
        static constexpr const char* module_name = "winrt.windows.security.exchangeactivesyncprovisioning";
        static constexpr const char* type_name = "EasEncryptionProviderType";
    };

    template<>
    struct py_type<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasMaxInactivityTimeLockResult>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.exchangeactivesyncprovisioning.EasMaxInactivityTimeLockResult";
        static constexpr const char* module_name = "winrt.windows.security.exchangeactivesyncprovisioning";
        static constexpr const char* type_name = "EasMaxInactivityTimeLockResult";
    };

    template<>
    struct py_type<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasMaxPasswordFailedAttemptsResult>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.exchangeactivesyncprovisioning.EasMaxPasswordFailedAttemptsResult";
        static constexpr const char* module_name = "winrt.windows.security.exchangeactivesyncprovisioning";
        static constexpr const char* type_name = "EasMaxPasswordFailedAttemptsResult";
    };

    template<>
    struct py_type<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasMinPasswordComplexCharactersResult>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.exchangeactivesyncprovisioning.EasMinPasswordComplexCharactersResult";
        static constexpr const char* module_name = "winrt.windows.security.exchangeactivesyncprovisioning";
        static constexpr const char* type_name = "EasMinPasswordComplexCharactersResult";
    };

    template<>
    struct py_type<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasMinPasswordLengthResult>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.exchangeactivesyncprovisioning.EasMinPasswordLengthResult";
        static constexpr const char* module_name = "winrt.windows.security.exchangeactivesyncprovisioning";
        static constexpr const char* type_name = "EasMinPasswordLengthResult";
    };

    template<>
    struct py_type<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasPasswordExpirationResult>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.exchangeactivesyncprovisioning.EasPasswordExpirationResult";
        static constexpr const char* module_name = "winrt.windows.security.exchangeactivesyncprovisioning";
        static constexpr const char* type_name = "EasPasswordExpirationResult";
    };

    template<>
    struct py_type<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasPasswordHistoryResult>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.exchangeactivesyncprovisioning.EasPasswordHistoryResult";
        static constexpr const char* module_name = "winrt.windows.security.exchangeactivesyncprovisioning";
        static constexpr const char* type_name = "EasPasswordHistoryResult";
    };

    template<>
    struct py_type<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasRequireEncryptionResult>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.exchangeactivesyncprovisioning.EasRequireEncryptionResult";
        static constexpr const char* module_name = "winrt.windows.security.exchangeactivesyncprovisioning";
        static constexpr const char* type_name = "EasRequireEncryptionResult";
    };

    template<>
    struct py_type<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasClientDeviceInformation>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.exchangeactivesyncprovisioning.EasClientDeviceInformation";
        static constexpr const char* module_name = "winrt.windows.security.exchangeactivesyncprovisioning";
        static constexpr const char* type_name = "EasClientDeviceInformation";
    };

    template<>
    struct py_type<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasClientSecurityPolicy>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.exchangeactivesyncprovisioning.EasClientSecurityPolicy";
        static constexpr const char* module_name = "winrt.windows.security.exchangeactivesyncprovisioning";
        static constexpr const char* type_name = "EasClientSecurityPolicy";
    };

    template<>
    struct py_type<winrt::Windows::Security::ExchangeActiveSyncProvisioning::EasComplianceResults>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.security.exchangeactivesyncprovisioning.EasComplianceResults";
        static constexpr const char* module_name = "winrt.windows.security.exchangeactivesyncprovisioning";
        static constexpr const char* type_name = "EasComplianceResults";
    };
}
