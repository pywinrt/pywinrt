// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.0.0-beta.2"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.Storage.h")
#include "py.Windows.Storage.h"
#endif

#include <winrt/Windows.Storage.h>

#include <winrt/Windows.Devices.Portable.h>

namespace py::proj::Windows::Devices::Portable
{}

namespace py::impl::Windows::Devices::Portable
{}

namespace py::wrapper::Windows::Devices::Portable
{
    using ServiceDevice = py::winrt_wrapper<winrt::Windows::Devices::Portable::ServiceDevice>;
    using StorageDevice = py::winrt_wrapper<winrt::Windows::Devices::Portable::StorageDevice>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Devices::Portable::ServiceDeviceType> = "i";


    template<>
    struct py_type<winrt::Windows::Devices::Portable::ServiceDeviceType>
    {
        static constexpr const char* module_name = "winrt.windows.devices.portable";
        static constexpr const char* type_name = "ServiceDeviceType";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Portable::ServiceDevice>
    {
        static constexpr const char* module_name = "winrt.windows.devices.portable";
        static constexpr const char* type_name = "ServiceDevice";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Portable::StorageDevice>
    {
        static constexpr const char* module_name = "winrt.windows.devices.portable";
        static constexpr const char* type_name = "StorageDevice";
    };
}
