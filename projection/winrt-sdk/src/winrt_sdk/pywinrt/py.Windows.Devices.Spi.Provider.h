// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.0.0-beta.2"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>

#include <winrt/Windows.Devices.Spi.Provider.h>

namespace py::proj::Windows::Devices::Spi::Provider
{}

namespace py::impl::Windows::Devices::Spi::Provider
{}

namespace py::wrapper::Windows::Devices::Spi::Provider
{
    using ProviderSpiConnectionSettings = py::winrt_wrapper<winrt::Windows::Devices::Spi::Provider::ProviderSpiConnectionSettings>;
    using ISpiControllerProvider = py::winrt_wrapper<winrt::Windows::Devices::Spi::Provider::ISpiControllerProvider>;
    using ISpiDeviceProvider = py::winrt_wrapper<winrt::Windows::Devices::Spi::Provider::ISpiDeviceProvider>;
    using ISpiProvider = py::winrt_wrapper<winrt::Windows::Devices::Spi::Provider::ISpiProvider>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Devices::Spi::Provider::ProviderSpiMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Devices::Spi::Provider::ProviderSpiSharingMode> = "i";


    template<>
    struct py_type<winrt::Windows::Devices::Spi::Provider::ProviderSpiMode>
    {
        static constexpr const char* module_name = "winrt.windows.devices.spi.provider";
        static constexpr const char* type_name = "ProviderSpiMode";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Spi::Provider::ProviderSpiSharingMode>
    {
        static constexpr const char* module_name = "winrt.windows.devices.spi.provider";
        static constexpr const char* type_name = "ProviderSpiSharingMode";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Spi::Provider::ProviderSpiConnectionSettings>
    {
        static constexpr const char* module_name = "winrt.windows.devices.spi.provider";
        static constexpr const char* type_name = "ProviderSpiConnectionSettings";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Spi::Provider::ISpiControllerProvider>
    {
        static constexpr const char* module_name = "winrt.windows.devices.spi.provider";
        static constexpr const char* type_name = "ISpiControllerProvider";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Spi::Provider::ISpiDeviceProvider>
    {
        static constexpr const char* module_name = "winrt.windows.devices.spi.provider";
        static constexpr const char* type_name = "ISpiDeviceProvider";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Spi::Provider::ISpiProvider>
    {
        static constexpr const char* module_name = "winrt.windows.devices.spi.provider";
        static constexpr const char* type_name = "ISpiProvider";
    };
}
