// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.2.0

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.2.0"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.Devices.Haptics.h")
#include "py.Windows.Devices.Haptics.h"
#endif

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#include <winrt/Windows.Devices.Haptics.h>
#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>

#include <winrt/Windows.Devices.Input.h>

namespace py::proj::Windows::Devices::Input
{
}

namespace py::impl::Windows::Devices::Input
{
}

namespace py::wrapper::Windows::Devices::Input
{
    using KeyboardCapabilities = py::winrt_wrapper<winrt::Windows::Devices::Input::KeyboardCapabilities>;
    using MouseCapabilities = py::winrt_wrapper<winrt::Windows::Devices::Input::MouseCapabilities>;
    using MouseDevice = py::winrt_wrapper<winrt::Windows::Devices::Input::MouseDevice>;
    using MouseEventArgs = py::winrt_wrapper<winrt::Windows::Devices::Input::MouseEventArgs>;
    using PenButtonListener = py::winrt_wrapper<winrt::Windows::Devices::Input::PenButtonListener>;
    using PenDevice = py::winrt_wrapper<winrt::Windows::Devices::Input::PenDevice>;
    using PenDockListener = py::winrt_wrapper<winrt::Windows::Devices::Input::PenDockListener>;
    using PenDockedEventArgs = py::winrt_wrapper<winrt::Windows::Devices::Input::PenDockedEventArgs>;
    using PenTailButtonClickedEventArgs = py::winrt_wrapper<winrt::Windows::Devices::Input::PenTailButtonClickedEventArgs>;
    using PenTailButtonDoubleClickedEventArgs = py::winrt_wrapper<winrt::Windows::Devices::Input::PenTailButtonDoubleClickedEventArgs>;
    using PenTailButtonLongPressedEventArgs = py::winrt_wrapper<winrt::Windows::Devices::Input::PenTailButtonLongPressedEventArgs>;
    using PenUndockedEventArgs = py::winrt_wrapper<winrt::Windows::Devices::Input::PenUndockedEventArgs>;
    using PointerDevice = py::winrt_wrapper<winrt::Windows::Devices::Input::PointerDevice>;
    using TouchCapabilities = py::winrt_wrapper<winrt::Windows::Devices::Input::TouchCapabilities>;
    using MouseDelta = py::winrt_struct_wrapper<winrt::Windows::Devices::Input::MouseDelta>;
    using PointerDeviceUsage = py::winrt_struct_wrapper<winrt::Windows::Devices::Input::PointerDeviceUsage>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Devices::Input::PointerDeviceType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Devices::Input::MouseDelta> = "T{i:x:i:y:}";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Devices::Input::PointerDeviceUsage> = "T{I:usage_page:I:usage:i:min_logical:i:max_logical:i:min_physical:i:max_physical:I:unit:f:physical_multiplier:}";


    template<>
    struct py_type<winrt::Windows::Devices::Input::PointerDeviceType>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.PointerDeviceType";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "PointerDeviceType";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::KeyboardCapabilities>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.KeyboardCapabilities";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "KeyboardCapabilities";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::MouseCapabilities>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.MouseCapabilities";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "MouseCapabilities";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::MouseDevice>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.MouseDevice";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "MouseDevice";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::MouseEventArgs>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.MouseEventArgs";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "MouseEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::PenButtonListener>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.PenButtonListener";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "PenButtonListener";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::PenDevice>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.PenDevice";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "PenDevice";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::PenDockListener>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.PenDockListener";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "PenDockListener";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::PenDockedEventArgs>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.PenDockedEventArgs";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "PenDockedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::PenTailButtonClickedEventArgs>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.PenTailButtonClickedEventArgs";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "PenTailButtonClickedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::PenTailButtonDoubleClickedEventArgs>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.PenTailButtonDoubleClickedEventArgs";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "PenTailButtonDoubleClickedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::PenTailButtonLongPressedEventArgs>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.PenTailButtonLongPressedEventArgs";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "PenTailButtonLongPressedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::PenUndockedEventArgs>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.PenUndockedEventArgs";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "PenUndockedEventArgs";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::PointerDevice>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.PointerDevice";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "PointerDevice";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::TouchCapabilities>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.TouchCapabilities";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "TouchCapabilities";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::MouseDelta>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.MouseDelta";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "MouseDelta";
    };

    template<>
    struct py_type<winrt::Windows::Devices::Input::PointerDeviceUsage>
    {
        static constexpr std::string_view qualified_name = "winrt.windows.devices.input.PointerDeviceUsage";
        static constexpr const char* module_name = "winrt.windows.devices.input";
        static constexpr const char* type_name = "PointerDeviceUsage";
    };
}
