// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.0.0-beta.2"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Storage.h")
#include "py.Windows.Storage.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#if __has_include("py.Windows.UI.h")
#include "py.Windows.UI.h"
#endif

#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.Storage.h>
#include <winrt/Windows.Storage.Streams.h>
#include <winrt/Windows.UI.h>

#include <winrt/Windows.ApplicationModel.Resources.Core.h>

namespace py::proj::Windows::ApplicationModel::Resources::Core
{}

namespace py::impl::Windows::ApplicationModel::Resources::Core
{}

namespace py::wrapper::Windows::ApplicationModel::Resources::Core
{
    using NamedResource = py::winrt_wrapper<winrt::Windows::ApplicationModel::Resources::Core::NamedResource>;
    using ResourceCandidate = py::winrt_wrapper<winrt::Windows::ApplicationModel::Resources::Core::ResourceCandidate>;
    using ResourceCandidateVectorView = py::winrt_wrapper<winrt::Windows::ApplicationModel::Resources::Core::ResourceCandidateVectorView>;
    using ResourceContext = py::winrt_wrapper<winrt::Windows::ApplicationModel::Resources::Core::ResourceContext>;
    using ResourceContextLanguagesVectorView = py::winrt_wrapper<winrt::Windows::ApplicationModel::Resources::Core::ResourceContextLanguagesVectorView>;
    using ResourceManager = py::winrt_wrapper<winrt::Windows::ApplicationModel::Resources::Core::ResourceManager>;
    using ResourceMap = py::winrt_wrapper<winrt::Windows::ApplicationModel::Resources::Core::ResourceMap>;
    using ResourceMapIterator = py::winrt_wrapper<winrt::Windows::ApplicationModel::Resources::Core::ResourceMapIterator>;
    using ResourceMapMapView = py::winrt_wrapper<winrt::Windows::ApplicationModel::Resources::Core::ResourceMapMapView>;
    using ResourceMapMapViewIterator = py::winrt_wrapper<winrt::Windows::ApplicationModel::Resources::Core::ResourceMapMapViewIterator>;
    using ResourceQualifier = py::winrt_wrapper<winrt::Windows::ApplicationModel::Resources::Core::ResourceQualifier>;
    using ResourceQualifierMapView = py::winrt_wrapper<winrt::Windows::ApplicationModel::Resources::Core::ResourceQualifierMapView>;
    using ResourceQualifierObservableMap = py::winrt_wrapper<winrt::Windows::ApplicationModel::Resources::Core::ResourceQualifierObservableMap>;
    using ResourceQualifierVectorView = py::winrt_wrapper<winrt::Windows::ApplicationModel::Resources::Core::ResourceQualifierVectorView>;
    using ResourceLayoutInfo = py::winrt_struct_wrapper<winrt::Windows::ApplicationModel::Resources::Core::ResourceLayoutInfo>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Resources::Core::ResourceCandidateKind> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Resources::Core::ResourceQualifierPersistence> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Resources::Core::ResourceLayoutInfo> = "T{I:major_version:I:minor_version:I:resource_subtree_count:I:named_resource_count:i:checksum:}";


    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceCandidateKind>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceCandidateKind";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceQualifierPersistence>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceQualifierPersistence";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::NamedResource>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "NamedResource";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceCandidate>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceCandidate";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceCandidateVectorView>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceCandidateVectorView";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceContext>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceContext";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceContextLanguagesVectorView>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceContextLanguagesVectorView";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceManager>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceManager";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceMap>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceMap";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceMapIterator>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceMapIterator";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceMapMapView>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceMapMapView";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceMapMapViewIterator>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceMapMapViewIterator";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceQualifier>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceQualifier";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceQualifierMapView>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceQualifierMapView";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceQualifierObservableMap>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceQualifierObservableMap";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceQualifierVectorView>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceQualifierVectorView";
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Resources::Core::ResourceLayoutInfo>
    {
        static constexpr const char* module_name = "winrt.windows.applicationmodel.resources.core";
        static constexpr const char* type_name = "ResourceLayoutInfo";
    };
}
