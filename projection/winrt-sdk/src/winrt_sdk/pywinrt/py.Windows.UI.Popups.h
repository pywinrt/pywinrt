// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.0.0-beta.2"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>

#include <winrt/Windows.UI.Popups.h>

namespace py::proj::Windows::UI::Popups
{}

namespace py::impl::Windows::UI::Popups
{
    struct UICommandInvokedHandler
    {
        static winrt::Windows::UI::Popups::UICommandInvokedHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0)
            {
                auto gil = py::ensure_gil();

                py::pyobj_handle py_param0{ py::convert(param0) };

                if (!py_param0) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw std::invalid_argument("param0");
                }

                py::pyobj_handle args{ PyTuple_Pack(1, py_param0.get()) };

                if (!args) {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }

                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_error();
                }
            };
        };
    };
}

namespace py::wrapper::Windows::UI::Popups
{
    using MessageDialog = py::winrt_wrapper<winrt::Windows::UI::Popups::MessageDialog>;
    using PopupMenu = py::winrt_wrapper<winrt::Windows::UI::Popups::PopupMenu>;
    using UICommand = py::winrt_wrapper<winrt::Windows::UI::Popups::UICommand>;
    using UICommandSeparator = py::winrt_wrapper<winrt::Windows::UI::Popups::UICommandSeparator>;
    using IUICommand = py::winrt_wrapper<winrt::Windows::UI::Popups::IUICommand>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::Popups::MessageDialogOptions> = "I";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::Popups::Placement> = "i";


    template<>
    struct py_type<winrt::Windows::UI::Popups::MessageDialogOptions>
    {
        static constexpr const char* module_name = "winrt.windows.ui.popups";
        static constexpr const char* type_name = "MessageDialogOptions";
    };

    template<>
    struct py_type<winrt::Windows::UI::Popups::Placement>
    {
        static constexpr const char* module_name = "winrt.windows.ui.popups";
        static constexpr const char* type_name = "Placement";
    };

    template<>
    struct py_type<winrt::Windows::UI::Popups::MessageDialog>
    {
        static constexpr const char* module_name = "winrt.windows.ui.popups";
        static constexpr const char* type_name = "MessageDialog";
    };

    template<>
    struct py_type<winrt::Windows::UI::Popups::PopupMenu>
    {
        static constexpr const char* module_name = "winrt.windows.ui.popups";
        static constexpr const char* type_name = "PopupMenu";
    };

    template<>
    struct py_type<winrt::Windows::UI::Popups::UICommand>
    {
        static constexpr const char* module_name = "winrt.windows.ui.popups";
        static constexpr const char* type_name = "UICommand";
    };

    template<>
    struct py_type<winrt::Windows::UI::Popups::UICommandSeparator>
    {
        static constexpr const char* module_name = "winrt.windows.ui.popups";
        static constexpr const char* type_name = "UICommandSeparator";
    };

    template<>
    struct py_type<winrt::Windows::UI::Popups::IUICommand>
    {
        static constexpr const char* module_name = "winrt.windows.ui.popups";
        static constexpr const char* type_name = "IUICommand";
    };
    template <>
    struct delegate_python_type<winrt::Windows::UI::Popups::UICommandInvokedHandler>
    {
        using type = py::impl::Windows::UI::Popups::UICommandInvokedHandler;
    };

}
