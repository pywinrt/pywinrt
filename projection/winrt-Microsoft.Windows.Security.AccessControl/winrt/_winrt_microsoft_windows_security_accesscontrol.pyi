# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system

Self = typing.TypeVar('Self')

@typing.final
class AppContainerNameAndAccess:
    @_property
    def app_container_name(self) -> str: ...
    @_property
    def access_mask(self) -> winrt.system.UInt32: ...
    def __init__(self, app_container_name: str = "", access_mask: winrt.system.UInt32 = 0) -> None: ...

@typing.final
class SecurityDescriptorHelpers_Static(winrt._winrt.IInspectable_Static):
    # System.String Microsoft.Windows.Security.AccessControl.SecurityDescriptorHelpers::GetSddlForAppContainerNames(Microsoft.Windows.Security.AccessControl.AppContainerNameAndAccess[],System.String,System.UInt32)
    def get_sddl_for_app_container_names(cls, access_requests: typing.Union[winrt.system.Array[AppContainerNameAndAccess], winrt.system.ReadableBuffer], principal_string_sid: str, principal_access_mask: winrt.system.UInt32, /) -> str: ...
    # System.Byte[] Microsoft.Windows.Security.AccessControl.SecurityDescriptorHelpers::GetSecurityDescriptorBytesFromAppContainerNames(Microsoft.Windows.Security.AccessControl.AppContainerNameAndAccess[],System.String,System.UInt32)
    def get_security_descriptor_bytes_from_app_container_names(cls, access_requests: typing.Union[winrt.system.Array[AppContainerNameAndAccess], winrt.system.ReadableBuffer], principal_string_sid: str, principal_access_mask: winrt.system.UInt32, /) -> winrt.system.Array[winrt.system.UInt8]: ...

@typing.final
class SecurityDescriptorHelpers(winrt.system.Object, metaclass=SecurityDescriptorHelpers_Static):
    pass

