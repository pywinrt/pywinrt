# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.globalization as windows_globalization
import winrt.windows.networking as windows_networking
import winrt.windows.storage.streams as windows_storage_streams
import winrt.windows.web.http as windows_web_http

Self = typing.TypeVar('Self')

@typing.final
class HttpCacheDirectiveHeaderValueCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableSequence[HttpNameValueHeaderValue]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[HttpNameValueHeaderValue]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> HttpNameValueHeaderValue: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[HttpNameValueHeaderValue]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: HttpNameValueHeaderValue) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[HttpNameValueHeaderValue]) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::Append(Windows.Web.Http.Headers.HttpNameValueHeaderValue)
    def append(self, value: HttpNameValueHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue> Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[HttpNameValueHeaderValue]: ...
    # Windows.Web.Http.Headers.HttpNameValueHeaderValue Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> HttpNameValueHeaderValue: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::GetMany(System.UInt32,Windows.Web.Http.Headers.HttpNameValueHeaderValue[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[HttpNameValueHeaderValue], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue> Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::GetView()
    def get_view(self) -> typing.Sequence[HttpNameValueHeaderValue]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::IndexOf(Windows.Web.Http.Headers.HttpNameValueHeaderValue,System.UInt32&)
    def index_of(self, value: HttpNameValueHeaderValue, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::InsertAt(System.UInt32,Windows.Web.Http.Headers.HttpNameValueHeaderValue)
    def insert_at(self, index: winrt.system.UInt32, value: HttpNameValueHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::ParseAdd(System.String)
    def parse_add(self, input: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::ReplaceAll(Windows.Web.Http.Headers.HttpNameValueHeaderValue[])
    def replace_all(self, items: typing.Union[winrt.system.Array[HttpNameValueHeaderValue], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::SetAt(System.UInt32,Windows.Web.Http.Headers.HttpNameValueHeaderValue)
    def set_at(self, index: winrt.system.UInt32, value: HttpNameValueHeaderValue, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::TryParseAdd(System.String)
    def try_parse_add(self, input: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan> Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::get_SharedMaxAge()
    @_property
    def shared_max_age(self) -> typing.Optional[datetime.timedelta]: ...
    # System.Void Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::put_SharedMaxAge(Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan>)
    @shared_max_age.setter
    def shared_max_age(self, value: typing.Optional[datetime.timedelta]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan> Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::get_MinFresh()
    @_property
    def min_fresh(self) -> typing.Optional[datetime.timedelta]: ...
    # System.Void Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::put_MinFresh(Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan>)
    @min_fresh.setter
    def min_fresh(self, value: typing.Optional[datetime.timedelta]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan> Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::get_MaxStale()
    @_property
    def max_stale(self) -> typing.Optional[datetime.timedelta]: ...
    # System.Void Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::put_MaxStale(Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan>)
    @max_stale.setter
    def max_stale(self, value: typing.Optional[datetime.timedelta]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan> Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::get_MaxAge()
    @_property
    def max_age(self) -> typing.Optional[datetime.timedelta]: ...
    # System.Void Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection::put_MaxAge(Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan>)
    @max_age.setter
    def max_age(self, value: typing.Optional[datetime.timedelta]) -> None: ...

@typing.final
class HttpChallengeHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpChallengeHeaderValue Windows.Web.Http.Headers.HttpChallengeHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpChallengeHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpChallengeHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpChallengeHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpChallengeHeaderValue]: ...

@typing.final
class HttpChallengeHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpChallengeHeaderValue_Static):
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], scheme: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], scheme: str, token: str) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpChallengeHeaderValue::ToString()
    def to_string(self) -> str: ...
    # Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue> Windows.Web.Http.Headers.HttpChallengeHeaderValue::get_Parameters()
    @_property
    def parameters(self) -> typing.MutableSequence[HttpNameValueHeaderValue]: ...
    # System.String Windows.Web.Http.Headers.HttpChallengeHeaderValue::get_Scheme()
    @_property
    def scheme(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpChallengeHeaderValue::get_Token()
    @_property
    def token(self) -> str: ...

@typing.final
class HttpChallengeHeaderValueCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableSequence[HttpChallengeHeaderValue]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[HttpChallengeHeaderValue]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> HttpChallengeHeaderValue: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[HttpChallengeHeaderValue]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: HttpChallengeHeaderValue) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[HttpChallengeHeaderValue]) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::Append(Windows.Web.Http.Headers.HttpChallengeHeaderValue)
    def append(self, value: HttpChallengeHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpChallengeHeaderValue> Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[HttpChallengeHeaderValue]: ...
    # Windows.Web.Http.Headers.HttpChallengeHeaderValue Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> HttpChallengeHeaderValue: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::GetMany(System.UInt32,Windows.Web.Http.Headers.HttpChallengeHeaderValue[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[HttpChallengeHeaderValue], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpChallengeHeaderValue> Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::GetView()
    def get_view(self) -> typing.Sequence[HttpChallengeHeaderValue]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::IndexOf(Windows.Web.Http.Headers.HttpChallengeHeaderValue,System.UInt32&)
    def index_of(self, value: HttpChallengeHeaderValue, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::InsertAt(System.UInt32,Windows.Web.Http.Headers.HttpChallengeHeaderValue)
    def insert_at(self, index: winrt.system.UInt32, value: HttpChallengeHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::ParseAdd(System.String)
    def parse_add(self, input: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::ReplaceAll(Windows.Web.Http.Headers.HttpChallengeHeaderValue[])
    def replace_all(self, items: typing.Union[winrt.system.Array[HttpChallengeHeaderValue], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::SetAt(System.UInt32,Windows.Web.Http.Headers.HttpChallengeHeaderValue)
    def set_at(self, index: winrt.system.UInt32, value: HttpChallengeHeaderValue, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::TryParseAdd(System.String)
    def try_parse_add(self, input: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class HttpConnectionOptionHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpConnectionOptionHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpConnectionOptionHeaderValue]: ...

@typing.final
class HttpConnectionOptionHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpConnectionOptionHeaderValue_Static):
    def __str__(self) -> str: ...
    def __new__(cls: typing.Type[Self], token: str) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue::ToString()
    def to_string(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue::get_Token()
    @_property
    def token(self) -> str: ...

@typing.final
class HttpConnectionOptionHeaderValueCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableSequence[HttpConnectionOptionHeaderValue]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[HttpConnectionOptionHeaderValue]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> HttpConnectionOptionHeaderValue: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[HttpConnectionOptionHeaderValue]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: HttpConnectionOptionHeaderValue) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[HttpConnectionOptionHeaderValue]) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::Append(Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue)
    def append(self, value: HttpConnectionOptionHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue> Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[HttpConnectionOptionHeaderValue]: ...
    # Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> HttpConnectionOptionHeaderValue: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::GetMany(System.UInt32,Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[HttpConnectionOptionHeaderValue], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue> Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::GetView()
    def get_view(self) -> typing.Sequence[HttpConnectionOptionHeaderValue]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::IndexOf(Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue,System.UInt32&)
    def index_of(self, value: HttpConnectionOptionHeaderValue, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::InsertAt(System.UInt32,Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue)
    def insert_at(self, index: winrt.system.UInt32, value: HttpConnectionOptionHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::ParseAdd(System.String)
    def parse_add(self, input: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::ReplaceAll(Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue[])
    def replace_all(self, items: typing.Union[winrt.system.Array[HttpConnectionOptionHeaderValue], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::SetAt(System.UInt32,Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue)
    def set_at(self, index: winrt.system.UInt32, value: HttpConnectionOptionHeaderValue, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::TryParseAdd(System.String)
    def try_parse_add(self, input: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class HttpContentCodingHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpContentCodingHeaderValue Windows.Web.Http.Headers.HttpContentCodingHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpContentCodingHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpContentCodingHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpContentCodingHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpContentCodingHeaderValue]: ...

@typing.final
class HttpContentCodingHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpContentCodingHeaderValue_Static):
    def __str__(self) -> str: ...
    def __new__(cls: typing.Type[Self], content_coding: str) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpContentCodingHeaderValue::ToString()
    def to_string(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpContentCodingHeaderValue::get_ContentCoding()
    @_property
    def content_coding(self) -> str: ...

@typing.final
class HttpContentCodingHeaderValueCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableSequence[HttpContentCodingHeaderValue]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[HttpContentCodingHeaderValue]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> HttpContentCodingHeaderValue: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[HttpContentCodingHeaderValue]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: HttpContentCodingHeaderValue) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[HttpContentCodingHeaderValue]) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::Append(Windows.Web.Http.Headers.HttpContentCodingHeaderValue)
    def append(self, value: HttpContentCodingHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpContentCodingHeaderValue> Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[HttpContentCodingHeaderValue]: ...
    # Windows.Web.Http.Headers.HttpContentCodingHeaderValue Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> HttpContentCodingHeaderValue: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::GetMany(System.UInt32,Windows.Web.Http.Headers.HttpContentCodingHeaderValue[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[HttpContentCodingHeaderValue], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpContentCodingHeaderValue> Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::GetView()
    def get_view(self) -> typing.Sequence[HttpContentCodingHeaderValue]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::IndexOf(Windows.Web.Http.Headers.HttpContentCodingHeaderValue,System.UInt32&)
    def index_of(self, value: HttpContentCodingHeaderValue, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::InsertAt(System.UInt32,Windows.Web.Http.Headers.HttpContentCodingHeaderValue)
    def insert_at(self, index: winrt.system.UInt32, value: HttpContentCodingHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::ParseAdd(System.String)
    def parse_add(self, input: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::ReplaceAll(Windows.Web.Http.Headers.HttpContentCodingHeaderValue[])
    def replace_all(self, items: typing.Union[winrt.system.Array[HttpContentCodingHeaderValue], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::SetAt(System.UInt32,Windows.Web.Http.Headers.HttpContentCodingHeaderValue)
    def set_at(self, index: winrt.system.UInt32, value: HttpContentCodingHeaderValue, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::TryParseAdd(System.String)
    def try_parse_add(self, input: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class HttpContentCodingWithQualityHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpContentCodingWithQualityHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpContentCodingWithQualityHeaderValue]: ...

@typing.final
class HttpContentCodingWithQualityHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpContentCodingWithQualityHeaderValue_Static):
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], content_coding: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], content_coding: str, quality: winrt.system.Double) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue::ToString()
    def to_string(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue::get_ContentCoding()
    @_property
    def content_coding(self) -> str: ...
    # Windows.Foundation.IReference`1<System.Double> Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue::get_Quality()
    @_property
    def quality(self) -> typing.Optional[winrt.system.Double]: ...

@typing.final
class HttpContentCodingWithQualityHeaderValueCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableSequence[HttpContentCodingWithQualityHeaderValue]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[HttpContentCodingWithQualityHeaderValue]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> HttpContentCodingWithQualityHeaderValue: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[HttpContentCodingWithQualityHeaderValue]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: HttpContentCodingWithQualityHeaderValue) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[HttpContentCodingWithQualityHeaderValue]) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::Append(Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue)
    def append(self, value: HttpContentCodingWithQualityHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue> Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[HttpContentCodingWithQualityHeaderValue]: ...
    # Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> HttpContentCodingWithQualityHeaderValue: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::GetMany(System.UInt32,Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[HttpContentCodingWithQualityHeaderValue], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue> Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::GetView()
    def get_view(self) -> typing.Sequence[HttpContentCodingWithQualityHeaderValue]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::IndexOf(Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue,System.UInt32&)
    def index_of(self, value: HttpContentCodingWithQualityHeaderValue, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::InsertAt(System.UInt32,Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue)
    def insert_at(self, index: winrt.system.UInt32, value: HttpContentCodingWithQualityHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::ParseAdd(System.String)
    def parse_add(self, input: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::ReplaceAll(Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue[])
    def replace_all(self, items: typing.Union[winrt.system.Array[HttpContentCodingWithQualityHeaderValue], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::SetAt(System.UInt32,Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue)
    def set_at(self, index: winrt.system.UInt32, value: HttpContentCodingWithQualityHeaderValue, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::TryParseAdd(System.String)
    def try_parse_add(self, input: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class HttpContentDispositionHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpContentDispositionHeaderValue Windows.Web.Http.Headers.HttpContentDispositionHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpContentDispositionHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpContentDispositionHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpContentDispositionHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpContentDispositionHeaderValue]: ...

@typing.final
class HttpContentDispositionHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpContentDispositionHeaderValue_Static):
    def __str__(self) -> str: ...
    def __new__(cls: typing.Type[Self], disposition_type: str) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpContentDispositionHeaderValue::ToString()
    def to_string(self) -> str: ...
    # Windows.Foundation.IReference`1<System.UInt64> Windows.Web.Http.Headers.HttpContentDispositionHeaderValue::get_Size()
    @_property
    def size(self) -> typing.Optional[winrt.system.UInt64]: ...
    # System.Void Windows.Web.Http.Headers.HttpContentDispositionHeaderValue::put_Size(Windows.Foundation.IReference`1<System.UInt64>)
    @size.setter
    def size(self, value: typing.Optional[winrt.system.UInt64]) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpContentDispositionHeaderValue::get_Name()
    @_property
    def name(self) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpContentDispositionHeaderValue::put_Name(System.String)
    @name.setter
    def name(self, value: str) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpContentDispositionHeaderValue::get_FileNameStar()
    @_property
    def file_name_star(self) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpContentDispositionHeaderValue::put_FileNameStar(System.String)
    @file_name_star.setter
    def file_name_star(self, value: str) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpContentDispositionHeaderValue::get_FileName()
    @_property
    def file_name(self) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpContentDispositionHeaderValue::put_FileName(System.String)
    @file_name.setter
    def file_name(self, value: str) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpContentDispositionHeaderValue::get_DispositionType()
    @_property
    def disposition_type(self) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpContentDispositionHeaderValue::put_DispositionType(System.String)
    @disposition_type.setter
    def disposition_type(self, value: str) -> None: ...
    # Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue> Windows.Web.Http.Headers.HttpContentDispositionHeaderValue::get_Parameters()
    @_property
    def parameters(self) -> typing.MutableSequence[HttpNameValueHeaderValue]: ...

@typing.final
class HttpContentHeaderCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableMapping[str, str]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[str]: ...
    def __contains__(self, key: object) -> bool: ...
    def __getitem__(self, key: str) -> str: ...
    def __setitem__(self, key: str, value: str) -> None: ...
    def __delitem__(self, key: str) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.Web.Http.Headers.HttpContentHeaderCollection::Append(System.String,System.String)
    def append(self, name: str, value: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpContentHeaderCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<System.String,System.String>> Windows.Web.Http.Headers.HttpContentHeaderCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[windows_foundation_collections.IKeyValuePair[str, str]]: ...
    # Windows.Foundation.Collections.IMapView`2<System.String,System.String> Windows.Web.Http.Headers.HttpContentHeaderCollection::GetView()
    def get_view(self) -> typing.Mapping[str, str]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpContentHeaderCollection::HasKey(System.String)
    def has_key(self, key: str, /) -> bool: ...
    # System.Boolean Windows.Web.Http.Headers.HttpContentHeaderCollection::Insert(System.String,System.String)
    def insert(self, key: str, value: str, /) -> bool: ...
    # System.String Windows.Web.Http.Headers.HttpContentHeaderCollection::Lookup(System.String)
    def lookup(self, key: str, /) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpContentHeaderCollection::Remove(System.String)
    def remove(self, key: str, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpContentHeaderCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpContentHeaderCollection::TryAppendWithoutValidation(System.String,System.String)
    def try_append_without_validation(self, name: str, value: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpContentHeaderCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.Web.Http.Headers.HttpContentHeaderCollection::get_LastModified()
    @_property
    def last_modified(self) -> typing.Optional[datetime.datetime]: ...
    # System.Void Windows.Web.Http.Headers.HttpContentHeaderCollection::put_LastModified(Windows.Foundation.IReference`1<Windows.Foundation.DateTime>)
    @last_modified.setter
    def last_modified(self, value: typing.Optional[datetime.datetime]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.Web.Http.Headers.HttpContentHeaderCollection::get_Expires()
    @_property
    def expires(self) -> typing.Optional[datetime.datetime]: ...
    # System.Void Windows.Web.Http.Headers.HttpContentHeaderCollection::put_Expires(Windows.Foundation.IReference`1<Windows.Foundation.DateTime>)
    @expires.setter
    def expires(self, value: typing.Optional[datetime.datetime]) -> None: ...
    # Windows.Web.Http.Headers.HttpMediaTypeHeaderValue Windows.Web.Http.Headers.HttpContentHeaderCollection::get_ContentType()
    @_property
    def content_type(self) -> HttpMediaTypeHeaderValue: ...
    # System.Void Windows.Web.Http.Headers.HttpContentHeaderCollection::put_ContentType(Windows.Web.Http.Headers.HttpMediaTypeHeaderValue)
    @content_type.setter
    def content_type(self, value: HttpMediaTypeHeaderValue) -> None: ...
    # Windows.Web.Http.Headers.HttpContentRangeHeaderValue Windows.Web.Http.Headers.HttpContentHeaderCollection::get_ContentRange()
    @_property
    def content_range(self) -> HttpContentRangeHeaderValue: ...
    # System.Void Windows.Web.Http.Headers.HttpContentHeaderCollection::put_ContentRange(Windows.Web.Http.Headers.HttpContentRangeHeaderValue)
    @content_range.setter
    def content_range(self, value: HttpContentRangeHeaderValue) -> None: ...
    # Windows.Storage.Streams.IBuffer Windows.Web.Http.Headers.HttpContentHeaderCollection::get_ContentMD5()
    @_property
    def content_md5(self) -> windows_storage_streams.IBuffer: ...
    # System.Void Windows.Web.Http.Headers.HttpContentHeaderCollection::put_ContentMD5(Windows.Storage.Streams.IBuffer)
    @content_md5.setter
    def content_md5(self, value: windows_storage_streams.IBuffer) -> None: ...
    # Windows.Foundation.Uri Windows.Web.Http.Headers.HttpContentHeaderCollection::get_ContentLocation()
    @_property
    def content_location(self) -> windows_foundation.Uri: ...
    # System.Void Windows.Web.Http.Headers.HttpContentHeaderCollection::put_ContentLocation(Windows.Foundation.Uri)
    @content_location.setter
    def content_location(self, value: windows_foundation.Uri) -> None: ...
    # Windows.Foundation.IReference`1<System.UInt64> Windows.Web.Http.Headers.HttpContentHeaderCollection::get_ContentLength()
    @_property
    def content_length(self) -> typing.Optional[winrt.system.UInt64]: ...
    # System.Void Windows.Web.Http.Headers.HttpContentHeaderCollection::put_ContentLength(Windows.Foundation.IReference`1<System.UInt64>)
    @content_length.setter
    def content_length(self, value: typing.Optional[winrt.system.UInt64]) -> None: ...
    # Windows.Web.Http.Headers.HttpContentDispositionHeaderValue Windows.Web.Http.Headers.HttpContentHeaderCollection::get_ContentDisposition()
    @_property
    def content_disposition(self) -> HttpContentDispositionHeaderValue: ...
    # System.Void Windows.Web.Http.Headers.HttpContentHeaderCollection::put_ContentDisposition(Windows.Web.Http.Headers.HttpContentDispositionHeaderValue)
    @content_disposition.setter
    def content_disposition(self, value: HttpContentDispositionHeaderValue) -> None: ...
    # Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection Windows.Web.Http.Headers.HttpContentHeaderCollection::get_ContentEncoding()
    @_property
    def content_encoding(self) -> HttpContentCodingHeaderValueCollection: ...
    # Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection Windows.Web.Http.Headers.HttpContentHeaderCollection::get_ContentLanguage()
    @_property
    def content_language(self) -> HttpLanguageHeaderValueCollection: ...

@typing.final
class HttpContentRangeHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpContentRangeHeaderValue Windows.Web.Http.Headers.HttpContentRangeHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpContentRangeHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpContentRangeHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpContentRangeHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpContentRangeHeaderValue]: ...

@typing.final
class HttpContentRangeHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpContentRangeHeaderValue_Static):
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], length: winrt.system.UInt64) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], from_: winrt.system.UInt64, to: winrt.system.UInt64) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], from_: winrt.system.UInt64, to: winrt.system.UInt64, length: winrt.system.UInt64) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpContentRangeHeaderValue::ToString()
    def to_string(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpContentRangeHeaderValue::get_Unit()
    @_property
    def unit(self) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpContentRangeHeaderValue::put_Unit(System.String)
    @unit.setter
    def unit(self, value: str) -> None: ...
    # Windows.Foundation.IReference`1<System.UInt64> Windows.Web.Http.Headers.HttpContentRangeHeaderValue::get_FirstBytePosition()
    @_property
    def first_byte_position(self) -> typing.Optional[winrt.system.UInt64]: ...
    # Windows.Foundation.IReference`1<System.UInt64> Windows.Web.Http.Headers.HttpContentRangeHeaderValue::get_LastBytePosition()
    @_property
    def last_byte_position(self) -> typing.Optional[winrt.system.UInt64]: ...
    # Windows.Foundation.IReference`1<System.UInt64> Windows.Web.Http.Headers.HttpContentRangeHeaderValue::get_Length()
    @_property
    def length(self) -> typing.Optional[winrt.system.UInt64]: ...

@typing.final
class HttpCookiePairHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpCookiePairHeaderValue Windows.Web.Http.Headers.HttpCookiePairHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpCookiePairHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpCookiePairHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpCookiePairHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpCookiePairHeaderValue]: ...

@typing.final
class HttpCookiePairHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpCookiePairHeaderValue_Static):
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], name: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], name: str, value: str) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpCookiePairHeaderValue::ToString()
    def to_string(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpCookiePairHeaderValue::get_Value()
    @_property
    def value(self) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpCookiePairHeaderValue::put_Value(System.String)
    @value.setter
    def value(self, value: str) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpCookiePairHeaderValue::get_Name()
    @_property
    def name(self) -> str: ...

@typing.final
class HttpCookiePairHeaderValueCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableSequence[HttpCookiePairHeaderValue]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[HttpCookiePairHeaderValue]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> HttpCookiePairHeaderValue: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[HttpCookiePairHeaderValue]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: HttpCookiePairHeaderValue) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[HttpCookiePairHeaderValue]) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::Append(Windows.Web.Http.Headers.HttpCookiePairHeaderValue)
    def append(self, value: HttpCookiePairHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpCookiePairHeaderValue> Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[HttpCookiePairHeaderValue]: ...
    # Windows.Web.Http.Headers.HttpCookiePairHeaderValue Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> HttpCookiePairHeaderValue: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::GetMany(System.UInt32,Windows.Web.Http.Headers.HttpCookiePairHeaderValue[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[HttpCookiePairHeaderValue], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpCookiePairHeaderValue> Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::GetView()
    def get_view(self) -> typing.Sequence[HttpCookiePairHeaderValue]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::IndexOf(Windows.Web.Http.Headers.HttpCookiePairHeaderValue,System.UInt32&)
    def index_of(self, value: HttpCookiePairHeaderValue, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::InsertAt(System.UInt32,Windows.Web.Http.Headers.HttpCookiePairHeaderValue)
    def insert_at(self, index: winrt.system.UInt32, value: HttpCookiePairHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::ParseAdd(System.String)
    def parse_add(self, input: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::ReplaceAll(Windows.Web.Http.Headers.HttpCookiePairHeaderValue[])
    def replace_all(self, items: typing.Union[winrt.system.Array[HttpCookiePairHeaderValue], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::SetAt(System.UInt32,Windows.Web.Http.Headers.HttpCookiePairHeaderValue)
    def set_at(self, index: winrt.system.UInt32, value: HttpCookiePairHeaderValue, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::TryParseAdd(System.String)
    def try_parse_add(self, input: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class HttpCredentialsHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpCredentialsHeaderValue Windows.Web.Http.Headers.HttpCredentialsHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpCredentialsHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpCredentialsHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpCredentialsHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpCredentialsHeaderValue]: ...

@typing.final
class HttpCredentialsHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpCredentialsHeaderValue_Static):
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], scheme: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], scheme: str, token: str) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpCredentialsHeaderValue::ToString()
    def to_string(self) -> str: ...
    # Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue> Windows.Web.Http.Headers.HttpCredentialsHeaderValue::get_Parameters()
    @_property
    def parameters(self) -> typing.MutableSequence[HttpNameValueHeaderValue]: ...
    # System.String Windows.Web.Http.Headers.HttpCredentialsHeaderValue::get_Scheme()
    @_property
    def scheme(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpCredentialsHeaderValue::get_Token()
    @_property
    def token(self) -> str: ...

@typing.final
class HttpDateOrDeltaHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpDateOrDeltaHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpDateOrDeltaHeaderValue]: ...

@typing.final
class HttpDateOrDeltaHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpDateOrDeltaHeaderValue_Static):
    def __str__(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue::ToString()
    def to_string(self) -> str: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue::get_Date()
    @_property
    def date(self) -> typing.Optional[datetime.datetime]: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan> Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue::get_Delta()
    @_property
    def delta(self) -> typing.Optional[datetime.timedelta]: ...

@typing.final
class HttpExpectationHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpExpectationHeaderValue Windows.Web.Http.Headers.HttpExpectationHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpExpectationHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpExpectationHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpExpectationHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpExpectationHeaderValue]: ...

@typing.final
class HttpExpectationHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpExpectationHeaderValue_Static):
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], name: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], name: str, value: str) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpExpectationHeaderValue::ToString()
    def to_string(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpExpectationHeaderValue::get_Value()
    @_property
    def value(self) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpExpectationHeaderValue::put_Value(System.String)
    @value.setter
    def value(self, value: str) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpExpectationHeaderValue::get_Name()
    @_property
    def name(self) -> str: ...
    # Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue> Windows.Web.Http.Headers.HttpExpectationHeaderValue::get_Parameters()
    @_property
    def parameters(self) -> typing.MutableSequence[HttpNameValueHeaderValue]: ...

@typing.final
class HttpExpectationHeaderValueCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableSequence[HttpExpectationHeaderValue]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[HttpExpectationHeaderValue]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> HttpExpectationHeaderValue: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[HttpExpectationHeaderValue]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: HttpExpectationHeaderValue) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[HttpExpectationHeaderValue]) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::Append(Windows.Web.Http.Headers.HttpExpectationHeaderValue)
    def append(self, value: HttpExpectationHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpExpectationHeaderValue> Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[HttpExpectationHeaderValue]: ...
    # Windows.Web.Http.Headers.HttpExpectationHeaderValue Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> HttpExpectationHeaderValue: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::GetMany(System.UInt32,Windows.Web.Http.Headers.HttpExpectationHeaderValue[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[HttpExpectationHeaderValue], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpExpectationHeaderValue> Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::GetView()
    def get_view(self) -> typing.Sequence[HttpExpectationHeaderValue]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::IndexOf(Windows.Web.Http.Headers.HttpExpectationHeaderValue,System.UInt32&)
    def index_of(self, value: HttpExpectationHeaderValue, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::InsertAt(System.UInt32,Windows.Web.Http.Headers.HttpExpectationHeaderValue)
    def insert_at(self, index: winrt.system.UInt32, value: HttpExpectationHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::ParseAdd(System.String)
    def parse_add(self, input: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::ReplaceAll(Windows.Web.Http.Headers.HttpExpectationHeaderValue[])
    def replace_all(self, items: typing.Union[winrt.system.Array[HttpExpectationHeaderValue], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::SetAt(System.UInt32,Windows.Web.Http.Headers.HttpExpectationHeaderValue)
    def set_at(self, index: winrt.system.UInt32, value: HttpExpectationHeaderValue, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::TryParseAdd(System.String)
    def try_parse_add(self, input: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class HttpLanguageHeaderValueCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableSequence[windows_globalization.Language]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[windows_globalization.Language]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> windows_globalization.Language: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[windows_globalization.Language]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: windows_globalization.Language) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[windows_globalization.Language]) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::Append(Windows.Globalization.Language)
    def append(self, value: windows_globalization.Language, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Globalization.Language> Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[windows_globalization.Language]: ...
    # Windows.Globalization.Language Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> windows_globalization.Language: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::GetMany(System.UInt32,Windows.Globalization.Language[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[windows_globalization.Language], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Globalization.Language> Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::GetView()
    def get_view(self) -> typing.Sequence[windows_globalization.Language]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::IndexOf(Windows.Globalization.Language,System.UInt32&)
    def index_of(self, value: windows_globalization.Language, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::InsertAt(System.UInt32,Windows.Globalization.Language)
    def insert_at(self, index: winrt.system.UInt32, value: windows_globalization.Language, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::ParseAdd(System.String)
    def parse_add(self, input: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::ReplaceAll(Windows.Globalization.Language[])
    def replace_all(self, items: typing.Union[winrt.system.Array[windows_globalization.Language], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::SetAt(System.UInt32,Windows.Globalization.Language)
    def set_at(self, index: winrt.system.UInt32, value: windows_globalization.Language, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::TryParseAdd(System.String)
    def try_parse_add(self, input: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class HttpLanguageRangeWithQualityHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpLanguageRangeWithQualityHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpLanguageRangeWithQualityHeaderValue]: ...

@typing.final
class HttpLanguageRangeWithQualityHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpLanguageRangeWithQualityHeaderValue_Static):
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], language_range: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], language_range: str, quality: winrt.system.Double) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue::ToString()
    def to_string(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue::get_LanguageRange()
    @_property
    def language_range(self) -> str: ...
    # Windows.Foundation.IReference`1<System.Double> Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue::get_Quality()
    @_property
    def quality(self) -> typing.Optional[winrt.system.Double]: ...

@typing.final
class HttpLanguageRangeWithQualityHeaderValueCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableSequence[HttpLanguageRangeWithQualityHeaderValue]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[HttpLanguageRangeWithQualityHeaderValue]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> HttpLanguageRangeWithQualityHeaderValue: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[HttpLanguageRangeWithQualityHeaderValue]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: HttpLanguageRangeWithQualityHeaderValue) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[HttpLanguageRangeWithQualityHeaderValue]) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::Append(Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue)
    def append(self, value: HttpLanguageRangeWithQualityHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue> Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[HttpLanguageRangeWithQualityHeaderValue]: ...
    # Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> HttpLanguageRangeWithQualityHeaderValue: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::GetMany(System.UInt32,Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[HttpLanguageRangeWithQualityHeaderValue], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue> Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::GetView()
    def get_view(self) -> typing.Sequence[HttpLanguageRangeWithQualityHeaderValue]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::IndexOf(Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue,System.UInt32&)
    def index_of(self, value: HttpLanguageRangeWithQualityHeaderValue, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::InsertAt(System.UInt32,Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue)
    def insert_at(self, index: winrt.system.UInt32, value: HttpLanguageRangeWithQualityHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::ParseAdd(System.String)
    def parse_add(self, input: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::ReplaceAll(Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue[])
    def replace_all(self, items: typing.Union[winrt.system.Array[HttpLanguageRangeWithQualityHeaderValue], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::SetAt(System.UInt32,Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue)
    def set_at(self, index: winrt.system.UInt32, value: HttpLanguageRangeWithQualityHeaderValue, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::TryParseAdd(System.String)
    def try_parse_add(self, input: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class HttpMediaTypeHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpMediaTypeHeaderValue Windows.Web.Http.Headers.HttpMediaTypeHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpMediaTypeHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpMediaTypeHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpMediaTypeHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpMediaTypeHeaderValue]: ...

@typing.final
class HttpMediaTypeHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpMediaTypeHeaderValue_Static):
    def __str__(self) -> str: ...
    def __new__(cls: typing.Type[Self], media_type: str) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpMediaTypeHeaderValue::ToString()
    def to_string(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpMediaTypeHeaderValue::get_MediaType()
    @_property
    def media_type(self) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpMediaTypeHeaderValue::put_MediaType(System.String)
    @media_type.setter
    def media_type(self, value: str) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpMediaTypeHeaderValue::get_CharSet()
    @_property
    def char_set(self) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpMediaTypeHeaderValue::put_CharSet(System.String)
    @char_set.setter
    def char_set(self, value: str) -> None: ...
    # Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue> Windows.Web.Http.Headers.HttpMediaTypeHeaderValue::get_Parameters()
    @_property
    def parameters(self) -> typing.MutableSequence[HttpNameValueHeaderValue]: ...

@typing.final
class HttpMediaTypeWithQualityHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpMediaTypeWithQualityHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpMediaTypeWithQualityHeaderValue]: ...

@typing.final
class HttpMediaTypeWithQualityHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpMediaTypeWithQualityHeaderValue_Static):
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], media_type: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], media_type: str, quality: winrt.system.Double) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue::ToString()
    def to_string(self) -> str: ...
    # Windows.Foundation.IReference`1<System.Double> Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue::get_Quality()
    @_property
    def quality(self) -> typing.Optional[winrt.system.Double]: ...
    # System.Void Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue::put_Quality(Windows.Foundation.IReference`1<System.Double>)
    @quality.setter
    def quality(self, value: typing.Optional[winrt.system.Double]) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue::get_MediaType()
    @_property
    def media_type(self) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue::put_MediaType(System.String)
    @media_type.setter
    def media_type(self, value: str) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue::get_CharSet()
    @_property
    def char_set(self) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue::put_CharSet(System.String)
    @char_set.setter
    def char_set(self, value: str) -> None: ...
    # Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue> Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue::get_Parameters()
    @_property
    def parameters(self) -> typing.MutableSequence[HttpNameValueHeaderValue]: ...

@typing.final
class HttpMediaTypeWithQualityHeaderValueCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableSequence[HttpMediaTypeWithQualityHeaderValue]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[HttpMediaTypeWithQualityHeaderValue]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> HttpMediaTypeWithQualityHeaderValue: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[HttpMediaTypeWithQualityHeaderValue]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: HttpMediaTypeWithQualityHeaderValue) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[HttpMediaTypeWithQualityHeaderValue]) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::Append(Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue)
    def append(self, value: HttpMediaTypeWithQualityHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue> Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[HttpMediaTypeWithQualityHeaderValue]: ...
    # Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> HttpMediaTypeWithQualityHeaderValue: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::GetMany(System.UInt32,Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[HttpMediaTypeWithQualityHeaderValue], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue> Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::GetView()
    def get_view(self) -> typing.Sequence[HttpMediaTypeWithQualityHeaderValue]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::IndexOf(Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue,System.UInt32&)
    def index_of(self, value: HttpMediaTypeWithQualityHeaderValue, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::InsertAt(System.UInt32,Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue)
    def insert_at(self, index: winrt.system.UInt32, value: HttpMediaTypeWithQualityHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::ParseAdd(System.String)
    def parse_add(self, input: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::ReplaceAll(Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue[])
    def replace_all(self, items: typing.Union[winrt.system.Array[HttpMediaTypeWithQualityHeaderValue], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::SetAt(System.UInt32,Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue)
    def set_at(self, index: winrt.system.UInt32, value: HttpMediaTypeWithQualityHeaderValue, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::TryParseAdd(System.String)
    def try_parse_add(self, input: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class HttpMethodHeaderValueCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableSequence[windows_web_http.HttpMethod]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[windows_web_http.HttpMethod]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> windows_web_http.HttpMethod: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[windows_web_http.HttpMethod]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: windows_web_http.HttpMethod) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[windows_web_http.HttpMethod]) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::Append(Windows.Web.Http.HttpMethod)
    def append(self, value: windows_web_http.HttpMethod, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.HttpMethod> Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[windows_web_http.HttpMethod]: ...
    # Windows.Web.Http.HttpMethod Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> windows_web_http.HttpMethod: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::GetMany(System.UInt32,Windows.Web.Http.HttpMethod[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[windows_web_http.HttpMethod], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.HttpMethod> Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::GetView()
    def get_view(self) -> typing.Sequence[windows_web_http.HttpMethod]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::IndexOf(Windows.Web.Http.HttpMethod,System.UInt32&)
    def index_of(self, value: windows_web_http.HttpMethod, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::InsertAt(System.UInt32,Windows.Web.Http.HttpMethod)
    def insert_at(self, index: winrt.system.UInt32, value: windows_web_http.HttpMethod, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::ParseAdd(System.String)
    def parse_add(self, input: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::ReplaceAll(Windows.Web.Http.HttpMethod[])
    def replace_all(self, items: typing.Union[winrt.system.Array[windows_web_http.HttpMethod], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::SetAt(System.UInt32,Windows.Web.Http.HttpMethod)
    def set_at(self, index: winrt.system.UInt32, value: windows_web_http.HttpMethod, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::TryParseAdd(System.String)
    def try_parse_add(self, input: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpMethodHeaderValueCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class HttpNameValueHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpNameValueHeaderValue Windows.Web.Http.Headers.HttpNameValueHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpNameValueHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpNameValueHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpNameValueHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpNameValueHeaderValue]: ...

@typing.final
class HttpNameValueHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpNameValueHeaderValue_Static):
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], name: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], name: str, value: str) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpNameValueHeaderValue::ToString()
    def to_string(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpNameValueHeaderValue::get_Value()
    @_property
    def value(self) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpNameValueHeaderValue::put_Value(System.String)
    @value.setter
    def value(self, value: str) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpNameValueHeaderValue::get_Name()
    @_property
    def name(self) -> str: ...

@typing.final
class HttpProductHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpProductHeaderValue Windows.Web.Http.Headers.HttpProductHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpProductHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpProductHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpProductHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpProductHeaderValue]: ...

@typing.final
class HttpProductHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpProductHeaderValue_Static):
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], product_name: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], product_name: str, product_version: str) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpProductHeaderValue::ToString()
    def to_string(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpProductHeaderValue::get_Name()
    @_property
    def name(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpProductHeaderValue::get_Version()
    @_property
    def version(self) -> str: ...

@typing.final
class HttpProductInfoHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpProductInfoHeaderValue Windows.Web.Http.Headers.HttpProductInfoHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpProductInfoHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpProductInfoHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpProductInfoHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpProductInfoHeaderValue]: ...

@typing.final
class HttpProductInfoHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpProductInfoHeaderValue_Static):
    def __str__(self) -> str: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], product_comment: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], product_name: str, product_version: str) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpProductInfoHeaderValue::ToString()
    def to_string(self) -> str: ...
    # System.String Windows.Web.Http.Headers.HttpProductInfoHeaderValue::get_Comment()
    @_property
    def comment(self) -> str: ...
    # Windows.Web.Http.Headers.HttpProductHeaderValue Windows.Web.Http.Headers.HttpProductInfoHeaderValue::get_Product()
    @_property
    def product(self) -> HttpProductHeaderValue: ...

@typing.final
class HttpProductInfoHeaderValueCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableSequence[HttpProductInfoHeaderValue]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[HttpProductInfoHeaderValue]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> HttpProductInfoHeaderValue: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[HttpProductInfoHeaderValue]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: HttpProductInfoHeaderValue) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[HttpProductInfoHeaderValue]) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::Append(Windows.Web.Http.Headers.HttpProductInfoHeaderValue)
    def append(self, value: HttpProductInfoHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpProductInfoHeaderValue> Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[HttpProductInfoHeaderValue]: ...
    # Windows.Web.Http.Headers.HttpProductInfoHeaderValue Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> HttpProductInfoHeaderValue: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::GetMany(System.UInt32,Windows.Web.Http.Headers.HttpProductInfoHeaderValue[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[HttpProductInfoHeaderValue], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpProductInfoHeaderValue> Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::GetView()
    def get_view(self) -> typing.Sequence[HttpProductInfoHeaderValue]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::IndexOf(Windows.Web.Http.Headers.HttpProductInfoHeaderValue,System.UInt32&)
    def index_of(self, value: HttpProductInfoHeaderValue, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::InsertAt(System.UInt32,Windows.Web.Http.Headers.HttpProductInfoHeaderValue)
    def insert_at(self, index: winrt.system.UInt32, value: HttpProductInfoHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::ParseAdd(System.String)
    def parse_add(self, input: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::ReplaceAll(Windows.Web.Http.Headers.HttpProductInfoHeaderValue[])
    def replace_all(self, items: typing.Union[winrt.system.Array[HttpProductInfoHeaderValue], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::SetAt(System.UInt32,Windows.Web.Http.Headers.HttpProductInfoHeaderValue)
    def set_at(self, index: winrt.system.UInt32, value: HttpProductInfoHeaderValue, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::TryParseAdd(System.String)
    def try_parse_add(self, input: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class HttpRequestHeaderCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableMapping[str, str]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[str]: ...
    def __contains__(self, key: object) -> bool: ...
    def __getitem__(self, key: str) -> str: ...
    def __setitem__(self, key: str, value: str) -> None: ...
    def __delitem__(self, key: str) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpRequestHeaderCollection::Append(System.String,System.String)
    def append(self, name: str, value: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpRequestHeaderCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<System.String,System.String>> Windows.Web.Http.Headers.HttpRequestHeaderCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[windows_foundation_collections.IKeyValuePair[str, str]]: ...
    # Windows.Foundation.Collections.IMapView`2<System.String,System.String> Windows.Web.Http.Headers.HttpRequestHeaderCollection::GetView()
    def get_view(self) -> typing.Mapping[str, str]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpRequestHeaderCollection::HasKey(System.String)
    def has_key(self, key: str, /) -> bool: ...
    # System.Boolean Windows.Web.Http.Headers.HttpRequestHeaderCollection::Insert(System.String,System.String)
    def insert(self, key: str, value: str, /) -> bool: ...
    # System.String Windows.Web.Http.Headers.HttpRequestHeaderCollection::Lookup(System.String)
    def lookup(self, key: str, /) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpRequestHeaderCollection::Remove(System.String)
    def remove(self, key: str, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpRequestHeaderCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpRequestHeaderCollection::TryAppendWithoutValidation(System.String,System.String)
    def try_append_without_validation(self, name: str, value: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...
    # Windows.Foundation.Uri Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_Referer()
    @_property
    def referer(self) -> windows_foundation.Uri: ...
    # System.Void Windows.Web.Http.Headers.HttpRequestHeaderCollection::put_Referer(Windows.Foundation.Uri)
    @referer.setter
    def referer(self, value: windows_foundation.Uri) -> None: ...
    # Windows.Web.Http.Headers.HttpCredentialsHeaderValue Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_ProxyAuthorization()
    @_property
    def proxy_authorization(self) -> HttpCredentialsHeaderValue: ...
    # System.Void Windows.Web.Http.Headers.HttpRequestHeaderCollection::put_ProxyAuthorization(Windows.Web.Http.Headers.HttpCredentialsHeaderValue)
    @proxy_authorization.setter
    def proxy_authorization(self, value: HttpCredentialsHeaderValue) -> None: ...
    # Windows.Foundation.IReference`1<System.UInt32> Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_MaxForwards()
    @_property
    def max_forwards(self) -> typing.Optional[winrt.system.UInt32]: ...
    # System.Void Windows.Web.Http.Headers.HttpRequestHeaderCollection::put_MaxForwards(Windows.Foundation.IReference`1<System.UInt32>)
    @max_forwards.setter
    def max_forwards(self, value: typing.Optional[winrt.system.UInt32]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_IfUnmodifiedSince()
    @_property
    def if_unmodified_since(self) -> typing.Optional[datetime.datetime]: ...
    # System.Void Windows.Web.Http.Headers.HttpRequestHeaderCollection::put_IfUnmodifiedSince(Windows.Foundation.IReference`1<Windows.Foundation.DateTime>)
    @if_unmodified_since.setter
    def if_unmodified_since(self, value: typing.Optional[datetime.datetime]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_IfModifiedSince()
    @_property
    def if_modified_since(self) -> typing.Optional[datetime.datetime]: ...
    # System.Void Windows.Web.Http.Headers.HttpRequestHeaderCollection::put_IfModifiedSince(Windows.Foundation.IReference`1<Windows.Foundation.DateTime>)
    @if_modified_since.setter
    def if_modified_since(self, value: typing.Optional[datetime.datetime]) -> None: ...
    # Windows.Networking.HostName Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_Host()
    @_property
    def host(self) -> windows_networking.HostName: ...
    # System.Void Windows.Web.Http.Headers.HttpRequestHeaderCollection::put_Host(Windows.Networking.HostName)
    @host.setter
    def host(self, value: windows_networking.HostName) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_From()
    @_property
    def from_(self) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpRequestHeaderCollection::put_From(System.String)
    @from_.setter
    def from_(self, value: str) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_Date()
    @_property
    def date(self) -> typing.Optional[datetime.datetime]: ...
    # System.Void Windows.Web.Http.Headers.HttpRequestHeaderCollection::put_Date(Windows.Foundation.IReference`1<Windows.Foundation.DateTime>)
    @date.setter
    def date(self, value: typing.Optional[datetime.datetime]) -> None: ...
    # Windows.Web.Http.Headers.HttpCredentialsHeaderValue Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_Authorization()
    @_property
    def authorization(self) -> HttpCredentialsHeaderValue: ...
    # System.Void Windows.Web.Http.Headers.HttpRequestHeaderCollection::put_Authorization(Windows.Web.Http.Headers.HttpCredentialsHeaderValue)
    @authorization.setter
    def authorization(self, value: HttpCredentialsHeaderValue) -> None: ...
    # Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_Accept()
    @_property
    def accept(self) -> HttpMediaTypeWithQualityHeaderValueCollection: ...
    # Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_AcceptEncoding()
    @_property
    def accept_encoding(self) -> HttpContentCodingWithQualityHeaderValueCollection: ...
    # Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_AcceptLanguage()
    @_property
    def accept_language(self) -> HttpLanguageRangeWithQualityHeaderValueCollection: ...
    # Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_CacheControl()
    @_property
    def cache_control(self) -> HttpCacheDirectiveHeaderValueCollection: ...
    # Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_Connection()
    @_property
    def connection(self) -> HttpConnectionOptionHeaderValueCollection: ...
    # Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_Cookie()
    @_property
    def cookie(self) -> HttpCookiePairHeaderValueCollection: ...
    # Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_Expect()
    @_property
    def expect(self) -> HttpExpectationHeaderValueCollection: ...
    # Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_TransferEncoding()
    @_property
    def transfer_encoding(self) -> HttpTransferCodingHeaderValueCollection: ...
    # Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection Windows.Web.Http.Headers.HttpRequestHeaderCollection::get_UserAgent()
    @_property
    def user_agent(self) -> HttpProductInfoHeaderValueCollection: ...

@typing.final
class HttpResponseHeaderCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableMapping[str, str]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[str]: ...
    def __contains__(self, key: object) -> bool: ...
    def __getitem__(self, key: str) -> str: ...
    def __setitem__(self, key: str, value: str) -> None: ...
    def __delitem__(self, key: str) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpResponseHeaderCollection::Append(System.String,System.String)
    def append(self, name: str, value: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpResponseHeaderCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<System.String,System.String>> Windows.Web.Http.Headers.HttpResponseHeaderCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[windows_foundation_collections.IKeyValuePair[str, str]]: ...
    # Windows.Foundation.Collections.IMapView`2<System.String,System.String> Windows.Web.Http.Headers.HttpResponseHeaderCollection::GetView()
    def get_view(self) -> typing.Mapping[str, str]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpResponseHeaderCollection::HasKey(System.String)
    def has_key(self, key: str, /) -> bool: ...
    # System.Boolean Windows.Web.Http.Headers.HttpResponseHeaderCollection::Insert(System.String,System.String)
    def insert(self, key: str, value: str, /) -> bool: ...
    # System.String Windows.Web.Http.Headers.HttpResponseHeaderCollection::Lookup(System.String)
    def lookup(self, key: str, /) -> str: ...
    # System.Void Windows.Web.Http.Headers.HttpResponseHeaderCollection::Remove(System.String)
    def remove(self, key: str, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpResponseHeaderCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpResponseHeaderCollection::TryAppendWithoutValidation(System.String,System.String)
    def try_append_without_validation(self, name: str, value: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpResponseHeaderCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...
    # Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue Windows.Web.Http.Headers.HttpResponseHeaderCollection::get_RetryAfter()
    @_property
    def retry_after(self) -> HttpDateOrDeltaHeaderValue: ...
    # System.Void Windows.Web.Http.Headers.HttpResponseHeaderCollection::put_RetryAfter(Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue)
    @retry_after.setter
    def retry_after(self, value: HttpDateOrDeltaHeaderValue) -> None: ...
    # Windows.Foundation.Uri Windows.Web.Http.Headers.HttpResponseHeaderCollection::get_Location()
    @_property
    def location(self) -> windows_foundation.Uri: ...
    # System.Void Windows.Web.Http.Headers.HttpResponseHeaderCollection::put_Location(Windows.Foundation.Uri)
    @location.setter
    def location(self, value: windows_foundation.Uri) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.Web.Http.Headers.HttpResponseHeaderCollection::get_Date()
    @_property
    def date(self) -> typing.Optional[datetime.datetime]: ...
    # System.Void Windows.Web.Http.Headers.HttpResponseHeaderCollection::put_Date(Windows.Foundation.IReference`1<Windows.Foundation.DateTime>)
    @date.setter
    def date(self, value: typing.Optional[datetime.datetime]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan> Windows.Web.Http.Headers.HttpResponseHeaderCollection::get_Age()
    @_property
    def age(self) -> typing.Optional[datetime.timedelta]: ...
    # System.Void Windows.Web.Http.Headers.HttpResponseHeaderCollection::put_Age(Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan>)
    @age.setter
    def age(self, value: typing.Optional[datetime.timedelta]) -> None: ...
    # Windows.Web.Http.Headers.HttpMethodHeaderValueCollection Windows.Web.Http.Headers.HttpResponseHeaderCollection::get_Allow()
    @_property
    def allow(self) -> HttpMethodHeaderValueCollection: ...
    # Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection Windows.Web.Http.Headers.HttpResponseHeaderCollection::get_CacheControl()
    @_property
    def cache_control(self) -> HttpCacheDirectiveHeaderValueCollection: ...
    # Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection Windows.Web.Http.Headers.HttpResponseHeaderCollection::get_Connection()
    @_property
    def connection(self) -> HttpConnectionOptionHeaderValueCollection: ...
    # Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection Windows.Web.Http.Headers.HttpResponseHeaderCollection::get_ProxyAuthenticate()
    @_property
    def proxy_authenticate(self) -> HttpChallengeHeaderValueCollection: ...
    # Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection Windows.Web.Http.Headers.HttpResponseHeaderCollection::get_TransferEncoding()
    @_property
    def transfer_encoding(self) -> HttpTransferCodingHeaderValueCollection: ...
    # Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection Windows.Web.Http.Headers.HttpResponseHeaderCollection::get_WwwAuthenticate()
    @_property
    def www_authenticate(self) -> HttpChallengeHeaderValueCollection: ...

@typing.final
class HttpTransferCodingHeaderValue_Static(type):
    # Windows.Web.Http.Headers.HttpTransferCodingHeaderValue Windows.Web.Http.Headers.HttpTransferCodingHeaderValue::Parse(System.String)
    def parse(cls, input: str, /) -> HttpTransferCodingHeaderValue: ...
    # System.Boolean Windows.Web.Http.Headers.HttpTransferCodingHeaderValue::TryParse(System.String,Windows.Web.Http.Headers.HttpTransferCodingHeaderValue&)
    def try_parse(cls, input: str, /) -> typing.Tuple[bool, HttpTransferCodingHeaderValue]: ...

@typing.final
class HttpTransferCodingHeaderValue(winrt.system.Object, windows_foundation.IStringable, metaclass=HttpTransferCodingHeaderValue_Static):
    def __str__(self) -> str: ...
    def __new__(cls: typing.Type[Self], input: str) -> Self: ...
    # System.String Windows.Web.Http.Headers.HttpTransferCodingHeaderValue::ToString()
    def to_string(self) -> str: ...
    # Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue> Windows.Web.Http.Headers.HttpTransferCodingHeaderValue::get_Parameters()
    @_property
    def parameters(self) -> typing.MutableSequence[HttpNameValueHeaderValue]: ...
    # System.String Windows.Web.Http.Headers.HttpTransferCodingHeaderValue::get_Value()
    @_property
    def value(self) -> str: ...

@typing.final
class HttpTransferCodingHeaderValueCollection(winrt.system.Object, windows_foundation.IStringable, winrt._winrt.MutableSequence[HttpTransferCodingHeaderValue]):
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[HttpTransferCodingHeaderValue]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> HttpTransferCodingHeaderValue: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[HttpTransferCodingHeaderValue]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: HttpTransferCodingHeaderValue) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[HttpTransferCodingHeaderValue]) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::Append(Windows.Web.Http.Headers.HttpTransferCodingHeaderValue)
    def append(self, value: HttpTransferCodingHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpTransferCodingHeaderValue> Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[HttpTransferCodingHeaderValue]: ...
    # Windows.Web.Http.Headers.HttpTransferCodingHeaderValue Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> HttpTransferCodingHeaderValue: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::GetMany(System.UInt32,Windows.Web.Http.Headers.HttpTransferCodingHeaderValue[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[HttpTransferCodingHeaderValue], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpTransferCodingHeaderValue> Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::GetView()
    def get_view(self) -> typing.Sequence[HttpTransferCodingHeaderValue]: ...
    # System.Boolean Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::IndexOf(Windows.Web.Http.Headers.HttpTransferCodingHeaderValue,System.UInt32&)
    def index_of(self, value: HttpTransferCodingHeaderValue, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::InsertAt(System.UInt32,Windows.Web.Http.Headers.HttpTransferCodingHeaderValue)
    def insert_at(self, index: winrt.system.UInt32, value: HttpTransferCodingHeaderValue, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::ParseAdd(System.String)
    def parse_add(self, input: str, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::ReplaceAll(Windows.Web.Http.Headers.HttpTransferCodingHeaderValue[])
    def replace_all(self, items: typing.Union[winrt.system.Array[HttpTransferCodingHeaderValue], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::SetAt(System.UInt32,Windows.Web.Http.Headers.HttpTransferCodingHeaderValue)
    def set_at(self, index: winrt.system.UInt32, value: HttpTransferCodingHeaderValue, /) -> None: ...
    # System.String Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::ToString()
    def to_string(self) -> str: ...
    # System.Boolean Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::TryParseAdd(System.String)
    def try_parse_add(self, input: str, /) -> bool: ...
    # System.UInt32 Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

