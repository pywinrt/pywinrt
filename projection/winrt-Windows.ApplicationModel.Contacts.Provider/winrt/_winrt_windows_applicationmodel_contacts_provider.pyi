# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.1.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.contacts as windows_applicationmodel_contacts
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections

from winrt.windows.applicationmodel.contacts.provider import AddContactResult

Self = typing.TypeVar('Self')

@typing.final
class ContactPickerUI(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactPickerUI: ...
    @typing.overload
    def add_contact(self, contact: typing.Optional[windows_applicationmodel_contacts.Contact], /) -> AddContactResult: ...
    @typing.overload
    def add_contact(self, id: str, contact: typing.Optional[windows_applicationmodel_contacts.Contact], /) -> AddContactResult: ...
    def contains_contact(self, id: str, /) -> bool: ...
    def remove_contact(self, id: str, /) -> None: ...
    def add_contact_removed(self, handler: windows_foundation.TypedEventHandler[ContactPickerUI, ContactRemovedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_contact_removed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def desired_fields(self) -> typing.Optional[windows_foundation_collections.IVectorView[str]]: ...
    @_property
    def selection_mode(self) -> windows_applicationmodel_contacts.ContactSelectionMode: ...
    @_property
    def desired_fields_with_contact_field_type(self) -> typing.Optional[windows_foundation_collections.IVector[windows_applicationmodel_contacts.ContactFieldType]]: ...

@typing.final
class ContactRemovedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactRemovedEventArgs: ...
    @_property
    def id(self) -> str: ...

