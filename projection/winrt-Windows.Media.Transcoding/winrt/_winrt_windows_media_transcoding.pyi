# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.media.core as windows_media_core
import winrt.windows.media.mediaproperties as windows_media_mediaproperties
import winrt.windows.storage as windows_storage
import winrt.windows.storage.streams as windows_storage_streams

from winrt.windows.media.transcoding import MediaVideoProcessingAlgorithm, TranscodeFailureReason

Self = typing.TypeVar('Self')

@typing.final
class MediaTranscoder(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.Media.Transcoding.MediaTranscoder::AddAudioEffect(System.String)
    def add_audio_effect(self, activatable_class_id: str, /) -> None: ...
    # System.Void Windows.Media.Transcoding.MediaTranscoder::AddAudioEffect(System.String,System.Boolean,Windows.Foundation.Collections.IPropertySet)
    def add_audio_effect_with_settings(self, activatable_class_id: str, effect_required: bool, configuration: windows_foundation_collections.ImplementsIPropertySet, /) -> None: ...
    # System.Void Windows.Media.Transcoding.MediaTranscoder::AddVideoEffect(System.String)
    def add_video_effect(self, activatable_class_id: str, /) -> None: ...
    # System.Void Windows.Media.Transcoding.MediaTranscoder::AddVideoEffect(System.String,System.Boolean,Windows.Foundation.Collections.IPropertySet)
    def add_video_effect_with_settings(self, activatable_class_id: str, effect_required: bool, configuration: windows_foundation_collections.ImplementsIPropertySet, /) -> None: ...
    # System.Void Windows.Media.Transcoding.MediaTranscoder::ClearEffects()
    def clear_effects(self) -> None: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Media.Transcoding.PrepareTranscodeResult> Windows.Media.Transcoding.MediaTranscoder::PrepareFileTranscodeAsync(Windows.Storage.IStorageFile,Windows.Storage.IStorageFile,Windows.Media.MediaProperties.MediaEncodingProfile)
    def prepare_file_transcode_async(self, source: windows_storage.ImplementsIStorageFile, destination: windows_storage.ImplementsIStorageFile, profile: windows_media_mediaproperties.MediaEncodingProfile, /) -> windows_foundation.IAsyncOperation[PrepareTranscodeResult]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Media.Transcoding.PrepareTranscodeResult> Windows.Media.Transcoding.MediaTranscoder::PrepareMediaStreamSourceTranscodeAsync(Windows.Media.Core.IMediaSource,Windows.Storage.Streams.IRandomAccessStream,Windows.Media.MediaProperties.MediaEncodingProfile)
    def prepare_media_stream_source_transcode_async(self, source: windows_media_core.ImplementsIMediaSource, destination: windows_storage_streams.ImplementsIRandomAccessStream, profile: windows_media_mediaproperties.MediaEncodingProfile, /) -> windows_foundation.IAsyncOperation[PrepareTranscodeResult]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Media.Transcoding.PrepareTranscodeResult> Windows.Media.Transcoding.MediaTranscoder::PrepareStreamTranscodeAsync(Windows.Storage.Streams.IRandomAccessStream,Windows.Storage.Streams.IRandomAccessStream,Windows.Media.MediaProperties.MediaEncodingProfile)
    def prepare_stream_transcode_async(self, source: windows_storage_streams.ImplementsIRandomAccessStream, destination: windows_storage_streams.ImplementsIRandomAccessStream, profile: windows_media_mediaproperties.MediaEncodingProfile, /) -> windows_foundation.IAsyncOperation[PrepareTranscodeResult]: ...
    # Windows.Foundation.TimeSpan Windows.Media.Transcoding.MediaTranscoder::get_TrimStopTime()
    @_property
    def trim_stop_time(self) -> datetime.timedelta: ...
    # System.Void Windows.Media.Transcoding.MediaTranscoder::put_TrimStopTime(Windows.Foundation.TimeSpan)
    @trim_stop_time.setter
    def trim_stop_time(self, value: datetime.timedelta) -> None: ...
    # Windows.Foundation.TimeSpan Windows.Media.Transcoding.MediaTranscoder::get_TrimStartTime()
    @_property
    def trim_start_time(self) -> datetime.timedelta: ...
    # System.Void Windows.Media.Transcoding.MediaTranscoder::put_TrimStartTime(Windows.Foundation.TimeSpan)
    @trim_start_time.setter
    def trim_start_time(self, value: datetime.timedelta) -> None: ...
    # System.Boolean Windows.Media.Transcoding.MediaTranscoder::get_HardwareAccelerationEnabled()
    @_property
    def hardware_acceleration_enabled(self) -> bool: ...
    # System.Void Windows.Media.Transcoding.MediaTranscoder::put_HardwareAccelerationEnabled(System.Boolean)
    @hardware_acceleration_enabled.setter
    def hardware_acceleration_enabled(self, value: bool) -> None: ...
    # System.Boolean Windows.Media.Transcoding.MediaTranscoder::get_AlwaysReencode()
    @_property
    def always_reencode(self) -> bool: ...
    # System.Void Windows.Media.Transcoding.MediaTranscoder::put_AlwaysReencode(System.Boolean)
    @always_reencode.setter
    def always_reencode(self, value: bool) -> None: ...
    # Windows.Media.Transcoding.MediaVideoProcessingAlgorithm Windows.Media.Transcoding.MediaTranscoder::get_VideoProcessingAlgorithm()
    @_property
    def video_processing_algorithm(self) -> MediaVideoProcessingAlgorithm: ...
    # System.Void Windows.Media.Transcoding.MediaTranscoder::put_VideoProcessingAlgorithm(Windows.Media.Transcoding.MediaVideoProcessingAlgorithm)
    @video_processing_algorithm.setter
    def video_processing_algorithm(self, value: MediaVideoProcessingAlgorithm) -> None: ...

@typing.final
class PrepareTranscodeResult(winrt.system.Object):
    # Windows.Foundation.IAsyncActionWithProgress`1<System.Double> Windows.Media.Transcoding.PrepareTranscodeResult::TranscodeAsync()
    def transcode_async(self) -> windows_foundation.IAsyncActionWithProgress[winrt.system.Double]: ...
    # System.Boolean Windows.Media.Transcoding.PrepareTranscodeResult::get_CanTranscode()
    @_property
    def can_transcode(self) -> bool: ...
    # Windows.Media.Transcoding.TranscodeFailureReason Windows.Media.Transcoding.PrepareTranscodeResult::get_FailureReason()
    @_property
    def failure_reason(self) -> TranscodeFailureReason: ...

