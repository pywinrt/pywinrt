# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.foundation.numerics as windows_foundation_numerics
import winrt.windows.graphics as windows_graphics
import winrt.windows.graphics.directx as windows_graphics_directx
import winrt.windows.graphics.effects as windows_graphics_effects
import winrt.windows.system as windows_system
import winrt.windows.ui as windows_ui
import winrt.windows.ui.core as windows_ui_core

from winrt.windows.ui.composition import AnimationControllerProgressBehavior, AnimationDelayBehavior, AnimationDirection, AnimationIterationBehavior, AnimationPropertyAccessMode, AnimationStopBehavior, CompositionBackfaceVisibility, CompositionBatchTypes, CompositionBitmapInterpolationMode, CompositionBorderMode, CompositionColorSpace, CompositionCompositeMode, CompositionDropShadowSourcePolicy, CompositionEasingFunctionMode, CompositionEffectFactoryLoadStatus, CompositionGetValueStatus, CompositionGradientExtendMode, CompositionMappingMode, CompositionStretch, CompositionStrokeCap, CompositionStrokeLineJoin

Self = typing.TypeVar('Self')

@typing.final
class InkTrailPoint:
    point: windows_foundation.Point
    radius: winrt.system.Single
    def __init__(self, point: windows_foundation.Point = windows_foundation.Point(), radius: winrt.system.Single = 0) -> None: ...

@typing.final
class AmbientLight(CompositionLight):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AmbientLight: ...
    @_property
    def color(self) -> windows_ui.Color: ...
    @color.setter
    def color(self, value: windows_ui.Color) -> None: ...
    @_property
    def intensity(self) -> winrt.system.Single: ...
    @intensity.setter
    def intensity(self, value: winrt.system.Single) -> None: ...

@typing.final
class AnimationController_Static(CompositionObject_Static):
    @_property
    def max_playback_rate(cls) -> winrt.system.Single: ...
    @_property
    def min_playback_rate(cls) -> winrt.system.Single: ...

@typing.final
class AnimationController(CompositionObject, metaclass=AnimationController_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AnimationController: ...
    def pause(self) -> None: ...
    def resume(self) -> None: ...
    @_property
    def progress_behavior(self) -> AnimationControllerProgressBehavior: ...
    @progress_behavior.setter
    def progress_behavior(self, value: AnimationControllerProgressBehavior) -> None: ...
    @_property
    def progress(self) -> winrt.system.Single: ...
    @progress.setter
    def progress(self, value: winrt.system.Single) -> None: ...
    @_property
    def playback_rate(self) -> winrt.system.Single: ...
    @playback_rate.setter
    def playback_rate(self, value: winrt.system.Single) -> None: ...

@typing.final
class AnimationPropertyInfo(CompositionObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AnimationPropertyInfo: ...
    def get_resolved_composition_object(self) -> CompositionObject: ...
    def get_resolved_composition_object_property(self) -> str: ...
    @_property
    def access_mode(self) -> AnimationPropertyAccessMode: ...
    @access_mode.setter
    def access_mode(self, value: AnimationPropertyAccessMode) -> None: ...

@typing.final
class BackEasingFunction(CompositionEasingFunction):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BackEasingFunction: ...
    @_property
    def amplitude(self) -> winrt.system.Single: ...
    @_property
    def mode(self) -> CompositionEasingFunctionMode: ...

@typing.final
class BooleanKeyFrameAnimation(KeyFrameAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BooleanKeyFrameAnimation: ...
    def insert_key_frame(self, normalized_progress_key: winrt.system.Single, value: bool, /) -> None: ...

@typing.final
class BounceEasingFunction(CompositionEasingFunction):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BounceEasingFunction: ...
    @_property
    def bounces(self) -> winrt.system.Int32: ...
    @_property
    def bounciness(self) -> winrt.system.Single: ...
    @_property
    def mode(self) -> CompositionEasingFunctionMode: ...

@typing.final
class BounceScalarNaturalMotionAnimation(ScalarNaturalMotionAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BounceScalarNaturalMotionAnimation: ...
    @_property
    def restitution(self) -> winrt.system.Single: ...
    @restitution.setter
    def restitution(self, value: winrt.system.Single) -> None: ...
    @_property
    def acceleration(self) -> winrt.system.Single: ...
    @acceleration.setter
    def acceleration(self, value: winrt.system.Single) -> None: ...

@typing.final
class BounceVector2NaturalMotionAnimation(Vector2NaturalMotionAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BounceVector2NaturalMotionAnimation: ...
    @_property
    def restitution(self) -> winrt.system.Single: ...
    @restitution.setter
    def restitution(self, value: winrt.system.Single) -> None: ...
    @_property
    def acceleration(self) -> winrt.system.Single: ...
    @acceleration.setter
    def acceleration(self, value: winrt.system.Single) -> None: ...

@typing.final
class BounceVector3NaturalMotionAnimation(Vector3NaturalMotionAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BounceVector3NaturalMotionAnimation: ...
    @_property
    def restitution(self) -> winrt.system.Single: ...
    @restitution.setter
    def restitution(self, value: winrt.system.Single) -> None: ...
    @_property
    def acceleration(self) -> winrt.system.Single: ...
    @acceleration.setter
    def acceleration(self, value: winrt.system.Single) -> None: ...

@typing.final
class CircleEasingFunction(CompositionEasingFunction):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CircleEasingFunction: ...
    @_property
    def mode(self) -> CompositionEasingFunctionMode: ...

@typing.final
class ColorKeyFrameAnimation(KeyFrameAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ColorKeyFrameAnimation: ...
    def insert_key_frame(self, normalized_progress_key: winrt.system.Single, value: windows_ui.Color, /) -> None: ...
    def insert_key_frame_with_easing_function(self, normalized_progress_key: winrt.system.Single, value: windows_ui.Color, easing_function: CompositionEasingFunction, /) -> None: ...
    @_property
    def interpolation_color_space(self) -> CompositionColorSpace: ...
    @interpolation_color_space.setter
    def interpolation_color_space(self, value: CompositionColorSpace) -> None: ...

class CompositionAnimation_Static(CompositionObject_Static):
    pass

class CompositionAnimation(CompositionObject, ImplementsICompositionAnimationBase, metaclass=CompositionAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionAnimation: ...
    @typing.final
    def clear_all_parameters(self) -> None: ...
    @typing.final
    def clear_parameter(self, key: str, /) -> None: ...
    @typing.final
    def set_boolean_parameter(self, key: str, value: bool, /) -> None: ...
    @typing.final
    def set_color_parameter(self, key: str, value: windows_ui.Color, /) -> None: ...
    @typing.final
    def set_expression_reference_parameter(self, parameter_name: str, source: ImplementsIAnimationObject, /) -> None: ...
    @typing.final
    def set_matrix3x2_parameter(self, key: str, value: windows_foundation_numerics.Matrix3x2, /) -> None: ...
    @typing.final
    def set_matrix4x4_parameter(self, key: str, value: windows_foundation_numerics.Matrix4x4, /) -> None: ...
    @typing.final
    def set_quaternion_parameter(self, key: str, value: windows_foundation_numerics.Quaternion, /) -> None: ...
    @typing.final
    def set_reference_parameter(self, key: str, composition_object: CompositionObject, /) -> None: ...
    @typing.final
    def set_scalar_parameter(self, key: str, value: winrt.system.Single, /) -> None: ...
    @typing.final
    def set_vector2_parameter(self, key: str, value: windows_foundation_numerics.Vector2, /) -> None: ...
    @typing.final
    def set_vector3_parameter(self, key: str, value: windows_foundation_numerics.Vector3, /) -> None: ...
    @typing.final
    def set_vector4_parameter(self, key: str, value: windows_foundation_numerics.Vector4, /) -> None: ...
    @_property
    def target(self) -> str: ...
    @target.setter
    def target(self, value: str) -> None: ...
    @_property
    def initial_value_expressions(self) -> InitialValueExpressionCollection: ...

@typing.final
class CompositionAnimationGroup(CompositionObject, ImplementsICompositionAnimationBase):
    def __iter__(self) -> windows_foundation_collections.IIterator[CompositionAnimation]: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionAnimationGroup: ...
    def add(self, value: CompositionAnimation, /) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[CompositionAnimation]: ...
    def remove(self, value: CompositionAnimation, /) -> None: ...
    def remove_all(self) -> None: ...
    @_property
    def count(self) -> winrt.system.Int32: ...

@typing.final
class CompositionBackdropBrush(CompositionBrush):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionBackdropBrush: ...

@typing.final
class CompositionBatchCompletedEventArgs(CompositionObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionBatchCompletedEventArgs: ...

class CompositionBrush_Static(CompositionObject_Static):
    pass

class CompositionBrush(CompositionObject, metaclass=CompositionBrush_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionBrush: ...

@typing.final
class CompositionCapabilities_Static(type):
    def get_for_current_view(cls) -> CompositionCapabilities: ...

@typing.final
class CompositionCapabilities(winrt.system.Object, metaclass=CompositionCapabilities_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionCapabilities: ...
    def are_effects_fast(self) -> bool: ...
    def are_effects_supported(self) -> bool: ...
    def add_changed(self, handler: windows_foundation.TypedEventHandler[CompositionCapabilities, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...

class CompositionClip_Static(CompositionObject_Static):
    pass

class CompositionClip(CompositionObject, metaclass=CompositionClip_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionClip: ...
    @_property
    def transform_matrix(self) -> windows_foundation_numerics.Matrix3x2: ...
    @transform_matrix.setter
    def transform_matrix(self, value: windows_foundation_numerics.Matrix3x2) -> None: ...
    @_property
    def scale(self) -> windows_foundation_numerics.Vector2: ...
    @scale.setter
    def scale(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def rotation_angle_in_degrees(self) -> winrt.system.Single: ...
    @rotation_angle_in_degrees.setter
    def rotation_angle_in_degrees(self, value: winrt.system.Single) -> None: ...
    @_property
    def rotation_angle(self) -> winrt.system.Single: ...
    @rotation_angle.setter
    def rotation_angle(self, value: winrt.system.Single) -> None: ...
    @_property
    def offset(self) -> windows_foundation_numerics.Vector2: ...
    @offset.setter
    def offset(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def center_point(self) -> windows_foundation_numerics.Vector2: ...
    @center_point.setter
    def center_point(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def anchor_point(self) -> windows_foundation_numerics.Vector2: ...
    @anchor_point.setter
    def anchor_point(self, value: windows_foundation_numerics.Vector2) -> None: ...

@typing.final
class CompositionColorBrush(CompositionBrush):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionColorBrush: ...
    @_property
    def color(self) -> windows_ui.Color: ...
    @color.setter
    def color(self, value: windows_ui.Color) -> None: ...

@typing.final
class CompositionColorGradientStop(CompositionObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionColorGradientStop: ...
    @_property
    def offset(self) -> winrt.system.Single: ...
    @offset.setter
    def offset(self, value: winrt.system.Single) -> None: ...
    @_property
    def color(self) -> windows_ui.Color: ...
    @color.setter
    def color(self, value: windows_ui.Color) -> None: ...

@typing.final
class CompositionColorGradientStopCollection(winrt.system.Object, winrt._winrt.MutableSequence[CompositionColorGradientStop]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[CompositionColorGradientStop]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> CompositionColorGradientStop: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[CompositionColorGradientStop]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: CompositionColorGradientStop) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[CompositionColorGradientStop]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionColorGradientStopCollection: ...
    def append(self, value: CompositionColorGradientStop, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[CompositionColorGradientStop]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> CompositionColorGradientStop: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[CompositionColorGradientStop], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[CompositionColorGradientStop]: ...
    def index_of(self, value: CompositionColorGradientStop, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: CompositionColorGradientStop, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[CompositionColorGradientStop], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: CompositionColorGradientStop, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class CompositionCommitBatch(CompositionObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionCommitBatch: ...
    def add_completed(self, handler: windows_foundation.TypedEventHandler[winrt.system.Object, CompositionBatchCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def is_active(self) -> bool: ...
    @_property
    def is_ended(self) -> bool: ...

@typing.final
class CompositionContainerShape(CompositionShape):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionContainerShape: ...
    @_property
    def shapes(self) -> CompositionShapeCollection: ...

class CompositionDrawingSurface_Static(CompositionObject_Static):
    pass

class CompositionDrawingSurface(CompositionObject, ImplementsICompositionSurface, metaclass=CompositionDrawingSurface_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionDrawingSurface: ...
    @typing.final
    def resize(self, size_pixels: windows_graphics.SizeInt32, /) -> None: ...
    @typing.final
    def scroll(self, offset: windows_graphics.PointInt32, /) -> None: ...
    @typing.final
    def scroll_rect(self, offset: windows_graphics.PointInt32, scroll_rect: windows_graphics.RectInt32, /) -> None: ...
    @typing.final
    def scroll_rect_with_clip(self, offset: windows_graphics.PointInt32, clip_rect: windows_graphics.RectInt32, scroll_rect: windows_graphics.RectInt32, /) -> None: ...
    @typing.final
    def scroll_with_clip(self, offset: windows_graphics.PointInt32, clip_rect: windows_graphics.RectInt32, /) -> None: ...
    @_property
    def alpha_mode(self) -> windows_graphics_directx.DirectXAlphaMode: ...
    @_property
    def pixel_format(self) -> windows_graphics_directx.DirectXPixelFormat: ...
    @_property
    def size(self) -> windows_foundation.Size: ...
    @_property
    def size_int32(self) -> windows_graphics.SizeInt32: ...

class CompositionEasingFunction_Static(CompositionObject_Static):
    def create_back_easing_function(cls, owner: Compositor, mode: CompositionEasingFunctionMode, amplitude: winrt.system.Single, /) -> BackEasingFunction: ...
    def create_bounce_easing_function(cls, owner: Compositor, mode: CompositionEasingFunctionMode, bounces: winrt.system.Int32, bounciness: winrt.system.Single, /) -> BounceEasingFunction: ...
    def create_circle_easing_function(cls, owner: Compositor, mode: CompositionEasingFunctionMode, /) -> CircleEasingFunction: ...
    def create_cubic_bezier_easing_function(cls, owner: Compositor, control_point1: windows_foundation_numerics.Vector2, control_point2: windows_foundation_numerics.Vector2, /) -> CubicBezierEasingFunction: ...
    def create_elastic_easing_function(cls, owner: Compositor, mode: CompositionEasingFunctionMode, oscillations: winrt.system.Int32, springiness: winrt.system.Single, /) -> ElasticEasingFunction: ...
    def create_exponential_easing_function(cls, owner: Compositor, mode: CompositionEasingFunctionMode, exponent: winrt.system.Single, /) -> ExponentialEasingFunction: ...
    def create_linear_easing_function(cls, owner: Compositor, /) -> LinearEasingFunction: ...
    def create_power_easing_function(cls, owner: Compositor, mode: CompositionEasingFunctionMode, power: winrt.system.Single, /) -> PowerEasingFunction: ...
    def create_sine_easing_function(cls, owner: Compositor, mode: CompositionEasingFunctionMode, /) -> SineEasingFunction: ...
    def create_step_easing_function(cls, owner: Compositor, /) -> StepEasingFunction: ...
    def create_step_easing_function_with_step_count(cls, owner: Compositor, step_count: winrt.system.Int32, /) -> StepEasingFunction: ...

class CompositionEasingFunction(CompositionObject, metaclass=CompositionEasingFunction_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionEasingFunction: ...

@typing.final
class CompositionEffectBrush(CompositionBrush):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionEffectBrush: ...
    def get_source_parameter(self, name: str, /) -> CompositionBrush: ...
    def set_source_parameter(self, name: str, source: CompositionBrush, /) -> None: ...

@typing.final
class CompositionEffectFactory(CompositionObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionEffectFactory: ...
    def create_brush(self) -> CompositionEffectBrush: ...
    @_property
    def extended_error(self) -> windows_foundation.HResult: ...
    @_property
    def load_status(self) -> CompositionEffectFactoryLoadStatus: ...

@typing.final
class CompositionEffectSourceParameter(winrt.system.Object, windows_graphics_effects.ImplementsIGraphicsEffectSource):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionEffectSourceParameter: ...
    def __new__(cls: typing.Type[Self], name: str) -> Self: ...
    @_property
    def name(self) -> str: ...

@typing.final
class CompositionEllipseGeometry(CompositionGeometry):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionEllipseGeometry: ...
    @_property
    def radius(self) -> windows_foundation_numerics.Vector2: ...
    @radius.setter
    def radius(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def center(self) -> windows_foundation_numerics.Vector2: ...
    @center.setter
    def center(self, value: windows_foundation_numerics.Vector2) -> None: ...

@typing.final
class CompositionGeometricClip(CompositionClip):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionGeometricClip: ...
    @_property
    def view_box(self) -> CompositionViewBox: ...
    @view_box.setter
    def view_box(self, value: CompositionViewBox) -> None: ...
    @_property
    def geometry(self) -> CompositionGeometry: ...
    @geometry.setter
    def geometry(self, value: CompositionGeometry) -> None: ...

class CompositionGeometry_Static(CompositionObject_Static):
    pass

class CompositionGeometry(CompositionObject, metaclass=CompositionGeometry_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionGeometry: ...
    @_property
    def trim_start(self) -> winrt.system.Single: ...
    @trim_start.setter
    def trim_start(self, value: winrt.system.Single) -> None: ...
    @_property
    def trim_offset(self) -> winrt.system.Single: ...
    @trim_offset.setter
    def trim_offset(self, value: winrt.system.Single) -> None: ...
    @_property
    def trim_end(self) -> winrt.system.Single: ...
    @trim_end.setter
    def trim_end(self, value: winrt.system.Single) -> None: ...

class CompositionGradientBrush_Static(CompositionBrush_Static):
    pass

class CompositionGradientBrush(CompositionBrush, metaclass=CompositionGradientBrush_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionGradientBrush: ...
    @_property
    def transform_matrix(self) -> windows_foundation_numerics.Matrix3x2: ...
    @transform_matrix.setter
    def transform_matrix(self, value: windows_foundation_numerics.Matrix3x2) -> None: ...
    @_property
    def scale(self) -> windows_foundation_numerics.Vector2: ...
    @scale.setter
    def scale(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def rotation_angle_in_degrees(self) -> winrt.system.Single: ...
    @rotation_angle_in_degrees.setter
    def rotation_angle_in_degrees(self, value: winrt.system.Single) -> None: ...
    @_property
    def rotation_angle(self) -> winrt.system.Single: ...
    @rotation_angle.setter
    def rotation_angle(self, value: winrt.system.Single) -> None: ...
    @_property
    def offset(self) -> windows_foundation_numerics.Vector2: ...
    @offset.setter
    def offset(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def interpolation_space(self) -> CompositionColorSpace: ...
    @interpolation_space.setter
    def interpolation_space(self, value: CompositionColorSpace) -> None: ...
    @_property
    def extend_mode(self) -> CompositionGradientExtendMode: ...
    @extend_mode.setter
    def extend_mode(self, value: CompositionGradientExtendMode) -> None: ...
    @_property
    def center_point(self) -> windows_foundation_numerics.Vector2: ...
    @center_point.setter
    def center_point(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def anchor_point(self) -> windows_foundation_numerics.Vector2: ...
    @anchor_point.setter
    def anchor_point(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def color_stops(self) -> CompositionColorGradientStopCollection: ...
    @_property
    def mapping_mode(self) -> CompositionMappingMode: ...
    @mapping_mode.setter
    def mapping_mode(self, value: CompositionMappingMode) -> None: ...

@typing.final
class CompositionGraphicsDevice(CompositionObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionGraphicsDevice: ...
    def capture_async(self, capture_visual: Visual, size: windows_graphics.SizeInt32, pixel_format: windows_graphics_directx.DirectXPixelFormat, alpha_mode: windows_graphics_directx.DirectXAlphaMode, sdr_boost: winrt.system.Single, /) -> windows_foundation.IAsyncOperation[ICompositionSurface]: ...
    def create_drawing_surface(self, size_pixels: windows_foundation.Size, pixel_format: windows_graphics_directx.DirectXPixelFormat, alpha_mode: windows_graphics_directx.DirectXAlphaMode, /) -> CompositionDrawingSurface: ...
    def create_drawing_surface2(self, size_pixels: windows_graphics.SizeInt32, pixel_format: windows_graphics_directx.DirectXPixelFormat, alpha_mode: windows_graphics_directx.DirectXAlphaMode, /) -> CompositionDrawingSurface: ...
    def create_mipmap_surface(self, size_pixels: windows_graphics.SizeInt32, pixel_format: windows_graphics_directx.DirectXPixelFormat, alpha_mode: windows_graphics_directx.DirectXAlphaMode, /) -> CompositionMipmapSurface: ...
    def create_virtual_drawing_surface(self, size_pixels: windows_graphics.SizeInt32, pixel_format: windows_graphics_directx.DirectXPixelFormat, alpha_mode: windows_graphics_directx.DirectXAlphaMode, /) -> CompositionVirtualDrawingSurface: ...
    def trim(self) -> None: ...
    def add_rendering_device_replaced(self, handler: windows_foundation.TypedEventHandler[CompositionGraphicsDevice, RenderingDeviceReplacedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_rendering_device_replaced(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...

class CompositionLight_Static(CompositionObject_Static):
    pass

class CompositionLight(CompositionObject, metaclass=CompositionLight_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionLight: ...
    @_property
    def targets(self) -> VisualUnorderedCollection: ...
    @_property
    def exclusions_from_targets(self) -> VisualUnorderedCollection: ...
    @_property
    def is_enabled(self) -> bool: ...
    @is_enabled.setter
    def is_enabled(self, value: bool) -> None: ...

@typing.final
class CompositionLineGeometry(CompositionGeometry):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionLineGeometry: ...
    @_property
    def start(self) -> windows_foundation_numerics.Vector2: ...
    @start.setter
    def start(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def end(self) -> windows_foundation_numerics.Vector2: ...
    @end.setter
    def end(self, value: windows_foundation_numerics.Vector2) -> None: ...

@typing.final
class CompositionLinearGradientBrush(CompositionGradientBrush):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionLinearGradientBrush: ...
    @_property
    def start_point(self) -> windows_foundation_numerics.Vector2: ...
    @start_point.setter
    def start_point(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def end_point(self) -> windows_foundation_numerics.Vector2: ...
    @end_point.setter
    def end_point(self, value: windows_foundation_numerics.Vector2) -> None: ...

@typing.final
class CompositionMaskBrush(CompositionBrush):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionMaskBrush: ...
    @_property
    def source(self) -> CompositionBrush: ...
    @source.setter
    def source(self, value: CompositionBrush) -> None: ...
    @_property
    def mask(self) -> CompositionBrush: ...
    @mask.setter
    def mask(self, value: CompositionBrush) -> None: ...

@typing.final
class CompositionMipmapSurface(CompositionObject, ImplementsICompositionSurface):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionMipmapSurface: ...
    def get_drawing_surface_for_level(self, level: winrt.system.UInt32, /) -> CompositionDrawingSurface: ...
    @_property
    def alpha_mode(self) -> windows_graphics_directx.DirectXAlphaMode: ...
    @_property
    def level_count(self) -> winrt.system.UInt32: ...
    @_property
    def pixel_format(self) -> windows_graphics_directx.DirectXPixelFormat: ...
    @_property
    def size_int32(self) -> windows_graphics.SizeInt32: ...

@typing.final
class CompositionNineGridBrush(CompositionBrush):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionNineGridBrush: ...
    def set_inset_scales(self, scale: winrt.system.Single, /) -> None: ...
    def set_inset_scales_with_values(self, left: winrt.system.Single, top: winrt.system.Single, right: winrt.system.Single, bottom: winrt.system.Single, /) -> None: ...
    def set_insets(self, inset: winrt.system.Single, /) -> None: ...
    def set_insets_with_values(self, left: winrt.system.Single, top: winrt.system.Single, right: winrt.system.Single, bottom: winrt.system.Single, /) -> None: ...
    @_property
    def top_inset_scale(self) -> winrt.system.Single: ...
    @top_inset_scale.setter
    def top_inset_scale(self, value: winrt.system.Single) -> None: ...
    @_property
    def top_inset(self) -> winrt.system.Single: ...
    @top_inset.setter
    def top_inset(self, value: winrt.system.Single) -> None: ...
    @_property
    def source(self) -> CompositionBrush: ...
    @source.setter
    def source(self, value: CompositionBrush) -> None: ...
    @_property
    def right_inset_scale(self) -> winrt.system.Single: ...
    @right_inset_scale.setter
    def right_inset_scale(self, value: winrt.system.Single) -> None: ...
    @_property
    def right_inset(self) -> winrt.system.Single: ...
    @right_inset.setter
    def right_inset(self, value: winrt.system.Single) -> None: ...
    @_property
    def left_inset_scale(self) -> winrt.system.Single: ...
    @left_inset_scale.setter
    def left_inset_scale(self, value: winrt.system.Single) -> None: ...
    @_property
    def left_inset(self) -> winrt.system.Single: ...
    @left_inset.setter
    def left_inset(self, value: winrt.system.Single) -> None: ...
    @_property
    def is_center_hollow(self) -> bool: ...
    @is_center_hollow.setter
    def is_center_hollow(self, value: bool) -> None: ...
    @_property
    def bottom_inset_scale(self) -> winrt.system.Single: ...
    @bottom_inset_scale.setter
    def bottom_inset_scale(self, value: winrt.system.Single) -> None: ...
    @_property
    def bottom_inset(self) -> winrt.system.Single: ...
    @bottom_inset.setter
    def bottom_inset(self, value: winrt.system.Single) -> None: ...

class CompositionObject_Static(type):
    def start_animation_group_with_ianimation_object(cls, target: ImplementsIAnimationObject, animation: ImplementsICompositionAnimationBase, /) -> None: ...
    def start_animation_with_ianimation_object(cls, target: ImplementsIAnimationObject, property_name: str, animation: CompositionAnimation, /) -> None: ...

class CompositionObject(winrt.system.Object, ImplementsIAnimationObject, windows_foundation.ImplementsIClosable, metaclass=CompositionObject_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionObject: ...
    def close(self) -> None: ...
    def populate_property_info(self, property_name: str, property_info: AnimationPropertyInfo, /) -> None: ...
    @typing.final
    def start_animation(self, property_name: str, animation: CompositionAnimation, /) -> None: ...
    @typing.final
    def start_animation_group(self, value: ImplementsICompositionAnimationBase, /) -> None: ...
    @typing.final
    def start_animation_with_controller(self, property_name: str, animation: CompositionAnimation, animation_controller: AnimationController, /) -> None: ...
    @typing.final
    def stop_animation(self, property_name: str, /) -> None: ...
    @typing.final
    def stop_animation_group(self, value: ImplementsICompositionAnimationBase, /) -> None: ...
    @typing.final
    def try_get_animation_controller(self, property_name: str, /) -> AnimationController: ...
    @_property
    def compositor(self) -> Compositor: ...
    @_property
    def dispatcher(self) -> windows_ui_core.CoreDispatcher: ...
    @_property
    def properties(self) -> CompositionPropertySet: ...
    @_property
    def implicit_animations(self) -> ImplicitAnimationCollection: ...
    @implicit_animations.setter
    def implicit_animations(self, value: ImplicitAnimationCollection) -> None: ...
    @_property
    def comment(self) -> str: ...
    @comment.setter
    def comment(self, value: str) -> None: ...
    @_property
    def dispatcher_queue(self) -> windows_system.DispatcherQueue: ...

@typing.final
class CompositionPath(winrt.system.Object, windows_graphics.ImplementsIGeometrySource2D):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionPath: ...
    def __new__(cls: typing.Type[Self], source: windows_graphics.ImplementsIGeometrySource2D) -> Self: ...

@typing.final
class CompositionPathGeometry(CompositionGeometry):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionPathGeometry: ...
    @_property
    def path(self) -> CompositionPath: ...
    @path.setter
    def path(self, value: CompositionPath) -> None: ...

@typing.final
class CompositionProjectedShadow(CompositionObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionProjectedShadow: ...
    @_property
    def min_blur_radius(self) -> winrt.system.Single: ...
    @min_blur_radius.setter
    def min_blur_radius(self, value: winrt.system.Single) -> None: ...
    @_property
    def max_blur_radius(self) -> winrt.system.Single: ...
    @max_blur_radius.setter
    def max_blur_radius(self, value: winrt.system.Single) -> None: ...
    @_property
    def light_source(self) -> CompositionLight: ...
    @light_source.setter
    def light_source(self, value: CompositionLight) -> None: ...
    @_property
    def blur_radius_multiplier(self) -> winrt.system.Single: ...
    @blur_radius_multiplier.setter
    def blur_radius_multiplier(self, value: winrt.system.Single) -> None: ...
    @_property
    def casters(self) -> CompositionProjectedShadowCasterCollection: ...
    @_property
    def receivers(self) -> CompositionProjectedShadowReceiverUnorderedCollection: ...

@typing.final
class CompositionProjectedShadowCaster(CompositionObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionProjectedShadowCaster: ...
    @_property
    def casting_visual(self) -> Visual: ...
    @casting_visual.setter
    def casting_visual(self, value: Visual) -> None: ...
    @_property
    def brush(self) -> CompositionBrush: ...
    @brush.setter
    def brush(self, value: CompositionBrush) -> None: ...

@typing.final
class CompositionProjectedShadowCasterCollection_Static(CompositionObject_Static):
    @_property
    def max_respected_casters(cls) -> winrt.system.Int32: ...

@typing.final
class CompositionProjectedShadowCasterCollection(CompositionObject, metaclass=CompositionProjectedShadowCasterCollection_Static):
    def __iter__(self) -> windows_foundation_collections.IIterator[CompositionProjectedShadowCaster]: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionProjectedShadowCasterCollection: ...
    def first(self) -> windows_foundation_collections.IIterator[CompositionProjectedShadowCaster]: ...
    def insert_above(self, new_caster: CompositionProjectedShadowCaster, reference: CompositionProjectedShadowCaster, /) -> None: ...
    def insert_at_bottom(self, new_caster: CompositionProjectedShadowCaster, /) -> None: ...
    def insert_at_top(self, new_caster: CompositionProjectedShadowCaster, /) -> None: ...
    def insert_below(self, new_caster: CompositionProjectedShadowCaster, reference: CompositionProjectedShadowCaster, /) -> None: ...
    def remove(self, caster: CompositionProjectedShadowCaster, /) -> None: ...
    def remove_all(self) -> None: ...
    @_property
    def count(self) -> winrt.system.Int32: ...

@typing.final
class CompositionProjectedShadowReceiver(CompositionObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionProjectedShadowReceiver: ...
    @_property
    def receiving_visual(self) -> Visual: ...
    @receiving_visual.setter
    def receiving_visual(self, value: Visual) -> None: ...

@typing.final
class CompositionProjectedShadowReceiverUnorderedCollection(CompositionObject):
    def __iter__(self) -> windows_foundation_collections.IIterator[CompositionProjectedShadowReceiver]: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionProjectedShadowReceiverUnorderedCollection: ...
    def add(self, value: CompositionProjectedShadowReceiver, /) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[CompositionProjectedShadowReceiver]: ...
    def remove(self, value: CompositionProjectedShadowReceiver, /) -> None: ...
    def remove_all(self) -> None: ...
    @_property
    def count(self) -> winrt.system.Int32: ...

@typing.final
class CompositionPropertySet(CompositionObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionPropertySet: ...
    def insert_boolean(self, property_name: str, value: bool, /) -> None: ...
    def insert_color(self, property_name: str, value: windows_ui.Color, /) -> None: ...
    def insert_matrix3x2(self, property_name: str, value: windows_foundation_numerics.Matrix3x2, /) -> None: ...
    def insert_matrix4x4(self, property_name: str, value: windows_foundation_numerics.Matrix4x4, /) -> None: ...
    def insert_quaternion(self, property_name: str, value: windows_foundation_numerics.Quaternion, /) -> None: ...
    def insert_scalar(self, property_name: str, value: winrt.system.Single, /) -> None: ...
    def insert_vector2(self, property_name: str, value: windows_foundation_numerics.Vector2, /) -> None: ...
    def insert_vector3(self, property_name: str, value: windows_foundation_numerics.Vector3, /) -> None: ...
    def insert_vector4(self, property_name: str, value: windows_foundation_numerics.Vector4, /) -> None: ...
    def try_get_boolean(self, property_name: str, /) -> typing.Tuple[CompositionGetValueStatus, bool]: ...
    def try_get_color(self, property_name: str, /) -> typing.Tuple[CompositionGetValueStatus, windows_ui.Color]: ...
    def try_get_matrix3x2(self, property_name: str, /) -> typing.Tuple[CompositionGetValueStatus, windows_foundation_numerics.Matrix3x2]: ...
    def try_get_matrix4x4(self, property_name: str, /) -> typing.Tuple[CompositionGetValueStatus, windows_foundation_numerics.Matrix4x4]: ...
    def try_get_quaternion(self, property_name: str, /) -> typing.Tuple[CompositionGetValueStatus, windows_foundation_numerics.Quaternion]: ...
    def try_get_scalar(self, property_name: str, /) -> typing.Tuple[CompositionGetValueStatus, winrt.system.Single]: ...
    def try_get_vector2(self, property_name: str, /) -> typing.Tuple[CompositionGetValueStatus, windows_foundation_numerics.Vector2]: ...
    def try_get_vector3(self, property_name: str, /) -> typing.Tuple[CompositionGetValueStatus, windows_foundation_numerics.Vector3]: ...
    def try_get_vector4(self, property_name: str, /) -> typing.Tuple[CompositionGetValueStatus, windows_foundation_numerics.Vector4]: ...

@typing.final
class CompositionRadialGradientBrush(CompositionGradientBrush):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionRadialGradientBrush: ...
    @_property
    def gradient_origin_offset(self) -> windows_foundation_numerics.Vector2: ...
    @gradient_origin_offset.setter
    def gradient_origin_offset(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def ellipse_radius(self) -> windows_foundation_numerics.Vector2: ...
    @ellipse_radius.setter
    def ellipse_radius(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def ellipse_center(self) -> windows_foundation_numerics.Vector2: ...
    @ellipse_center.setter
    def ellipse_center(self, value: windows_foundation_numerics.Vector2) -> None: ...

@typing.final
class CompositionRectangleGeometry(CompositionGeometry):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionRectangleGeometry: ...
    @_property
    def size(self) -> windows_foundation_numerics.Vector2: ...
    @size.setter
    def size(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def offset(self) -> windows_foundation_numerics.Vector2: ...
    @offset.setter
    def offset(self, value: windows_foundation_numerics.Vector2) -> None: ...

@typing.final
class CompositionRoundedRectangleGeometry(CompositionGeometry):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionRoundedRectangleGeometry: ...
    @_property
    def size(self) -> windows_foundation_numerics.Vector2: ...
    @size.setter
    def size(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def offset(self) -> windows_foundation_numerics.Vector2: ...
    @offset.setter
    def offset(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def corner_radius(self) -> windows_foundation_numerics.Vector2: ...
    @corner_radius.setter
    def corner_radius(self, value: windows_foundation_numerics.Vector2) -> None: ...

@typing.final
class CompositionScopedBatch(CompositionObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionScopedBatch: ...
    def end(self) -> None: ...
    def resume(self) -> None: ...
    def suspend(self) -> None: ...
    def add_completed(self, handler: windows_foundation.TypedEventHandler[winrt.system.Object, CompositionBatchCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def is_active(self) -> bool: ...
    @_property
    def is_ended(self) -> bool: ...

class CompositionShadow_Static(CompositionObject_Static):
    pass

class CompositionShadow(CompositionObject, metaclass=CompositionShadow_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionShadow: ...

class CompositionShape_Static(CompositionObject_Static):
    pass

class CompositionShape(CompositionObject, metaclass=CompositionShape_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionShape: ...
    @_property
    def transform_matrix(self) -> windows_foundation_numerics.Matrix3x2: ...
    @transform_matrix.setter
    def transform_matrix(self, value: windows_foundation_numerics.Matrix3x2) -> None: ...
    @_property
    def scale(self) -> windows_foundation_numerics.Vector2: ...
    @scale.setter
    def scale(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def rotation_angle_in_degrees(self) -> winrt.system.Single: ...
    @rotation_angle_in_degrees.setter
    def rotation_angle_in_degrees(self, value: winrt.system.Single) -> None: ...
    @_property
    def rotation_angle(self) -> winrt.system.Single: ...
    @rotation_angle.setter
    def rotation_angle(self, value: winrt.system.Single) -> None: ...
    @_property
    def offset(self) -> windows_foundation_numerics.Vector2: ...
    @offset.setter
    def offset(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def center_point(self) -> windows_foundation_numerics.Vector2: ...
    @center_point.setter
    def center_point(self, value: windows_foundation_numerics.Vector2) -> None: ...

@typing.final
class CompositionShapeCollection(CompositionObject, winrt._winrt.MutableSequence[CompositionShape]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[CompositionShape]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> CompositionShape: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[CompositionShape]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: CompositionShape) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[CompositionShape]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionShapeCollection: ...
    def append(self, value: CompositionShape, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[CompositionShape]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> CompositionShape: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[CompositionShape], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[CompositionShape]: ...
    def index_of(self, value: CompositionShape, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: CompositionShape, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[CompositionShape], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: CompositionShape, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class CompositionSpriteShape(CompositionShape):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionSpriteShape: ...
    @_property
    def stroke_thickness(self) -> winrt.system.Single: ...
    @stroke_thickness.setter
    def stroke_thickness(self, value: winrt.system.Single) -> None: ...
    @_property
    def stroke_start_cap(self) -> CompositionStrokeCap: ...
    @stroke_start_cap.setter
    def stroke_start_cap(self, value: CompositionStrokeCap) -> None: ...
    @_property
    def stroke_miter_limit(self) -> winrt.system.Single: ...
    @stroke_miter_limit.setter
    def stroke_miter_limit(self, value: winrt.system.Single) -> None: ...
    @_property
    def stroke_line_join(self) -> CompositionStrokeLineJoin: ...
    @stroke_line_join.setter
    def stroke_line_join(self, value: CompositionStrokeLineJoin) -> None: ...
    @_property
    def stroke_end_cap(self) -> CompositionStrokeCap: ...
    @stroke_end_cap.setter
    def stroke_end_cap(self, value: CompositionStrokeCap) -> None: ...
    @_property
    def stroke_dash_offset(self) -> winrt.system.Single: ...
    @stroke_dash_offset.setter
    def stroke_dash_offset(self, value: winrt.system.Single) -> None: ...
    @_property
    def stroke_dash_cap(self) -> CompositionStrokeCap: ...
    @stroke_dash_cap.setter
    def stroke_dash_cap(self, value: CompositionStrokeCap) -> None: ...
    @_property
    def stroke_brush(self) -> CompositionBrush: ...
    @stroke_brush.setter
    def stroke_brush(self, value: CompositionBrush) -> None: ...
    @_property
    def is_stroke_non_scaling(self) -> bool: ...
    @is_stroke_non_scaling.setter
    def is_stroke_non_scaling(self, value: bool) -> None: ...
    @_property
    def geometry(self) -> CompositionGeometry: ...
    @geometry.setter
    def geometry(self, value: CompositionGeometry) -> None: ...
    @_property
    def fill_brush(self) -> CompositionBrush: ...
    @fill_brush.setter
    def fill_brush(self, value: CompositionBrush) -> None: ...
    @_property
    def stroke_dash_array(self) -> CompositionStrokeDashArray: ...

@typing.final
class CompositionStrokeDashArray(CompositionObject, winrt._winrt.MutableSequence[winrt.system.Single]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[winrt.system.Single]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> winrt.system.Single: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[winrt.system.Single]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: winrt.system.Single) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[winrt.system.Single]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionStrokeDashArray: ...
    def append(self, value: winrt.system.Single, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[winrt.system.Single]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> winrt.system.Single: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[winrt.system.Single], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[winrt.system.Single]: ...
    def index_of(self, value: winrt.system.Single, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: winrt.system.Single, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[winrt.system.Single], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: winrt.system.Single, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class CompositionSurfaceBrush(CompositionBrush):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionSurfaceBrush: ...
    @_property
    def vertical_alignment_ratio(self) -> winrt.system.Single: ...
    @vertical_alignment_ratio.setter
    def vertical_alignment_ratio(self, value: winrt.system.Single) -> None: ...
    @_property
    def surface(self) -> ICompositionSurface: ...
    @surface.setter
    def surface(self, value: ImplementsICompositionSurface) -> None: ...
    @_property
    def stretch(self) -> CompositionStretch: ...
    @stretch.setter
    def stretch(self, value: CompositionStretch) -> None: ...
    @_property
    def horizontal_alignment_ratio(self) -> winrt.system.Single: ...
    @horizontal_alignment_ratio.setter
    def horizontal_alignment_ratio(self, value: winrt.system.Single) -> None: ...
    @_property
    def bitmap_interpolation_mode(self) -> CompositionBitmapInterpolationMode: ...
    @bitmap_interpolation_mode.setter
    def bitmap_interpolation_mode(self, value: CompositionBitmapInterpolationMode) -> None: ...
    @_property
    def transform_matrix(self) -> windows_foundation_numerics.Matrix3x2: ...
    @transform_matrix.setter
    def transform_matrix(self, value: windows_foundation_numerics.Matrix3x2) -> None: ...
    @_property
    def scale(self) -> windows_foundation_numerics.Vector2: ...
    @scale.setter
    def scale(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def rotation_angle_in_degrees(self) -> winrt.system.Single: ...
    @rotation_angle_in_degrees.setter
    def rotation_angle_in_degrees(self, value: winrt.system.Single) -> None: ...
    @_property
    def rotation_angle(self) -> winrt.system.Single: ...
    @rotation_angle.setter
    def rotation_angle(self, value: winrt.system.Single) -> None: ...
    @_property
    def offset(self) -> windows_foundation_numerics.Vector2: ...
    @offset.setter
    def offset(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def center_point(self) -> windows_foundation_numerics.Vector2: ...
    @center_point.setter
    def center_point(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def anchor_point(self) -> windows_foundation_numerics.Vector2: ...
    @anchor_point.setter
    def anchor_point(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def snap_to_pixels(self) -> bool: ...
    @snap_to_pixels.setter
    def snap_to_pixels(self, value: bool) -> None: ...

class CompositionTarget_Static(CompositionObject_Static):
    pass

class CompositionTarget(CompositionObject, metaclass=CompositionTarget_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionTarget: ...
    @_property
    def root(self) -> Visual: ...
    @root.setter
    def root(self, value: Visual) -> None: ...

class CompositionTexture_Static(CompositionObject_Static):
    pass

class CompositionTexture(CompositionObject, ImplementsICompositionSurface, metaclass=CompositionTexture_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionTexture: ...
    @_property
    def source_rect(self) -> windows_graphics.RectInt32: ...
    @source_rect.setter
    def source_rect(self, value: windows_graphics.RectInt32) -> None: ...
    @_property
    def color_space(self) -> windows_graphics_directx.DirectXColorSpace: ...
    @color_space.setter
    def color_space(self, value: windows_graphics_directx.DirectXColorSpace) -> None: ...
    @_property
    def alpha_mode(self) -> windows_graphics_directx.DirectXAlphaMode: ...
    @alpha_mode.setter
    def alpha_mode(self, value: windows_graphics_directx.DirectXAlphaMode) -> None: ...

class CompositionTransform_Static(CompositionObject_Static):
    pass

class CompositionTransform(CompositionObject, metaclass=CompositionTransform_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionTransform: ...

@typing.final
class CompositionViewBox(CompositionObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionViewBox: ...
    @_property
    def vertical_alignment_ratio(self) -> winrt.system.Single: ...
    @vertical_alignment_ratio.setter
    def vertical_alignment_ratio(self, value: winrt.system.Single) -> None: ...
    @_property
    def stretch(self) -> CompositionStretch: ...
    @stretch.setter
    def stretch(self, value: CompositionStretch) -> None: ...
    @_property
    def size(self) -> windows_foundation_numerics.Vector2: ...
    @size.setter
    def size(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def offset(self) -> windows_foundation_numerics.Vector2: ...
    @offset.setter
    def offset(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def horizontal_alignment_ratio(self) -> winrt.system.Single: ...
    @horizontal_alignment_ratio.setter
    def horizontal_alignment_ratio(self, value: winrt.system.Single) -> None: ...

class CompositionVirtualDrawingSurface_Static(CompositionDrawingSurface_Static):
    pass

class CompositionVirtualDrawingSurface(CompositionDrawingSurface, metaclass=CompositionVirtualDrawingSurface_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionVirtualDrawingSurface: ...
    @typing.final
    def trim(self, rects: typing.Union[winrt.system.Array[windows_graphics.RectInt32], winrt.system.ReadableBuffer], /) -> None: ...

@typing.final
class CompositionVisualSurface(CompositionObject, ImplementsICompositionSurface):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionVisualSurface: ...
    @_property
    def source_visual(self) -> Visual: ...
    @source_visual.setter
    def source_visual(self, value: Visual) -> None: ...
    @_property
    def source_size(self) -> windows_foundation_numerics.Vector2: ...
    @source_size.setter
    def source_size(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def source_offset(self) -> windows_foundation_numerics.Vector2: ...
    @source_offset.setter
    def source_offset(self, value: windows_foundation_numerics.Vector2) -> None: ...

@typing.final
class Compositor_Static(type):
    @_property
    def max_global_playback_rate(cls) -> winrt.system.Single: ...
    @_property
    def min_global_playback_rate(cls) -> winrt.system.Single: ...

@typing.final
class Compositor(winrt.system.Object, windows_foundation.ImplementsIClosable, metaclass=Compositor_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Compositor: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    def close(self) -> None: ...
    def create_ambient_light(self) -> AmbientLight: ...
    def create_animation_controller(self) -> AnimationController: ...
    def create_animation_group(self) -> CompositionAnimationGroup: ...
    def create_animation_property_info(self) -> AnimationPropertyInfo: ...
    def create_backdrop_brush(self) -> CompositionBackdropBrush: ...
    def create_boolean_key_frame_animation(self) -> BooleanKeyFrameAnimation: ...
    def create_bounce_scalar_animation(self) -> BounceScalarNaturalMotionAnimation: ...
    def create_bounce_vector2_animation(self) -> BounceVector2NaturalMotionAnimation: ...
    def create_bounce_vector3_animation(self) -> BounceVector3NaturalMotionAnimation: ...
    def create_color_brush(self) -> CompositionColorBrush: ...
    def create_color_brush_with_color(self, color: windows_ui.Color, /) -> CompositionColorBrush: ...
    def create_color_gradient_stop(self) -> CompositionColorGradientStop: ...
    def create_color_gradient_stop_with_offset_and_color(self, offset: winrt.system.Single, color: windows_ui.Color, /) -> CompositionColorGradientStop: ...
    def create_color_key_frame_animation(self) -> ColorKeyFrameAnimation: ...
    def create_container_shape(self) -> CompositionContainerShape: ...
    def create_container_visual(self) -> ContainerVisual: ...
    def create_cubic_bezier_easing_function(self, control_point1: windows_foundation_numerics.Vector2, control_point2: windows_foundation_numerics.Vector2, /) -> CubicBezierEasingFunction: ...
    def create_distant_light(self) -> DistantLight: ...
    def create_drop_shadow(self) -> DropShadow: ...
    def create_effect_factory(self, graphics_effect: windows_graphics_effects.ImplementsIGraphicsEffect, /) -> CompositionEffectFactory: ...
    def create_effect_factory_with_properties(self, graphics_effect: windows_graphics_effects.ImplementsIGraphicsEffect, animatable_properties: typing.Iterable[str], /) -> CompositionEffectFactory: ...
    def create_ellipse_geometry(self) -> CompositionEllipseGeometry: ...
    def create_expression_animation(self) -> ExpressionAnimation: ...
    def create_expression_animation_with_expression(self, expression: str, /) -> ExpressionAnimation: ...
    def create_geometric_clip(self) -> CompositionGeometricClip: ...
    def create_geometric_clip_with_geometry(self, geometry: CompositionGeometry, /) -> CompositionGeometricClip: ...
    def create_host_backdrop_brush(self) -> CompositionBackdropBrush: ...
    def create_implicit_animation_collection(self) -> ImplicitAnimationCollection: ...
    def create_inset_clip(self) -> InsetClip: ...
    def create_inset_clip_with_insets(self, left_inset: winrt.system.Single, top_inset: winrt.system.Single, right_inset: winrt.system.Single, bottom_inset: winrt.system.Single, /) -> InsetClip: ...
    def create_layer_visual(self) -> LayerVisual: ...
    def create_line_geometry(self) -> CompositionLineGeometry: ...
    def create_linear_easing_function(self) -> LinearEasingFunction: ...
    def create_linear_gradient_brush(self) -> CompositionLinearGradientBrush: ...
    def create_mask_brush(self) -> CompositionMaskBrush: ...
    def create_nine_grid_brush(self) -> CompositionNineGridBrush: ...
    def create_path_geometry(self) -> CompositionPathGeometry: ...
    def create_path_geometry_with_path(self, path: CompositionPath, /) -> CompositionPathGeometry: ...
    def create_path_key_frame_animation(self) -> PathKeyFrameAnimation: ...
    def create_point_light(self) -> PointLight: ...
    def create_projected_shadow(self) -> CompositionProjectedShadow: ...
    def create_projected_shadow_caster(self) -> CompositionProjectedShadowCaster: ...
    def create_projected_shadow_receiver(self) -> CompositionProjectedShadowReceiver: ...
    def create_property_set(self) -> CompositionPropertySet: ...
    def create_quaternion_key_frame_animation(self) -> QuaternionKeyFrameAnimation: ...
    def create_radial_gradient_brush(self) -> CompositionRadialGradientBrush: ...
    def create_rectangle_clip(self) -> RectangleClip: ...
    def create_rectangle_clip_with_sides(self, left: winrt.system.Single, top: winrt.system.Single, right: winrt.system.Single, bottom: winrt.system.Single, /) -> RectangleClip: ...
    def create_rectangle_clip_with_sides_and_radius(self, left: winrt.system.Single, top: winrt.system.Single, right: winrt.system.Single, bottom: winrt.system.Single, top_left_radius: windows_foundation_numerics.Vector2, top_right_radius: windows_foundation_numerics.Vector2, bottom_right_radius: windows_foundation_numerics.Vector2, bottom_left_radius: windows_foundation_numerics.Vector2, /) -> RectangleClip: ...
    def create_rectangle_geometry(self) -> CompositionRectangleGeometry: ...
    def create_redirect_visual(self) -> RedirectVisual: ...
    def create_redirect_visual_with_source_visual(self, source: Visual, /) -> RedirectVisual: ...
    def create_rounded_rectangle_geometry(self) -> CompositionRoundedRectangleGeometry: ...
    def create_scalar_key_frame_animation(self) -> ScalarKeyFrameAnimation: ...
    def create_scoped_batch(self, batch_type: CompositionBatchTypes, /) -> CompositionScopedBatch: ...
    def create_shape_visual(self) -> ShapeVisual: ...
    def create_spot_light(self) -> SpotLight: ...
    def create_spring_scalar_animation(self) -> SpringScalarNaturalMotionAnimation: ...
    def create_spring_vector2_animation(self) -> SpringVector2NaturalMotionAnimation: ...
    def create_spring_vector3_animation(self) -> SpringVector3NaturalMotionAnimation: ...
    def create_sprite_shape(self) -> CompositionSpriteShape: ...
    def create_sprite_shape_with_geometry(self, geometry: CompositionGeometry, /) -> CompositionSpriteShape: ...
    def create_sprite_visual(self) -> SpriteVisual: ...
    def create_step_easing_function(self) -> StepEasingFunction: ...
    def create_step_easing_function_with_step_count(self, step_count: winrt.system.Int32, /) -> StepEasingFunction: ...
    def create_surface_brush(self) -> CompositionSurfaceBrush: ...
    def create_surface_brush_with_surface(self, surface: ImplementsICompositionSurface, /) -> CompositionSurfaceBrush: ...
    def create_target_for_current_view(self) -> CompositionTarget: ...
    def create_vector2_key_frame_animation(self) -> Vector2KeyFrameAnimation: ...
    def create_vector3_key_frame_animation(self) -> Vector3KeyFrameAnimation: ...
    def create_vector4_key_frame_animation(self) -> Vector4KeyFrameAnimation: ...
    def create_view_box(self) -> CompositionViewBox: ...
    def create_visual_surface(self) -> CompositionVisualSurface: ...
    def get_commit_batch(self, batch_type: CompositionBatchTypes, /) -> CompositionCommitBatch: ...
    def request_commit_async(self) -> windows_foundation.IAsyncAction: ...
    def try_create_blurred_wallpaper_backdrop_brush(self) -> CompositionBackdropBrush: ...
    @_property
    def global_playback_rate(self) -> winrt.system.Single: ...
    @global_playback_rate.setter
    def global_playback_rate(self, value: winrt.system.Single) -> None: ...
    @_property
    def comment(self) -> str: ...
    @comment.setter
    def comment(self, value: str) -> None: ...
    @_property
    def dispatcher_queue(self) -> windows_system.DispatcherQueue: ...

class ContainerVisual_Static(Visual_Static):
    pass

class ContainerVisual(Visual, metaclass=ContainerVisual_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContainerVisual: ...
    @_property
    def children(self) -> VisualCollection: ...

@typing.final
class CubicBezierEasingFunction(CompositionEasingFunction):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CubicBezierEasingFunction: ...
    @_property
    def control_point1(self) -> windows_foundation_numerics.Vector2: ...
    @_property
    def control_point2(self) -> windows_foundation_numerics.Vector2: ...

@typing.final
class DelegatedInkTrailVisual_Static(Visual_Static):
    def create(cls, compositor: Compositor, /) -> DelegatedInkTrailVisual: ...
    def create_for_swap_chain(cls, compositor: Compositor, swap_chain: ImplementsICompositionSurface, /) -> DelegatedInkTrailVisual: ...

@typing.final
class DelegatedInkTrailVisual(Visual, metaclass=DelegatedInkTrailVisual_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DelegatedInkTrailVisual: ...
    def add_trail_points(self, ink_points: typing.Union[winrt.system.Array[InkTrailPoint], winrt.system.ReadableBuffer], /) -> winrt.system.UInt32: ...
    def add_trail_points_with_prediction(self, ink_points: typing.Union[winrt.system.Array[InkTrailPoint], winrt.system.ReadableBuffer], predicted_ink_points: typing.Union[winrt.system.Array[InkTrailPoint], winrt.system.ReadableBuffer], /) -> winrt.system.UInt32: ...
    def remove_trail_points(self, generation_id: winrt.system.UInt32, /) -> None: ...
    def start_new_trail(self, color: windows_ui.Color, /) -> None: ...

@typing.final
class DistantLight(CompositionLight):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DistantLight: ...
    @_property
    def direction(self) -> windows_foundation_numerics.Vector3: ...
    @direction.setter
    def direction(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def coordinate_space(self) -> Visual: ...
    @coordinate_space.setter
    def coordinate_space(self, value: Visual) -> None: ...
    @_property
    def color(self) -> windows_ui.Color: ...
    @color.setter
    def color(self, value: windows_ui.Color) -> None: ...
    @_property
    def intensity(self) -> winrt.system.Single: ...
    @intensity.setter
    def intensity(self, value: winrt.system.Single) -> None: ...

@typing.final
class DropShadow(CompositionShadow):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DropShadow: ...
    @_property
    def opacity(self) -> winrt.system.Single: ...
    @opacity.setter
    def opacity(self, value: winrt.system.Single) -> None: ...
    @_property
    def offset(self) -> windows_foundation_numerics.Vector3: ...
    @offset.setter
    def offset(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def mask(self) -> CompositionBrush: ...
    @mask.setter
    def mask(self, value: CompositionBrush) -> None: ...
    @_property
    def color(self) -> windows_ui.Color: ...
    @color.setter
    def color(self, value: windows_ui.Color) -> None: ...
    @_property
    def blur_radius(self) -> winrt.system.Single: ...
    @blur_radius.setter
    def blur_radius(self, value: winrt.system.Single) -> None: ...
    @_property
    def source_policy(self) -> CompositionDropShadowSourcePolicy: ...
    @source_policy.setter
    def source_policy(self, value: CompositionDropShadowSourcePolicy) -> None: ...

@typing.final
class ElasticEasingFunction(CompositionEasingFunction):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ElasticEasingFunction: ...
    @_property
    def mode(self) -> CompositionEasingFunctionMode: ...
    @_property
    def oscillations(self) -> winrt.system.Int32: ...
    @_property
    def springiness(self) -> winrt.system.Single: ...

@typing.final
class ExponentialEasingFunction(CompositionEasingFunction):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ExponentialEasingFunction: ...
    @_property
    def exponent(self) -> winrt.system.Single: ...
    @_property
    def mode(self) -> CompositionEasingFunctionMode: ...

@typing.final
class ExpressionAnimation(CompositionAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ExpressionAnimation: ...
    @_property
    def expression(self) -> str: ...
    @expression.setter
    def expression(self, value: str) -> None: ...

@typing.final
class ImplicitAnimationCollection(CompositionObject, winrt._winrt.MutableMapping[str, ICompositionAnimationBase]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[str]: ...
    def __contains__(self, key: object) -> bool: ...
    def __getitem__(self, key: str) -> ICompositionAnimationBase: ...
    def __setitem__(self, key: str, value: ImplementsICompositionAnimationBase) -> None: ...
    def __delitem__(self, key: str) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ImplicitAnimationCollection: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[windows_foundation_collections.IKeyValuePair[str, ICompositionAnimationBase]]: ...
    def get_view(self) -> typing.Mapping[str, ICompositionAnimationBase]: ...
    def has_key(self, key: str, /) -> bool: ...
    def insert(self, key: str, value: ImplementsICompositionAnimationBase, /) -> bool: ...
    def lookup(self, key: str, /) -> ICompositionAnimationBase: ...
    def remove(self, key: str, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class InitialValueExpressionCollection(CompositionObject, winrt._winrt.MutableMapping[str, str]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[str]: ...
    def __contains__(self, key: object) -> bool: ...
    def __getitem__(self, key: str) -> str: ...
    def __setitem__(self, key: str, value: str) -> None: ...
    def __delitem__(self, key: str) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InitialValueExpressionCollection: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[windows_foundation_collections.IKeyValuePair[str, str]]: ...
    def get_view(self) -> typing.Mapping[str, str]: ...
    def has_key(self, key: str, /) -> bool: ...
    def insert(self, key: str, value: str, /) -> bool: ...
    def lookup(self, key: str, /) -> str: ...
    def remove(self, key: str, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class InsetClip(CompositionClip):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InsetClip: ...
    @_property
    def top_inset(self) -> winrt.system.Single: ...
    @top_inset.setter
    def top_inset(self, value: winrt.system.Single) -> None: ...
    @_property
    def right_inset(self) -> winrt.system.Single: ...
    @right_inset.setter
    def right_inset(self, value: winrt.system.Single) -> None: ...
    @_property
    def left_inset(self) -> winrt.system.Single: ...
    @left_inset.setter
    def left_inset(self, value: winrt.system.Single) -> None: ...
    @_property
    def bottom_inset(self) -> winrt.system.Single: ...
    @bottom_inset.setter
    def bottom_inset(self, value: winrt.system.Single) -> None: ...

class KeyFrameAnimation_Static(CompositionAnimation_Static):
    pass

class KeyFrameAnimation(CompositionAnimation, metaclass=KeyFrameAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> KeyFrameAnimation: ...
    @typing.final
    def insert_expression_key_frame(self, normalized_progress_key: winrt.system.Single, value: str, /) -> None: ...
    @typing.final
    def insert_expression_key_frame_with_easing_function(self, normalized_progress_key: winrt.system.Single, value: str, easing_function: CompositionEasingFunction, /) -> None: ...
    @_property
    def stop_behavior(self) -> AnimationStopBehavior: ...
    @stop_behavior.setter
    def stop_behavior(self, value: AnimationStopBehavior) -> None: ...
    @_property
    def iteration_count(self) -> winrt.system.Int32: ...
    @iteration_count.setter
    def iteration_count(self, value: winrt.system.Int32) -> None: ...
    @_property
    def iteration_behavior(self) -> AnimationIterationBehavior: ...
    @iteration_behavior.setter
    def iteration_behavior(self, value: AnimationIterationBehavior) -> None: ...
    @_property
    def duration(self) -> datetime.timedelta: ...
    @duration.setter
    def duration(self, value: datetime.timedelta) -> None: ...
    @_property
    def delay_time(self) -> datetime.timedelta: ...
    @delay_time.setter
    def delay_time(self, value: datetime.timedelta) -> None: ...
    @_property
    def key_frame_count(self) -> winrt.system.Int32: ...
    @_property
    def direction(self) -> AnimationDirection: ...
    @direction.setter
    def direction(self, value: AnimationDirection) -> None: ...
    @_property
    def delay_behavior(self) -> AnimationDelayBehavior: ...
    @delay_behavior.setter
    def delay_behavior(self, value: AnimationDelayBehavior) -> None: ...

@typing.final
class LayerVisual(ContainerVisual):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LayerVisual: ...
    @_property
    def effect(self) -> CompositionEffectBrush: ...
    @effect.setter
    def effect(self, value: CompositionEffectBrush) -> None: ...
    @_property
    def shadow(self) -> CompositionShadow: ...
    @shadow.setter
    def shadow(self, value: CompositionShadow) -> None: ...

@typing.final
class LinearEasingFunction(CompositionEasingFunction):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LinearEasingFunction: ...

class NaturalMotionAnimation_Static(CompositionAnimation_Static):
    pass

class NaturalMotionAnimation(CompositionAnimation, metaclass=NaturalMotionAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> NaturalMotionAnimation: ...
    @_property
    def stop_behavior(self) -> AnimationStopBehavior: ...
    @stop_behavior.setter
    def stop_behavior(self, value: AnimationStopBehavior) -> None: ...
    @_property
    def delay_time(self) -> datetime.timedelta: ...
    @delay_time.setter
    def delay_time(self, value: datetime.timedelta) -> None: ...
    @_property
    def delay_behavior(self) -> AnimationDelayBehavior: ...
    @delay_behavior.setter
    def delay_behavior(self, value: AnimationDelayBehavior) -> None: ...

@typing.final
class PathKeyFrameAnimation(KeyFrameAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PathKeyFrameAnimation: ...
    def insert_key_frame(self, normalized_progress_key: winrt.system.Single, path: CompositionPath, /) -> None: ...
    def insert_key_frame_with_easing_function(self, normalized_progress_key: winrt.system.Single, path: CompositionPath, easing_function: CompositionEasingFunction, /) -> None: ...

@typing.final
class PointLight(CompositionLight):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PointLight: ...
    @_property
    def quadratic_attenuation(self) -> winrt.system.Single: ...
    @quadratic_attenuation.setter
    def quadratic_attenuation(self, value: winrt.system.Single) -> None: ...
    @_property
    def offset(self) -> windows_foundation_numerics.Vector3: ...
    @offset.setter
    def offset(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def linear_attenuation(self) -> winrt.system.Single: ...
    @linear_attenuation.setter
    def linear_attenuation(self, value: winrt.system.Single) -> None: ...
    @_property
    def coordinate_space(self) -> Visual: ...
    @coordinate_space.setter
    def coordinate_space(self, value: Visual) -> None: ...
    @_property
    def constant_attenuation(self) -> winrt.system.Single: ...
    @constant_attenuation.setter
    def constant_attenuation(self, value: winrt.system.Single) -> None: ...
    @_property
    def color(self) -> windows_ui.Color: ...
    @color.setter
    def color(self, value: windows_ui.Color) -> None: ...
    @_property
    def intensity(self) -> winrt.system.Single: ...
    @intensity.setter
    def intensity(self, value: winrt.system.Single) -> None: ...
    @_property
    def min_attenuation_cutoff(self) -> winrt.system.Single: ...
    @min_attenuation_cutoff.setter
    def min_attenuation_cutoff(self, value: winrt.system.Single) -> None: ...
    @_property
    def max_attenuation_cutoff(self) -> winrt.system.Single: ...
    @max_attenuation_cutoff.setter
    def max_attenuation_cutoff(self, value: winrt.system.Single) -> None: ...

@typing.final
class PowerEasingFunction(CompositionEasingFunction):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PowerEasingFunction: ...
    @_property
    def mode(self) -> CompositionEasingFunctionMode: ...
    @_property
    def power(self) -> winrt.system.Single: ...

@typing.final
class QuaternionKeyFrameAnimation(KeyFrameAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> QuaternionKeyFrameAnimation: ...
    def insert_key_frame(self, normalized_progress_key: winrt.system.Single, value: windows_foundation_numerics.Quaternion, /) -> None: ...
    def insert_key_frame_with_easing_function(self, normalized_progress_key: winrt.system.Single, value: windows_foundation_numerics.Quaternion, easing_function: CompositionEasingFunction, /) -> None: ...

@typing.final
class RectangleClip(CompositionClip):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RectangleClip: ...
    @_property
    def top_right_radius(self) -> windows_foundation_numerics.Vector2: ...
    @top_right_radius.setter
    def top_right_radius(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def top_left_radius(self) -> windows_foundation_numerics.Vector2: ...
    @top_left_radius.setter
    def top_left_radius(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def top(self) -> winrt.system.Single: ...
    @top.setter
    def top(self, value: winrt.system.Single) -> None: ...
    @_property
    def right(self) -> winrt.system.Single: ...
    @right.setter
    def right(self, value: winrt.system.Single) -> None: ...
    @_property
    def left(self) -> winrt.system.Single: ...
    @left.setter
    def left(self, value: winrt.system.Single) -> None: ...
    @_property
    def bottom_right_radius(self) -> windows_foundation_numerics.Vector2: ...
    @bottom_right_radius.setter
    def bottom_right_radius(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def bottom_left_radius(self) -> windows_foundation_numerics.Vector2: ...
    @bottom_left_radius.setter
    def bottom_left_radius(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def bottom(self) -> winrt.system.Single: ...
    @bottom.setter
    def bottom(self, value: winrt.system.Single) -> None: ...

@typing.final
class RedirectVisual(ContainerVisual):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RedirectVisual: ...
    @_property
    def source(self) -> Visual: ...
    @source.setter
    def source(self, value: Visual) -> None: ...

@typing.final
class RenderingDeviceReplacedEventArgs(CompositionObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RenderingDeviceReplacedEventArgs: ...
    @_property
    def graphics_device(self) -> CompositionGraphicsDevice: ...

@typing.final
class ScalarKeyFrameAnimation(KeyFrameAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ScalarKeyFrameAnimation: ...
    def insert_key_frame(self, normalized_progress_key: winrt.system.Single, value: winrt.system.Single, /) -> None: ...
    def insert_key_frame_with_easing_function(self, normalized_progress_key: winrt.system.Single, value: winrt.system.Single, easing_function: CompositionEasingFunction, /) -> None: ...

class ScalarNaturalMotionAnimation_Static(NaturalMotionAnimation_Static):
    pass

class ScalarNaturalMotionAnimation(NaturalMotionAnimation, metaclass=ScalarNaturalMotionAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ScalarNaturalMotionAnimation: ...
    @_property
    def initial_velocity(self) -> winrt.system.Single: ...
    @initial_velocity.setter
    def initial_velocity(self, value: winrt.system.Single) -> None: ...
    @_property
    def initial_value(self) -> typing.Optional[winrt.system.Single]: ...
    @initial_value.setter
    def initial_value(self, value: typing.Optional[winrt.system.Single]) -> None: ...
    @_property
    def final_value(self) -> typing.Optional[winrt.system.Single]: ...
    @final_value.setter
    def final_value(self, value: typing.Optional[winrt.system.Single]) -> None: ...

@typing.final
class ShapeVisual(ContainerVisual):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ShapeVisual: ...
    @_property
    def view_box(self) -> CompositionViewBox: ...
    @view_box.setter
    def view_box(self, value: CompositionViewBox) -> None: ...
    @_property
    def shapes(self) -> CompositionShapeCollection: ...

@typing.final
class SineEasingFunction(CompositionEasingFunction):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SineEasingFunction: ...
    @_property
    def mode(self) -> CompositionEasingFunctionMode: ...

@typing.final
class SpotLight(CompositionLight):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpotLight: ...
    @_property
    def quadratic_attenuation(self) -> winrt.system.Single: ...
    @quadratic_attenuation.setter
    def quadratic_attenuation(self, value: winrt.system.Single) -> None: ...
    @_property
    def outer_cone_color(self) -> windows_ui.Color: ...
    @outer_cone_color.setter
    def outer_cone_color(self, value: windows_ui.Color) -> None: ...
    @_property
    def outer_cone_angle_in_degrees(self) -> winrt.system.Single: ...
    @outer_cone_angle_in_degrees.setter
    def outer_cone_angle_in_degrees(self, value: winrt.system.Single) -> None: ...
    @_property
    def outer_cone_angle(self) -> winrt.system.Single: ...
    @outer_cone_angle.setter
    def outer_cone_angle(self, value: winrt.system.Single) -> None: ...
    @_property
    def offset(self) -> windows_foundation_numerics.Vector3: ...
    @offset.setter
    def offset(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def linear_attenuation(self) -> winrt.system.Single: ...
    @linear_attenuation.setter
    def linear_attenuation(self, value: winrt.system.Single) -> None: ...
    @_property
    def inner_cone_color(self) -> windows_ui.Color: ...
    @inner_cone_color.setter
    def inner_cone_color(self, value: windows_ui.Color) -> None: ...
    @_property
    def inner_cone_angle_in_degrees(self) -> winrt.system.Single: ...
    @inner_cone_angle_in_degrees.setter
    def inner_cone_angle_in_degrees(self, value: winrt.system.Single) -> None: ...
    @_property
    def inner_cone_angle(self) -> winrt.system.Single: ...
    @inner_cone_angle.setter
    def inner_cone_angle(self, value: winrt.system.Single) -> None: ...
    @_property
    def direction(self) -> windows_foundation_numerics.Vector3: ...
    @direction.setter
    def direction(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def coordinate_space(self) -> Visual: ...
    @coordinate_space.setter
    def coordinate_space(self, value: Visual) -> None: ...
    @_property
    def constant_attenuation(self) -> winrt.system.Single: ...
    @constant_attenuation.setter
    def constant_attenuation(self, value: winrt.system.Single) -> None: ...
    @_property
    def outer_cone_intensity(self) -> winrt.system.Single: ...
    @outer_cone_intensity.setter
    def outer_cone_intensity(self, value: winrt.system.Single) -> None: ...
    @_property
    def inner_cone_intensity(self) -> winrt.system.Single: ...
    @inner_cone_intensity.setter
    def inner_cone_intensity(self, value: winrt.system.Single) -> None: ...
    @_property
    def min_attenuation_cutoff(self) -> winrt.system.Single: ...
    @min_attenuation_cutoff.setter
    def min_attenuation_cutoff(self, value: winrt.system.Single) -> None: ...
    @_property
    def max_attenuation_cutoff(self) -> winrt.system.Single: ...
    @max_attenuation_cutoff.setter
    def max_attenuation_cutoff(self, value: winrt.system.Single) -> None: ...

@typing.final
class SpringScalarNaturalMotionAnimation(ScalarNaturalMotionAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpringScalarNaturalMotionAnimation: ...
    @_property
    def period(self) -> datetime.timedelta: ...
    @period.setter
    def period(self, value: datetime.timedelta) -> None: ...
    @_property
    def damping_ratio(self) -> winrt.system.Single: ...
    @damping_ratio.setter
    def damping_ratio(self, value: winrt.system.Single) -> None: ...

@typing.final
class SpringVector2NaturalMotionAnimation(Vector2NaturalMotionAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpringVector2NaturalMotionAnimation: ...
    @_property
    def period(self) -> datetime.timedelta: ...
    @period.setter
    def period(self, value: datetime.timedelta) -> None: ...
    @_property
    def damping_ratio(self) -> winrt.system.Single: ...
    @damping_ratio.setter
    def damping_ratio(self, value: winrt.system.Single) -> None: ...

@typing.final
class SpringVector3NaturalMotionAnimation(Vector3NaturalMotionAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpringVector3NaturalMotionAnimation: ...
    @_property
    def period(self) -> datetime.timedelta: ...
    @period.setter
    def period(self, value: datetime.timedelta) -> None: ...
    @_property
    def damping_ratio(self) -> winrt.system.Single: ...
    @damping_ratio.setter
    def damping_ratio(self, value: winrt.system.Single) -> None: ...

@typing.final
class SpriteVisual(ContainerVisual):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SpriteVisual: ...
    @_property
    def brush(self) -> CompositionBrush: ...
    @brush.setter
    def brush(self, value: CompositionBrush) -> None: ...
    @_property
    def shadow(self) -> CompositionShadow: ...
    @shadow.setter
    def shadow(self, value: CompositionShadow) -> None: ...

@typing.final
class StepEasingFunction(CompositionEasingFunction):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> StepEasingFunction: ...
    @_property
    def step_count(self) -> winrt.system.Int32: ...
    @step_count.setter
    def step_count(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_initial_step_single_frame(self) -> bool: ...
    @is_initial_step_single_frame.setter
    def is_initial_step_single_frame(self, value: bool) -> None: ...
    @_property
    def is_final_step_single_frame(self) -> bool: ...
    @is_final_step_single_frame.setter
    def is_final_step_single_frame(self, value: bool) -> None: ...
    @_property
    def initial_step(self) -> winrt.system.Int32: ...
    @initial_step.setter
    def initial_step(self, value: winrt.system.Int32) -> None: ...
    @_property
    def final_step(self) -> winrt.system.Int32: ...
    @final_step.setter
    def final_step(self, value: winrt.system.Int32) -> None: ...

@typing.final
class Vector2KeyFrameAnimation(KeyFrameAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Vector2KeyFrameAnimation: ...
    def insert_key_frame(self, normalized_progress_key: winrt.system.Single, value: windows_foundation_numerics.Vector2, /) -> None: ...
    def insert_key_frame_with_easing_function(self, normalized_progress_key: winrt.system.Single, value: windows_foundation_numerics.Vector2, easing_function: CompositionEasingFunction, /) -> None: ...

class Vector2NaturalMotionAnimation_Static(NaturalMotionAnimation_Static):
    pass

class Vector2NaturalMotionAnimation(NaturalMotionAnimation, metaclass=Vector2NaturalMotionAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Vector2NaturalMotionAnimation: ...
    @_property
    def initial_velocity(self) -> windows_foundation_numerics.Vector2: ...
    @initial_velocity.setter
    def initial_velocity(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def initial_value(self) -> typing.Optional[windows_foundation_numerics.Vector2]: ...
    @initial_value.setter
    def initial_value(self, value: typing.Optional[windows_foundation_numerics.Vector2]) -> None: ...
    @_property
    def final_value(self) -> typing.Optional[windows_foundation_numerics.Vector2]: ...
    @final_value.setter
    def final_value(self, value: typing.Optional[windows_foundation_numerics.Vector2]) -> None: ...

@typing.final
class Vector3KeyFrameAnimation(KeyFrameAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Vector3KeyFrameAnimation: ...
    def insert_key_frame(self, normalized_progress_key: winrt.system.Single, value: windows_foundation_numerics.Vector3, /) -> None: ...
    def insert_key_frame_with_easing_function(self, normalized_progress_key: winrt.system.Single, value: windows_foundation_numerics.Vector3, easing_function: CompositionEasingFunction, /) -> None: ...

class Vector3NaturalMotionAnimation_Static(NaturalMotionAnimation_Static):
    pass

class Vector3NaturalMotionAnimation(NaturalMotionAnimation, metaclass=Vector3NaturalMotionAnimation_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Vector3NaturalMotionAnimation: ...
    @_property
    def initial_velocity(self) -> windows_foundation_numerics.Vector3: ...
    @initial_velocity.setter
    def initial_velocity(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def initial_value(self) -> typing.Optional[windows_foundation_numerics.Vector3]: ...
    @initial_value.setter
    def initial_value(self, value: typing.Optional[windows_foundation_numerics.Vector3]) -> None: ...
    @_property
    def final_value(self) -> typing.Optional[windows_foundation_numerics.Vector3]: ...
    @final_value.setter
    def final_value(self, value: typing.Optional[windows_foundation_numerics.Vector3]) -> None: ...

@typing.final
class Vector4KeyFrameAnimation(KeyFrameAnimation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Vector4KeyFrameAnimation: ...
    def insert_key_frame(self, normalized_progress_key: winrt.system.Single, value: windows_foundation_numerics.Vector4, /) -> None: ...
    def insert_key_frame_with_easing_function(self, normalized_progress_key: winrt.system.Single, value: windows_foundation_numerics.Vector4, easing_function: CompositionEasingFunction, /) -> None: ...

class Visual_Static(CompositionObject_Static):
    pass

class Visual(CompositionObject, metaclass=Visual_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Visual: ...
    @_property
    def transform_matrix(self) -> windows_foundation_numerics.Matrix4x4: ...
    @transform_matrix.setter
    def transform_matrix(self, value: windows_foundation_numerics.Matrix4x4) -> None: ...
    @_property
    def size(self) -> windows_foundation_numerics.Vector2: ...
    @size.setter
    def size(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def scale(self) -> windows_foundation_numerics.Vector3: ...
    @scale.setter
    def scale(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def rotation_axis(self) -> windows_foundation_numerics.Vector3: ...
    @rotation_axis.setter
    def rotation_axis(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def rotation_angle_in_degrees(self) -> winrt.system.Single: ...
    @rotation_angle_in_degrees.setter
    def rotation_angle_in_degrees(self, value: winrt.system.Single) -> None: ...
    @_property
    def rotation_angle(self) -> winrt.system.Single: ...
    @rotation_angle.setter
    def rotation_angle(self, value: winrt.system.Single) -> None: ...
    @_property
    def orientation(self) -> windows_foundation_numerics.Quaternion: ...
    @orientation.setter
    def orientation(self, value: windows_foundation_numerics.Quaternion) -> None: ...
    @_property
    def opacity(self) -> winrt.system.Single: ...
    @opacity.setter
    def opacity(self, value: winrt.system.Single) -> None: ...
    @_property
    def offset(self) -> windows_foundation_numerics.Vector3: ...
    @offset.setter
    def offset(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def is_visible(self) -> bool: ...
    @is_visible.setter
    def is_visible(self, value: bool) -> None: ...
    @_property
    def composite_mode(self) -> CompositionCompositeMode: ...
    @composite_mode.setter
    def composite_mode(self, value: CompositionCompositeMode) -> None: ...
    @_property
    def clip(self) -> CompositionClip: ...
    @clip.setter
    def clip(self, value: CompositionClip) -> None: ...
    @_property
    def center_point(self) -> windows_foundation_numerics.Vector3: ...
    @center_point.setter
    def center_point(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def border_mode(self) -> CompositionBorderMode: ...
    @border_mode.setter
    def border_mode(self, value: CompositionBorderMode) -> None: ...
    @_property
    def backface_visibility(self) -> CompositionBackfaceVisibility: ...
    @backface_visibility.setter
    def backface_visibility(self, value: CompositionBackfaceVisibility) -> None: ...
    @_property
    def anchor_point(self) -> windows_foundation_numerics.Vector2: ...
    @anchor_point.setter
    def anchor_point(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def parent(self) -> ContainerVisual: ...
    @_property
    def relative_size_adjustment(self) -> windows_foundation_numerics.Vector2: ...
    @relative_size_adjustment.setter
    def relative_size_adjustment(self, value: windows_foundation_numerics.Vector2) -> None: ...
    @_property
    def relative_offset_adjustment(self) -> windows_foundation_numerics.Vector3: ...
    @relative_offset_adjustment.setter
    def relative_offset_adjustment(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def parent_for_transform(self) -> Visual: ...
    @parent_for_transform.setter
    def parent_for_transform(self, value: Visual) -> None: ...
    @_property
    def is_hit_test_visible(self) -> bool: ...
    @is_hit_test_visible.setter
    def is_hit_test_visible(self, value: bool) -> None: ...
    @_property
    def is_pixel_snapping_enabled(self) -> bool: ...
    @is_pixel_snapping_enabled.setter
    def is_pixel_snapping_enabled(self, value: bool) -> None: ...

@typing.final
class VisualCollection(CompositionObject):
    def __iter__(self) -> windows_foundation_collections.IIterator[Visual]: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> VisualCollection: ...
    def first(self) -> windows_foundation_collections.IIterator[Visual]: ...
    def insert_above(self, new_child: Visual, sibling: Visual, /) -> None: ...
    def insert_at_bottom(self, new_child: Visual, /) -> None: ...
    def insert_at_top(self, new_child: Visual, /) -> None: ...
    def insert_below(self, new_child: Visual, sibling: Visual, /) -> None: ...
    def remove(self, child: Visual, /) -> None: ...
    def remove_all(self) -> None: ...
    @_property
    def count(self) -> winrt.system.Int32: ...

@typing.final
class VisualUnorderedCollection(CompositionObject):
    def __iter__(self) -> windows_foundation_collections.IIterator[Visual]: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> VisualUnorderedCollection: ...
    def add(self, new_visual: Visual, /) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[Visual]: ...
    def remove(self, visual: Visual, /) -> None: ...
    def remove_all(self) -> None: ...
    @_property
    def count(self) -> winrt.system.Int32: ...

class ImplementsIAnimationObject():
    pass

@typing.final
class IAnimationObject(winrt.system.Object, ImplementsIAnimationObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IAnimationObject: ...
    def populate_property_info(self, property_name: str, property_info: AnimationPropertyInfo, /) -> None: ...

class ImplementsICompositionAnimationBase():
    pass

@typing.final
class ICompositionAnimationBase(winrt.system.Object, ImplementsICompositionAnimationBase):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ICompositionAnimationBase: ...

class ImplementsICompositionSupportsSystemBackdrop():
    pass

@typing.final
class ICompositionSupportsSystemBackdrop(winrt.system.Object, ImplementsICompositionSupportsSystemBackdrop):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ICompositionSupportsSystemBackdrop: ...
    @_property
    def system_backdrop(self) -> CompositionBrush: ...
    @system_backdrop.setter
    def system_backdrop(self, value: CompositionBrush) -> None: ...

class ImplementsICompositionSurface():
    pass

@typing.final
class ICompositionSurface(winrt.system.Object, ImplementsICompositionSurface):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ICompositionSurface: ...

class ImplementsICompositionSurfaceFacade():
    pass

@typing.final
class ICompositionSurfaceFacade(winrt.system.Object, ImplementsICompositionSurfaceFacade):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ICompositionSurfaceFacade: ...
    def get_real_surface(self) -> ICompositionSurface: ...

class ImplementsIVisualElement():
    pass

@typing.final
class IVisualElement(winrt.system.Object, ImplementsIVisualElement):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IVisualElement: ...

class ImplementsIVisualElement2():
    pass

@typing.final
class IVisualElement2(winrt.system.Object, ImplementsIVisualElement2):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IVisualElement2: ...
    def get_visual_internal(self) -> Visual: ...

