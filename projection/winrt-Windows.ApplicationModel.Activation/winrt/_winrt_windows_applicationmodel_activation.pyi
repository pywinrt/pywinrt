# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.appointments.appointmentsprovider
import winrt.windows.applicationmodel.background
import winrt.windows.applicationmodel.calls
import winrt.windows.applicationmodel.contacts
import winrt.windows.applicationmodel.contacts.provider
import winrt.windows.applicationmodel.datatransfer.sharetarget
import winrt.windows.applicationmodel.search
import winrt.windows.applicationmodel.userdataaccounts.provider
import winrt.windows.applicationmodel.wallet
import winrt.windows.devices.enumeration
import winrt.windows.devices.printers.extensions
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.media.speechrecognition
import winrt.windows.security.authentication.web
import winrt.windows.security.authentication.web.provider
import winrt.windows.storage
import winrt.windows.storage.pickers.provider
import winrt.windows.storage.provider
import winrt.windows.storage.search
import winrt.windows.system
import winrt.windows.ui.notifications
import winrt.windows.ui.viewmanagement

from winrt.windows.applicationmodel.activation import ActivationKind, ApplicationExecutionState

Self = typing.TypeVar('Self')

@typing.final
class AppointmentsProviderAddAppointmentActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentsProviderAddAppointmentActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def add_appointment_operation(self) -> typing.Optional[winrt.windows.applicationmodel.appointments.appointmentsprovider.AddAppointmentOperation]: ...

@typing.final
class AppointmentsProviderRemoveAppointmentActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentsProviderRemoveAppointmentActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def remove_appointment_operation(self) -> typing.Optional[winrt.windows.applicationmodel.appointments.appointmentsprovider.RemoveAppointmentOperation]: ...

@typing.final
class AppointmentsProviderReplaceAppointmentActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentsProviderReplaceAppointmentActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def replace_appointment_operation(self) -> typing.Optional[winrt.windows.applicationmodel.appointments.appointmentsprovider.ReplaceAppointmentOperation]: ...

@typing.final
class AppointmentsProviderShowAppointmentDetailsActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentsProviderShowAppointmentDetailsActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def instance_start_date(self) -> typing.Optional[typing.Optional[datetime.datetime]]: ...
    @_property
    def local_id(self) -> str: ...
    @_property
    def roaming_id(self) -> str: ...

@typing.final
class AppointmentsProviderShowTimeFrameActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppointmentsProviderShowTimeFrameActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def duration(self) -> datetime.timedelta: ...
    @_property
    def time_to_show(self) -> datetime.datetime: ...

@typing.final
class BackgroundActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BackgroundActivatedEventArgs: ...
    @_property
    def task_instance(self) -> typing.Optional[winrt.windows.applicationmodel.background.IBackgroundTaskInstance]: ...

@typing.final
class BarcodeScannerPreviewActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BarcodeScannerPreviewActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def connection_id(self) -> str: ...

@typing.final
class CachedFileUpdaterActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CachedFileUpdaterActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def cached_file_updater_u_i(self) -> typing.Optional[winrt.windows.storage.provider.CachedFileUpdaterUI]: ...

@typing.final
class CameraSettingsActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CameraSettingsActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def video_device_controller(self) -> typing.Optional[winrt.system.Object]: ...
    @_property
    def video_device_extension(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class CommandLineActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CommandLineActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def operation(self) -> typing.Optional[CommandLineActivationOperation]: ...

@typing.final
class CommandLineActivationOperation(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CommandLineActivationOperation: ...
    def get_deferral(self) -> typing.Optional[winrt.windows.foundation.Deferral]: ...
    @_property
    def exit_code(self) -> winrt.system.Int32: ...
    @exit_code.setter
    def exit_code(self, value: winrt.system.Int32) -> None: ...
    @_property
    def arguments(self) -> str: ...
    @_property
    def current_directory_path(self) -> str: ...

@typing.final
class ContactCallActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactCallActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def contact(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.Contact]: ...
    @_property
    def service_id(self) -> str: ...
    @_property
    def service_user_id(self) -> str: ...

@typing.final
class ContactMapActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactMapActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def address(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.ContactAddress]: ...
    @_property
    def contact(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.Contact]: ...

@typing.final
class ContactMessageActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactMessageActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def contact(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.Contact]: ...
    @_property
    def service_id(self) -> str: ...
    @_property
    def service_user_id(self) -> str: ...

@typing.final
class ContactPanelActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactPanelActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def contact(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.Contact]: ...
    @_property
    def contact_panel(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.ContactPanel]: ...

@typing.final
class ContactPickerActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactPickerActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def contact_picker_u_i(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.provider.ContactPickerUI]: ...

@typing.final
class ContactPostActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactPostActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def contact(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.Contact]: ...
    @_property
    def service_id(self) -> str: ...
    @_property
    def service_user_id(self) -> str: ...

@typing.final
class ContactVideoCallActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactVideoCallActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def contact(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.Contact]: ...
    @_property
    def service_id(self) -> str: ...
    @_property
    def service_user_id(self) -> str: ...

@typing.final
class DeviceActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DeviceActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def currently_shown_application_view_id(self) -> winrt.system.Int32: ...
    @_property
    def device_information_id(self) -> str: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def view_switcher(self) -> typing.Optional[winrt.windows.ui.viewmanagement.ActivationViewSwitcher]: ...

@typing.final
class DevicePairingActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DevicePairingActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def device_information(self) -> typing.Optional[winrt.windows.devices.enumeration.DeviceInformation]: ...

@typing.final
class DialReceiverActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DialReceiverActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def currently_shown_application_view_id(self) -> winrt.system.Int32: ...
    @_property
    def app_name(self) -> str: ...
    @_property
    def arguments(self) -> str: ...
    @_property
    def tile_id(self) -> str: ...
    @_property
    def view_switcher(self) -> typing.Optional[winrt.windows.ui.viewmanagement.ActivationViewSwitcher]: ...

@typing.final
class FileActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FileActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def currently_shown_application_view_id(self) -> winrt.system.Int32: ...
    @_property
    def files(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.storage.IStorageItem]]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def caller_package_family_name(self) -> str: ...
    @_property
    def neighboring_files_query(self) -> typing.Optional[winrt.windows.storage.search.StorageFileQueryResult]: ...
    @_property
    def view_switcher(self) -> typing.Optional[winrt.windows.ui.viewmanagement.ActivationViewSwitcher]: ...

@typing.final
class FileOpenPickerActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FileOpenPickerActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def file_open_picker_u_i(self) -> typing.Optional[winrt.windows.storage.pickers.provider.FileOpenPickerUI]: ...
    @_property
    def caller_package_family_name(self) -> str: ...

@typing.final
class FileOpenPickerContinuationEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FileOpenPickerContinuationEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def continuation_data(self) -> typing.Optional[winrt.windows.foundation.collections.ValueSet]: ...
    @_property
    def files(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.storage.StorageFile]]: ...

@typing.final
class FileSavePickerActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FileSavePickerActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def file_save_picker_u_i(self) -> typing.Optional[winrt.windows.storage.pickers.provider.FileSavePickerUI]: ...
    @_property
    def caller_package_family_name(self) -> str: ...
    @_property
    def enterprise_id(self) -> str: ...

@typing.final
class FileSavePickerContinuationEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FileSavePickerContinuationEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def continuation_data(self) -> typing.Optional[winrt.windows.foundation.collections.ValueSet]: ...
    @_property
    def file(self) -> typing.Optional[winrt.windows.storage.StorageFile]: ...

@typing.final
class FolderPickerContinuationEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FolderPickerContinuationEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def continuation_data(self) -> typing.Optional[winrt.windows.foundation.collections.ValueSet]: ...
    @_property
    def folder(self) -> typing.Optional[winrt.windows.storage.StorageFolder]: ...

@typing.final
class LaunchActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LaunchActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def currently_shown_application_view_id(self) -> winrt.system.Int32: ...
    @_property
    def arguments(self) -> str: ...
    @_property
    def tile_id(self) -> str: ...
    @_property
    def tile_activated_info(self) -> typing.Optional[TileActivatedInfo]: ...
    @_property
    def prelaunch_activated(self) -> bool: ...
    @_property
    def view_switcher(self) -> typing.Optional[winrt.windows.ui.viewmanagement.ActivationViewSwitcher]: ...

@typing.final
class LockScreenActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LockScreenActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def info(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class LockScreenCallActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LockScreenCallActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def currently_shown_application_view_id(self) -> winrt.system.Int32: ...
    @_property
    def arguments(self) -> str: ...
    @_property
    def tile_id(self) -> str: ...
    @_property
    def call_u_i(self) -> typing.Optional[winrt.windows.applicationmodel.calls.LockScreenCallUI]: ...
    @_property
    def view_switcher(self) -> typing.Optional[winrt.windows.ui.viewmanagement.ActivationViewSwitcher]: ...

@typing.final
class LockScreenComponentActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LockScreenComponentActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class PhoneCallActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PhoneCallActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def line_id(self) -> _uuid.UUID: ...

@typing.final
class PickerReturnedActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PickerReturnedActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def picker_operation_id(self) -> str: ...

@typing.final
class Print3DWorkflowActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Print3DWorkflowActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def workflow(self) -> typing.Optional[winrt.windows.devices.printers.extensions.Print3DWorkflow]: ...

@typing.final
class PrintTaskSettingsActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PrintTaskSettingsActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def configuration(self) -> typing.Optional[winrt.windows.devices.printers.extensions.PrintTaskConfiguration]: ...

@typing.final
class ProtocolActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ProtocolActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def currently_shown_application_view_id(self) -> winrt.system.Int32: ...
    @_property
    def uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    @_property
    def caller_package_family_name(self) -> str: ...
    @_property
    def data(self) -> typing.Optional[winrt.windows.foundation.collections.ValueSet]: ...
    @_property
    def view_switcher(self) -> typing.Optional[winrt.windows.ui.viewmanagement.ActivationViewSwitcher]: ...

@typing.final
class ProtocolForResultsActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ProtocolForResultsActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def currently_shown_application_view_id(self) -> winrt.system.Int32: ...
    @_property
    def uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    @_property
    def caller_package_family_name(self) -> str: ...
    @_property
    def data(self) -> typing.Optional[winrt.windows.foundation.collections.ValueSet]: ...
    @_property
    def protocol_for_results_operation(self) -> typing.Optional[winrt.windows.system.ProtocolForResultsOperation]: ...
    @_property
    def view_switcher(self) -> typing.Optional[winrt.windows.ui.viewmanagement.ActivationViewSwitcher]: ...

@typing.final
class RestrictedLaunchActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RestrictedLaunchActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def shared_context(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class SearchActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def currently_shown_application_view_id(self) -> winrt.system.Int32: ...
    @_property
    def language(self) -> str: ...
    @_property
    def query_text(self) -> str: ...
    @_property
    def linguistic_details(self) -> typing.Optional[winrt.windows.applicationmodel.search.SearchPaneQueryLinguisticDetails]: ...
    @_property
    def view_switcher(self) -> typing.Optional[winrt.windows.ui.viewmanagement.ActivationViewSwitcher]: ...

@typing.final
class ShareTargetActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ShareTargetActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def share_operation(self) -> typing.Optional[winrt.windows.applicationmodel.datatransfer.sharetarget.ShareOperation]: ...

@typing.final
class SplashScreen(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SplashScreen: ...
    def add_dismissed(self, handler: winrt.windows.foundation.TypedEventHandler[SplashScreen, winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_dismissed(self, cookie: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def image_location(self) -> winrt.windows.foundation.Rect: ...

@typing.final
class StartupTaskActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> StartupTaskActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def task_id(self) -> str: ...

@typing.final
class TileActivatedInfo(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TileActivatedInfo: ...
    @_property
    def recently_shown_notifications(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.ui.notifications.ShownTileNotification]]: ...

@typing.final
class ToastNotificationActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ToastNotificationActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def currently_shown_application_view_id(self) -> winrt.system.Int32: ...
    @_property
    def argument(self) -> str: ...
    @_property
    def user_input(self) -> typing.Optional[winrt.windows.foundation.collections.ValueSet]: ...

@typing.final
class UserDataAccountProviderActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> UserDataAccountProviderActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def operation(self) -> typing.Optional[winrt.windows.applicationmodel.userdataaccounts.provider.IUserDataAccountProviderOperation]: ...

@typing.final
class VoiceCommandActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> VoiceCommandActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def result(self) -> typing.Optional[winrt.windows.media.speechrecognition.SpeechRecognitionResult]: ...

@typing.final
class WalletActionActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WalletActionActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def action_id(self) -> str: ...
    @_property
    def action_kind(self) -> winrt.windows.applicationmodel.wallet.WalletActionKind: ...
    @_property
    def item_id(self) -> str: ...

@typing.final
class WebAccountProviderActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebAccountProviderActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def operation(self) -> typing.Optional[winrt.windows.security.authentication.web.provider.IWebAccountProviderOperation]: ...

@typing.final
class WebAuthenticationBrokerContinuationEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebAuthenticationBrokerContinuationEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...
    @_property
    def continuation_data(self) -> typing.Optional[winrt.windows.foundation.collections.ValueSet]: ...
    @_property
    def web_authentication_result(self) -> typing.Optional[winrt.windows.security.authentication.web.WebAuthenticationResult]: ...

@typing.final
class IActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IActivatedEventArgs: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IActivatedEventArgsWithUser(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IActivatedEventArgsWithUser: ...
    @_property
    def user(self) -> typing.Optional[winrt.windows.system.User]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IApplicationViewActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IApplicationViewActivatedEventArgs: ...
    @_property
    def currently_shown_application_view_id(self) -> winrt.system.Int32: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IAppointmentsProviderActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IAppointmentsProviderActivatedEventArgs: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IAppointmentsProviderAddAppointmentActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IAppointmentsProviderAddAppointmentActivatedEventArgs: ...
    @_property
    def add_appointment_operation(self) -> typing.Optional[winrt.windows.applicationmodel.appointments.appointmentsprovider.AddAppointmentOperation]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IAppointmentsProviderRemoveAppointmentActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IAppointmentsProviderRemoveAppointmentActivatedEventArgs: ...
    @_property
    def remove_appointment_operation(self) -> typing.Optional[winrt.windows.applicationmodel.appointments.appointmentsprovider.RemoveAppointmentOperation]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IAppointmentsProviderReplaceAppointmentActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IAppointmentsProviderReplaceAppointmentActivatedEventArgs: ...
    @_property
    def replace_appointment_operation(self) -> typing.Optional[winrt.windows.applicationmodel.appointments.appointmentsprovider.ReplaceAppointmentOperation]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs: ...
    @_property
    def instance_start_date(self) -> typing.Optional[typing.Optional[datetime.datetime]]: ...
    @_property
    def local_id(self) -> str: ...
    @_property
    def roaming_id(self) -> str: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IAppointmentsProviderShowTimeFrameActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IAppointmentsProviderShowTimeFrameActivatedEventArgs: ...
    @_property
    def duration(self) -> datetime.timedelta: ...
    @_property
    def time_to_show(self) -> datetime.datetime: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IBackgroundActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IBackgroundActivatedEventArgs: ...
    @_property
    def task_instance(self) -> typing.Optional[winrt.windows.applicationmodel.background.IBackgroundTaskInstance]: ...

@typing.final
class IBarcodeScannerPreviewActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IBarcodeScannerPreviewActivatedEventArgs: ...
    @_property
    def connection_id(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class ICachedFileUpdaterActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ICachedFileUpdaterActivatedEventArgs: ...
    @_property
    def cached_file_updater_u_i(self) -> typing.Optional[winrt.windows.storage.provider.CachedFileUpdaterUI]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class ICameraSettingsActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ICameraSettingsActivatedEventArgs: ...
    @_property
    def video_device_controller(self) -> typing.Optional[winrt.system.Object]: ...
    @_property
    def video_device_extension(self) -> typing.Optional[winrt.system.Object]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class ICommandLineActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ICommandLineActivatedEventArgs: ...
    @_property
    def operation(self) -> typing.Optional[CommandLineActivationOperation]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IContactActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IContactActivatedEventArgs: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IContactCallActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IContactCallActivatedEventArgs: ...
    @_property
    def contact(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.Contact]: ...
    @_property
    def service_id(self) -> str: ...
    @_property
    def service_user_id(self) -> str: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IContactMapActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IContactMapActivatedEventArgs: ...
    @_property
    def address(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.ContactAddress]: ...
    @_property
    def contact(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.Contact]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IContactMessageActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IContactMessageActivatedEventArgs: ...
    @_property
    def contact(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.Contact]: ...
    @_property
    def service_id(self) -> str: ...
    @_property
    def service_user_id(self) -> str: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IContactPanelActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IContactPanelActivatedEventArgs: ...
    @_property
    def contact(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.Contact]: ...
    @_property
    def contact_panel(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.ContactPanel]: ...

@typing.final
class IContactPickerActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IContactPickerActivatedEventArgs: ...
    @_property
    def contact_picker_u_i(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.provider.ContactPickerUI]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IContactPostActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IContactPostActivatedEventArgs: ...
    @_property
    def contact(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.Contact]: ...
    @_property
    def service_id(self) -> str: ...
    @_property
    def service_user_id(self) -> str: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IContactVideoCallActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IContactVideoCallActivatedEventArgs: ...
    @_property
    def contact(self) -> typing.Optional[winrt.windows.applicationmodel.contacts.Contact]: ...
    @_property
    def service_id(self) -> str: ...
    @_property
    def service_user_id(self) -> str: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IContactsProviderActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IContactsProviderActivatedEventArgs: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IContinuationActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IContinuationActivatedEventArgs: ...
    @_property
    def continuation_data(self) -> typing.Optional[winrt.windows.foundation.collections.ValueSet]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IDeviceActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IDeviceActivatedEventArgs: ...
    @_property
    def device_information_id(self) -> str: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IDevicePairingActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IDevicePairingActivatedEventArgs: ...
    @_property
    def device_information(self) -> typing.Optional[winrt.windows.devices.enumeration.DeviceInformation]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IDialReceiverActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IDialReceiverActivatedEventArgs: ...
    @_property
    def app_name(self) -> str: ...
    @_property
    def arguments(self) -> str: ...
    @_property
    def tile_id(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IFileActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IFileActivatedEventArgs: ...
    @_property
    def files(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.storage.IStorageItem]]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IFileActivatedEventArgsWithCallerPackageFamilyName(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IFileActivatedEventArgsWithCallerPackageFamilyName: ...
    @_property
    def caller_package_family_name(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IFileActivatedEventArgsWithNeighboringFiles(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IFileActivatedEventArgsWithNeighboringFiles: ...
    @_property
    def neighboring_files_query(self) -> typing.Optional[winrt.windows.storage.search.StorageFileQueryResult]: ...
    @_property
    def files(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.storage.IStorageItem]]: ...
    @_property
    def verb(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IFileOpenPickerActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IFileOpenPickerActivatedEventArgs: ...
    @_property
    def file_open_picker_u_i(self) -> typing.Optional[winrt.windows.storage.pickers.provider.FileOpenPickerUI]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IFileOpenPickerActivatedEventArgs2(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IFileOpenPickerActivatedEventArgs2: ...
    @_property
    def caller_package_family_name(self) -> str: ...

@typing.final
class IFileOpenPickerContinuationEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IFileOpenPickerContinuationEventArgs: ...
    @_property
    def files(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[winrt.windows.storage.StorageFile]]: ...
    @_property
    def continuation_data(self) -> typing.Optional[winrt.windows.foundation.collections.ValueSet]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IFileSavePickerActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IFileSavePickerActivatedEventArgs: ...
    @_property
    def file_save_picker_u_i(self) -> typing.Optional[winrt.windows.storage.pickers.provider.FileSavePickerUI]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IFileSavePickerActivatedEventArgs2(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IFileSavePickerActivatedEventArgs2: ...
    @_property
    def caller_package_family_name(self) -> str: ...
    @_property
    def enterprise_id(self) -> str: ...

@typing.final
class IFileSavePickerContinuationEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IFileSavePickerContinuationEventArgs: ...
    @_property
    def file(self) -> typing.Optional[winrt.windows.storage.StorageFile]: ...
    @_property
    def continuation_data(self) -> typing.Optional[winrt.windows.foundation.collections.ValueSet]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IFolderPickerContinuationEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IFolderPickerContinuationEventArgs: ...
    @_property
    def folder(self) -> typing.Optional[winrt.windows.storage.StorageFolder]: ...
    @_property
    def continuation_data(self) -> typing.Optional[winrt.windows.foundation.collections.ValueSet]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class ILaunchActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ILaunchActivatedEventArgs: ...
    @_property
    def arguments(self) -> str: ...
    @_property
    def tile_id(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class ILaunchActivatedEventArgs2(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ILaunchActivatedEventArgs2: ...
    @_property
    def tile_activated_info(self) -> typing.Optional[TileActivatedInfo]: ...
    @_property
    def arguments(self) -> str: ...
    @_property
    def tile_id(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class ILockScreenActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ILockScreenActivatedEventArgs: ...
    @_property
    def info(self) -> typing.Optional[winrt.system.Object]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class ILockScreenCallActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ILockScreenCallActivatedEventArgs: ...
    @_property
    def call_u_i(self) -> typing.Optional[winrt.windows.applicationmodel.calls.LockScreenCallUI]: ...
    @_property
    def arguments(self) -> str: ...
    @_property
    def tile_id(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IPhoneCallActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IPhoneCallActivatedEventArgs: ...
    @_property
    def line_id(self) -> _uuid.UUID: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IPickerReturnedActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IPickerReturnedActivatedEventArgs: ...
    @_property
    def picker_operation_id(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IPrelaunchActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IPrelaunchActivatedEventArgs: ...
    @_property
    def prelaunch_activated(self) -> bool: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IPrint3DWorkflowActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IPrint3DWorkflowActivatedEventArgs: ...
    @_property
    def workflow(self) -> typing.Optional[winrt.windows.devices.printers.extensions.Print3DWorkflow]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IPrintTaskSettingsActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IPrintTaskSettingsActivatedEventArgs: ...
    @_property
    def configuration(self) -> typing.Optional[winrt.windows.devices.printers.extensions.PrintTaskConfiguration]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IProtocolActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IProtocolActivatedEventArgs: ...
    @_property
    def uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData: ...
    @_property
    def caller_package_family_name(self) -> str: ...
    @_property
    def data(self) -> typing.Optional[winrt.windows.foundation.collections.ValueSet]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IProtocolForResultsActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IProtocolForResultsActivatedEventArgs: ...
    @_property
    def protocol_for_results_operation(self) -> typing.Optional[winrt.windows.system.ProtocolForResultsOperation]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IRestrictedLaunchActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IRestrictedLaunchActivatedEventArgs: ...
    @_property
    def shared_context(self) -> typing.Optional[winrt.system.Object]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class ISearchActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ISearchActivatedEventArgs: ...
    @_property
    def language(self) -> str: ...
    @_property
    def query_text(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class ISearchActivatedEventArgsWithLinguisticDetails(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ISearchActivatedEventArgsWithLinguisticDetails: ...
    @_property
    def linguistic_details(self) -> typing.Optional[winrt.windows.applicationmodel.search.SearchPaneQueryLinguisticDetails]: ...

@typing.final
class IShareTargetActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IShareTargetActivatedEventArgs: ...
    @_property
    def share_operation(self) -> typing.Optional[winrt.windows.applicationmodel.datatransfer.sharetarget.ShareOperation]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IStartupTaskActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IStartupTaskActivatedEventArgs: ...
    @_property
    def task_id(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IToastNotificationActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IToastNotificationActivatedEventArgs: ...
    @_property
    def argument(self) -> str: ...
    @_property
    def user_input(self) -> typing.Optional[winrt.windows.foundation.collections.ValueSet]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IUserDataAccountProviderActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IUserDataAccountProviderActivatedEventArgs: ...
    @_property
    def operation(self) -> typing.Optional[winrt.windows.applicationmodel.userdataaccounts.provider.IUserDataAccountProviderOperation]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IViewSwitcherProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IViewSwitcherProvider: ...
    @_property
    def view_switcher(self) -> typing.Optional[winrt.windows.ui.viewmanagement.ActivationViewSwitcher]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IVoiceCommandActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IVoiceCommandActivatedEventArgs: ...
    @_property
    def result(self) -> typing.Optional[winrt.windows.media.speechrecognition.SpeechRecognitionResult]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IWalletActionActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IWalletActionActivatedEventArgs: ...
    @_property
    def action_id(self) -> str: ...
    @_property
    def action_kind(self) -> winrt.windows.applicationmodel.wallet.WalletActionKind: ...
    @_property
    def item_id(self) -> str: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IWebAccountProviderActivatedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IWebAccountProviderActivatedEventArgs: ...
    @_property
    def operation(self) -> typing.Optional[winrt.windows.security.authentication.web.provider.IWebAccountProviderOperation]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

@typing.final
class IWebAuthenticationBrokerContinuationEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IWebAuthenticationBrokerContinuationEventArgs: ...
    @_property
    def web_authentication_result(self) -> typing.Optional[winrt.windows.security.authentication.web.WebAuthenticationResult]: ...
    @_property
    def continuation_data(self) -> typing.Optional[winrt.windows.foundation.collections.ValueSet]: ...
    @_property
    def kind(self) -> ActivationKind: ...
    @_property
    def previous_execution_state(self) -> ApplicationExecutionState: ...
    @_property
    def splash_screen(self) -> typing.Optional[SplashScreen]: ...

