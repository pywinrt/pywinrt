# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.system as windows_system

from winrt.windows.security.authentication.onlineid import CredentialPromptType, OnlineIdSystemTicketStatus

Self = typing.TypeVar('Self')

@typing.final
class OnlineIdAuthenticator(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    def authenticate_user_async(self, request: OnlineIdServiceTicketRequest, /) -> UserAuthenticationOperation: ...
    def authenticate_user_async_advanced(self, requests: typing.Iterable[OnlineIdServiceTicketRequest], credential_prompt_type: CredentialPromptType, /) -> UserAuthenticationOperation: ...
    def sign_out_user_async(self) -> SignOutUserOperation: ...
    @_property
    def application_id(self) -> _uuid.UUID: ...
    @application_id.setter
    def application_id(self, value: _uuid.UUID) -> None: ...
    @_property
    def authenticated_safe_customer_id(self) -> str: ...
    @_property
    def can_sign_out(self) -> bool: ...

@typing.final
class OnlineIdServiceTicket(winrt.system.Object):
    @_property
    def error_code(self) -> winrt.system.Int32: ...
    @_property
    def request(self) -> OnlineIdServiceTicketRequest: ...
    @_property
    def value(self) -> str: ...

@typing.final
class OnlineIdServiceTicketRequest(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], service: str, policy: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], service: str) -> Self: ...
    @_property
    def policy(self) -> str: ...
    @_property
    def service(self) -> str: ...

@typing.final
class OnlineIdSystemAuthenticator_Static(type):
    def get_for_user(cls, user: windows_system.User, /) -> OnlineIdSystemAuthenticatorForUser: ...
    @_property
    def default(cls) -> OnlineIdSystemAuthenticatorForUser: ...

@typing.final
class OnlineIdSystemAuthenticator(winrt.system.Object, metaclass=OnlineIdSystemAuthenticator_Static):
    pass

@typing.final
class OnlineIdSystemAuthenticatorForUser(winrt.system.Object):
    def get_ticket_async(self, request: OnlineIdServiceTicketRequest, /) -> windows_foundation.IAsyncOperation[OnlineIdSystemTicketResult]: ...
    @_property
    def application_id(self) -> _uuid.UUID: ...
    @application_id.setter
    def application_id(self, value: _uuid.UUID) -> None: ...
    @_property
    def user(self) -> windows_system.User: ...

@typing.final
class OnlineIdSystemIdentity(winrt.system.Object):
    @_property
    def id(self) -> str: ...
    @_property
    def ticket(self) -> OnlineIdServiceTicket: ...

@typing.final
class OnlineIdSystemTicketResult(winrt.system.Object):
    @_property
    def extended_error(self) -> windows_foundation.HResult: ...
    @_property
    def identity(self) -> OnlineIdSystemIdentity: ...
    @_property
    def status(self) -> OnlineIdSystemTicketStatus: ...

@typing.final
class SignOutUserOperation(winrt.system.Object, windows_foundation.ImplementsIAsyncAction, windows_foundation.ImplementsIAsyncInfo):
    def __await__(self) -> typing.Generator[typing.Any, None, None]: ...
    def cancel(self) -> None: ...
    def close(self) -> None: ...
    def get_results(self) -> None: ...
    @_property
    def error_code(self) -> windows_foundation.HResult: ...
    @_property
    def id(self) -> winrt.system.UInt32: ...
    @_property
    def status(self) -> windows_foundation.AsyncStatus: ...
    @_property
    def completed(self) -> windows_foundation.AsyncActionCompletedHandler: ...
    @completed.setter
    def completed(self, value: windows_foundation.AsyncActionCompletedHandler) -> None: ...

@typing.final
class UserAuthenticationOperation(winrt.system.Object, windows_foundation.ImplementsIAsyncOperation[UserIdentity], windows_foundation.ImplementsIAsyncInfo):
    def __await__(self) -> typing.Generator[typing.Any, None, UserIdentity]: ...
    def cancel(self) -> None: ...
    def close(self) -> None: ...
    def get_results(self) -> UserIdentity: ...
    @_property
    def error_code(self) -> windows_foundation.HResult: ...
    @_property
    def id(self) -> winrt.system.UInt32: ...
    @_property
    def status(self) -> windows_foundation.AsyncStatus: ...
    @_property
    def completed(self) -> windows_foundation.AsyncOperationCompletedHandler[UserIdentity]: ...
    @completed.setter
    def completed(self, value: windows_foundation.AsyncOperationCompletedHandler[UserIdentity]) -> None: ...

@typing.final
class UserIdentity(winrt.system.Object):
    @_property
    def first_name(self) -> str: ...
    @_property
    def id(self) -> str: ...
    @_property
    def is_beta_account(self) -> bool: ...
    @_property
    def is_confirmed_pc(self) -> bool: ...
    @_property
    def last_name(self) -> str: ...
    @_property
    def safe_customer_id(self) -> str: ...
    @_property
    def sign_in_name(self) -> str: ...
    @_property
    def tickets(self) -> typing.Sequence[OnlineIdServiceTicket]: ...

