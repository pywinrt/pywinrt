# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.3.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections

from winrt.windows.management.setup import DeploymentAgentProgressState, DeploymentSessionConnectionChange, DeploymentSessionStateChange, DeploymentWorkloadState
from winrt.windows.management.setup import DeploymentSessionHeartbeatRequested

Self = typing.TypeVar('Self')

@typing.final
class AgentProvisioningProgressReport(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AgentProvisioningProgressReport: ...
    def __new__(cls: typing.Type[AgentProvisioningProgressReport]) -> AgentProvisioningProgressReport: ...
    @_property
    def state(self) -> DeploymentAgentProgressState: ...
    @state.setter
    def state(self, value: DeploymentAgentProgressState) -> None: ...
    @_property
    def progress_percentage(self) -> winrt.system.Double: ...
    @progress_percentage.setter
    def progress_percentage(self, value: winrt.system.Double) -> None: ...
    @_property
    def estimated_time_remaining(self) -> datetime.timedelta: ...
    @estimated_time_remaining.setter
    def estimated_time_remaining(self, value: datetime.timedelta) -> None: ...
    @_property
    def display_progress_secondary(self) -> str: ...
    @display_progress_secondary.setter
    def display_progress_secondary(self, value: str) -> None: ...
    @_property
    def display_progress(self) -> str: ...
    @display_progress.setter
    def display_progress(self, value: str) -> None: ...
    @_property
    def current_batch_index(self) -> winrt.system.UInt32: ...
    @current_batch_index.setter
    def current_batch_index(self, value: winrt.system.UInt32) -> None: ...
    @_property
    def batches(self) -> typing.Optional[windows_foundation_collections.IVector[DeploymentWorkloadBatch]]: ...

@typing.final
class DeploymentSessionConnectionChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DeploymentSessionConnectionChangedEventArgs: ...
    @_property
    def change(self) -> DeploymentSessionConnectionChange: ...
    @_property
    def session_id(self) -> str: ...

@typing.final
class DeploymentSessionHeartbeatRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DeploymentSessionHeartbeatRequestedEventArgs: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...

@typing.final
class DeploymentSessionStateChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DeploymentSessionStateChangedEventArgs: ...
    @_property
    def change(self) -> DeploymentSessionStateChange: ...
    @_property
    def session_id(self) -> str: ...

@typing.final
class DeploymentWorkload(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DeploymentWorkload: ...
    def __new__(cls: typing.Type[DeploymentWorkload], id: str) -> DeploymentWorkload: ...
    @_property
    def state_details(self) -> str: ...
    @state_details.setter
    def state_details(self, value: str) -> None: ...
    @_property
    def state(self) -> DeploymentWorkloadState: ...
    @state.setter
    def state(self, value: DeploymentWorkloadState) -> None: ...
    @_property
    def start_time(self) -> typing.Optional[typing.Optional[datetime.datetime]]: ...
    @start_time.setter
    def start_time(self, value: typing.Optional[typing.Optional[datetime.datetime]]) -> None: ...
    @_property
    def possible_resolution(self) -> str: ...
    @possible_resolution.setter
    def possible_resolution(self, value: str) -> None: ...
    @_property
    def possible_cause(self) -> str: ...
    @possible_cause.setter
    def possible_cause(self, value: str) -> None: ...
    @_property
    def error_message(self) -> str: ...
    @error_message.setter
    def error_message(self, value: str) -> None: ...
    @_property
    def error_code(self) -> winrt.system.UInt32: ...
    @error_code.setter
    def error_code(self, value: winrt.system.UInt32) -> None: ...
    @_property
    def end_time(self) -> typing.Optional[typing.Optional[datetime.datetime]]: ...
    @end_time.setter
    def end_time(self, value: typing.Optional[typing.Optional[datetime.datetime]]) -> None: ...
    @_property
    def display_friendly_name(self) -> str: ...
    @display_friendly_name.setter
    def display_friendly_name(self, value: str) -> None: ...
    @_property
    def id(self) -> str: ...

@typing.final
class DeploymentWorkloadBatch(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DeploymentWorkloadBatch: ...
    def __new__(cls: typing.Type[DeploymentWorkloadBatch], id: winrt.system.UInt32) -> DeploymentWorkloadBatch: ...
    @_property
    def display_category_title(self) -> str: ...
    @display_category_title.setter
    def display_category_title(self, value: str) -> None: ...
    @_property
    def batch_workloads(self) -> typing.Optional[windows_foundation_collections.IVector[DeploymentWorkload]]: ...
    @_property
    def id(self) -> winrt.system.UInt32: ...

@typing.final
class DevicePreparationExecutionContext(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DevicePreparationExecutionContext: ...
    @_property
    def context(self) -> str: ...

@typing.final
class MachineProvisioningProgressReporter_Static(type):
    def get_for_launch_uri(cls, launch_uri: typing.Optional[windows_foundation.Uri], heartbeat_handler: typing.Optional[DeploymentSessionHeartbeatRequested], /) -> typing.Optional[MachineProvisioningProgressReporter]: ...

@typing.final
class MachineProvisioningProgressReporter(winrt.system.Object, metaclass=MachineProvisioningProgressReporter_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MachineProvisioningProgressReporter: ...
    def get_device_preparation_execution_context_async(self) -> windows_foundation.IAsyncOperation[DevicePreparationExecutionContext]: ...
    def report_progress(self, update_report: typing.Optional[AgentProvisioningProgressReport], /) -> None: ...
    def add_session_connection_changed(self, handler: windows_foundation.TypedEventHandler[MachineProvisioningProgressReporter, DeploymentSessionConnectionChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_session_connection_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_session_state_changed(self, handler: windows_foundation.TypedEventHandler[MachineProvisioningProgressReporter, DeploymentSessionStateChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_session_state_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def session_connection(self) -> DeploymentSessionConnectionChange: ...
    @_property
    def session_id(self) -> _uuid.UUID: ...
    @_property
    def session_state(self) -> DeploymentSessionStateChange: ...

