# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.datatransfer as windows_applicationmodel_datatransfer
import winrt.windows.applicationmodel.datatransfer.dragdrop as windows_applicationmodel_datatransfer_dragdrop
import winrt.windows.foundation as windows_foundation
import winrt.windows.graphics.imaging as windows_graphics_imaging

from winrt.windows.applicationmodel.datatransfer.dragdrop.core import CoreDragUIContentMode

Self = typing.TypeVar('Self')

@typing.final
class CoreDragDropManager_Static(type):
    # Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragDropManager Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragDropManager::GetForCurrentView()
    def get_for_current_view(cls) -> CoreDragDropManager: ...

@typing.final
class CoreDragDropManager(winrt.system.Object, metaclass=CoreDragDropManager_Static):
    # Windows.Foundation.EventRegistrationToken Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragDropManager::add_TargetRequested(Windows.Foundation.TypedEventHandler`2<Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragDropManager,Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDropOperationTargetRequestedEventArgs>)
    def add_target_requested(self, value: windows_foundation.TypedEventHandler[CoreDragDropManager, CoreDropOperationTargetRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragDropManager::remove_TargetRequested(Windows.Foundation.EventRegistrationToken)
    def remove_target_requested(self, value: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Boolean Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragDropManager::get_AreConcurrentOperationsEnabled()
    @_property
    def are_concurrent_operations_enabled(self) -> bool: ...
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragDropManager::put_AreConcurrentOperationsEnabled(System.Boolean)
    @are_concurrent_operations_enabled.setter
    def are_concurrent_operations_enabled(self, value: bool) -> None: ...

@typing.final
class CoreDragInfo(winrt.system.Object):
    # Windows.ApplicationModel.DataTransfer.DataPackageView Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo::get_Data()
    @_property
    def data(self) -> windows_applicationmodel_datatransfer.DataPackageView: ...
    # Windows.ApplicationModel.DataTransfer.DragDrop.DragDropModifiers Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo::get_Modifiers()
    @_property
    def modifiers(self) -> windows_applicationmodel_datatransfer_dragdrop.DragDropModifiers: ...
    # Windows.Foundation.Point Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo::get_Position()
    @_property
    def position(self) -> windows_foundation.Point: ...
    # Windows.ApplicationModel.DataTransfer.DataPackageOperation Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo::get_AllowedOperations()
    @_property
    def allowed_operations(self) -> windows_applicationmodel_datatransfer.DataPackageOperation: ...

@typing.final
class CoreDragOperation(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragOperation::SetDragUIContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap)
    def set_drag_ui_content_from_software_bitmap(self, software_bitmap: windows_graphics_imaging.SoftwareBitmap, /) -> None: ...
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragOperation::SetDragUIContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap,Windows.Foundation.Point)
    def set_drag_ui_content_from_software_bitmap_with_anchor_point(self, software_bitmap: windows_graphics_imaging.SoftwareBitmap, anchor_point: windows_foundation.Point, /) -> None: ...
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragOperation::SetPointerId(System.UInt32)
    def set_pointer_id(self, pointer_id: winrt.system.UInt32, /) -> None: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.DataTransfer.DataPackageOperation> Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragOperation::StartAsync()
    def start_async(self) -> windows_foundation.IAsyncOperation[windows_applicationmodel_datatransfer.DataPackageOperation]: ...
    # Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIContentMode Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragOperation::get_DragUIContentMode()
    @_property
    def drag_ui_content_mode(self) -> CoreDragUIContentMode: ...
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragOperation::put_DragUIContentMode(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIContentMode)
    @drag_ui_content_mode.setter
    def drag_ui_content_mode(self, value: CoreDragUIContentMode) -> None: ...
    # Windows.ApplicationModel.DataTransfer.DataPackage Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragOperation::get_Data()
    @_property
    def data(self) -> windows_applicationmodel_datatransfer.DataPackage: ...
    # Windows.ApplicationModel.DataTransfer.DataPackageOperation Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragOperation::get_AllowedOperations()
    @_property
    def allowed_operations(self) -> windows_applicationmodel_datatransfer.DataPackageOperation: ...
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragOperation::put_AllowedOperations(Windows.ApplicationModel.DataTransfer.DataPackageOperation)
    @allowed_operations.setter
    def allowed_operations(self, value: windows_applicationmodel_datatransfer.DataPackageOperation) -> None: ...

@typing.final
class CoreDragUIOverride(winrt.system.Object):
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride::Clear()
    def clear(self) -> None: ...
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride::SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap)
    def set_content_from_software_bitmap(self, software_bitmap: windows_graphics_imaging.SoftwareBitmap, /) -> None: ...
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride::SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap,Windows.Foundation.Point)
    def set_content_from_software_bitmap_with_anchor_point(self, software_bitmap: windows_graphics_imaging.SoftwareBitmap, anchor_point: windows_foundation.Point, /) -> None: ...
    # System.Boolean Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride::get_IsGlyphVisible()
    @_property
    def is_glyph_visible(self) -> bool: ...
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride::put_IsGlyphVisible(System.Boolean)
    @is_glyph_visible.setter
    def is_glyph_visible(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride::get_IsContentVisible()
    @_property
    def is_content_visible(self) -> bool: ...
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride::put_IsContentVisible(System.Boolean)
    @is_content_visible.setter
    def is_content_visible(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride::get_IsCaptionVisible()
    @_property
    def is_caption_visible(self) -> bool: ...
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride::put_IsCaptionVisible(System.Boolean)
    @is_caption_visible.setter
    def is_caption_visible(self, value: bool) -> None: ...
    # System.String Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride::get_Caption()
    @_property
    def caption(self) -> str: ...
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride::put_Caption(System.String)
    @caption.setter
    def caption(self, value: str) -> None: ...

@typing.final
class CoreDropOperationTargetRequestedEventArgs(winrt.system.Object):
    # System.Void Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDropOperationTargetRequestedEventArgs::SetTarget(Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDropOperationTarget)
    def set_target(self, target: ICoreDropOperationTarget, /) -> None: ...

class ICoreDropOperationTarget(winrt._winrt.IInspectable):
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.DataTransfer.DataPackageOperation> Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDropOperationTarget::DropAsync(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo)
    @abstractmethod
    def drop_async(self, drag_info: CoreDragInfo, /) -> windows_foundation.IAsyncOperation[windows_applicationmodel_datatransfer.DataPackageOperation]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.DataTransfer.DataPackageOperation> Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDropOperationTarget::EnterAsync(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo,Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride)
    @abstractmethod
    def enter_async(self, drag_info: CoreDragInfo, drag_ui_override: CoreDragUIOverride, /) -> windows_foundation.IAsyncOperation[windows_applicationmodel_datatransfer.DataPackageOperation]: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDropOperationTarget::LeaveAsync(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo)
    @abstractmethod
    def leave_async(self, drag_info: CoreDragInfo, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.DataTransfer.DataPackageOperation> Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDropOperationTarget::OverAsync(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo,Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride)
    @abstractmethod
    def over_async(self, drag_info: CoreDragInfo, drag_ui_override: CoreDragUIOverride, /) -> windows_foundation.IAsyncOperation[windows_applicationmodel_datatransfer.DataPackageOperation]: ...

