# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.appointments as windows_applicationmodel_appointments
import winrt.windows.applicationmodel.email as windows_applicationmodel_email
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.storage.streams as windows_storage_streams

from winrt.windows.phone.notification.management import AccessoryNotificationType, CalendarChangedEvent, PhoneCallAudioEndpoint, PhoneCallDirection, PhoneCallState, PhoneCallTransport, PhoneLineRegistrationState, PhoneMediaType, PhoneNotificationType, PlaybackCapability, PlaybackCommand, PlaybackStatus, ReminderState, VibrateState

Self = typing.TypeVar('Self')

@typing.final
class AccessoryManager_Static(type):
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::AcceptPhoneCall(System.UInt32)
    def accept_phone_call(cls, phone_call_id: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::AcceptPhoneCall(System.UInt32,Windows.Phone.Notification.Management.PhoneCallAudioEndpoint)
    def accept_phone_call_on_endpoint(cls, phone_call_id: winrt.system.UInt32, end_point: PhoneCallAudioEndpoint, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::AcceptPhoneCallWithVideo(System.UInt32)
    def accept_phone_call_with_video(cls, phone_call_id: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::AcceptPhoneCallWithVideo(System.UInt32,Windows.Phone.Notification.Management.PhoneCallAudioEndpoint)
    def accept_phone_call_with_video_on_audio_endpoint(cls, phone_call_id: winrt.system.UInt32, end_point: PhoneCallAudioEndpoint, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::ClearToast(System.String)
    def clear_toast(cls, instance_id: str, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::DecreaseVolume(System.Int32)
    def decrease_volume(cls, step: winrt.system.Int32, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::DisableAllAccessoryNotificationTypes()
    def disable_all_accessory_notification_types(cls) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::DisableEmailNotificationEmailAccount(System.String)
    def disable_email_notification_email_account(cls, email_account: str, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::DisableNotificationsForApplication(System.String)
    def disable_notifications_for_application(cls, app_id: str, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::DismissAlarm(System.Guid)
    def dismiss_alarm(cls, alarm_id: _uuid.UUID, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::DismissAlarmByInstanceId(System.String)
    def dismiss_alarm_by_instance_id(cls, instance_id: str, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::DismissReminder(System.Guid)
    def dismiss_reminder(cls, reminder_id: _uuid.UUID, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::DismissReminderByInstanceId(System.String)
    def dismiss_reminder_by_instance_id(cls, instance_id: str, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::EnableAccessoryNotificationTypes(System.Int32)
    def enable_accessory_notification_types(cls, accessory_notification_types: winrt.system.Int32, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::EnableEmailNotificationEmailAccount(System.String)
    def enable_email_notification_email_account(cls, email_account: str, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::EnableEmailNotificationFolderFilter(System.String,Windows.Foundation.Collections.IVectorView`1<System.String>)
    def enable_email_notification_folder_filter(cls, email_account: str, folders: typing.Sequence[str], /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::EnableNotificationsForApplication(System.String)
    def enable_notifications_for_application(cls, app_id: str, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::EndPhoneCall(System.UInt32)
    def end_phone_call(cls, phone_call_id: winrt.system.UInt32, /) -> None: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Phone.Notification.Management.EmailAccountInfo> Windows.Phone.Notification.Management.AccessoryManager::GetAllEmailAccounts()
    def get_all_email_accounts(cls) -> typing.Sequence[EmailAccountInfo]: ...
    # Windows.Storage.Streams.IRandomAccessStreamReference Windows.Phone.Notification.Management.AccessoryManager::GetAppIcon(System.String)
    def get_app_icon(cls, app_id: str, /) -> windows_storage_streams.IRandomAccessStreamReference: ...
    # Windows.Foundation.Collections.IMapView`2<System.String,Windows.Phone.Notification.Management.AppNotificationInfo> Windows.Phone.Notification.Management.AccessoryManager::GetApps()
    def get_apps(cls) -> typing.Mapping[str, AppNotificationInfo]: ...
    # System.Int32 Windows.Phone.Notification.Management.AccessoryManager::GetEnabledAccessoryNotificationTypes()
    def get_enabled_accessory_notification_types(cls) -> winrt.system.Int32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Phone.Notification.Management.EmailFolderInfo> Windows.Phone.Notification.Management.AccessoryManager::GetFolders(System.String)
    def get_folders(cls, email_account: str, /) -> typing.Sequence[EmailFolderInfo]: ...
    # Windows.Phone.Notification.Management.MediaMetadata Windows.Phone.Notification.Management.AccessoryManager::GetMediaMetadata()
    def get_media_metadata(cls) -> MediaMetadata: ...
    # Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails Windows.Phone.Notification.Management.AccessoryManager::GetNextTriggerDetails()
    def get_next_trigger_details(cls) -> IAccessoryNotificationTriggerDetails: ...
    # Windows.Phone.Notification.Management.PhoneLineDetails Windows.Phone.Notification.Management.AccessoryManager::GetPhoneLineDetails(System.Guid)
    def get_phone_line_details(cls, phone_line: _uuid.UUID, /) -> PhoneLineDetails: ...
    # System.Boolean Windows.Phone.Notification.Management.AccessoryManager::GetUserConsent()
    def get_user_consent(cls) -> bool: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::HoldPhoneCall(System.UInt32,System.Boolean)
    def hold_phone_call(cls, phone_call_id: winrt.system.UInt32, hold_call: bool, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::IncreaseVolume(System.Int32)
    def increase_volume(cls, step: winrt.system.Int32, /) -> None: ...
    # System.Boolean Windows.Phone.Notification.Management.AccessoryManager::IsNotificationEnabledForApplication(System.String)
    def is_notification_enabled_for_application(cls, app_id: str, /) -> bool: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::MakePhoneCall(System.Guid,System.String)
    def make_phone_call(cls, phone_line: _uuid.UUID, phone_number: str, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::MakePhoneCall(System.Guid,System.String,Windows.Phone.Notification.Management.PhoneCallAudioEndpoint)
    def make_phone_call_on_audio_endpoint(cls, phone_line: _uuid.UUID, phone_number: str, end_point: PhoneCallAudioEndpoint, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::MakePhoneCallWithVideo(System.Guid,System.String)
    def make_phone_call_with_video(cls, phone_line: _uuid.UUID, phone_number: str, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::MakePhoneCallWithVideo(System.Guid,System.String,Windows.Phone.Notification.Management.PhoneCallAudioEndpoint)
    def make_phone_call_with_video_on_audio_endpoint(cls, phone_line: _uuid.UUID, phone_number: str, end_point: PhoneCallAudioEndpoint, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::PerformMediaPlaybackCommand(Windows.Phone.Notification.Management.PlaybackCommand)
    def perform_media_playback_command(cls, command: PlaybackCommand, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::ProcessTriggerDetails(Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails)
    def process_trigger_details(cls, p_details: ImplementsIAccessoryNotificationTriggerDetails, /) -> None: ...
    # System.String Windows.Phone.Notification.Management.AccessoryManager::RegisterAccessoryApp()
    def register_accessory_app(cls) -> str: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::RejectPhoneCall(System.UInt32)
    def reject_phone_call(cls, phone_call_id: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::RejectPhoneCall(System.UInt32,System.UInt32)
    def reject_phone_call_with_text(cls, phone_call_id: winrt.system.UInt32, text_response_id: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::RingDevice()
    def ring_device(cls) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::SetMute(System.Boolean)
    def set_mute(cls, mute: bool, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::SetRingerVibrate(System.Boolean,System.Boolean)
    def set_ringer_vibrate(cls, ringer: bool, vibrate: bool, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::SnoozeAlarm(System.Guid)
    def snooze_alarm(cls, alarm_id: _uuid.UUID, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::SnoozeAlarmByInstanceId(System.String)
    def snooze_alarm_by_instance_id(cls, instance_id: str, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::SnoozeAlarm(System.Guid,Windows.Foundation.TimeSpan)
    def snooze_alarm_for_specified_time(cls, alarm_id: _uuid.UUID, time_span: datetime.timedelta, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::SnoozeReminder(System.Guid)
    def snooze_reminder(cls, reminder_id: _uuid.UUID, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::SnoozeReminderByInstanceId(System.String)
    def snooze_reminder_by_instance_id(cls, instance_id: str, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::SnoozeReminder(System.Guid,Windows.Foundation.TimeSpan)
    def snooze_reminder_for_specified_time(cls, reminder_id: _uuid.UUID, time_span: datetime.timedelta, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::SwapPhoneCalls(System.UInt32,System.UInt32)
    def swap_phone_calls(cls, phone_call_id_to_hold: winrt.system.UInt32, phone_call_id_on_hold: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::UpdateEmailReadStatus(Windows.Phone.Notification.Management.BinaryId,System.Boolean)
    def update_email_read_status(cls, message_entry_id: BinaryId, is_read: bool, /) -> None: ...
    # System.Boolean Windows.Phone.Notification.Management.AccessoryManager::get_PhoneMute()
    @_property
    def phone_mute(cls) -> bool: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::put_PhoneMute(System.Boolean)
    @phone_mute.setter
    def phone_mute(cls, value: bool) -> None: ...
    # Windows.Phone.Notification.Management.PhoneCallAudioEndpoint Windows.Phone.Notification.Management.AccessoryManager::get_PhoneCallAudioEndpoint()
    @_property
    def phone_call_audio_endpoint(cls) -> PhoneCallAudioEndpoint: ...
    # System.Void Windows.Phone.Notification.Management.AccessoryManager::put_PhoneCallAudioEndpoint(Windows.Phone.Notification.Management.PhoneCallAudioEndpoint)
    @phone_call_audio_endpoint.setter
    def phone_call_audio_endpoint(cls, value: PhoneCallAudioEndpoint) -> None: ...
    # System.Boolean Windows.Phone.Notification.Management.AccessoryManager::get_BatterySaverState()
    @_property
    def battery_saver_state(cls) -> bool: ...
    # System.Boolean Windows.Phone.Notification.Management.AccessoryManager::get_DoNotDisturbEnabled()
    @_property
    def do_not_disturb_enabled(cls) -> bool: ...
    # System.Boolean Windows.Phone.Notification.Management.AccessoryManager::get_DrivingModeEnabled()
    @_property
    def driving_mode_enabled(cls) -> bool: ...
    # Windows.Phone.Notification.Management.PlaybackCapability Windows.Phone.Notification.Management.AccessoryManager::get_MediaPlaybackCapabilities()
    @_property
    def media_playback_capabilities(cls) -> PlaybackCapability: ...
    # Windows.Phone.Notification.Management.PlaybackStatus Windows.Phone.Notification.Management.AccessoryManager::get_MediaPlaybackStatus()
    @_property
    def media_playback_status(cls) -> PlaybackStatus: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Phone.Notification.Management.PhoneLineDetails> Windows.Phone.Notification.Management.AccessoryManager::get_PhoneLineDetails()
    @_property
    def phone_line_details(cls) -> typing.Sequence[PhoneLineDetails]: ...
    # System.Boolean Windows.Phone.Notification.Management.AccessoryManager::get_IsPhonePinLocked()
    @_property
    def is_phone_pin_locked(cls) -> bool: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Phone.Notification.Management.SpeedDialEntry> Windows.Phone.Notification.Management.AccessoryManager::get_SpeedDialList()
    @_property
    def speed_dial_list(cls) -> typing.Sequence[SpeedDialEntry]: ...
    # Windows.Phone.Notification.Management.VolumeInfo Windows.Phone.Notification.Management.AccessoryManager::get_VolumeInfo()
    @_property
    def volume_info(cls) -> VolumeInfo: ...

@typing.final
class AccessoryManager(winrt.system.Object, metaclass=AccessoryManager_Static):
    pass

@typing.final
class AlarmNotificationTriggerDetails(winrt.system.Object, ImplementsIAccessoryNotificationTriggerDetails):
    # System.Boolean Windows.Phone.Notification.Management.AlarmNotificationTriggerDetails::get_StartedProcessing()
    @_property
    def started_processing(self) -> bool: ...
    # System.Void Windows.Phone.Notification.Management.AlarmNotificationTriggerDetails::put_StartedProcessing(System.Boolean)
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    # Windows.Phone.Notification.Management.AccessoryNotificationType Windows.Phone.Notification.Management.AlarmNotificationTriggerDetails::get_AccessoryNotificationType()
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    # System.String Windows.Phone.Notification.Management.AlarmNotificationTriggerDetails::get_AppDisplayName()
    @_property
    def app_display_name(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.AlarmNotificationTriggerDetails::get_AppId()
    @_property
    def app_id(self) -> str: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.AlarmNotificationTriggerDetails::get_TimeCreated()
    @_property
    def time_created(self) -> datetime.datetime: ...
    # System.Guid Windows.Phone.Notification.Management.AlarmNotificationTriggerDetails::get_AlarmId()
    @_property
    def alarm_id(self) -> _uuid.UUID: ...
    # Windows.Phone.Notification.Management.ReminderState Windows.Phone.Notification.Management.AlarmNotificationTriggerDetails::get_ReminderState()
    @_property
    def reminder_state(self) -> ReminderState: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.AlarmNotificationTriggerDetails::get_Timestamp()
    @_property
    def timestamp(self) -> datetime.datetime: ...
    # System.String Windows.Phone.Notification.Management.AlarmNotificationTriggerDetails::get_Title()
    @_property
    def title(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.AlarmNotificationTriggerDetails::get_InstanceId()
    @_property
    def instance_id(self) -> str: ...

@typing.final
class AppNotificationInfo(winrt.system.Object):
    # System.String Windows.Phone.Notification.Management.AppNotificationInfo::get_Id()
    @_property
    def id(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.AppNotificationInfo::get_Name()
    @_property
    def name(self) -> str: ...

@typing.final
class BinaryId(winrt.system.Object):
    # System.Byte Windows.Phone.Notification.Management.BinaryId::get_Id()
    @_property
    def id(self) -> winrt.system.UInt8: ...
    # System.UInt32 Windows.Phone.Notification.Management.BinaryId::get_Length()
    @_property
    def length(self) -> winrt.system.UInt32: ...

@typing.final
class CalendarChangedNotificationTriggerDetails(winrt.system.Object, ImplementsIAccessoryNotificationTriggerDetails):
    # System.Boolean Windows.Phone.Notification.Management.CalendarChangedNotificationTriggerDetails::get_StartedProcessing()
    @_property
    def started_processing(self) -> bool: ...
    # System.Void Windows.Phone.Notification.Management.CalendarChangedNotificationTriggerDetails::put_StartedProcessing(System.Boolean)
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    # Windows.Phone.Notification.Management.AccessoryNotificationType Windows.Phone.Notification.Management.CalendarChangedNotificationTriggerDetails::get_AccessoryNotificationType()
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    # System.String Windows.Phone.Notification.Management.CalendarChangedNotificationTriggerDetails::get_AppDisplayName()
    @_property
    def app_display_name(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.CalendarChangedNotificationTriggerDetails::get_AppId()
    @_property
    def app_id(self) -> str: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.CalendarChangedNotificationTriggerDetails::get_TimeCreated()
    @_property
    def time_created(self) -> datetime.datetime: ...
    # Windows.Phone.Notification.Management.CalendarChangedEvent Windows.Phone.Notification.Management.CalendarChangedNotificationTriggerDetails::get_EventType()
    @_property
    def event_type(self) -> CalendarChangedEvent: ...
    # System.String Windows.Phone.Notification.Management.CalendarChangedNotificationTriggerDetails::get_ItemId()
    @_property
    def item_id(self) -> str: ...

@typing.final
class CortanaTileNotificationTriggerDetails(winrt.system.Object, ImplementsIAccessoryNotificationTriggerDetails):
    # System.Boolean Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_StartedProcessing()
    @_property
    def started_processing(self) -> bool: ...
    # System.Void Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::put_StartedProcessing(System.Boolean)
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    # Windows.Phone.Notification.Management.AccessoryNotificationType Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_AccessoryNotificationType()
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    # System.String Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_AppDisplayName()
    @_property
    def app_display_name(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_AppId()
    @_property
    def app_id(self) -> str: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_TimeCreated()
    @_property
    def time_created(self) -> datetime.datetime: ...
    # System.String Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_Content()
    @_property
    def content(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_EmphasizedText()
    @_property
    def emphasized_text(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_LargeContent1()
    @_property
    def large_content1(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_LargeContent2()
    @_property
    def large_content2(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_NonWrappedSmallContent1()
    @_property
    def non_wrapped_small_content1(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_NonWrappedSmallContent2()
    @_property
    def non_wrapped_small_content2(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_NonWrappedSmallContent3()
    @_property
    def non_wrapped_small_content3(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_NonWrappedSmallContent4()
    @_property
    def non_wrapped_small_content4(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_Source()
    @_property
    def source(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails::get_TileId()
    @_property
    def tile_id(self) -> str: ...

@typing.final
class EmailAccountInfo(winrt.system.Object):
    # System.String Windows.Phone.Notification.Management.EmailAccountInfo::get_DisplayName()
    @_property
    def display_name(self) -> str: ...
    # System.Boolean Windows.Phone.Notification.Management.EmailAccountInfo::get_IsNotificationEnabled()
    @_property
    def is_notification_enabled(self) -> bool: ...

@typing.final
class EmailFolderInfo(winrt.system.Object):
    # System.String Windows.Phone.Notification.Management.EmailFolderInfo::get_DisplayName()
    @_property
    def display_name(self) -> str: ...
    # System.Boolean Windows.Phone.Notification.Management.EmailFolderInfo::get_IsNotificationEnabled()
    @_property
    def is_notification_enabled(self) -> bool: ...

@typing.final
class EmailNotificationTriggerDetails(winrt.system.Object, ImplementsIAccessoryNotificationTriggerDetails):
    # System.Boolean Windows.Phone.Notification.Management.EmailNotificationTriggerDetails::get_StartedProcessing()
    @_property
    def started_processing(self) -> bool: ...
    # System.Void Windows.Phone.Notification.Management.EmailNotificationTriggerDetails::put_StartedProcessing(System.Boolean)
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    # Windows.Phone.Notification.Management.AccessoryNotificationType Windows.Phone.Notification.Management.EmailNotificationTriggerDetails::get_AccessoryNotificationType()
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    # System.String Windows.Phone.Notification.Management.EmailNotificationTriggerDetails::get_AppDisplayName()
    @_property
    def app_display_name(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.EmailNotificationTriggerDetails::get_AppId()
    @_property
    def app_id(self) -> str: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.EmailNotificationTriggerDetails::get_TimeCreated()
    @_property
    def time_created(self) -> datetime.datetime: ...
    # System.String Windows.Phone.Notification.Management.EmailNotificationTriggerDetails::get_AccountName()
    @_property
    def account_name(self) -> str: ...
    # Windows.ApplicationModel.Email.EmailMessage Windows.Phone.Notification.Management.EmailNotificationTriggerDetails::get_EmailMessage()
    @_property
    def email_message(self) -> windows_applicationmodel_email.EmailMessage: ...
    # System.String Windows.Phone.Notification.Management.EmailNotificationTriggerDetails::get_ParentFolderName()
    @_property
    def parent_folder_name(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.EmailNotificationTriggerDetails::get_SenderAddress()
    @_property
    def sender_address(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.EmailNotificationTriggerDetails::get_SenderName()
    @_property
    def sender_name(self) -> str: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.EmailNotificationTriggerDetails::get_Timestamp()
    @_property
    def timestamp(self) -> datetime.datetime: ...
    # Windows.Phone.Notification.Management.BinaryId Windows.Phone.Notification.Management.EmailNotificationTriggerDetails::get_MessageEntryId()
    @_property
    def message_entry_id(self) -> BinaryId: ...

@typing.final
class EmailReadNotificationTriggerDetails(winrt.system.Object, ImplementsIAccessoryNotificationTriggerDetails):
    # System.Boolean Windows.Phone.Notification.Management.EmailReadNotificationTriggerDetails::get_StartedProcessing()
    @_property
    def started_processing(self) -> bool: ...
    # System.Void Windows.Phone.Notification.Management.EmailReadNotificationTriggerDetails::put_StartedProcessing(System.Boolean)
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    # Windows.Phone.Notification.Management.AccessoryNotificationType Windows.Phone.Notification.Management.EmailReadNotificationTriggerDetails::get_AccessoryNotificationType()
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    # System.String Windows.Phone.Notification.Management.EmailReadNotificationTriggerDetails::get_AppDisplayName()
    @_property
    def app_display_name(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.EmailReadNotificationTriggerDetails::get_AppId()
    @_property
    def app_id(self) -> str: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.EmailReadNotificationTriggerDetails::get_TimeCreated()
    @_property
    def time_created(self) -> datetime.datetime: ...
    # System.String Windows.Phone.Notification.Management.EmailReadNotificationTriggerDetails::get_AccountName()
    @_property
    def account_name(self) -> str: ...
    # System.Boolean Windows.Phone.Notification.Management.EmailReadNotificationTriggerDetails::get_IsRead()
    @_property
    def is_read(self) -> bool: ...
    # Windows.Phone.Notification.Management.BinaryId Windows.Phone.Notification.Management.EmailReadNotificationTriggerDetails::get_MessageEntryId()
    @_property
    def message_entry_id(self) -> BinaryId: ...
    # System.String Windows.Phone.Notification.Management.EmailReadNotificationTriggerDetails::get_ParentFolderName()
    @_property
    def parent_folder_name(self) -> str: ...

@typing.final
class MediaControlsTriggerDetails(winrt.system.Object, ImplementsIAccessoryNotificationTriggerDetails):
    # System.Boolean Windows.Phone.Notification.Management.MediaControlsTriggerDetails::get_StartedProcessing()
    @_property
    def started_processing(self) -> bool: ...
    # System.Void Windows.Phone.Notification.Management.MediaControlsTriggerDetails::put_StartedProcessing(System.Boolean)
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    # Windows.Phone.Notification.Management.AccessoryNotificationType Windows.Phone.Notification.Management.MediaControlsTriggerDetails::get_AccessoryNotificationType()
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    # System.String Windows.Phone.Notification.Management.MediaControlsTriggerDetails::get_AppDisplayName()
    @_property
    def app_display_name(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.MediaControlsTriggerDetails::get_AppId()
    @_property
    def app_id(self) -> str: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.MediaControlsTriggerDetails::get_TimeCreated()
    @_property
    def time_created(self) -> datetime.datetime: ...
    # Windows.Phone.Notification.Management.MediaMetadata Windows.Phone.Notification.Management.MediaControlsTriggerDetails::get_MediaMetadata()
    @_property
    def media_metadata(self) -> MediaMetadata: ...
    # Windows.Phone.Notification.Management.PlaybackStatus Windows.Phone.Notification.Management.MediaControlsTriggerDetails::get_PlaybackStatus()
    @_property
    def playback_status(self) -> PlaybackStatus: ...

@typing.final
class MediaMetadata(winrt.system.Object):
    # System.String Windows.Phone.Notification.Management.MediaMetadata::get_Album()
    @_property
    def album(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.MediaMetadata::get_Artist()
    @_property
    def artist(self) -> str: ...
    # Windows.Foundation.TimeSpan Windows.Phone.Notification.Management.MediaMetadata::get_Duration()
    @_property
    def duration(self) -> datetime.timedelta: ...
    # System.String Windows.Phone.Notification.Management.MediaMetadata::get_Subtitle()
    @_property
    def subtitle(self) -> str: ...
    # Windows.Storage.Streams.IRandomAccessStreamReference Windows.Phone.Notification.Management.MediaMetadata::get_Thumbnail()
    @_property
    def thumbnail(self) -> windows_storage_streams.IRandomAccessStreamReference: ...
    # System.String Windows.Phone.Notification.Management.MediaMetadata::get_Title()
    @_property
    def title(self) -> str: ...
    # System.UInt32 Windows.Phone.Notification.Management.MediaMetadata::get_Track()
    @_property
    def track(self) -> winrt.system.UInt32: ...

@typing.final
class PhoneCallDetails(winrt.system.Object):
    # Windows.Phone.Notification.Management.PhoneCallDirection Windows.Phone.Notification.Management.PhoneCallDetails::get_CallDirection()
    @_property
    def call_direction(self) -> PhoneCallDirection: ...
    # System.UInt32 Windows.Phone.Notification.Management.PhoneCallDetails::get_CallId()
    @_property
    def call_id(self) -> winrt.system.UInt32: ...
    # Windows.Phone.Notification.Management.PhoneMediaType Windows.Phone.Notification.Management.PhoneCallDetails::get_CallMediaType()
    @_property
    def call_media_type(self) -> PhoneMediaType: ...
    # Windows.Phone.Notification.Management.PhoneCallTransport Windows.Phone.Notification.Management.PhoneCallDetails::get_CallTransport()
    @_property
    def call_transport(self) -> PhoneCallTransport: ...
    # System.UInt32 Windows.Phone.Notification.Management.PhoneCallDetails::get_ConferenceCallId()
    @_property
    def conference_call_id(self) -> winrt.system.UInt32: ...
    # System.String Windows.Phone.Notification.Management.PhoneCallDetails::get_ContactName()
    @_property
    def contact_name(self) -> str: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.PhoneCallDetails::get_EndTime()
    @_property
    def end_time(self) -> datetime.datetime: ...
    # System.Guid Windows.Phone.Notification.Management.PhoneCallDetails::get_PhoneLine()
    @_property
    def phone_line(self) -> _uuid.UUID: ...
    # System.String Windows.Phone.Notification.Management.PhoneCallDetails::get_PhoneNumber()
    @_property
    def phone_number(self) -> str: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Phone.Notification.Management.TextResponse> Windows.Phone.Notification.Management.PhoneCallDetails::get_PresetTextResponses()
    @_property
    def preset_text_responses(self) -> typing.Sequence[TextResponse]: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.PhoneCallDetails::get_StartTime()
    @_property
    def start_time(self) -> datetime.datetime: ...
    # Windows.Phone.Notification.Management.PhoneCallState Windows.Phone.Notification.Management.PhoneCallDetails::get_State()
    @_property
    def state(self) -> PhoneCallState: ...

@typing.final
class PhoneLineDetails(winrt.system.Object):
    # System.Boolean Windows.Phone.Notification.Management.PhoneLineDetails::get_DefaultOutgoingLine()
    @_property
    def default_outgoing_line(self) -> bool: ...
    # System.String Windows.Phone.Notification.Management.PhoneLineDetails::get_DisplayName()
    @_property
    def display_name(self) -> str: ...
    # System.Guid Windows.Phone.Notification.Management.PhoneLineDetails::get_LineId()
    @_property
    def line_id(self) -> _uuid.UUID: ...
    # System.String Windows.Phone.Notification.Management.PhoneLineDetails::get_LineNumber()
    @_property
    def line_number(self) -> str: ...
    # Windows.Phone.Notification.Management.PhoneLineRegistrationState Windows.Phone.Notification.Management.PhoneLineDetails::get_RegistrationState()
    @_property
    def registration_state(self) -> PhoneLineRegistrationState: ...
    # System.UInt32 Windows.Phone.Notification.Management.PhoneLineDetails::get_VoicemailCount()
    @_property
    def voicemail_count(self) -> winrt.system.UInt32: ...
    # System.UInt32 Windows.Phone.Notification.Management.PhoneLineDetails::get_MissedCallCount()
    @_property
    def missed_call_count(self) -> winrt.system.UInt32: ...

@typing.final
class PhoneNotificationTriggerDetails(winrt.system.Object, ImplementsIAccessoryNotificationTriggerDetails):
    # System.Boolean Windows.Phone.Notification.Management.PhoneNotificationTriggerDetails::get_StartedProcessing()
    @_property
    def started_processing(self) -> bool: ...
    # System.Void Windows.Phone.Notification.Management.PhoneNotificationTriggerDetails::put_StartedProcessing(System.Boolean)
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    # Windows.Phone.Notification.Management.AccessoryNotificationType Windows.Phone.Notification.Management.PhoneNotificationTriggerDetails::get_AccessoryNotificationType()
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    # System.String Windows.Phone.Notification.Management.PhoneNotificationTriggerDetails::get_AppDisplayName()
    @_property
    def app_display_name(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.PhoneNotificationTriggerDetails::get_AppId()
    @_property
    def app_id(self) -> str: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.PhoneNotificationTriggerDetails::get_TimeCreated()
    @_property
    def time_created(self) -> datetime.datetime: ...
    # Windows.Phone.Notification.Management.PhoneCallDetails Windows.Phone.Notification.Management.PhoneNotificationTriggerDetails::get_CallDetails()
    @_property
    def call_details(self) -> PhoneCallDetails: ...
    # System.Guid Windows.Phone.Notification.Management.PhoneNotificationTriggerDetails::get_PhoneLineChangedId()
    @_property
    def phone_line_changed_id(self) -> _uuid.UUID: ...
    # Windows.Phone.Notification.Management.PhoneNotificationType Windows.Phone.Notification.Management.PhoneNotificationTriggerDetails::get_PhoneNotificationType()
    @_property
    def phone_notification_type(self) -> PhoneNotificationType: ...

@typing.final
class ReminderNotificationTriggerDetails(winrt.system.Object, ImplementsIAccessoryNotificationTriggerDetails):
    # System.Boolean Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails::get_StartedProcessing()
    @_property
    def started_processing(self) -> bool: ...
    # System.Void Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails::put_StartedProcessing(System.Boolean)
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    # Windows.Phone.Notification.Management.AccessoryNotificationType Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails::get_AccessoryNotificationType()
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    # System.String Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails::get_AppDisplayName()
    @_property
    def app_display_name(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails::get_AppId()
    @_property
    def app_id(self) -> str: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails::get_TimeCreated()
    @_property
    def time_created(self) -> datetime.datetime: ...
    # Windows.ApplicationModel.Appointments.Appointment Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails::get_Appointment()
    @_property
    def appointment(self) -> windows_applicationmodel_appointments.Appointment: ...
    # System.String Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails::get_Description()
    @_property
    def description(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails::get_Details()
    @_property
    def details(self) -> str: ...
    # System.Guid Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails::get_ReminderId()
    @_property
    def reminder_id(self) -> _uuid.UUID: ...
    # Windows.Phone.Notification.Management.ReminderState Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails::get_ReminderState()
    @_property
    def reminder_state(self) -> ReminderState: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails::get_Timestamp()
    @_property
    def timestamp(self) -> datetime.datetime: ...
    # System.String Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails::get_Title()
    @_property
    def title(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails::get_InstanceId()
    @_property
    def instance_id(self) -> str: ...

@typing.final
class SpeedDialEntry(winrt.system.Object):
    # System.String Windows.Phone.Notification.Management.SpeedDialEntry::get_ContactName()
    @_property
    def contact_name(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.SpeedDialEntry::get_NumberType()
    @_property
    def number_type(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.SpeedDialEntry::get_PhoneNumber()
    @_property
    def phone_number(self) -> str: ...

@typing.final
class TextResponse(winrt.system.Object):
    # System.String Windows.Phone.Notification.Management.TextResponse::get_Content()
    @_property
    def content(self) -> str: ...
    # System.UInt32 Windows.Phone.Notification.Management.TextResponse::get_Id()
    @_property
    def id(self) -> winrt.system.UInt32: ...

@typing.final
class ToastNotificationTriggerDetails(winrt.system.Object, ImplementsIAccessoryNotificationTriggerDetails):
    # System.Boolean Windows.Phone.Notification.Management.ToastNotificationTriggerDetails::get_StartedProcessing()
    @_property
    def started_processing(self) -> bool: ...
    # System.Void Windows.Phone.Notification.Management.ToastNotificationTriggerDetails::put_StartedProcessing(System.Boolean)
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    # Windows.Phone.Notification.Management.AccessoryNotificationType Windows.Phone.Notification.Management.ToastNotificationTriggerDetails::get_AccessoryNotificationType()
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    # System.String Windows.Phone.Notification.Management.ToastNotificationTriggerDetails::get_AppDisplayName()
    @_property
    def app_display_name(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.ToastNotificationTriggerDetails::get_AppId()
    @_property
    def app_id(self) -> str: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.ToastNotificationTriggerDetails::get_TimeCreated()
    @_property
    def time_created(self) -> datetime.datetime: ...
    # System.Boolean Windows.Phone.Notification.Management.ToastNotificationTriggerDetails::get_SuppressPopup()
    @_property
    def suppress_popup(self) -> bool: ...
    # System.String Windows.Phone.Notification.Management.ToastNotificationTriggerDetails::get_Text1()
    @_property
    def text1(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.ToastNotificationTriggerDetails::get_Text2()
    @_property
    def text2(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.ToastNotificationTriggerDetails::get_Text3()
    @_property
    def text3(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.ToastNotificationTriggerDetails::get_Text4()
    @_property
    def text4(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.ToastNotificationTriggerDetails::get_InstanceId()
    @_property
    def instance_id(self) -> str: ...

@typing.final
class VolumeInfo(winrt.system.Object):
    # System.UInt32 Windows.Phone.Notification.Management.VolumeInfo::get_CallVolume()
    @_property
    def call_volume(self) -> winrt.system.UInt32: ...
    # System.Boolean Windows.Phone.Notification.Management.VolumeInfo::get_IsMuted()
    @_property
    def is_muted(self) -> bool: ...
    # Windows.Phone.Notification.Management.VibrateState Windows.Phone.Notification.Management.VolumeInfo::get_IsVibrateEnabled()
    @_property
    def is_vibrate_enabled(self) -> VibrateState: ...
    # System.UInt32 Windows.Phone.Notification.Management.VolumeInfo::get_MediaVolume()
    @_property
    def media_volume(self) -> winrt.system.UInt32: ...
    # System.UInt32 Windows.Phone.Notification.Management.VolumeInfo::get_SystemVolume()
    @_property
    def system_volume(self) -> winrt.system.UInt32: ...

class ImplementsIAccessoryNotificationTriggerDetails():
    # Windows.Phone.Notification.Management.AccessoryNotificationType Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails::get_AccessoryNotificationType()
    @_property
    @abstractmethod
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    # System.String Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails::get_AppDisplayName()
    @_property
    @abstractmethod
    def app_display_name(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails::get_AppId()
    @_property
    @abstractmethod
    def app_id(self) -> str: ...
    # System.Boolean Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails::get_StartedProcessing()
    @_property
    @abstractmethod
    def started_processing(self) -> bool: ...
    # System.Void Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails::put_StartedProcessing(System.Boolean)
    @started_processing.setter
    @abstractmethod
    def started_processing(self, value: bool) -> None: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails::get_TimeCreated()
    @_property
    @abstractmethod
    def time_created(self) -> datetime.datetime: ...

@typing.final
class IAccessoryNotificationTriggerDetails(winrt.system.Object, ImplementsIAccessoryNotificationTriggerDetails):
    # Windows.Phone.Notification.Management.AccessoryNotificationType Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails::get_AccessoryNotificationType()
    @_property
    def accessory_notification_type(self) -> AccessoryNotificationType: ...
    # System.String Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails::get_AppDisplayName()
    @_property
    def app_display_name(self) -> str: ...
    # System.String Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails::get_AppId()
    @_property
    def app_id(self) -> str: ...
    # System.Boolean Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails::get_StartedProcessing()
    @_property
    def started_processing(self) -> bool: ...
    # System.Void Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails::put_StartedProcessing(System.Boolean)
    @started_processing.setter
    def started_processing(self, value: bool) -> None: ...
    # Windows.Foundation.DateTime Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails::get_TimeCreated()
    @_property
    def time_created(self) -> datetime.datetime: ...

