# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.graphics.imaging as windows_graphics_imaging
import winrt.windows.storage as windows_storage
import winrt.windows.storage.streams as windows_storage_streams

from winrt.windows.ai.machinelearning.preview import FeatureElementKindPreview, LearningModelDeviceKindPreview, LearningModelFeatureKindPreview

Self = typing.TypeVar('Self')

@typing.final
class ImageVariableDescriptorPreview(winrt.system.Object, ImplementsILearningModelVariableDescriptorPreview):
    @_property
    def bitmap_pixel_format(self) -> windows_graphics_imaging.BitmapPixelFormat: ...
    @_property
    def height(self) -> winrt.system.UInt32: ...
    @_property
    def width(self) -> winrt.system.UInt32: ...
    @_property
    def description(self) -> str: ...
    @_property
    def is_required(self) -> bool: ...
    @_property
    def model_feature_kind(self) -> LearningModelFeatureKindPreview: ...
    @_property
    def name(self) -> str: ...

@typing.final
class InferencingOptionsPreview(winrt.system.Object):
    @_property
    def reclaim_memory_after_evaluation(self) -> bool: ...
    @reclaim_memory_after_evaluation.setter
    def reclaim_memory_after_evaluation(self, value: bool) -> None: ...
    @_property
    def preferred_device_kind(self) -> LearningModelDeviceKindPreview: ...
    @preferred_device_kind.setter
    def preferred_device_kind(self, value: LearningModelDeviceKindPreview) -> None: ...
    @_property
    def minimize_memory_allocation(self) -> bool: ...
    @minimize_memory_allocation.setter
    def minimize_memory_allocation(self, value: bool) -> None: ...
    @_property
    def max_batch_size(self) -> winrt.system.Int32: ...
    @max_batch_size.setter
    def max_batch_size(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_tracing_enabled(self) -> bool: ...
    @is_tracing_enabled.setter
    def is_tracing_enabled(self, value: bool) -> None: ...

@typing.final
class LearningModelBindingPreview(winrt.system.Object, winrt._winrt.Mapping[str, winrt.system.Object]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[str]: ...
    def __contains__(self, key: object) -> bool: ...
    def __getitem__(self, key: str) -> winrt.system.Object: ...
    def __new__(cls: typing.Type[Self], model: LearningModelPreview) -> Self: ...
    # @deprecated("Use ILearningModelBinding instead of ILearningModelBindingPreview. For more info, see MSDN.")
    def bind(self, name: str, value: winrt.system.Object, /) -> None: ...
    # @deprecated("Use ILearningModelBinding instead of ILearningModelBindingPreview. For more info, see MSDN.")
    def bind_with_properties(self, name: str, value: winrt.system.Object, metadata: windows_foundation_collections.ImplementsIPropertySet, /) -> None: ...
    # @deprecated("Use ILearningModelBinding instead of ILearningModelBindingPreview. For more info, see MSDN.")
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[windows_foundation_collections.IKeyValuePair[str, winrt.system.Object]]: ...
    def has_key(self, key: str, /) -> bool: ...
    def lookup(self, key: str, /) -> winrt.system.Object: ...
    def split(self) -> typing.Tuple[typing.Mapping[str, winrt.system.Object], typing.Mapping[str, winrt.system.Object]]: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class LearningModelDescriptionPreview(winrt.system.Object):
    @_property
    def author(self) -> str: ...
    @_property
    def description(self) -> str: ...
    @_property
    def domain(self) -> str: ...
    @_property
    def input_features(self) -> typing.Iterable[ILearningModelVariableDescriptorPreview]: ...
    @_property
    def metadata(self) -> typing.Mapping[str, str]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def output_features(self) -> typing.Iterable[ILearningModelVariableDescriptorPreview]: ...
    @_property
    def version(self) -> winrt.system.Int64: ...

@typing.final
class LearningModelEvaluationResultPreview(winrt.system.Object):
    @_property
    def correlation_id(self) -> str: ...
    @_property
    def outputs(self) -> typing.Mapping[str, winrt.system.Object]: ...

@typing.final
class LearningModelPreview_Static(type):
    # @deprecated("Use ILearningModelStatics instead of ILearningModelPreviewStatics. For more info, see MSDN.")
    def load_model_from_storage_file_async(cls, model_file: windows_storage.ImplementsIStorageFile, /) -> windows_foundation.IAsyncOperation[LearningModelPreview]: ...
    # @deprecated("Use ILearningModelStatics instead of ILearningModelPreviewStatics. For more info, see MSDN.")
    def load_model_from_stream_async(cls, model_stream: windows_storage_streams.ImplementsIRandomAccessStreamReference, /) -> windows_foundation.IAsyncOperation[LearningModelPreview]: ...

@typing.final
class LearningModelPreview(winrt.system.Object, metaclass=LearningModelPreview_Static):
    # @deprecated("Use ILearningModel instead of ILearningModelPreview. For more info, see MSDN.")
    def evaluate_async(self, binding: LearningModelBindingPreview, correlation_id: str, /) -> windows_foundation.IAsyncOperation[LearningModelEvaluationResultPreview]: ...
    # @deprecated("Use ILearningModel instead of ILearningModelPreview. For more info, see MSDN.")
    def evaluate_features_async(self, features: typing.MutableMapping[str, winrt.system.Object], correlation_id: str, /) -> windows_foundation.IAsyncOperation[LearningModelEvaluationResultPreview]: ...
    @_property
    def inferencing_options(self) -> InferencingOptionsPreview: ...
    @inferencing_options.setter
    def inferencing_options(self, value: InferencingOptionsPreview) -> None: ...
    @_property
    def description(self) -> LearningModelDescriptionPreview: ...

@typing.final
class LearningModelVariableDescriptorPreview(winrt.system.Object, ImplementsILearningModelVariableDescriptorPreview):
    @_property
    def description(self) -> str: ...
    @_property
    def is_required(self) -> bool: ...
    @_property
    def model_feature_kind(self) -> LearningModelFeatureKindPreview: ...
    @_property
    def name(self) -> str: ...

@typing.final
class MapVariableDescriptorPreview(winrt.system.Object, ImplementsILearningModelVariableDescriptorPreview):
    @_property
    def description(self) -> str: ...
    @_property
    def is_required(self) -> bool: ...
    @_property
    def model_feature_kind(self) -> LearningModelFeatureKindPreview: ...
    @_property
    def name(self) -> str: ...
    @_property
    def fields(self) -> ILearningModelVariableDescriptorPreview: ...
    @_property
    def key_kind(self) -> FeatureElementKindPreview: ...
    @_property
    def valid_integer_keys(self) -> typing.Iterable[winrt.system.Int64]: ...
    @_property
    def valid_string_keys(self) -> typing.Iterable[str]: ...

@typing.final
class SequenceVariableDescriptorPreview(winrt.system.Object, ImplementsILearningModelVariableDescriptorPreview):
    @_property
    def description(self) -> str: ...
    @_property
    def is_required(self) -> bool: ...
    @_property
    def model_feature_kind(self) -> LearningModelFeatureKindPreview: ...
    @_property
    def name(self) -> str: ...
    @_property
    def element_type(self) -> ILearningModelVariableDescriptorPreview: ...

@typing.final
class TensorVariableDescriptorPreview(winrt.system.Object, ImplementsILearningModelVariableDescriptorPreview):
    @_property
    def description(self) -> str: ...
    @_property
    def is_required(self) -> bool: ...
    @_property
    def model_feature_kind(self) -> LearningModelFeatureKindPreview: ...
    @_property
    def name(self) -> str: ...
    @_property
    def data_type(self) -> FeatureElementKindPreview: ...
    @_property
    def shape(self) -> typing.Iterable[winrt.system.Int64]: ...

class ImplementsILearningModelVariableDescriptorPreview():
    pass

@typing.final
class ILearningModelVariableDescriptorPreview(winrt.system.Object, ImplementsILearningModelVariableDescriptorPreview):
    @_property
    def description(self) -> str: ...
    @_property
    def is_required(self) -> bool: ...
    @_property
    def model_feature_kind(self) -> LearningModelFeatureKindPreview: ...
    @_property
    def name(self) -> str: ...

