# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections

from winrt.windows.security.isolation import IsolatedWindowsEnvironmentActivator, IsolatedWindowsEnvironmentAllowedClipboardFormats, IsolatedWindowsEnvironmentAvailablePrinters, IsolatedWindowsEnvironmentClipboardCopyPasteDirections, IsolatedWindowsEnvironmentCreateStatus, IsolatedWindowsEnvironmentCreationPriority, IsolatedWindowsEnvironmentHostError, IsolatedWindowsEnvironmentLaunchFileStatus, IsolatedWindowsEnvironmentOwnerRegistrationStatus, IsolatedWindowsEnvironmentPostMessageStatus, IsolatedWindowsEnvironmentProcessState, IsolatedWindowsEnvironmentProgressState, IsolatedWindowsEnvironmentShareFileStatus, IsolatedWindowsEnvironmentShareFolderStatus, IsolatedWindowsEnvironmentSignInProgress, IsolatedWindowsEnvironmentStartProcessStatus
from winrt.windows.security.isolation import HostMessageReceivedCallback, MessageReceivedCallback

Self = typing.TypeVar('Self')

@typing.final
class IsolatedWindowsEnvironmentCreateProgress:
    state: IsolatedWindowsEnvironmentProgressState
    percent_complete: winrt.system.UInt32
    def __init__(self, state: IsolatedWindowsEnvironmentProgressState, percent_complete: winrt.system.UInt32) -> None: ...

@typing.final
class IsolatedWindowsEnvironment_Static(type):
    @typing.overload
    def create_async(cls, options: typing.Optional[IsolatedWindowsEnvironmentOptions], /) -> winrt.windows.foundation.IAsyncOperationWithProgress[IsolatedWindowsEnvironmentCreateResult, IsolatedWindowsEnvironmentCreateProgress]: ...
    @typing.overload
    def create_async(cls, options: typing.Optional[IsolatedWindowsEnvironmentOptions], telemetry_parameters: typing.Optional[IsolatedWindowsEnvironmentTelemetryParameters], /) -> winrt.windows.foundation.IAsyncOperationWithProgress[IsolatedWindowsEnvironmentCreateResult, IsolatedWindowsEnvironmentCreateProgress]: ...
    def find_by_owner_id(cls, environment_owner_id: str, /) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[IsolatedWindowsEnvironment]]: ...
    def get_by_id(cls, environment_id: str, /) -> typing.Optional[IsolatedWindowsEnvironment]: ...

@typing.final
class IsolatedWindowsEnvironment(winrt.system.Object, metaclass=IsolatedWindowsEnvironment_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironment: ...
    def change_priority(self, priority: IsolatedWindowsEnvironmentCreationPriority, /) -> None: ...
    def get_user_info(self) -> typing.Optional[IsolatedWindowsEnvironmentUserInfo]: ...
    @typing.overload
    def launch_file_with_u_i_async(self, app_exe_path: str, arguments_template: str, file_path: str, /) -> winrt.windows.foundation.IAsyncOperation[IsolatedWindowsEnvironmentLaunchFileResult]: ...
    @typing.overload
    def launch_file_with_u_i_async(self, app_exe_path: str, arguments_template: str, file_path: str, telemetry_parameters: typing.Optional[IsolatedWindowsEnvironmentTelemetryParameters], /) -> winrt.windows.foundation.IAsyncOperation[IsolatedWindowsEnvironmentLaunchFileResult]: ...
    @typing.overload
    def post_message_to_receiver_async(self, receiver_id: _uuid.UUID, message: typing.Iterable[winrt.system.Object], /) -> winrt.windows.foundation.IAsyncOperation[IsolatedWindowsEnvironmentPostMessageResult]: ...
    @typing.overload
    def post_message_to_receiver_async(self, receiver_id: _uuid.UUID, message: typing.Iterable[winrt.system.Object], telemetry_parameters: typing.Optional[IsolatedWindowsEnvironmentTelemetryParameters], /) -> winrt.windows.foundation.IAsyncOperation[IsolatedWindowsEnvironmentPostMessageResult]: ...
    def register_message_receiver(self, receiver_id: _uuid.UUID, message_received_callback: typing.Optional[MessageReceivedCallback], /) -> None: ...
    @typing.overload
    def share_file_async(self, file_path: str, options: typing.Optional[IsolatedWindowsEnvironmentShareFileRequestOptions], /) -> winrt.windows.foundation.IAsyncOperation[IsolatedWindowsEnvironmentShareFileResult]: ...
    @typing.overload
    def share_file_async(self, file_path: str, options: typing.Optional[IsolatedWindowsEnvironmentShareFileRequestOptions], telemetry_parameters: typing.Optional[IsolatedWindowsEnvironmentTelemetryParameters], /) -> winrt.windows.foundation.IAsyncOperation[IsolatedWindowsEnvironmentShareFileResult]: ...
    @typing.overload
    def share_folder_async(self, host_folder: str, request_options: typing.Optional[IsolatedWindowsEnvironmentShareFolderRequestOptions], /) -> winrt.windows.foundation.IAsyncOperation[IsolatedWindowsEnvironmentShareFolderResult]: ...
    @typing.overload
    def share_folder_async(self, host_folder: str, request_options: typing.Optional[IsolatedWindowsEnvironmentShareFolderRequestOptions], telemetry_parameters: typing.Optional[IsolatedWindowsEnvironmentTelemetryParameters], /) -> winrt.windows.foundation.IAsyncOperation[IsolatedWindowsEnvironmentShareFolderResult]: ...
    @typing.overload
    def start_process_silently_async(self, host_exe_path: str, arguments: str, activator: IsolatedWindowsEnvironmentActivator, /) -> winrt.windows.foundation.IAsyncOperation[IsolatedWindowsEnvironmentStartProcessResult]: ...
    @typing.overload
    def start_process_silently_async(self, host_exe_path: str, arguments: str, activator: IsolatedWindowsEnvironmentActivator, telemetry_parameters: typing.Optional[IsolatedWindowsEnvironmentTelemetryParameters], /) -> winrt.windows.foundation.IAsyncOperation[IsolatedWindowsEnvironmentStartProcessResult]: ...
    @typing.overload
    def terminate_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    @typing.overload
    def terminate_async(self, telemetry_parameters: typing.Optional[IsolatedWindowsEnvironmentTelemetryParameters], /) -> winrt.windows.foundation.IAsyncAction: ...
    def unregister_message_receiver(self, receiver_id: _uuid.UUID, /) -> None: ...
    @_property
    def id(self) -> str: ...

@typing.final
class IsolatedWindowsEnvironmentCreateResult(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentCreateResult: ...
    def change_creation_priority(self, priority: IsolatedWindowsEnvironmentCreationPriority, /) -> None: ...
    @_property
    def environment(self) -> typing.Optional[IsolatedWindowsEnvironment]: ...
    @_property
    def extended_error(self) -> winrt.windows.foundation.HResult: ...
    @_property
    def status(self) -> IsolatedWindowsEnvironmentCreateStatus: ...

@typing.final
class IsolatedWindowsEnvironmentFile(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentFile: ...
    def close(self) -> None: ...
    @_property
    def host_path(self) -> str: ...
    @_property
    def id(self) -> _uuid.UUID: ...
    @_property
    def guest_path(self) -> str: ...
    @_property
    def is_read_only(self) -> bool: ...

@typing.final
class IsolatedWindowsEnvironmentHost_Static(type):
    @_property
    def host_errors(cls) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[IsolatedWindowsEnvironmentHostError]]: ...
    @_property
    def is_ready(cls) -> bool: ...

@typing.final
class IsolatedWindowsEnvironmentHost(winrt.system.Object, metaclass=IsolatedWindowsEnvironmentHost_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentHost: ...

@typing.final
class IsolatedWindowsEnvironmentLaunchFileResult(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentLaunchFileResult: ...
    @_property
    def extended_error(self) -> winrt.windows.foundation.HResult: ...
    @_property
    def file(self) -> typing.Optional[IsolatedWindowsEnvironmentFile]: ...
    @_property
    def status(self) -> IsolatedWindowsEnvironmentLaunchFileStatus: ...

@typing.final
class IsolatedWindowsEnvironmentOptions(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentOptions: ...
    def __new__(cls: typing.Type[IsolatedWindowsEnvironmentOptions]) -> IsolatedWindowsEnvironmentOptions:...
    def share_host_folder_for_untrusted_items(self, shared_host_folder_path: str, share_folder_name_in_environment: str, /) -> None: ...
    @_property
    def persist_user_profile(self) -> bool: ...
    @persist_user_profile.setter
    def persist_user_profile(self, value: bool) -> None: ...
    @_property
    def environment_owner_id(self) -> str: ...
    @environment_owner_id.setter
    def environment_owner_id(self, value: str) -> None: ...
    @_property
    def clipboard_copy_paste_directions(self) -> IsolatedWindowsEnvironmentClipboardCopyPasteDirections: ...
    @clipboard_copy_paste_directions.setter
    def clipboard_copy_paste_directions(self, value: IsolatedWindowsEnvironmentClipboardCopyPasteDirections) -> None: ...
    @_property
    def available_printers(self) -> IsolatedWindowsEnvironmentAvailablePrinters: ...
    @available_printers.setter
    def available_printers(self, value: IsolatedWindowsEnvironmentAvailablePrinters) -> None: ...
    @_property
    def allowed_clipboard_formats(self) -> IsolatedWindowsEnvironmentAllowedClipboardFormats: ...
    @allowed_clipboard_formats.setter
    def allowed_clipboard_formats(self, value: IsolatedWindowsEnvironmentAllowedClipboardFormats) -> None: ...
    @_property
    def allow_graphics_hardware_acceleration(self) -> bool: ...
    @allow_graphics_hardware_acceleration.setter
    def allow_graphics_hardware_acceleration(self, value: bool) -> None: ...
    @_property
    def allow_camera_and_microphone_access(self) -> bool: ...
    @allow_camera_and_microphone_access.setter
    def allow_camera_and_microphone_access(self, value: bool) -> None: ...
    @_property
    def shared_folder_name_in_environment(self) -> str: ...
    @_property
    def shared_host_folder_path(self) -> str: ...
    @_property
    def window_annotation_override(self) -> str: ...
    @window_annotation_override.setter
    def window_annotation_override(self, value: str) -> None: ...
    @_property
    def creation_priority(self) -> IsolatedWindowsEnvironmentCreationPriority: ...
    @creation_priority.setter
    def creation_priority(self, value: IsolatedWindowsEnvironmentCreationPriority) -> None: ...
    @_property
    def allowed_clipboard_formats_to_host(self) -> IsolatedWindowsEnvironmentAllowedClipboardFormats: ...
    @allowed_clipboard_formats_to_host.setter
    def allowed_clipboard_formats_to_host(self, value: IsolatedWindowsEnvironmentAllowedClipboardFormats) -> None: ...
    @_property
    def allowed_clipboard_formats_to_environment(self) -> IsolatedWindowsEnvironmentAllowedClipboardFormats: ...
    @allowed_clipboard_formats_to_environment.setter
    def allowed_clipboard_formats_to_environment(self, value: IsolatedWindowsEnvironmentAllowedClipboardFormats) -> None: ...

@typing.final
class IsolatedWindowsEnvironmentOwnerRegistration_Static(type):
    def register(cls, owner_name: str, owner_registration_data: typing.Optional[IsolatedWindowsEnvironmentOwnerRegistrationData], /) -> typing.Optional[IsolatedWindowsEnvironmentOwnerRegistrationResult]: ...
    def unregister(cls, owner_name: str, /) -> None: ...

@typing.final
class IsolatedWindowsEnvironmentOwnerRegistration(winrt.system.Object, metaclass=IsolatedWindowsEnvironmentOwnerRegistration_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentOwnerRegistration: ...

@typing.final
class IsolatedWindowsEnvironmentOwnerRegistrationData(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentOwnerRegistrationData: ...
    def __new__(cls: typing.Type[IsolatedWindowsEnvironmentOwnerRegistrationData]) -> IsolatedWindowsEnvironmentOwnerRegistrationData:...
    @_property
    def activation_file_extensions(self) -> typing.Optional[winrt.windows.foundation.collections.IVector[str]]: ...
    @_property
    def processes_runnable_as_system(self) -> typing.Optional[winrt.windows.foundation.collections.IVector[str]]: ...
    @_property
    def processes_runnable_as_user(self) -> typing.Optional[winrt.windows.foundation.collections.IVector[str]]: ...
    @_property
    def shareable_folders(self) -> typing.Optional[winrt.windows.foundation.collections.IVector[str]]: ...

@typing.final
class IsolatedWindowsEnvironmentOwnerRegistrationResult(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentOwnerRegistrationResult: ...
    @_property
    def extended_error(self) -> winrt.windows.foundation.HResult: ...
    @_property
    def status(self) -> IsolatedWindowsEnvironmentOwnerRegistrationStatus: ...

@typing.final
class IsolatedWindowsEnvironmentPostMessageResult(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentPostMessageResult: ...
    @_property
    def extended_error(self) -> winrt.windows.foundation.HResult: ...
    @_property
    def status(self) -> IsolatedWindowsEnvironmentPostMessageStatus: ...

@typing.final
class IsolatedWindowsEnvironmentProcess(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentProcess: ...
    def wait_for_exit(self) -> None: ...
    def wait_for_exit_async(self) -> winrt.windows.foundation.IAsyncAction: ...
    def wait_for_exit_with_timeout(self, timeout_milliseconds: winrt.system.UInt32, /) -> None: ...
    @_property
    def exit_code(self) -> winrt.system.UInt32: ...
    @_property
    def state(self) -> IsolatedWindowsEnvironmentProcessState: ...

@typing.final
class IsolatedWindowsEnvironmentShareFileRequestOptions(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentShareFileRequestOptions: ...
    def __new__(cls: typing.Type[IsolatedWindowsEnvironmentShareFileRequestOptions]) -> IsolatedWindowsEnvironmentShareFileRequestOptions:...
    @_property
    def allow_write(self) -> bool: ...
    @allow_write.setter
    def allow_write(self, value: bool) -> None: ...

@typing.final
class IsolatedWindowsEnvironmentShareFileResult(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentShareFileResult: ...
    @_property
    def extended_error(self) -> winrt.windows.foundation.HResult: ...
    @_property
    def file(self) -> typing.Optional[IsolatedWindowsEnvironmentFile]: ...
    @_property
    def status(self) -> IsolatedWindowsEnvironmentShareFileStatus: ...

@typing.final
class IsolatedWindowsEnvironmentShareFolderRequestOptions(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentShareFolderRequestOptions: ...
    def __new__(cls: typing.Type[IsolatedWindowsEnvironmentShareFolderRequestOptions]) -> IsolatedWindowsEnvironmentShareFolderRequestOptions:...
    @_property
    def allow_write(self) -> bool: ...
    @allow_write.setter
    def allow_write(self, value: bool) -> None: ...

@typing.final
class IsolatedWindowsEnvironmentShareFolderResult(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentShareFolderResult: ...
    @_property
    def extended_error(self) -> winrt.windows.foundation.HResult: ...
    @_property
    def status(self) -> IsolatedWindowsEnvironmentShareFolderStatus: ...

@typing.final
class IsolatedWindowsEnvironmentStartProcessResult(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentStartProcessResult: ...
    @_property
    def extended_error(self) -> winrt.windows.foundation.HResult: ...
    @_property
    def process(self) -> typing.Optional[IsolatedWindowsEnvironmentProcess]: ...
    @_property
    def status(self) -> IsolatedWindowsEnvironmentStartProcessStatus: ...

@typing.final
class IsolatedWindowsEnvironmentTelemetryParameters(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentTelemetryParameters: ...
    def __new__(cls: typing.Type[IsolatedWindowsEnvironmentTelemetryParameters]) -> IsolatedWindowsEnvironmentTelemetryParameters:...
    @_property
    def correlation_id(self) -> _uuid.UUID: ...
    @correlation_id.setter
    def correlation_id(self, value: _uuid.UUID) -> None: ...

@typing.final
class IsolatedWindowsEnvironmentUserInfo(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsEnvironmentUserInfo: ...
    def try_wait_for_sign_in_async(self) -> winrt.windows.foundation.IAsyncOperation[bool]: ...
    def try_wait_for_sign_in_with_progress_async(self) -> winrt.windows.foundation.IAsyncOperationWithProgress[bool, IsolatedWindowsEnvironmentSignInProgress]: ...
    @_property
    def environment_user_name(self) -> str: ...
    @_property
    def environment_user_sid(self) -> str: ...

@typing.final
class IsolatedWindowsHostMessenger_Static(type):
    def get_file_id(cls, file_path: str, /) -> _uuid.UUID: ...
    def post_message_to_receiver(cls, receiver_id: _uuid.UUID, message: winrt.windows.foundation.collections.IVectorView[winrt.system.Object], /) -> None: ...
    def register_host_message_receiver(cls, receiver_id: _uuid.UUID, host_message_received_callback: typing.Optional[HostMessageReceivedCallback], /) -> None: ...
    def unregister_host_message_receiver(cls, receiver_id: _uuid.UUID, /) -> None: ...

@typing.final
class IsolatedWindowsHostMessenger(winrt.system.Object, metaclass=IsolatedWindowsHostMessenger_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsolatedWindowsHostMessenger: ...

