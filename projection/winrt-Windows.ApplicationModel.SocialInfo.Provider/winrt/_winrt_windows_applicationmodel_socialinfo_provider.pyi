# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.1.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.socialinfo as windows_applicationmodel_socialinfo
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections

Self = typing.TypeVar('Self')

@typing.final
class SocialDashboardItemUpdater(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SocialDashboardItemUpdater: ...
    def commit_async(self) -> windows_foundation.IAsyncAction: ...
    @_property
    def timestamp(self) -> datetime.datetime: ...
    @timestamp.setter
    def timestamp(self, value: datetime.datetime) -> None: ...
    @_property
    def thumbnail(self) -> typing.Optional[windows_applicationmodel_socialinfo.SocialItemThumbnail]: ...
    @thumbnail.setter
    def thumbnail(self, value: typing.Optional[windows_applicationmodel_socialinfo.SocialItemThumbnail]) -> None: ...
    @_property
    def target_uri(self) -> typing.Optional[windows_foundation.Uri]: ...
    @target_uri.setter
    def target_uri(self, value: typing.Optional[windows_foundation.Uri]) -> None: ...
    @_property
    def content(self) -> typing.Optional[windows_applicationmodel_socialinfo.SocialFeedContent]: ...
    @_property
    def owner_remote_id(self) -> str: ...

@typing.final
class SocialFeedUpdater(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SocialFeedUpdater: ...
    def commit_async(self) -> windows_foundation.IAsyncAction: ...
    @_property
    def items(self) -> typing.Optional[windows_foundation_collections.IVector[windows_applicationmodel_socialinfo.SocialFeedItem]]: ...
    @_property
    def kind(self) -> windows_applicationmodel_socialinfo.SocialFeedKind: ...
    @_property
    def owner_remote_id(self) -> str: ...

@typing.final
class SocialInfoProviderManager_Static(type):
    def create_dashboard_item_updater_async(cls, owner_remote_id: str, /) -> windows_foundation.IAsyncOperation[SocialDashboardItemUpdater]: ...
    def create_social_feed_updater_async(cls, kind: windows_applicationmodel_socialinfo.SocialFeedKind, mode: windows_applicationmodel_socialinfo.SocialFeedUpdateMode, owner_remote_id: str, /) -> windows_foundation.IAsyncOperation[SocialFeedUpdater]: ...
    def deprovision_async(cls) -> windows_foundation.IAsyncAction: ...
    def provision_async(cls) -> windows_foundation.IAsyncOperation[bool]: ...
    def report_new_content_available(cls, contact_remote_id: str, kind: windows_applicationmodel_socialinfo.SocialFeedKind, /) -> None: ...
    def update_badge_count_value(cls, item_remote_id: str, new_count: winrt.system.Int32, /) -> None: ...

@typing.final
class SocialInfoProviderManager(winrt.system.Object, metaclass=SocialInfoProviderManager_Static):
    pass

