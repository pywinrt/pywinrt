# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.ui as windows_ui
import winrt.windows.ui.composition as windows_ui_composition
import winrt.windows.ui.xaml as windows_ui_xaml
import winrt.windows.ui.xaml.controls as windows_ui_xaml_controls
import winrt.windows.ui.xaml.controls.primitives as windows_ui_xaml_controls_primitives

from winrt.windows.ui.xaml.media.animation import ClockState, ConnectedAnimationComponent, EasingMode, FillBehavior, RepeatBehaviorType, SlideNavigationTransitionEffect

Self = typing.TypeVar('Self')

@typing.final
class KeyTime:
    time_span: datetime.timedelta
    def __init__(self, time_span: datetime.timedelta = datetime.timedelta(0)) -> None: ...

@typing.final
class RepeatBehavior:
    count: winrt.system.Double
    duration: datetime.timedelta
    type: RepeatBehaviorType
    def __init__(self, count: winrt.system.Double = 0, duration: datetime.timedelta = datetime.timedelta(0), type: RepeatBehaviorType = RepeatBehaviorType(0)) -> None: ...

@typing.final
class AddDeleteThemeTransition(Transition):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class BackEase_Static(EasingFunctionBase_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.BackEase::get_AmplitudeProperty()
    @_property
    def amplitude_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class BackEase(EasingFunctionBase, metaclass=BackEase_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Windows.UI.Xaml.Media.Animation.BackEase::get_Amplitude()
    @_property
    def amplitude(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.BackEase::put_Amplitude(System.Double)
    @amplitude.setter
    def amplitude(self, value: winrt.system.Double) -> None: ...

class BasicConnectedAnimationConfiguration_Static(ConnectedAnimationConfiguration_Static):
    pass

class BasicConnectedAnimationConfiguration(ConnectedAnimationConfiguration, metaclass=BasicConnectedAnimationConfiguration_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class BeginStoryboard_Static(windows_ui_xaml.TriggerAction_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.BeginStoryboard::get_StoryboardProperty()
    @_property
    def storyboard_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class BeginStoryboard(windows_ui_xaml.TriggerAction, metaclass=BeginStoryboard_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.Animation.Storyboard Windows.UI.Xaml.Media.Animation.BeginStoryboard::get_Storyboard()
    @_property
    def storyboard(self) -> Storyboard: ...
    # System.Void Windows.UI.Xaml.Media.Animation.BeginStoryboard::put_Storyboard(Windows.UI.Xaml.Media.Animation.Storyboard)
    @storyboard.setter
    def storyboard(self, value: Storyboard) -> None: ...

@typing.final
class BounceEase_Static(EasingFunctionBase_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.BounceEase::get_BouncesProperty()
    @_property
    def bounces_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.BounceEase::get_BouncinessProperty()
    @_property
    def bounciness_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class BounceEase(EasingFunctionBase, metaclass=BounceEase_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Windows.UI.Xaml.Media.Animation.BounceEase::get_Bounciness()
    @_property
    def bounciness(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.BounceEase::put_Bounciness(System.Double)
    @bounciness.setter
    def bounciness(self, value: winrt.system.Double) -> None: ...
    # System.Int32 Windows.UI.Xaml.Media.Animation.BounceEase::get_Bounces()
    @_property
    def bounces(self) -> winrt.system.Int32: ...
    # System.Void Windows.UI.Xaml.Media.Animation.BounceEase::put_Bounces(System.Int32)
    @bounces.setter
    def bounces(self, value: winrt.system.Int32) -> None: ...

@typing.final
class CircleEase(EasingFunctionBase):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class ColorAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ColorAnimation::get_ByProperty()
    @_property
    def by_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ColorAnimation::get_EasingFunctionProperty()
    @_property
    def easing_function_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ColorAnimation::get_EnableDependentAnimationProperty()
    @_property
    def enable_dependent_animation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ColorAnimation::get_FromProperty()
    @_property
    def from_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ColorAnimation::get_ToProperty()
    @_property
    def to_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ColorAnimation(Timeline, metaclass=ColorAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.Media.Animation.ColorAnimation::get_To()
    @_property
    def to(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorAnimation::put_To(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @to.setter
    def to(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.Media.Animation.ColorAnimation::get_From()
    @_property
    def from_(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorAnimation::put_From(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @from_.setter
    def from_(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.ColorAnimation::get_EnableDependentAnimation()
    @_property
    def enable_dependent_animation(self) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorAnimation::put_EnableDependentAnimation(System.Boolean)
    @enable_dependent_animation.setter
    def enable_dependent_animation(self, value: bool) -> None: ...
    # Windows.UI.Xaml.Media.Animation.EasingFunctionBase Windows.UI.Xaml.Media.Animation.ColorAnimation::get_EasingFunction()
    @_property
    def easing_function(self) -> EasingFunctionBase: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorAnimation::put_EasingFunction(Windows.UI.Xaml.Media.Animation.EasingFunctionBase)
    @easing_function.setter
    def easing_function(self, value: EasingFunctionBase) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.Media.Animation.ColorAnimation::get_By()
    @_property
    def by(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorAnimation::put_By(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @by.setter
    def by(self, value: typing.Optional[windows_ui.Color]) -> None: ...

@typing.final
class ColorAnimationUsingKeyFrames_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames::get_EnableDependentAnimationProperty()
    @_property
    def enable_dependent_animation_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ColorAnimationUsingKeyFrames(Timeline, metaclass=ColorAnimationUsingKeyFrames_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames::get_EnableDependentAnimation()
    @_property
    def enable_dependent_animation(self) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames::put_EnableDependentAnimation(System.Boolean)
    @enable_dependent_animation.setter
    def enable_dependent_animation(self, value: bool) -> None: ...
    # Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection Windows.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames::get_KeyFrames()
    @_property
    def key_frames(self) -> ColorKeyFrameCollection: ...

class ColorKeyFrame_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ColorKeyFrame::get_KeyTimeProperty()
    @_property
    @typing.final
    def key_time_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ColorKeyFrame::get_ValueProperty()
    @_property
    @typing.final
    def value_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ColorKeyFrame(windows_ui_xaml.DependencyObject, metaclass=ColorKeyFrame_Static):
    # Windows.UI.Color Windows.UI.Xaml.Media.Animation.ColorKeyFrame::get_Value()
    @_property
    def value(self) -> windows_ui.Color: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorKeyFrame::put_Value(Windows.UI.Color)
    @value.setter
    @typing.final
    def value(self, value: windows_ui.Color) -> None: ...
    # Windows.UI.Xaml.Media.Animation.KeyTime Windows.UI.Xaml.Media.Animation.ColorKeyFrame::get_KeyTime()
    @_property
    def key_time(self) -> KeyTime: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorKeyFrame::put_KeyTime(Windows.UI.Xaml.Media.Animation.KeyTime)
    @key_time.setter
    @typing.final
    def key_time(self, value: KeyTime) -> None: ...

@typing.final
class ColorKeyFrameCollection(winrt.system.Object, winrt._winrt.MutableSequence[ColorKeyFrame]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[ColorKeyFrame]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> ColorKeyFrame: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[ColorKeyFrame]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: ColorKeyFrame) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[ColorKeyFrame]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection::Append(Windows.UI.Xaml.Media.Animation.ColorKeyFrame)
    def append(self, value: ColorKeyFrame, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.ColorKeyFrame> Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[ColorKeyFrame]: ...
    # Windows.UI.Xaml.Media.Animation.ColorKeyFrame Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> ColorKeyFrame: ...
    # System.UInt32 Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection::GetMany(System.UInt32,Windows.UI.Xaml.Media.Animation.ColorKeyFrame[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[ColorKeyFrame], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.ColorKeyFrame> Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection::GetView()
    def get_view(self) -> typing.Sequence[ColorKeyFrame]: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection::IndexOf(Windows.UI.Xaml.Media.Animation.ColorKeyFrame,System.UInt32&)
    def index_of(self, value: ColorKeyFrame, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection::InsertAt(System.UInt32,Windows.UI.Xaml.Media.Animation.ColorKeyFrame)
    def insert_at(self, index: winrt.system.UInt32, value: ColorKeyFrame, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection::ReplaceAll(Windows.UI.Xaml.Media.Animation.ColorKeyFrame[])
    def replace_all(self, items: typing.Union[winrt.system.Array[ColorKeyFrame], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection::SetAt(System.UInt32,Windows.UI.Xaml.Media.Animation.ColorKeyFrame)
    def set_at(self, index: winrt.system.UInt32, value: ColorKeyFrame, /) -> None: ...
    # System.UInt32 Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class CommonNavigationTransitionInfo_Static(NavigationTransitionInfo_Static):
    # System.Boolean Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo::GetIsStaggerElement(Windows.UI.Xaml.UIElement)
    def get_is_stagger_element(cls, element: windows_ui_xaml.UIElement, /) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo::SetIsStaggerElement(Windows.UI.Xaml.UIElement,System.Boolean)
    def set_is_stagger_element(cls, element: windows_ui_xaml.UIElement, value: bool, /) -> None: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo::get_IsStaggerElementProperty()
    @_property
    def is_stagger_element_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo::get_IsStaggeringEnabledProperty()
    @_property
    def is_staggering_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class CommonNavigationTransitionInfo(NavigationTransitionInfo, metaclass=CommonNavigationTransitionInfo_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo::get_IsStaggeringEnabled()
    @_property
    def is_staggering_enabled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo::put_IsStaggeringEnabled(System.Boolean)
    @is_staggering_enabled.setter
    def is_staggering_enabled(self, value: bool) -> None: ...

@typing.final
class ConnectedAnimation(winrt.system.Object):
    # System.Void Windows.UI.Xaml.Media.Animation.ConnectedAnimation::Cancel()
    def cancel(self) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ConnectedAnimation::SetAnimationComponent(Windows.UI.Xaml.Media.Animation.ConnectedAnimationComponent,Windows.UI.Composition.ICompositionAnimationBase)
    def set_animation_component(self, component: ConnectedAnimationComponent, animation: windows_ui_composition.ICompositionAnimationBase, /) -> None: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.ConnectedAnimation::TryStart(Windows.UI.Xaml.UIElement)
    def try_start(self, destination: windows_ui_xaml.UIElement, /) -> bool: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.ConnectedAnimation::TryStart(Windows.UI.Xaml.UIElement,Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.UIElement>)
    def try_start_with_coordinated_elements(self, destination: windows_ui_xaml.UIElement, coordinated_elements: typing.Iterable[windows_ui_xaml.UIElement], /) -> bool: ...
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Media.Animation.ConnectedAnimation::add_Completed(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Media.Animation.ConnectedAnimation,System.Object>)
    def add_completed(self, handler: windows_foundation.TypedEventHandler[ConnectedAnimation, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ConnectedAnimation::remove_Completed(Windows.Foundation.EventRegistrationToken)
    def remove_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.ConnectedAnimation::get_IsScaleAnimationEnabled()
    @_property
    def is_scale_animation_enabled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ConnectedAnimation::put_IsScaleAnimationEnabled(System.Boolean)
    @is_scale_animation_enabled.setter
    def is_scale_animation_enabled(self, value: bool) -> None: ...
    # Windows.UI.Xaml.Media.Animation.ConnectedAnimationConfiguration Windows.UI.Xaml.Media.Animation.ConnectedAnimation::get_Configuration()
    @_property
    def configuration(self) -> ConnectedAnimationConfiguration: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ConnectedAnimation::put_Configuration(Windows.UI.Xaml.Media.Animation.ConnectedAnimationConfiguration)
    @configuration.setter
    def configuration(self, value: ConnectedAnimationConfiguration) -> None: ...

class ConnectedAnimationConfiguration_Static(winrt._winrt.IInspectable_Static):
    pass

class ConnectedAnimationConfiguration(winrt.system.Object, metaclass=ConnectedAnimationConfiguration_Static):
    pass

@typing.final
class ConnectedAnimationService_Static(winrt._winrt.IInspectable_Static):
    # Windows.UI.Xaml.Media.Animation.ConnectedAnimationService Windows.UI.Xaml.Media.Animation.ConnectedAnimationService::GetForCurrentView()
    def get_for_current_view(cls) -> ConnectedAnimationService: ...

@typing.final
class ConnectedAnimationService(winrt.system.Object, metaclass=ConnectedAnimationService_Static):
    # Windows.UI.Xaml.Media.Animation.ConnectedAnimation Windows.UI.Xaml.Media.Animation.ConnectedAnimationService::GetAnimation(System.String)
    def get_animation(self, key: str, /) -> ConnectedAnimation: ...
    # Windows.UI.Xaml.Media.Animation.ConnectedAnimation Windows.UI.Xaml.Media.Animation.ConnectedAnimationService::PrepareToAnimate(System.String,Windows.UI.Xaml.UIElement)
    def prepare_to_animate(self, key: str, source: windows_ui_xaml.UIElement, /) -> ConnectedAnimation: ...
    # Windows.UI.Composition.CompositionEasingFunction Windows.UI.Xaml.Media.Animation.ConnectedAnimationService::get_DefaultEasingFunction()
    @_property
    def default_easing_function(self) -> windows_ui_composition.CompositionEasingFunction: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ConnectedAnimationService::put_DefaultEasingFunction(Windows.UI.Composition.CompositionEasingFunction)
    @default_easing_function.setter
    def default_easing_function(self, value: windows_ui_composition.CompositionEasingFunction) -> None: ...
    # Windows.Foundation.TimeSpan Windows.UI.Xaml.Media.Animation.ConnectedAnimationService::get_DefaultDuration()
    @_property
    def default_duration(self) -> datetime.timedelta: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ConnectedAnimationService::put_DefaultDuration(Windows.Foundation.TimeSpan)
    @default_duration.setter
    def default_duration(self, value: datetime.timedelta) -> None: ...

@typing.final
class ContentThemeTransition_Static(Transition_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ContentThemeTransition::get_HorizontalOffsetProperty()
    @_property
    def horizontal_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ContentThemeTransition::get_VerticalOffsetProperty()
    @_property
    def vertical_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ContentThemeTransition(Transition, metaclass=ContentThemeTransition_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Windows.UI.Xaml.Media.Animation.ContentThemeTransition::get_VerticalOffset()
    @_property
    def vertical_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ContentThemeTransition::put_VerticalOffset(System.Double)
    @vertical_offset.setter
    def vertical_offset(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.ContentThemeTransition::get_HorizontalOffset()
    @_property
    def horizontal_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ContentThemeTransition::put_HorizontalOffset(System.Double)
    @horizontal_offset.setter
    def horizontal_offset(self, value: winrt.system.Double) -> None: ...

@typing.final
class ContinuumNavigationTransitionInfo_Static(NavigationTransitionInfo_Static):
    # System.Boolean Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo::GetExitElementContainer(Windows.UI.Xaml.Controls.ListViewBase)
    def get_exit_element_container(cls, element: windows_ui_xaml_controls.ListViewBase, /) -> bool: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo::GetIsEntranceElement(Windows.UI.Xaml.UIElement)
    def get_is_entrance_element(cls, element: windows_ui_xaml.UIElement, /) -> bool: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo::GetIsExitElement(Windows.UI.Xaml.UIElement)
    def get_is_exit_element(cls, element: windows_ui_xaml.UIElement, /) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo::SetExitElementContainer(Windows.UI.Xaml.Controls.ListViewBase,System.Boolean)
    def set_exit_element_container(cls, element: windows_ui_xaml_controls.ListViewBase, value: bool, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo::SetIsEntranceElement(Windows.UI.Xaml.UIElement,System.Boolean)
    def set_is_entrance_element(cls, element: windows_ui_xaml.UIElement, value: bool, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo::SetIsExitElement(Windows.UI.Xaml.UIElement,System.Boolean)
    def set_is_exit_element(cls, element: windows_ui_xaml.UIElement, value: bool, /) -> None: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo::get_ExitElementContainerProperty()
    @_property
    def exit_element_container_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo::get_ExitElementProperty()
    @_property
    def exit_element_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo::get_IsEntranceElementProperty()
    @_property
    def is_entrance_element_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo::get_IsExitElementProperty()
    @_property
    def is_exit_element_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ContinuumNavigationTransitionInfo(NavigationTransitionInfo, metaclass=ContinuumNavigationTransitionInfo_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.UIElement Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo::get_ExitElement()
    @_property
    def exit_element(self) -> windows_ui_xaml.UIElement: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo::put_ExitElement(Windows.UI.Xaml.UIElement)
    @exit_element.setter
    def exit_element(self, value: windows_ui_xaml.UIElement) -> None: ...

@typing.final
class CubicEase(EasingFunctionBase):
    def __new__(cls: typing.Type[Self]) -> Self: ...

class DirectConnectedAnimationConfiguration_Static(ConnectedAnimationConfiguration_Static):
    pass

class DirectConnectedAnimationConfiguration(ConnectedAnimationConfiguration, metaclass=DirectConnectedAnimationConfiguration_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class DiscreteColorKeyFrame(ColorKeyFrame):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class DiscreteDoubleKeyFrame(DoubleKeyFrame):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class DiscreteObjectKeyFrame(ObjectKeyFrame):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class DiscretePointKeyFrame(PointKeyFrame):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class DoubleAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DoubleAnimation::get_ByProperty()
    @_property
    def by_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DoubleAnimation::get_EasingFunctionProperty()
    @_property
    def easing_function_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DoubleAnimation::get_EnableDependentAnimationProperty()
    @_property
    def enable_dependent_animation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DoubleAnimation::get_FromProperty()
    @_property
    def from_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DoubleAnimation::get_ToProperty()
    @_property
    def to_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class DoubleAnimation(Timeline, metaclass=DoubleAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.IReference`1<System.Double> Windows.UI.Xaml.Media.Animation.DoubleAnimation::get_To()
    @_property
    def to(self) -> typing.Optional[winrt.system.Double]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleAnimation::put_To(Windows.Foundation.IReference`1<System.Double>)
    @to.setter
    def to(self, value: typing.Optional[winrt.system.Double]) -> None: ...
    # Windows.Foundation.IReference`1<System.Double> Windows.UI.Xaml.Media.Animation.DoubleAnimation::get_From()
    @_property
    def from_(self) -> typing.Optional[winrt.system.Double]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleAnimation::put_From(Windows.Foundation.IReference`1<System.Double>)
    @from_.setter
    def from_(self, value: typing.Optional[winrt.system.Double]) -> None: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.DoubleAnimation::get_EnableDependentAnimation()
    @_property
    def enable_dependent_animation(self) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleAnimation::put_EnableDependentAnimation(System.Boolean)
    @enable_dependent_animation.setter
    def enable_dependent_animation(self, value: bool) -> None: ...
    # Windows.UI.Xaml.Media.Animation.EasingFunctionBase Windows.UI.Xaml.Media.Animation.DoubleAnimation::get_EasingFunction()
    @_property
    def easing_function(self) -> EasingFunctionBase: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleAnimation::put_EasingFunction(Windows.UI.Xaml.Media.Animation.EasingFunctionBase)
    @easing_function.setter
    def easing_function(self, value: EasingFunctionBase) -> None: ...
    # Windows.Foundation.IReference`1<System.Double> Windows.UI.Xaml.Media.Animation.DoubleAnimation::get_By()
    @_property
    def by(self) -> typing.Optional[winrt.system.Double]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleAnimation::put_By(Windows.Foundation.IReference`1<System.Double>)
    @by.setter
    def by(self, value: typing.Optional[winrt.system.Double]) -> None: ...

@typing.final
class DoubleAnimationUsingKeyFrames_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames::get_EnableDependentAnimationProperty()
    @_property
    def enable_dependent_animation_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class DoubleAnimationUsingKeyFrames(Timeline, metaclass=DoubleAnimationUsingKeyFrames_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames::get_EnableDependentAnimation()
    @_property
    def enable_dependent_animation(self) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames::put_EnableDependentAnimation(System.Boolean)
    @enable_dependent_animation.setter
    def enable_dependent_animation(self, value: bool) -> None: ...
    # Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection Windows.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames::get_KeyFrames()
    @_property
    def key_frames(self) -> DoubleKeyFrameCollection: ...

class DoubleKeyFrame_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DoubleKeyFrame::get_KeyTimeProperty()
    @_property
    @typing.final
    def key_time_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DoubleKeyFrame::get_ValueProperty()
    @_property
    @typing.final
    def value_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class DoubleKeyFrame(windows_ui_xaml.DependencyObject, metaclass=DoubleKeyFrame_Static):
    # System.Double Windows.UI.Xaml.Media.Animation.DoubleKeyFrame::get_Value()
    @_property
    def value(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleKeyFrame::put_Value(System.Double)
    @value.setter
    @typing.final
    def value(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Media.Animation.KeyTime Windows.UI.Xaml.Media.Animation.DoubleKeyFrame::get_KeyTime()
    @_property
    def key_time(self) -> KeyTime: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleKeyFrame::put_KeyTime(Windows.UI.Xaml.Media.Animation.KeyTime)
    @key_time.setter
    @typing.final
    def key_time(self, value: KeyTime) -> None: ...

@typing.final
class DoubleKeyFrameCollection(winrt.system.Object, winrt._winrt.MutableSequence[DoubleKeyFrame]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[DoubleKeyFrame]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> DoubleKeyFrame: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[DoubleKeyFrame]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: DoubleKeyFrame) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[DoubleKeyFrame]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection::Append(Windows.UI.Xaml.Media.Animation.DoubleKeyFrame)
    def append(self, value: DoubleKeyFrame, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.DoubleKeyFrame> Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[DoubleKeyFrame]: ...
    # Windows.UI.Xaml.Media.Animation.DoubleKeyFrame Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> DoubleKeyFrame: ...
    # System.UInt32 Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection::GetMany(System.UInt32,Windows.UI.Xaml.Media.Animation.DoubleKeyFrame[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[DoubleKeyFrame], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.DoubleKeyFrame> Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection::GetView()
    def get_view(self) -> typing.Sequence[DoubleKeyFrame]: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection::IndexOf(Windows.UI.Xaml.Media.Animation.DoubleKeyFrame,System.UInt32&)
    def index_of(self, value: DoubleKeyFrame, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection::InsertAt(System.UInt32,Windows.UI.Xaml.Media.Animation.DoubleKeyFrame)
    def insert_at(self, index: winrt.system.UInt32, value: DoubleKeyFrame, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection::ReplaceAll(Windows.UI.Xaml.Media.Animation.DoubleKeyFrame[])
    def replace_all(self, items: typing.Union[winrt.system.Array[DoubleKeyFrame], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection::SetAt(System.UInt32,Windows.UI.Xaml.Media.Animation.DoubleKeyFrame)
    def set_at(self, index: winrt.system.UInt32, value: DoubleKeyFrame, /) -> None: ...
    # System.UInt32 Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class DragItemThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DragItemThemeAnimation::get_TargetNameProperty()
    @_property
    def target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class DragItemThemeAnimation(Timeline, metaclass=DragItemThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.Media.Animation.DragItemThemeAnimation::get_TargetName()
    @_property
    def target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DragItemThemeAnimation::put_TargetName(System.String)
    @target_name.setter
    def target_name(self, value: str) -> None: ...

@typing.final
class DragOverThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation::get_DirectionProperty()
    @_property
    def direction_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation::get_TargetNameProperty()
    @_property
    def target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation::get_ToOffsetProperty()
    @_property
    def to_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class DragOverThemeAnimation(Timeline, metaclass=DragOverThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation::get_ToOffset()
    @_property
    def to_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation::put_ToOffset(System.Double)
    @to_offset.setter
    def to_offset(self, value: winrt.system.Double) -> None: ...
    # System.String Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation::get_TargetName()
    @_property
    def target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation::put_TargetName(System.String)
    @target_name.setter
    def target_name(self, value: str) -> None: ...
    # Windows.UI.Xaml.Controls.Primitives.AnimationDirection Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation::get_Direction()
    @_property
    def direction(self) -> windows_ui_xaml_controls_primitives.AnimationDirection: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation::put_Direction(Windows.UI.Xaml.Controls.Primitives.AnimationDirection)
    @direction.setter
    def direction(self, value: windows_ui_xaml_controls_primitives.AnimationDirection) -> None: ...

@typing.final
class DrillInNavigationTransitionInfo(NavigationTransitionInfo):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class DrillInThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DrillInThemeAnimation::get_EntranceTargetNameProperty()
    @_property
    def entrance_target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DrillInThemeAnimation::get_EntranceTargetProperty()
    @_property
    def entrance_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DrillInThemeAnimation::get_ExitTargetNameProperty()
    @_property
    def exit_target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DrillInThemeAnimation::get_ExitTargetProperty()
    @_property
    def exit_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class DrillInThemeAnimation(Timeline, metaclass=DrillInThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.Media.Animation.DrillInThemeAnimation::get_ExitTargetName()
    @_property
    def exit_target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DrillInThemeAnimation::put_ExitTargetName(System.String)
    @exit_target_name.setter
    def exit_target_name(self, value: str) -> None: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.Media.Animation.DrillInThemeAnimation::get_ExitTarget()
    @_property
    def exit_target(self) -> windows_ui_xaml.DependencyObject: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DrillInThemeAnimation::put_ExitTarget(Windows.UI.Xaml.DependencyObject)
    @exit_target.setter
    def exit_target(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    # System.String Windows.UI.Xaml.Media.Animation.DrillInThemeAnimation::get_EntranceTargetName()
    @_property
    def entrance_target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DrillInThemeAnimation::put_EntranceTargetName(System.String)
    @entrance_target_name.setter
    def entrance_target_name(self, value: str) -> None: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.Media.Animation.DrillInThemeAnimation::get_EntranceTarget()
    @_property
    def entrance_target(self) -> windows_ui_xaml.DependencyObject: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DrillInThemeAnimation::put_EntranceTarget(Windows.UI.Xaml.DependencyObject)
    @entrance_target.setter
    def entrance_target(self, value: windows_ui_xaml.DependencyObject) -> None: ...

@typing.final
class DrillOutThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DrillOutThemeAnimation::get_EntranceTargetNameProperty()
    @_property
    def entrance_target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DrillOutThemeAnimation::get_EntranceTargetProperty()
    @_property
    def entrance_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DrillOutThemeAnimation::get_ExitTargetNameProperty()
    @_property
    def exit_target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DrillOutThemeAnimation::get_ExitTargetProperty()
    @_property
    def exit_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class DrillOutThemeAnimation(Timeline, metaclass=DrillOutThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.Media.Animation.DrillOutThemeAnimation::get_ExitTargetName()
    @_property
    def exit_target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DrillOutThemeAnimation::put_ExitTargetName(System.String)
    @exit_target_name.setter
    def exit_target_name(self, value: str) -> None: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.Media.Animation.DrillOutThemeAnimation::get_ExitTarget()
    @_property
    def exit_target(self) -> windows_ui_xaml.DependencyObject: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DrillOutThemeAnimation::put_ExitTarget(Windows.UI.Xaml.DependencyObject)
    @exit_target.setter
    def exit_target(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    # System.String Windows.UI.Xaml.Media.Animation.DrillOutThemeAnimation::get_EntranceTargetName()
    @_property
    def entrance_target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DrillOutThemeAnimation::put_EntranceTargetName(System.String)
    @entrance_target_name.setter
    def entrance_target_name(self, value: str) -> None: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.Media.Animation.DrillOutThemeAnimation::get_EntranceTarget()
    @_property
    def entrance_target(self) -> windows_ui_xaml.DependencyObject: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DrillOutThemeAnimation::put_EntranceTarget(Windows.UI.Xaml.DependencyObject)
    @entrance_target.setter
    def entrance_target(self, value: windows_ui_xaml.DependencyObject) -> None: ...

@typing.final
class DropTargetItemThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation::get_TargetNameProperty()
    @_property
    def target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class DropTargetItemThemeAnimation(Timeline, metaclass=DropTargetItemThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation::get_TargetName()
    @_property
    def target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation::put_TargetName(System.String)
    @target_name.setter
    def target_name(self, value: str) -> None: ...

@typing.final
class EasingColorKeyFrame_Static(ColorKeyFrame_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.EasingColorKeyFrame::get_EasingFunctionProperty()
    @_property
    def easing_function_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class EasingColorKeyFrame(ColorKeyFrame, metaclass=EasingColorKeyFrame_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.Animation.EasingFunctionBase Windows.UI.Xaml.Media.Animation.EasingColorKeyFrame::get_EasingFunction()
    @_property
    def easing_function(self) -> EasingFunctionBase: ...
    # System.Void Windows.UI.Xaml.Media.Animation.EasingColorKeyFrame::put_EasingFunction(Windows.UI.Xaml.Media.Animation.EasingFunctionBase)
    @easing_function.setter
    def easing_function(self, value: EasingFunctionBase) -> None: ...

@typing.final
class EasingDoubleKeyFrame_Static(DoubleKeyFrame_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.EasingDoubleKeyFrame::get_EasingFunctionProperty()
    @_property
    def easing_function_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class EasingDoubleKeyFrame(DoubleKeyFrame, metaclass=EasingDoubleKeyFrame_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.Animation.EasingFunctionBase Windows.UI.Xaml.Media.Animation.EasingDoubleKeyFrame::get_EasingFunction()
    @_property
    def easing_function(self) -> EasingFunctionBase: ...
    # System.Void Windows.UI.Xaml.Media.Animation.EasingDoubleKeyFrame::put_EasingFunction(Windows.UI.Xaml.Media.Animation.EasingFunctionBase)
    @easing_function.setter
    def easing_function(self, value: EasingFunctionBase) -> None: ...

class EasingFunctionBase_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.EasingFunctionBase::get_EasingModeProperty()
    @_property
    @typing.final
    def easing_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class EasingFunctionBase(windows_ui_xaml.DependencyObject, metaclass=EasingFunctionBase_Static):
    @typing.final
    # System.Double Windows.UI.Xaml.Media.Animation.EasingFunctionBase::Ease(System.Double)
    def ease(self, normalized_time: winrt.system.Double, /) -> winrt.system.Double: ...
    # Windows.UI.Xaml.Media.Animation.EasingMode Windows.UI.Xaml.Media.Animation.EasingFunctionBase::get_EasingMode()
    @_property
    def easing_mode(self) -> EasingMode: ...
    # System.Void Windows.UI.Xaml.Media.Animation.EasingFunctionBase::put_EasingMode(Windows.UI.Xaml.Media.Animation.EasingMode)
    @easing_mode.setter
    @typing.final
    def easing_mode(self, value: EasingMode) -> None: ...

@typing.final
class EasingPointKeyFrame_Static(PointKeyFrame_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.EasingPointKeyFrame::get_EasingFunctionProperty()
    @_property
    def easing_function_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class EasingPointKeyFrame(PointKeyFrame, metaclass=EasingPointKeyFrame_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.Animation.EasingFunctionBase Windows.UI.Xaml.Media.Animation.EasingPointKeyFrame::get_EasingFunction()
    @_property
    def easing_function(self) -> EasingFunctionBase: ...
    # System.Void Windows.UI.Xaml.Media.Animation.EasingPointKeyFrame::put_EasingFunction(Windows.UI.Xaml.Media.Animation.EasingFunctionBase)
    @easing_function.setter
    def easing_function(self, value: EasingFunctionBase) -> None: ...

@typing.final
class EdgeUIThemeTransition_Static(Transition_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.EdgeUIThemeTransition::get_EdgeProperty()
    @_property
    def edge_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class EdgeUIThemeTransition(Transition, metaclass=EdgeUIThemeTransition_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation Windows.UI.Xaml.Media.Animation.EdgeUIThemeTransition::get_Edge()
    @_property
    def edge(self) -> windows_ui_xaml_controls_primitives.EdgeTransitionLocation: ...
    # System.Void Windows.UI.Xaml.Media.Animation.EdgeUIThemeTransition::put_Edge(Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation)
    @edge.setter
    def edge(self, value: windows_ui_xaml_controls_primitives.EdgeTransitionLocation) -> None: ...

@typing.final
class ElasticEase_Static(EasingFunctionBase_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ElasticEase::get_OscillationsProperty()
    @_property
    def oscillations_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ElasticEase::get_SpringinessProperty()
    @_property
    def springiness_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ElasticEase(EasingFunctionBase, metaclass=ElasticEase_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Windows.UI.Xaml.Media.Animation.ElasticEase::get_Springiness()
    @_property
    def springiness(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ElasticEase::put_Springiness(System.Double)
    @springiness.setter
    def springiness(self, value: winrt.system.Double) -> None: ...
    # System.Int32 Windows.UI.Xaml.Media.Animation.ElasticEase::get_Oscillations()
    @_property
    def oscillations(self) -> winrt.system.Int32: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ElasticEase::put_Oscillations(System.Int32)
    @oscillations.setter
    def oscillations(self, value: winrt.system.Int32) -> None: ...

@typing.final
class EntranceNavigationTransitionInfo_Static(NavigationTransitionInfo_Static):
    # System.Boolean Windows.UI.Xaml.Media.Animation.EntranceNavigationTransitionInfo::GetIsTargetElement(Windows.UI.Xaml.UIElement)
    def get_is_target_element(cls, element: windows_ui_xaml.UIElement, /) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.EntranceNavigationTransitionInfo::SetIsTargetElement(Windows.UI.Xaml.UIElement,System.Boolean)
    def set_is_target_element(cls, element: windows_ui_xaml.UIElement, value: bool, /) -> None: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.EntranceNavigationTransitionInfo::get_IsTargetElementProperty()
    @_property
    def is_target_element_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class EntranceNavigationTransitionInfo(NavigationTransitionInfo, metaclass=EntranceNavigationTransitionInfo_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class EntranceThemeTransition_Static(Transition_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.EntranceThemeTransition::get_FromHorizontalOffsetProperty()
    @_property
    def from_horizontal_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.EntranceThemeTransition::get_FromVerticalOffsetProperty()
    @_property
    def from_vertical_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.EntranceThemeTransition::get_IsStaggeringEnabledProperty()
    @_property
    def is_staggering_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class EntranceThemeTransition(Transition, metaclass=EntranceThemeTransition_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.EntranceThemeTransition::get_IsStaggeringEnabled()
    @_property
    def is_staggering_enabled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.EntranceThemeTransition::put_IsStaggeringEnabled(System.Boolean)
    @is_staggering_enabled.setter
    def is_staggering_enabled(self, value: bool) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.EntranceThemeTransition::get_FromVerticalOffset()
    @_property
    def from_vertical_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.EntranceThemeTransition::put_FromVerticalOffset(System.Double)
    @from_vertical_offset.setter
    def from_vertical_offset(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.EntranceThemeTransition::get_FromHorizontalOffset()
    @_property
    def from_horizontal_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.EntranceThemeTransition::put_FromHorizontalOffset(System.Double)
    @from_horizontal_offset.setter
    def from_horizontal_offset(self, value: winrt.system.Double) -> None: ...

@typing.final
class ExponentialEase_Static(EasingFunctionBase_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ExponentialEase::get_ExponentProperty()
    @_property
    def exponent_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ExponentialEase(EasingFunctionBase, metaclass=ExponentialEase_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Windows.UI.Xaml.Media.Animation.ExponentialEase::get_Exponent()
    @_property
    def exponent(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ExponentialEase::put_Exponent(System.Double)
    @exponent.setter
    def exponent(self, value: winrt.system.Double) -> None: ...

@typing.final
class FadeInThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.FadeInThemeAnimation::get_TargetNameProperty()
    @_property
    def target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class FadeInThemeAnimation(Timeline, metaclass=FadeInThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.Media.Animation.FadeInThemeAnimation::get_TargetName()
    @_property
    def target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.FadeInThemeAnimation::put_TargetName(System.String)
    @target_name.setter
    def target_name(self, value: str) -> None: ...

@typing.final
class FadeOutThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.FadeOutThemeAnimation::get_TargetNameProperty()
    @_property
    def target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class FadeOutThemeAnimation(Timeline, metaclass=FadeOutThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.Media.Animation.FadeOutThemeAnimation::get_TargetName()
    @_property
    def target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.FadeOutThemeAnimation::put_TargetName(System.String)
    @target_name.setter
    def target_name(self, value: str) -> None: ...

class GravityConnectedAnimationConfiguration_Static(ConnectedAnimationConfiguration_Static):
    pass

class GravityConnectedAnimationConfiguration(ConnectedAnimationConfiguration, metaclass=GravityConnectedAnimationConfiguration_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.GravityConnectedAnimationConfiguration::get_IsShadowEnabled()
    @_property
    def is_shadow_enabled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.GravityConnectedAnimationConfiguration::put_IsShadowEnabled(System.Boolean)
    @is_shadow_enabled.setter
    @typing.final
    def is_shadow_enabled(self, value: bool) -> None: ...

@typing.final
class KeySpline(windows_ui_xaml.DependencyObject):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.Point Windows.UI.Xaml.Media.Animation.KeySpline::get_ControlPoint2()
    @_property
    def control_point2(self) -> windows_foundation.Point: ...
    # System.Void Windows.UI.Xaml.Media.Animation.KeySpline::put_ControlPoint2(Windows.Foundation.Point)
    @control_point2.setter
    def control_point2(self, value: windows_foundation.Point) -> None: ...
    # Windows.Foundation.Point Windows.UI.Xaml.Media.Animation.KeySpline::get_ControlPoint1()
    @_property
    def control_point1(self) -> windows_foundation.Point: ...
    # System.Void Windows.UI.Xaml.Media.Animation.KeySpline::put_ControlPoint1(Windows.Foundation.Point)
    @control_point1.setter
    def control_point1(self, value: windows_foundation.Point) -> None: ...

@typing.final
class KeyTimeHelper_Static(winrt._winrt.IInspectable_Static):
    # Windows.UI.Xaml.Media.Animation.KeyTime Windows.UI.Xaml.Media.Animation.KeyTimeHelper::FromTimeSpan(Windows.Foundation.TimeSpan)
    def from_time_span(cls, time_span: datetime.timedelta, /) -> KeyTime: ...

@typing.final
class KeyTimeHelper(winrt.system.Object, metaclass=KeyTimeHelper_Static):
    pass

@typing.final
class LinearColorKeyFrame(ColorKeyFrame):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class LinearDoubleKeyFrame(DoubleKeyFrame):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class LinearPointKeyFrame(PointKeyFrame):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class NavigationThemeTransition_Static(Transition_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.NavigationThemeTransition::get_DefaultNavigationTransitionInfoProperty()
    @_property
    def default_navigation_transition_info_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class NavigationThemeTransition(Transition, metaclass=NavigationThemeTransition_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo Windows.UI.Xaml.Media.Animation.NavigationThemeTransition::get_DefaultNavigationTransitionInfo()
    @_property
    def default_navigation_transition_info(self) -> NavigationTransitionInfo: ...
    # System.Void Windows.UI.Xaml.Media.Animation.NavigationThemeTransition::put_DefaultNavigationTransitionInfo(Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo)
    @default_navigation_transition_info.setter
    def default_navigation_transition_info(self, value: NavigationTransitionInfo) -> None: ...

class NavigationTransitionInfo_Static(windows_ui_xaml.DependencyObject_Static):
    pass

class NavigationTransitionInfo(windows_ui_xaml.DependencyObject, metaclass=NavigationTransitionInfo_Static):
    # System.String Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo::GetNavigationStateCore()
    def _get_navigation_state_core(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo::SetNavigationStateCore(System.String)
    def _set_navigation_state_core(self, navigation_state: str, /) -> None: ...

@typing.final
class ObjectAnimationUsingKeyFrames_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames::get_EnableDependentAnimationProperty()
    @_property
    def enable_dependent_animation_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ObjectAnimationUsingKeyFrames(Timeline, metaclass=ObjectAnimationUsingKeyFrames_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames::get_EnableDependentAnimation()
    @_property
    def enable_dependent_animation(self) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames::put_EnableDependentAnimation(System.Boolean)
    @enable_dependent_animation.setter
    def enable_dependent_animation(self, value: bool) -> None: ...
    # Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection Windows.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames::get_KeyFrames()
    @_property
    def key_frames(self) -> ObjectKeyFrameCollection: ...

class ObjectKeyFrame_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ObjectKeyFrame::get_KeyTimeProperty()
    @_property
    @typing.final
    def key_time_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.ObjectKeyFrame::get_ValueProperty()
    @_property
    @typing.final
    def value_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ObjectKeyFrame(windows_ui_xaml.DependencyObject, metaclass=ObjectKeyFrame_Static):
    # System.Object Windows.UI.Xaml.Media.Animation.ObjectKeyFrame::get_Value()
    @_property
    def value(self) -> winrt.system.Object: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ObjectKeyFrame::put_Value(System.Object)
    @value.setter
    @typing.final
    def value(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.Media.Animation.KeyTime Windows.UI.Xaml.Media.Animation.ObjectKeyFrame::get_KeyTime()
    @_property
    def key_time(self) -> KeyTime: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ObjectKeyFrame::put_KeyTime(Windows.UI.Xaml.Media.Animation.KeyTime)
    @key_time.setter
    @typing.final
    def key_time(self, value: KeyTime) -> None: ...

@typing.final
class ObjectKeyFrameCollection(winrt.system.Object, winrt._winrt.MutableSequence[ObjectKeyFrame]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[ObjectKeyFrame]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> ObjectKeyFrame: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[ObjectKeyFrame]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: ObjectKeyFrame) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[ObjectKeyFrame]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection::Append(Windows.UI.Xaml.Media.Animation.ObjectKeyFrame)
    def append(self, value: ObjectKeyFrame, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame> Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[ObjectKeyFrame]: ...
    # Windows.UI.Xaml.Media.Animation.ObjectKeyFrame Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> ObjectKeyFrame: ...
    # System.UInt32 Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection::GetMany(System.UInt32,Windows.UI.Xaml.Media.Animation.ObjectKeyFrame[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[ObjectKeyFrame], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame> Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection::GetView()
    def get_view(self) -> typing.Sequence[ObjectKeyFrame]: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection::IndexOf(Windows.UI.Xaml.Media.Animation.ObjectKeyFrame,System.UInt32&)
    def index_of(self, value: ObjectKeyFrame, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection::InsertAt(System.UInt32,Windows.UI.Xaml.Media.Animation.ObjectKeyFrame)
    def insert_at(self, index: winrt.system.UInt32, value: ObjectKeyFrame, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection::ReplaceAll(Windows.UI.Xaml.Media.Animation.ObjectKeyFrame[])
    def replace_all(self, items: typing.Union[winrt.system.Array[ObjectKeyFrame], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection::SetAt(System.UInt32,Windows.UI.Xaml.Media.Animation.ObjectKeyFrame)
    def set_at(self, index: winrt.system.UInt32, value: ObjectKeyFrame, /) -> None: ...
    # System.UInt32 Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class PaneThemeTransition_Static(Transition_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PaneThemeTransition::get_EdgeProperty()
    @_property
    def edge_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class PaneThemeTransition(Transition, metaclass=PaneThemeTransition_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation Windows.UI.Xaml.Media.Animation.PaneThemeTransition::get_Edge()
    @_property
    def edge(self) -> windows_ui_xaml_controls_primitives.EdgeTransitionLocation: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PaneThemeTransition::put_Edge(Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation)
    @edge.setter
    def edge(self, value: windows_ui_xaml_controls_primitives.EdgeTransitionLocation) -> None: ...

@typing.final
class PointAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PointAnimation::get_ByProperty()
    @_property
    def by_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PointAnimation::get_EasingFunctionProperty()
    @_property
    def easing_function_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PointAnimation::get_EnableDependentAnimationProperty()
    @_property
    def enable_dependent_animation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PointAnimation::get_FromProperty()
    @_property
    def from_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PointAnimation::get_ToProperty()
    @_property
    def to_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class PointAnimation(Timeline, metaclass=PointAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.Point> Windows.UI.Xaml.Media.Animation.PointAnimation::get_To()
    @_property
    def to(self) -> typing.Optional[windows_foundation.Point]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointAnimation::put_To(Windows.Foundation.IReference`1<Windows.Foundation.Point>)
    @to.setter
    def to(self, value: typing.Optional[windows_foundation.Point]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.Point> Windows.UI.Xaml.Media.Animation.PointAnimation::get_From()
    @_property
    def from_(self) -> typing.Optional[windows_foundation.Point]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointAnimation::put_From(Windows.Foundation.IReference`1<Windows.Foundation.Point>)
    @from_.setter
    def from_(self, value: typing.Optional[windows_foundation.Point]) -> None: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.PointAnimation::get_EnableDependentAnimation()
    @_property
    def enable_dependent_animation(self) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointAnimation::put_EnableDependentAnimation(System.Boolean)
    @enable_dependent_animation.setter
    def enable_dependent_animation(self, value: bool) -> None: ...
    # Windows.UI.Xaml.Media.Animation.EasingFunctionBase Windows.UI.Xaml.Media.Animation.PointAnimation::get_EasingFunction()
    @_property
    def easing_function(self) -> EasingFunctionBase: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointAnimation::put_EasingFunction(Windows.UI.Xaml.Media.Animation.EasingFunctionBase)
    @easing_function.setter
    def easing_function(self, value: EasingFunctionBase) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.Point> Windows.UI.Xaml.Media.Animation.PointAnimation::get_By()
    @_property
    def by(self) -> typing.Optional[windows_foundation.Point]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointAnimation::put_By(Windows.Foundation.IReference`1<Windows.Foundation.Point>)
    @by.setter
    def by(self, value: typing.Optional[windows_foundation.Point]) -> None: ...

@typing.final
class PointAnimationUsingKeyFrames_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames::get_EnableDependentAnimationProperty()
    @_property
    def enable_dependent_animation_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class PointAnimationUsingKeyFrames(Timeline, metaclass=PointAnimationUsingKeyFrames_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames::get_EnableDependentAnimation()
    @_property
    def enable_dependent_animation(self) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames::put_EnableDependentAnimation(System.Boolean)
    @enable_dependent_animation.setter
    def enable_dependent_animation(self, value: bool) -> None: ...
    # Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection Windows.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames::get_KeyFrames()
    @_property
    def key_frames(self) -> PointKeyFrameCollection: ...

class PointKeyFrame_Static(windows_ui_xaml.DependencyObject_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PointKeyFrame::get_KeyTimeProperty()
    @_property
    @typing.final
    def key_time_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PointKeyFrame::get_ValueProperty()
    @_property
    @typing.final
    def value_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class PointKeyFrame(windows_ui_xaml.DependencyObject, metaclass=PointKeyFrame_Static):
    # Windows.Foundation.Point Windows.UI.Xaml.Media.Animation.PointKeyFrame::get_Value()
    @_property
    def value(self) -> windows_foundation.Point: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointKeyFrame::put_Value(Windows.Foundation.Point)
    @value.setter
    @typing.final
    def value(self, value: windows_foundation.Point) -> None: ...
    # Windows.UI.Xaml.Media.Animation.KeyTime Windows.UI.Xaml.Media.Animation.PointKeyFrame::get_KeyTime()
    @_property
    def key_time(self) -> KeyTime: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointKeyFrame::put_KeyTime(Windows.UI.Xaml.Media.Animation.KeyTime)
    @key_time.setter
    @typing.final
    def key_time(self, value: KeyTime) -> None: ...

@typing.final
class PointKeyFrameCollection(winrt.system.Object, winrt._winrt.MutableSequence[PointKeyFrame]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[PointKeyFrame]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> PointKeyFrame: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[PointKeyFrame]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: PointKeyFrame) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[PointKeyFrame]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection::Append(Windows.UI.Xaml.Media.Animation.PointKeyFrame)
    def append(self, value: PointKeyFrame, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.PointKeyFrame> Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[PointKeyFrame]: ...
    # Windows.UI.Xaml.Media.Animation.PointKeyFrame Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> PointKeyFrame: ...
    # System.UInt32 Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection::GetMany(System.UInt32,Windows.UI.Xaml.Media.Animation.PointKeyFrame[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[PointKeyFrame], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.PointKeyFrame> Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection::GetView()
    def get_view(self) -> typing.Sequence[PointKeyFrame]: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection::IndexOf(Windows.UI.Xaml.Media.Animation.PointKeyFrame,System.UInt32&)
    def index_of(self, value: PointKeyFrame, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection::InsertAt(System.UInt32,Windows.UI.Xaml.Media.Animation.PointKeyFrame)
    def insert_at(self, index: winrt.system.UInt32, value: PointKeyFrame, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection::ReplaceAll(Windows.UI.Xaml.Media.Animation.PointKeyFrame[])
    def replace_all(self, items: typing.Union[winrt.system.Array[PointKeyFrame], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection::SetAt(System.UInt32,Windows.UI.Xaml.Media.Animation.PointKeyFrame)
    def set_at(self, index: winrt.system.UInt32, value: PointKeyFrame, /) -> None: ...
    # System.UInt32 Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class PointerDownThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PointerDownThemeAnimation::get_TargetNameProperty()
    @_property
    def target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class PointerDownThemeAnimation(Timeline, metaclass=PointerDownThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.Media.Animation.PointerDownThemeAnimation::get_TargetName()
    @_property
    def target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointerDownThemeAnimation::put_TargetName(System.String)
    @target_name.setter
    def target_name(self, value: str) -> None: ...

@typing.final
class PointerUpThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PointerUpThemeAnimation::get_TargetNameProperty()
    @_property
    def target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class PointerUpThemeAnimation(Timeline, metaclass=PointerUpThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.Media.Animation.PointerUpThemeAnimation::get_TargetName()
    @_property
    def target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PointerUpThemeAnimation::put_TargetName(System.String)
    @target_name.setter
    def target_name(self, value: str) -> None: ...

@typing.final
class PopInThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PopInThemeAnimation::get_FromHorizontalOffsetProperty()
    @_property
    def from_horizontal_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PopInThemeAnimation::get_FromVerticalOffsetProperty()
    @_property
    def from_vertical_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PopInThemeAnimation::get_TargetNameProperty()
    @_property
    def target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class PopInThemeAnimation(Timeline, metaclass=PopInThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.Media.Animation.PopInThemeAnimation::get_TargetName()
    @_property
    def target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PopInThemeAnimation::put_TargetName(System.String)
    @target_name.setter
    def target_name(self, value: str) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.PopInThemeAnimation::get_FromVerticalOffset()
    @_property
    def from_vertical_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PopInThemeAnimation::put_FromVerticalOffset(System.Double)
    @from_vertical_offset.setter
    def from_vertical_offset(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.PopInThemeAnimation::get_FromHorizontalOffset()
    @_property
    def from_horizontal_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PopInThemeAnimation::put_FromHorizontalOffset(System.Double)
    @from_horizontal_offset.setter
    def from_horizontal_offset(self, value: winrt.system.Double) -> None: ...

@typing.final
class PopOutThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PopOutThemeAnimation::get_TargetNameProperty()
    @_property
    def target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class PopOutThemeAnimation(Timeline, metaclass=PopOutThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.Media.Animation.PopOutThemeAnimation::get_TargetName()
    @_property
    def target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PopOutThemeAnimation::put_TargetName(System.String)
    @target_name.setter
    def target_name(self, value: str) -> None: ...

@typing.final
class PopupThemeTransition_Static(Transition_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PopupThemeTransition::get_FromHorizontalOffsetProperty()
    @_property
    def from_horizontal_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PopupThemeTransition::get_FromVerticalOffsetProperty()
    @_property
    def from_vertical_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class PopupThemeTransition(Transition, metaclass=PopupThemeTransition_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Windows.UI.Xaml.Media.Animation.PopupThemeTransition::get_FromVerticalOffset()
    @_property
    def from_vertical_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PopupThemeTransition::put_FromVerticalOffset(System.Double)
    @from_vertical_offset.setter
    def from_vertical_offset(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.PopupThemeTransition::get_FromHorizontalOffset()
    @_property
    def from_horizontal_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PopupThemeTransition::put_FromHorizontalOffset(System.Double)
    @from_horizontal_offset.setter
    def from_horizontal_offset(self, value: winrt.system.Double) -> None: ...

@typing.final
class PowerEase_Static(EasingFunctionBase_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.PowerEase::get_PowerProperty()
    @_property
    def power_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class PowerEase(EasingFunctionBase, metaclass=PowerEase_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Windows.UI.Xaml.Media.Animation.PowerEase::get_Power()
    @_property
    def power(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.PowerEase::put_Power(System.Double)
    @power.setter
    def power(self, value: winrt.system.Double) -> None: ...

@typing.final
class QuadraticEase(EasingFunctionBase):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class QuarticEase(EasingFunctionBase):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class QuinticEase(EasingFunctionBase):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class ReorderThemeTransition(Transition):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class RepeatBehaviorHelper_Static(winrt._winrt.IInspectable_Static):
    # System.Boolean Windows.UI.Xaml.Media.Animation.RepeatBehaviorHelper::Equals(Windows.UI.Xaml.Media.Animation.RepeatBehavior,Windows.UI.Xaml.Media.Animation.RepeatBehavior)
    def equals(cls, target: RepeatBehavior, value: RepeatBehavior, /) -> bool: ...
    # Windows.UI.Xaml.Media.Animation.RepeatBehavior Windows.UI.Xaml.Media.Animation.RepeatBehaviorHelper::FromCount(System.Double)
    def from_count(cls, count: winrt.system.Double, /) -> RepeatBehavior: ...
    # Windows.UI.Xaml.Media.Animation.RepeatBehavior Windows.UI.Xaml.Media.Animation.RepeatBehaviorHelper::FromDuration(Windows.Foundation.TimeSpan)
    def from_duration(cls, duration: datetime.timedelta, /) -> RepeatBehavior: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.RepeatBehaviorHelper::GetHasCount(Windows.UI.Xaml.Media.Animation.RepeatBehavior)
    def get_has_count(cls, target: RepeatBehavior, /) -> bool: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.RepeatBehaviorHelper::GetHasDuration(Windows.UI.Xaml.Media.Animation.RepeatBehavior)
    def get_has_duration(cls, target: RepeatBehavior, /) -> bool: ...
    # Windows.UI.Xaml.Media.Animation.RepeatBehavior Windows.UI.Xaml.Media.Animation.RepeatBehaviorHelper::get_Forever()
    @_property
    def forever(cls) -> RepeatBehavior: ...

@typing.final
class RepeatBehaviorHelper(winrt.system.Object, metaclass=RepeatBehaviorHelper_Static):
    pass

@typing.final
class RepositionThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation::get_FromHorizontalOffsetProperty()
    @_property
    def from_horizontal_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation::get_FromVerticalOffsetProperty()
    @_property
    def from_vertical_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation::get_TargetNameProperty()
    @_property
    def target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class RepositionThemeAnimation(Timeline, metaclass=RepositionThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation::get_TargetName()
    @_property
    def target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation::put_TargetName(System.String)
    @target_name.setter
    def target_name(self, value: str) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation::get_FromVerticalOffset()
    @_property
    def from_vertical_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation::put_FromVerticalOffset(System.Double)
    @from_vertical_offset.setter
    def from_vertical_offset(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation::get_FromHorizontalOffset()
    @_property
    def from_horizontal_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation::put_FromHorizontalOffset(System.Double)
    @from_horizontal_offset.setter
    def from_horizontal_offset(self, value: winrt.system.Double) -> None: ...

@typing.final
class RepositionThemeTransition_Static(Transition_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.RepositionThemeTransition::get_IsStaggeringEnabledProperty()
    @_property
    def is_staggering_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class RepositionThemeTransition(Transition, metaclass=RepositionThemeTransition_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.RepositionThemeTransition::get_IsStaggeringEnabled()
    @_property
    def is_staggering_enabled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.RepositionThemeTransition::put_IsStaggeringEnabled(System.Boolean)
    @is_staggering_enabled.setter
    def is_staggering_enabled(self, value: bool) -> None: ...

@typing.final
class SineEase(EasingFunctionBase):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class SlideNavigationTransitionInfo_Static(NavigationTransitionInfo_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo::get_EffectProperty()
    @_property
    def effect_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class SlideNavigationTransitionInfo(NavigationTransitionInfo, metaclass=SlideNavigationTransitionInfo_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.Animation.SlideNavigationTransitionEffect Windows.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo::get_Effect()
    @_property
    def effect(self) -> SlideNavigationTransitionEffect: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo::put_Effect(Windows.UI.Xaml.Media.Animation.SlideNavigationTransitionEffect)
    @effect.setter
    def effect(self, value: SlideNavigationTransitionEffect) -> None: ...

@typing.final
class SplineColorKeyFrame_Static(ColorKeyFrame_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplineColorKeyFrame::get_KeySplineProperty()
    @_property
    def key_spline_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class SplineColorKeyFrame(ColorKeyFrame, metaclass=SplineColorKeyFrame_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.Animation.KeySpline Windows.UI.Xaml.Media.Animation.SplineColorKeyFrame::get_KeySpline()
    @_property
    def key_spline(self) -> KeySpline: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplineColorKeyFrame::put_KeySpline(Windows.UI.Xaml.Media.Animation.KeySpline)
    @key_spline.setter
    def key_spline(self, value: KeySpline) -> None: ...

@typing.final
class SplineDoubleKeyFrame_Static(DoubleKeyFrame_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplineDoubleKeyFrame::get_KeySplineProperty()
    @_property
    def key_spline_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class SplineDoubleKeyFrame(DoubleKeyFrame, metaclass=SplineDoubleKeyFrame_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.Animation.KeySpline Windows.UI.Xaml.Media.Animation.SplineDoubleKeyFrame::get_KeySpline()
    @_property
    def key_spline(self) -> KeySpline: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplineDoubleKeyFrame::put_KeySpline(Windows.UI.Xaml.Media.Animation.KeySpline)
    @key_spline.setter
    def key_spline(self, value: KeySpline) -> None: ...

@typing.final
class SplinePointKeyFrame_Static(PointKeyFrame_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplinePointKeyFrame::get_KeySplineProperty()
    @_property
    def key_spline_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class SplinePointKeyFrame(PointKeyFrame, metaclass=SplinePointKeyFrame_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.Animation.KeySpline Windows.UI.Xaml.Media.Animation.SplinePointKeyFrame::get_KeySpline()
    @_property
    def key_spline(self) -> KeySpline: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplinePointKeyFrame::put_KeySpline(Windows.UI.Xaml.Media.Animation.KeySpline)
    @key_spline.setter
    def key_spline(self, value: KeySpline) -> None: ...

@typing.final
class SplitCloseThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_ClosedLengthProperty()
    @_property
    def closed_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_ClosedTargetNameProperty()
    @_property
    def closed_target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_ClosedTargetProperty()
    @_property
    def closed_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_ContentTargetNameProperty()
    @_property
    def content_target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_ContentTargetProperty()
    @_property
    def content_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_ContentTranslationDirectionProperty()
    @_property
    def content_translation_direction_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_ContentTranslationOffsetProperty()
    @_property
    def content_translation_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_OffsetFromCenterProperty()
    @_property
    def offset_from_center_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_OpenedLengthProperty()
    @_property
    def opened_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_OpenedTargetNameProperty()
    @_property
    def opened_target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_OpenedTargetProperty()
    @_property
    def opened_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class SplitCloseThemeAnimation(Timeline, metaclass=SplitCloseThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_OpenedTargetName()
    @_property
    def opened_target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::put_OpenedTargetName(System.String)
    @opened_target_name.setter
    def opened_target_name(self, value: str) -> None: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_OpenedTarget()
    @_property
    def opened_target(self) -> windows_ui_xaml.DependencyObject: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::put_OpenedTarget(Windows.UI.Xaml.DependencyObject)
    @opened_target.setter
    def opened_target(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_OpenedLength()
    @_property
    def opened_length(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::put_OpenedLength(System.Double)
    @opened_length.setter
    def opened_length(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_OffsetFromCenter()
    @_property
    def offset_from_center(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::put_OffsetFromCenter(System.Double)
    @offset_from_center.setter
    def offset_from_center(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_ContentTranslationOffset()
    @_property
    def content_translation_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::put_ContentTranslationOffset(System.Double)
    @content_translation_offset.setter
    def content_translation_offset(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Controls.Primitives.AnimationDirection Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_ContentTranslationDirection()
    @_property
    def content_translation_direction(self) -> windows_ui_xaml_controls_primitives.AnimationDirection: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::put_ContentTranslationDirection(Windows.UI.Xaml.Controls.Primitives.AnimationDirection)
    @content_translation_direction.setter
    def content_translation_direction(self, value: windows_ui_xaml_controls_primitives.AnimationDirection) -> None: ...
    # System.String Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_ContentTargetName()
    @_property
    def content_target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::put_ContentTargetName(System.String)
    @content_target_name.setter
    def content_target_name(self, value: str) -> None: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_ContentTarget()
    @_property
    def content_target(self) -> windows_ui_xaml.DependencyObject: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::put_ContentTarget(Windows.UI.Xaml.DependencyObject)
    @content_target.setter
    def content_target(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    # System.String Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_ClosedTargetName()
    @_property
    def closed_target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::put_ClosedTargetName(System.String)
    @closed_target_name.setter
    def closed_target_name(self, value: str) -> None: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_ClosedTarget()
    @_property
    def closed_target(self) -> windows_ui_xaml.DependencyObject: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::put_ClosedTarget(Windows.UI.Xaml.DependencyObject)
    @closed_target.setter
    def closed_target(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::get_ClosedLength()
    @_property
    def closed_length(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation::put_ClosedLength(System.Double)
    @closed_length.setter
    def closed_length(self, value: winrt.system.Double) -> None: ...

@typing.final
class SplitOpenThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_ClosedLengthProperty()
    @_property
    def closed_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_ClosedTargetNameProperty()
    @_property
    def closed_target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_ClosedTargetProperty()
    @_property
    def closed_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_ContentTargetNameProperty()
    @_property
    def content_target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_ContentTargetProperty()
    @_property
    def content_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_ContentTranslationDirectionProperty()
    @_property
    def content_translation_direction_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_ContentTranslationOffsetProperty()
    @_property
    def content_translation_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_OffsetFromCenterProperty()
    @_property
    def offset_from_center_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_OpenedLengthProperty()
    @_property
    def opened_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_OpenedTargetNameProperty()
    @_property
    def opened_target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_OpenedTargetProperty()
    @_property
    def opened_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class SplitOpenThemeAnimation(Timeline, metaclass=SplitOpenThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_OpenedTargetName()
    @_property
    def opened_target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::put_OpenedTargetName(System.String)
    @opened_target_name.setter
    def opened_target_name(self, value: str) -> None: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_OpenedTarget()
    @_property
    def opened_target(self) -> windows_ui_xaml.DependencyObject: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::put_OpenedTarget(Windows.UI.Xaml.DependencyObject)
    @opened_target.setter
    def opened_target(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_OpenedLength()
    @_property
    def opened_length(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::put_OpenedLength(System.Double)
    @opened_length.setter
    def opened_length(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_OffsetFromCenter()
    @_property
    def offset_from_center(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::put_OffsetFromCenter(System.Double)
    @offset_from_center.setter
    def offset_from_center(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_ContentTranslationOffset()
    @_property
    def content_translation_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::put_ContentTranslationOffset(System.Double)
    @content_translation_offset.setter
    def content_translation_offset(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Controls.Primitives.AnimationDirection Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_ContentTranslationDirection()
    @_property
    def content_translation_direction(self) -> windows_ui_xaml_controls_primitives.AnimationDirection: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::put_ContentTranslationDirection(Windows.UI.Xaml.Controls.Primitives.AnimationDirection)
    @content_translation_direction.setter
    def content_translation_direction(self, value: windows_ui_xaml_controls_primitives.AnimationDirection) -> None: ...
    # System.String Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_ContentTargetName()
    @_property
    def content_target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::put_ContentTargetName(System.String)
    @content_target_name.setter
    def content_target_name(self, value: str) -> None: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_ContentTarget()
    @_property
    def content_target(self) -> windows_ui_xaml.DependencyObject: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::put_ContentTarget(Windows.UI.Xaml.DependencyObject)
    @content_target.setter
    def content_target(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    # System.String Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_ClosedTargetName()
    @_property
    def closed_target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::put_ClosedTargetName(System.String)
    @closed_target_name.setter
    def closed_target_name(self, value: str) -> None: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_ClosedTarget()
    @_property
    def closed_target(self) -> windows_ui_xaml.DependencyObject: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::put_ClosedTarget(Windows.UI.Xaml.DependencyObject)
    @closed_target.setter
    def closed_target(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::get_ClosedLength()
    @_property
    def closed_length(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation::put_ClosedLength(System.Double)
    @closed_length.setter
    def closed_length(self, value: winrt.system.Double) -> None: ...

@typing.final
class Storyboard_Static(Timeline_Static):
    # System.String Windows.UI.Xaml.Media.Animation.Storyboard::GetTargetName(Windows.UI.Xaml.Media.Animation.Timeline)
    def get_target_name(cls, element: Timeline, /) -> str: ...
    # System.String Windows.UI.Xaml.Media.Animation.Storyboard::GetTargetProperty(Windows.UI.Xaml.Media.Animation.Timeline)
    def get_target_property(cls, element: Timeline, /) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Storyboard::SetTarget(Windows.UI.Xaml.Media.Animation.Timeline,Windows.UI.Xaml.DependencyObject)
    def set_target(cls, timeline: Timeline, target: windows_ui_xaml.DependencyObject, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Storyboard::SetTargetName(Windows.UI.Xaml.Media.Animation.Timeline,System.String)
    def set_target_name(cls, element: Timeline, name: str, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Storyboard::SetTargetProperty(Windows.UI.Xaml.Media.Animation.Timeline,System.String)
    def set_target_property(cls, element: Timeline, path: str, /) -> None: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.Storyboard::get_TargetNameProperty()
    @_property
    def target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.Storyboard::get_TargetPropertyProperty()
    @_property
    def target_property_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class Storyboard(Timeline, metaclass=Storyboard_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Storyboard::Begin()
    def begin(self) -> None: ...
    # Windows.UI.Xaml.Media.Animation.ClockState Windows.UI.Xaml.Media.Animation.Storyboard::GetCurrentState()
    def get_current_state(self) -> ClockState: ...
    # Windows.Foundation.TimeSpan Windows.UI.Xaml.Media.Animation.Storyboard::GetCurrentTime()
    def get_current_time(self) -> datetime.timedelta: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Storyboard::Pause()
    def pause(self) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Storyboard::Resume()
    def resume(self) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Storyboard::Seek(Windows.Foundation.TimeSpan)
    def seek(self, offset: datetime.timedelta, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Storyboard::SeekAlignedToLastTick(Windows.Foundation.TimeSpan)
    def seek_aligned_to_last_tick(self, offset: datetime.timedelta, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Storyboard::SkipToFill()
    def skip_to_fill(self) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Storyboard::Stop()
    def stop(self) -> None: ...
    # Windows.UI.Xaml.Media.Animation.TimelineCollection Windows.UI.Xaml.Media.Animation.Storyboard::get_Children()
    @_property
    def children(self) -> TimelineCollection: ...

@typing.final
class SuppressNavigationTransitionInfo(NavigationTransitionInfo):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class SwipeBackThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation::get_FromHorizontalOffsetProperty()
    @_property
    def from_horizontal_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation::get_FromVerticalOffsetProperty()
    @_property
    def from_vertical_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation::get_TargetNameProperty()
    @_property
    def target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class SwipeBackThemeAnimation(Timeline, metaclass=SwipeBackThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation::get_TargetName()
    @_property
    def target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation::put_TargetName(System.String)
    @target_name.setter
    def target_name(self, value: str) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation::get_FromVerticalOffset()
    @_property
    def from_vertical_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation::put_FromVerticalOffset(System.Double)
    @from_vertical_offset.setter
    def from_vertical_offset(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation::get_FromHorizontalOffset()
    @_property
    def from_horizontal_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation::put_FromHorizontalOffset(System.Double)
    @from_horizontal_offset.setter
    def from_horizontal_offset(self, value: winrt.system.Double) -> None: ...

@typing.final
class SwipeHintThemeAnimation_Static(Timeline_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation::get_TargetNameProperty()
    @_property
    def target_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation::get_ToHorizontalOffsetProperty()
    @_property
    def to_horizontal_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation::get_ToVerticalOffsetProperty()
    @_property
    def to_vertical_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class SwipeHintThemeAnimation(Timeline, metaclass=SwipeHintThemeAnimation_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation::get_ToVerticalOffset()
    @_property
    def to_vertical_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation::put_ToVerticalOffset(System.Double)
    @to_vertical_offset.setter
    def to_vertical_offset(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation::get_ToHorizontalOffset()
    @_property
    def to_horizontal_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation::put_ToHorizontalOffset(System.Double)
    @to_horizontal_offset.setter
    def to_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    # System.String Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation::get_TargetName()
    @_property
    def target_name(self) -> str: ...
    # System.Void Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation::put_TargetName(System.String)
    @target_name.setter
    def target_name(self, value: str) -> None: ...

class Timeline_Static(windows_ui_xaml.DependencyObject_Static):
    # System.Boolean Windows.UI.Xaml.Media.Animation.Timeline::get_AllowDependentAnimations()
    @_property
    def allow_dependent_animations(cls) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Timeline::put_AllowDependentAnimations(System.Boolean)
    @allow_dependent_animations.setter
    @typing.final
    def allow_dependent_animations(cls, value: bool) -> None: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.Timeline::get_AutoReverseProperty()
    @_property
    @typing.final
    def auto_reverse_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.Timeline::get_BeginTimeProperty()
    @_property
    @typing.final
    def begin_time_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.Timeline::get_DurationProperty()
    @_property
    @typing.final
    def duration_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.Timeline::get_FillBehaviorProperty()
    @_property
    @typing.final
    def fill_behavior_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.Timeline::get_RepeatBehaviorProperty()
    @_property
    @typing.final
    def repeat_behavior_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Media.Animation.Timeline::get_SpeedRatioProperty()
    @_property
    @typing.final
    def speed_ratio_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class Timeline(windows_ui_xaml.DependencyObject, metaclass=Timeline_Static):
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Media.Animation.Timeline::add_Completed(Windows.Foundation.EventHandler`1<System.Object>)
    def add_completed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.Media.Animation.Timeline::remove_Completed(Windows.Foundation.EventRegistrationToken)
    def remove_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Double Windows.UI.Xaml.Media.Animation.Timeline::get_SpeedRatio()
    @_property
    def speed_ratio(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Timeline::put_SpeedRatio(System.Double)
    @speed_ratio.setter
    @typing.final
    def speed_ratio(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Media.Animation.RepeatBehavior Windows.UI.Xaml.Media.Animation.Timeline::get_RepeatBehavior()
    @_property
    def repeat_behavior(self) -> RepeatBehavior: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Timeline::put_RepeatBehavior(Windows.UI.Xaml.Media.Animation.RepeatBehavior)
    @repeat_behavior.setter
    @typing.final
    def repeat_behavior(self, value: RepeatBehavior) -> None: ...
    # Windows.UI.Xaml.Media.Animation.FillBehavior Windows.UI.Xaml.Media.Animation.Timeline::get_FillBehavior()
    @_property
    def fill_behavior(self) -> FillBehavior: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Timeline::put_FillBehavior(Windows.UI.Xaml.Media.Animation.FillBehavior)
    @fill_behavior.setter
    @typing.final
    def fill_behavior(self, value: FillBehavior) -> None: ...
    # Windows.UI.Xaml.Duration Windows.UI.Xaml.Media.Animation.Timeline::get_Duration()
    @_property
    def duration(self) -> windows_ui_xaml.Duration: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Timeline::put_Duration(Windows.UI.Xaml.Duration)
    @duration.setter
    @typing.final
    def duration(self, value: windows_ui_xaml.Duration) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan> Windows.UI.Xaml.Media.Animation.Timeline::get_BeginTime()
    @_property
    def begin_time(self) -> typing.Optional[datetime.timedelta]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Timeline::put_BeginTime(Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan>)
    @begin_time.setter
    @typing.final
    def begin_time(self, value: typing.Optional[datetime.timedelta]) -> None: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.Timeline::get_AutoReverse()
    @_property
    def auto_reverse(self) -> bool: ...
    # System.Void Windows.UI.Xaml.Media.Animation.Timeline::put_AutoReverse(System.Boolean)
    @auto_reverse.setter
    @typing.final
    def auto_reverse(self, value: bool) -> None: ...

@typing.final
class TimelineCollection(winrt.system.Object, winrt._winrt.MutableSequence[Timeline]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[Timeline]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> Timeline: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[Timeline]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: Timeline) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[Timeline]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.Media.Animation.TimelineCollection::Append(Windows.UI.Xaml.Media.Animation.Timeline)
    def append(self, value: Timeline, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.TimelineCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.Timeline> Windows.UI.Xaml.Media.Animation.TimelineCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[Timeline]: ...
    # Windows.UI.Xaml.Media.Animation.Timeline Windows.UI.Xaml.Media.Animation.TimelineCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> Timeline: ...
    # System.UInt32 Windows.UI.Xaml.Media.Animation.TimelineCollection::GetMany(System.UInt32,Windows.UI.Xaml.Media.Animation.Timeline[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[Timeline], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.Timeline> Windows.UI.Xaml.Media.Animation.TimelineCollection::GetView()
    def get_view(self) -> typing.Sequence[Timeline]: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.TimelineCollection::IndexOf(Windows.UI.Xaml.Media.Animation.Timeline,System.UInt32&)
    def index_of(self, value: Timeline, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.TimelineCollection::InsertAt(System.UInt32,Windows.UI.Xaml.Media.Animation.Timeline)
    def insert_at(self, index: winrt.system.UInt32, value: Timeline, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.TimelineCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.TimelineCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.TimelineCollection::ReplaceAll(Windows.UI.Xaml.Media.Animation.Timeline[])
    def replace_all(self, items: typing.Union[winrt.system.Array[Timeline], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.TimelineCollection::SetAt(System.UInt32,Windows.UI.Xaml.Media.Animation.Timeline)
    def set_at(self, index: winrt.system.UInt32, value: Timeline, /) -> None: ...
    # System.UInt32 Windows.UI.Xaml.Media.Animation.TimelineCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

class Transition_Static(windows_ui_xaml.DependencyObject_Static):
    pass

class Transition(windows_ui_xaml.DependencyObject, metaclass=Transition_Static):
    pass

@typing.final
class TransitionCollection(winrt.system.Object, winrt._winrt.MutableSequence[Transition]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[Transition]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> Transition: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[Transition]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: Transition) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[Transition]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.Media.Animation.TransitionCollection::Append(Windows.UI.Xaml.Media.Animation.Transition)
    def append(self, value: Transition, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.TransitionCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.Transition> Windows.UI.Xaml.Media.Animation.TransitionCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[Transition]: ...
    # Windows.UI.Xaml.Media.Animation.Transition Windows.UI.Xaml.Media.Animation.TransitionCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> Transition: ...
    # System.UInt32 Windows.UI.Xaml.Media.Animation.TransitionCollection::GetMany(System.UInt32,Windows.UI.Xaml.Media.Animation.Transition[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[Transition], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.Transition> Windows.UI.Xaml.Media.Animation.TransitionCollection::GetView()
    def get_view(self) -> typing.Sequence[Transition]: ...
    # System.Boolean Windows.UI.Xaml.Media.Animation.TransitionCollection::IndexOf(Windows.UI.Xaml.Media.Animation.Transition,System.UInt32&)
    def index_of(self, value: Transition, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.UI.Xaml.Media.Animation.TransitionCollection::InsertAt(System.UInt32,Windows.UI.Xaml.Media.Animation.Transition)
    def insert_at(self, index: winrt.system.UInt32, value: Transition, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.TransitionCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.TransitionCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.TransitionCollection::ReplaceAll(Windows.UI.Xaml.Media.Animation.Transition[])
    def replace_all(self, items: typing.Union[winrt.system.Array[Transition], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.UI.Xaml.Media.Animation.TransitionCollection::SetAt(System.UInt32,Windows.UI.Xaml.Media.Animation.Transition)
    def set_at(self, index: winrt.system.UInt32, value: Transition, /) -> None: ...
    # System.UInt32 Windows.UI.Xaml.Media.Animation.TransitionCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

