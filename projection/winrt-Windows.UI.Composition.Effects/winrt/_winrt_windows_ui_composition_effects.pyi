# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.graphics.effects as windows_graphics_effects

from winrt.windows.ui.composition.effects import SceneLightingEffectReflectanceModel

Self = typing.TypeVar('Self')

@typing.final
class SceneLightingEffect(winrt.system.Object, windows_graphics_effects.ImplementsIGraphicsEffect, windows_graphics_effects.ImplementsIGraphicsEffectSource):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Composition.Effects.SceneLightingEffect::get_Name()
    @_property
    def name(self) -> str: ...
    # System.Void Windows.UI.Composition.Effects.SceneLightingEffect::put_Name(System.String)
    @name.setter
    def name(self, value: str) -> None: ...
    # System.Single Windows.UI.Composition.Effects.SceneLightingEffect::get_SpecularShine()
    @_property
    def specular_shine(self) -> winrt.system.Single: ...
    # System.Void Windows.UI.Composition.Effects.SceneLightingEffect::put_SpecularShine(System.Single)
    @specular_shine.setter
    def specular_shine(self, value: winrt.system.Single) -> None: ...
    # System.Single Windows.UI.Composition.Effects.SceneLightingEffect::get_SpecularAmount()
    @_property
    def specular_amount(self) -> winrt.system.Single: ...
    # System.Void Windows.UI.Composition.Effects.SceneLightingEffect::put_SpecularAmount(System.Single)
    @specular_amount.setter
    def specular_amount(self, value: winrt.system.Single) -> None: ...
    # Windows.Graphics.Effects.IGraphicsEffectSource Windows.UI.Composition.Effects.SceneLightingEffect::get_NormalMapSource()
    @_property
    def normal_map_source(self) -> windows_graphics_effects.IGraphicsEffectSource: ...
    # System.Void Windows.UI.Composition.Effects.SceneLightingEffect::put_NormalMapSource(Windows.Graphics.Effects.IGraphicsEffectSource)
    @normal_map_source.setter
    def normal_map_source(self, value: windows_graphics_effects.ImplementsIGraphicsEffectSource) -> None: ...
    # System.Single Windows.UI.Composition.Effects.SceneLightingEffect::get_DiffuseAmount()
    @_property
    def diffuse_amount(self) -> winrt.system.Single: ...
    # System.Void Windows.UI.Composition.Effects.SceneLightingEffect::put_DiffuseAmount(System.Single)
    @diffuse_amount.setter
    def diffuse_amount(self, value: winrt.system.Single) -> None: ...
    # System.Single Windows.UI.Composition.Effects.SceneLightingEffect::get_AmbientAmount()
    @_property
    def ambient_amount(self) -> winrt.system.Single: ...
    # System.Void Windows.UI.Composition.Effects.SceneLightingEffect::put_AmbientAmount(System.Single)
    @ambient_amount.setter
    def ambient_amount(self, value: winrt.system.Single) -> None: ...
    # Windows.UI.Composition.Effects.SceneLightingEffectReflectanceModel Windows.UI.Composition.Effects.SceneLightingEffect::get_ReflectanceModel()
    @_property
    def reflectance_model(self) -> SceneLightingEffectReflectanceModel: ...
    # System.Void Windows.UI.Composition.Effects.SceneLightingEffect::put_ReflectanceModel(Windows.UI.Composition.Effects.SceneLightingEffectReflectanceModel)
    @reflectance_model.setter
    def reflectance_model(self, value: SceneLightingEffectReflectanceModel) -> None: ...

