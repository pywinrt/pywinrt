# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.microsoft.ui.xaml

Self = typing.TypeVar('Self')

@typing.final
class Matrix3D:
    m11: winrt.system.Double
    m12: winrt.system.Double
    m13: winrt.system.Double
    m14: winrt.system.Double
    m21: winrt.system.Double
    m22: winrt.system.Double
    m23: winrt.system.Double
    m24: winrt.system.Double
    m31: winrt.system.Double
    m32: winrt.system.Double
    m33: winrt.system.Double
    m34: winrt.system.Double
    offset_x: winrt.system.Double
    offset_y: winrt.system.Double
    offset_z: winrt.system.Double
    m44: winrt.system.Double
    def __init__(self, m11: winrt.system.Double, m12: winrt.system.Double, m13: winrt.system.Double, m14: winrt.system.Double, m21: winrt.system.Double, m22: winrt.system.Double, m23: winrt.system.Double, m24: winrt.system.Double, m31: winrt.system.Double, m32: winrt.system.Double, m33: winrt.system.Double, m34: winrt.system.Double, offset_x: winrt.system.Double, offset_y: winrt.system.Double, offset_z: winrt.system.Double, m44: winrt.system.Double) -> None: ...

@typing.final
class CompositeTransform3D_Static(type):
    @_property
    def center_x_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...
    @_property
    def center_y_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...
    @_property
    def center_z_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...
    @_property
    def rotation_x_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...
    @_property
    def rotation_y_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...
    @_property
    def rotation_z_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...
    @_property
    def scale_x_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...
    @_property
    def scale_y_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...
    @_property
    def scale_z_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...
    @_property
    def translate_x_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...
    @_property
    def translate_y_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...
    @_property
    def translate_z_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...

@typing.final
class CompositeTransform3D(winrt.system.Object, metaclass=CompositeTransform3D_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositeTransform3D: ...
    def __new__(cls: typing.Type[CompositeTransform3D]) -> CompositeTransform3D:...
    @_property
    def translate_z(self) -> winrt.system.Double: ...
    @translate_z.setter
    def translate_z(self, value: winrt.system.Double) -> None: ...
    @_property
    def translate_y(self) -> winrt.system.Double: ...
    @translate_y.setter
    def translate_y(self, value: winrt.system.Double) -> None: ...
    @_property
    def translate_x(self) -> winrt.system.Double: ...
    @translate_x.setter
    def translate_x(self, value: winrt.system.Double) -> None: ...
    @_property
    def scale_z(self) -> winrt.system.Double: ...
    @scale_z.setter
    def scale_z(self, value: winrt.system.Double) -> None: ...
    @_property
    def scale_y(self) -> winrt.system.Double: ...
    @scale_y.setter
    def scale_y(self, value: winrt.system.Double) -> None: ...
    @_property
    def scale_x(self) -> winrt.system.Double: ...
    @scale_x.setter
    def scale_x(self, value: winrt.system.Double) -> None: ...
    @_property
    def rotation_z(self) -> winrt.system.Double: ...
    @rotation_z.setter
    def rotation_z(self, value: winrt.system.Double) -> None: ...
    @_property
    def rotation_y(self) -> winrt.system.Double: ...
    @rotation_y.setter
    def rotation_y(self, value: winrt.system.Double) -> None: ...
    @_property
    def rotation_x(self) -> winrt.system.Double: ...
    @rotation_x.setter
    def rotation_x(self, value: winrt.system.Double) -> None: ...
    @_property
    def center_z(self) -> winrt.system.Double: ...
    @center_z.setter
    def center_z(self, value: winrt.system.Double) -> None: ...
    @_property
    def center_y(self) -> winrt.system.Double: ...
    @center_y.setter
    def center_y(self, value: winrt.system.Double) -> None: ...
    @_property
    def center_x(self) -> winrt.system.Double: ...
    @center_x.setter
    def center_x(self, value: winrt.system.Double) -> None: ...

@typing.final
class Matrix3DHelper_Static(type):
    def from_elements(cls, m11: winrt.system.Double, m12: winrt.system.Double, m13: winrt.system.Double, m14: winrt.system.Double, m21: winrt.system.Double, m22: winrt.system.Double, m23: winrt.system.Double, m24: winrt.system.Double, m31: winrt.system.Double, m32: winrt.system.Double, m33: winrt.system.Double, m34: winrt.system.Double, offset_x: winrt.system.Double, offset_y: winrt.system.Double, offset_z: winrt.system.Double, m44: winrt.system.Double, /) -> Matrix3D: ...
    def get_has_inverse(cls, target: Matrix3D, /) -> bool: ...
    def get_is_identity(cls, target: Matrix3D, /) -> bool: ...
    def invert(cls, target: Matrix3D, /) -> Matrix3D: ...
    def multiply(cls, matrix1: Matrix3D, matrix2: Matrix3D, /) -> Matrix3D: ...
    @_property
    def identity(cls) -> Matrix3D: ...

@typing.final
class Matrix3DHelper(winrt.system.Object, metaclass=Matrix3DHelper_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Matrix3DHelper: ...

@typing.final
class PerspectiveTransform3D_Static(type):
    @_property
    def depth_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...
    @_property
    def offset_x_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...
    @_property
    def offset_y_property(cls) -> typing.Optional[winrt.microsoft.ui.xaml.DependencyProperty]: ...

@typing.final
class PerspectiveTransform3D(winrt.system.Object, metaclass=PerspectiveTransform3D_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PerspectiveTransform3D: ...
    def __new__(cls: typing.Type[PerspectiveTransform3D]) -> PerspectiveTransform3D:...
    @_property
    def offset_y(self) -> winrt.system.Double: ...
    @offset_y.setter
    def offset_y(self, value: winrt.system.Double) -> None: ...
    @_property
    def offset_x(self) -> winrt.system.Double: ...
    @offset_x.setter
    def offset_x(self, value: winrt.system.Double) -> None: ...
    @_property
    def depth(self) -> winrt.system.Double: ...
    @depth.setter
    def depth(self, value: winrt.system.Double) -> None: ...

@typing.final
class Transform3D(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Transform3D: ...

