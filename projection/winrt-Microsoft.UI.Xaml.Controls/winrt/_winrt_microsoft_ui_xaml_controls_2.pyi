# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.microsoft.ui as microsoft_ui
import winrt.microsoft.ui.composition as microsoft_ui_composition
import winrt.microsoft.ui.input as microsoft_ui_input
import winrt.microsoft.ui.text as microsoft_ui_text
import winrt.microsoft.ui.xaml as microsoft_ui_xaml
import winrt.microsoft.ui.xaml.controls.primitives as microsoft_ui_xaml_controls_primitives
import winrt.microsoft.ui.xaml.data as microsoft_ui_xaml_data
import winrt.microsoft.ui.xaml.documents as microsoft_ui_xaml_documents
import winrt.microsoft.ui.xaml.input as microsoft_ui_xaml_input
import winrt.microsoft.ui.xaml.interop as microsoft_ui_xaml_interop
import winrt.microsoft.ui.xaml.media as microsoft_ui_xaml_media
import winrt.microsoft.ui.xaml.media.animation as microsoft_ui_xaml_media_animation
import winrt.microsoft.ui.xaml.navigation as microsoft_ui_xaml_navigation
import winrt.microsoft.web.webview2.core as microsoft_web_webview2_core
import winrt.windows.applicationmodel.contacts as windows_applicationmodel_contacts
import winrt.windows.applicationmodel.datatransfer as windows_applicationmodel_datatransfer
import winrt.windows.devices.geolocation as windows_devices_geolocation
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.foundation.numerics as windows_foundation_numerics
import winrt.windows.globalization as windows_globalization
import winrt.windows.globalization.numberformatting as windows_globalization_numberformatting
import winrt.windows.media.casting as windows_media_casting
import winrt.windows.media.playback as windows_media_playback
import winrt.windows.ui as windows_ui
import winrt.windows.ui.text as windows_ui_text
import winrt.windows.ui.xaml.interop as windows_ui_xaml_interop

from ._winrt_microsoft_ui_xaml_controls import (
    AnchorRequestedEventArgs,
    AnimatedIcon,
    AnimatedIconSource,
    AnimatedVisualPlayer,
    AnnotatedScrollBar,
    AnnotatedScrollBarDetailLabelRequestedEventArgs,
    AnnotatedScrollBarLabel,
    AnnotatedScrollBarScrollingEventArgs,
    AppBar,
    AppBarElementContainer,
    AppBarSeparator,
    AutoSuggestBox,
    AutoSuggestBoxQuerySubmittedEventArgs,
    AutoSuggestBoxSuggestionChosenEventArgs,
    AutoSuggestBoxTextChangedEventArgs,
    BitmapIcon,
    BitmapIconSource,
    Border,
    BreadcrumbBar,
    BreadcrumbBarItem,
    BreadcrumbBarItemClickedEventArgs,
    CalendarDatePicker,
    CalendarDatePickerDateChangedEventArgs,
    CalendarView,
    CalendarViewDayItem,
    CalendarViewDayItemChangingEventArgs,
    CalendarViewSelectedDatesChangedEventArgs,
    CandidateWindowBoundsChangedEventArgs,
    Canvas,
    ChoosingGroupHeaderContainerEventArgs,
    ChoosingItemContainerEventArgs,
    CleanUpVirtualizedItemEventArgs,
    ColorChangedEventArgs,
    ColorPicker,
    ColumnDefinition,
    ColumnDefinitionCollection,
    ComboBoxTextSubmittedEventArgs,
    CommandBar,
    CommandBarOverflowPresenter,
    ContainerContentChangingEventArgs,
    ContentControl,
    ContentDialog,
    ContentDialogButtonClickDeferral,
    ContentDialogButtonClickEventArgs,
    ContentDialogClosedEventArgs,
    ContentDialogClosingDeferral,
    ContentDialogClosingEventArgs,
    ContentDialogOpenedEventArgs,
    ContentPresenter,
    ContextMenuEventArgs,
    Control,
    ControlTemplate,
    CoreWebView2InitializedEventArgs,
    DataTemplateSelector,
    DatePickedEventArgs,
    DatePicker,
    DatePickerFlyoutItem,
    DatePickerFlyoutPresenter,
    DatePickerSelectedValueChangedEventArgs,
    DatePickerValueChangedEventArgs,
    DragItemsCompletedEventArgs,
    DragItemsStartingEventArgs,
    DynamicOverflowItemsChangingEventArgs,
    Expander,
    ExpanderCollapsedEventArgs,
    ExpanderExpandingEventArgs,
    ExpanderTemplateSettings,
    FlyoutPresenter,
    FocusDisengagedEventArgs,
    FocusEngagedEventArgs,
    FontIcon,
    FontIconSource,
    Frame,
    Grid,
    GridViewHeaderItem,
    GroupItem,
    GroupStyle,
    GroupStyleSelector,
    HasValidationErrorsChangedEventArgs,
    Hub,
    HubSection,
    HubSectionCollection,
    HubSectionHeaderClickEventArgs,
    IconElement,
    IconSource,
    IconSourceElement,
    Image,
    ImageIcon,
    ImageIconSource,
    InfoBadge,
    InfoBadgeTemplateSettings,
    InfoBar,
    InfoBarClosedEventArgs,
    InfoBarClosingEventArgs,
    InfoBarTemplateSettings,
    IsTextTrimmedChangedEventArgs,
    ItemClickEventArgs,
    ItemCollection,
    ItemCollectionTransition,
    ItemCollectionTransitionCompletedEventArgs,
    ItemCollectionTransitionProgress,
    ItemCollectionTransitionProvider,
    ItemContainer,
    ItemContainerGenerator,
    ItemsControl,
    ItemsPanelTemplate,
    ItemsPickedEventArgs,
    ItemsPresenter,
    ItemsRepeater,
    ItemsRepeaterElementClearingEventArgs,
    ItemsRepeaterElementIndexChangedEventArgs,
    ItemsRepeaterElementPreparedEventArgs,
    ItemsRepeaterScrollHost,
    ItemsSourceView,
    ItemsStackPanel,
    ItemsView,
    ItemsViewItemInvokedEventArgs,
    ItemsViewSelectionChangedEventArgs,
    ItemsWrapGrid,
    Layout,
    LayoutContext,
    LinedFlowLayout,
    LinedFlowLayoutItemCollectionTransitionProvider,
    LinedFlowLayoutItemsInfoRequestedEventArgs,
    ListPickerFlyoutPresenter,
    ListViewBaseHeaderItem,
    ListViewHeaderItem,
    ListViewPersistenceHelper,
    MapControl,
    MapControlMapServiceErrorOccurredEventArgs,
    MapElement,
    MapElementClickEventArgs,
    MapElementsLayer,
    MapIcon,
    MapLayer,
    MediaPlayerElement,
    MediaPlayerPresenter,
    MediaTransportControls,
    MediaTransportControlsHelper,
    MenuBar,
    MenuBarItem,
    MenuFlyoutItem,
    MenuFlyoutItemBase,
    MenuFlyoutPresenter,
    MenuFlyoutSeparator,
    MenuFlyoutSubItem,
    NavigationView,
    NavigationViewBackRequestedEventArgs,
    NavigationViewDisplayModeChangedEventArgs,
    NavigationViewItem,
    NavigationViewItemBase,
    NavigationViewItemCollapsedEventArgs,
    NavigationViewItemExpandingEventArgs,
    NavigationViewItemHeader,
    NavigationViewItemInvokedEventArgs,
    NavigationViewItemSeparator,
    NavigationViewPaneClosingEventArgs,
    NavigationViewSelectionChangedEventArgs,
    NavigationViewTemplateSettings,
    NonVirtualizingLayout,
    NonVirtualizingLayoutContext,
    NumberBox,
    NumberBoxValueChangedEventArgs,
    Page,
    Panel,
    ParallaxView,
    PasswordBox,
    PasswordBoxPasswordChangingEventArgs,
    PathIcon,
    PathIconSource,
    PersonPicture,
    PersonPictureTemplateSettings,
    PickerConfirmedEventArgs,
    PickerFlyoutPresenter,
    PipsPager,
    PipsPagerSelectedIndexChangedEventArgs,
    PipsPagerTemplateSettings,
    Pivot,
    PivotItem,
    PivotItemEventArgs,
    ProgressBarTemplateSettings,
    ProgressRing,
    ProgressRingTemplateSettings,
    RadioButtons,
    RadioMenuFlyoutItem,
    RatingControl,
    RatingItemFontInfo,
    RatingItemImageInfo,
    RatingItemInfo,
    RefreshContainer,
    RefreshInteractionRatioChangedEventArgs,
    RefreshRequestedEventArgs,
    RefreshStateChangedEventArgs,
    RefreshVisualizer,
    RelativePanel,
    RichEditBox,
    RichEditBoxSelectionChangingEventArgs,
    RichEditBoxTextChangingEventArgs,
    RichTextBlock,
    RichTextBlockOverflow,
    RowDefinition,
    RowDefinitionCollection,
    ScrollContentPresenter,
    ScrollView,
    ScrollViewer,
    ScrollViewerView,
    ScrollViewerViewChangedEventArgs,
    ScrollViewerViewChangingEventArgs,
    ScrollingAnchorRequestedEventArgs,
    ScrollingBringingIntoViewEventArgs,
    ScrollingScrollAnimationStartingEventArgs,
    ScrollingScrollCompletedEventArgs,
    ScrollingScrollOptions,
    ScrollingZoomAnimationStartingEventArgs,
    ScrollingZoomCompletedEventArgs,
    ScrollingZoomOptions,
    SectionsInViewChangedEventArgs,
    SelectionChangedEventArgs,
    SelectorBar,
    SelectorBarItem,
    SelectorBarSelectionChangedEventArgs,
    SemanticZoom,
    SemanticZoomLocation,
    SemanticZoomViewChangedEventArgs,
    SplitButton,
    SplitButtonClickEventArgs,
    SplitView,
    SplitViewPaneClosingEventArgs,
    StackLayout,
    StackPanel,
    StyleSelector,
    SwapChainBackgroundPanel,
    SwapChainPanel,
    SwipeControl,
    SwipeItem,
    SwipeItemInvokedEventArgs,
    SwipeItems,
    SymbolIcon,
    SymbolIconSource,
    TabView,
    TabViewExternalTornOutTabsDroppedEventArgs,
    TabViewExternalTornOutTabsDroppingEventArgs,
    TabViewItemTemplateSettings,
    TabViewTabCloseRequestedEventArgs,
    TabViewTabDragCompletedEventArgs,
    TabViewTabDragStartingEventArgs,
    TabViewTabDroppedOutsideEventArgs,
    TabViewTabTearOutRequestedEventArgs,
    TabViewTabTearOutWindowRequestedEventArgs,
    TeachingTip,
    TeachingTipClosedEventArgs,
    TeachingTipClosingEventArgs,
    TeachingTipTemplateSettings,
    TextBlock,
    TextBox,
    TextBoxBeforeTextChangingEventArgs,
    TextBoxSelectionChangingEventArgs,
    TextBoxTextChangingEventArgs,
    TextChangedEventArgs,
    TextCompositionChangedEventArgs,
    TextCompositionEndedEventArgs,
    TextCompositionStartedEventArgs,
    TextControlCopyingToClipboardEventArgs,
    TextControlCuttingToClipboardEventArgs,
    TextControlPasteEventArgs,
    TimePickedEventArgs,
    TimePicker,
    TimePickerFlyoutPresenter,
    TimePickerSelectedValueChangedEventArgs,
    TimePickerValueChangedEventArgs,
    ToggleMenuFlyoutItem,
    ToggleSplitButton,
    ToggleSplitButtonIsCheckedChangedEventArgs,
    ToggleSwitch,
    ToolTip,
    ToolTipService,
    TreeView,
    TreeViewCollapsedEventArgs,
    TreeViewDragItemsCompletedEventArgs,
    TreeViewDragItemsStartingEventArgs,
    TreeViewExpandingEventArgs,
    TreeViewItemInvokedEventArgs,
    TreeViewItemTemplateSettings,
    TreeViewNode,
    TreeViewSelectionChangedEventArgs,
    TwoPaneView,
    UIElementCollection,
    UniformGridLayout,
    UserControl,
    VariableSizedWrapGrid,
    Viewbox,
    VirtualizingLayout,
    VirtualizingLayoutContext,
    VirtualizingPanel,
    WebView2,
    XamlControlsResources,
    ImplementsIAnimatedVisual,
    IAnimatedVisual,
    ImplementsIAnimatedVisual2,
    IAnimatedVisual2,
    ImplementsIAnimatedVisualSource,
    IAnimatedVisualSource,
    ImplementsIAnimatedVisualSource2,
    IAnimatedVisualSource2,
    ImplementsIAnimatedVisualSource3,
    IAnimatedVisualSource3,
    ImplementsICommandBarElement,
    ICommandBarElement,
    ImplementsIDynamicAnimatedVisualSource,
    IDynamicAnimatedVisualSource,
    ImplementsIInsertionPanel,
    IInsertionPanel,
    ImplementsIItemContainerMapping,
    IItemContainerMapping,
    ImplementsIKeyIndexMapping,
    IKeyIndexMapping,
    ImplementsINavigate,
    INavigate,
    ImplementsIScrollAnchorProvider,
    IScrollAnchorProvider,
    ImplementsISemanticZoomInformation,
    ISemanticZoomInformation,
)

from winrt.microsoft.ui.xaml.controls import AnnotatedScrollBarScrollingEventKind, AppBarClosedDisplayMode, AutoSuggestionBoxTextChangeReason, BackgroundSizing, CalendarViewDisplayMode, CalendarViewSelectionMode, CandidateWindowAlignment, CharacterCasing, ClickMode, ColorPickerHsvChannel, ColorSpectrumComponents, ColorSpectrumShape, ComboBoxSelectionChangedTrigger, CommandBarDefaultLabelPosition, CommandBarDynamicOverflowAction, CommandBarLabelPosition, CommandBarOverflowButtonVisibility, ContentDialogButton, ContentDialogPlacement, ContentDialogResult, DisabledFormattingAccelerators, ElementRealizationOptions, ExpandDirection, IncrementalLoadingTrigger, IndexBasedLayoutOrientation, InfoBarCloseReason, InfoBarSeverity, ItemCollectionTransitionOperation, ItemCollectionTransitionTriggers, ItemsUpdatingScrollMode, ItemsViewSelectionMode, LightDismissOverlayMode, LinedFlowLayoutItemsJustification, LinedFlowLayoutItemsStretch, ListPickerFlyoutSelectionMode, ListViewReorderMode, ListViewSelectionMode, NavigationViewBackButtonVisible, NavigationViewDisplayMode, NavigationViewOverflowLabelMode, NavigationViewPaneDisplayMode, NavigationViewSelectionFollowsFocus, NavigationViewShoulderNavigationEnabled, NumberBoxSpinButtonPlacementMode, NumberBoxValidationMode, Orientation, PanelScrollingDirection, ParallaxSourceOffsetKind, PasswordRevealMode, PipsPagerButtonVisibility, PipsPagerWrapMode, PivotHeaderFocusVisualPlacement, PivotSlideInAnimationGroup, PlayerAnimationOptimization, RefreshPullDirection, RefreshVisualizerOrientation, RefreshVisualizerState, RequiresPointer, RichEditClipboardFormat, ScrollBarVisibility, ScrollIntoViewAlignment, ScrollMode, ScrollingAnimationMode, ScrollingChainMode, ScrollingContentOrientation, ScrollingInputKinds, ScrollingInteractionState, ScrollingRailMode, ScrollingScrollBarVisibility, ScrollingScrollMode, ScrollingSnapPointsMode, ScrollingZoomMode, SelectionMode, SnapPointsType, SplitViewDisplayMode, SplitViewPanePlacement, StretchDirection, SwipeBehaviorOnInvoked, SwipeMode, Symbol, TabViewCloseButtonOverlayMode, TabViewWidthMode, TeachingTipCloseReason, TeachingTipHeroContentPlacementMode, TeachingTipPlacementMode, TeachingTipTailVisibility, TreeViewSelectionMode, TwoPaneViewMode, TwoPaneViewPriority, TwoPaneViewTallModeConfiguration, TwoPaneViewWideModeConfiguration, UniformGridLayoutItemsJustification, UniformGridLayoutItemsStretch, VirtualizationMode, ZoomMode
from winrt.microsoft.ui.xaml.controls import CalendarViewDayItemChangingEventHandler, CleanUpVirtualizedItemEventHandler, ContextMenuOpeningEventHandler, DragItemsStartingEventHandler, HubSectionHeaderClickEventHandler, ItemClickEventHandler, ListViewItemToKeyHandler, ListViewKeyToItemHandler, SectionsInViewChangedEventHandler, SelectionChangedEventHandler, SemanticZoomViewChangedEventHandler, TextChangedEventHandler, TextControlPasteEventHandler

Self = typing.TypeVar('Self')

class AppBarButton_Static(Button_Static):
    @_property
    def dynamic_overflow_order_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def icon_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_compact_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_in_overflow_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def keyboard_accelerator_text_override_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def label_position_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def label_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class AppBarButton(Button, ImplementsICommandBarElement, metaclass=AppBarButton_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppBarButton: ...
    def __new__(cls: typing.Type[AppBarButton]) -> AppBarButton: ...
    @_property
    def label_position(self) -> CommandBarLabelPosition: ...
    @label_position.setter
    def label_position(self, value: CommandBarLabelPosition) -> None: ...
    @_property
    def label(self) -> str: ...
    @label.setter
    def label(self, value: str) -> None: ...
    @_property
    def keyboard_accelerator_text_override(self) -> str: ...
    @keyboard_accelerator_text_override.setter
    def keyboard_accelerator_text_override(self, value: str) -> None: ...
    @_property
    def icon(self) -> IconElement: ...
    @icon.setter
    def icon(self, value: IconElement) -> None: ...
    @_property
    def template_settings(self) -> microsoft_ui_xaml_controls_primitives.AppBarButtonTemplateSettings: ...
    @_property
    def is_compact(self) -> bool: ...
    @is_compact.setter
    def is_compact(self, value: bool) -> None: ...
    @_property
    def dynamic_overflow_order(self) -> winrt.system.Int32: ...
    @dynamic_overflow_order.setter
    def dynamic_overflow_order(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_in_overflow(self) -> bool: ...

class AppBarToggleButton_Static(microsoft_ui_xaml_controls_primitives.ToggleButton_Static):
    @_property
    def dynamic_overflow_order_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def icon_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_compact_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_in_overflow_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def keyboard_accelerator_text_override_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def label_position_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def label_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class AppBarToggleButton(microsoft_ui_xaml_controls_primitives.ToggleButton, ImplementsICommandBarElement, metaclass=AppBarToggleButton_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppBarToggleButton: ...
    def __new__(cls: typing.Type[AppBarToggleButton]) -> AppBarToggleButton: ...
    @_property
    def label_position(self) -> CommandBarLabelPosition: ...
    @label_position.setter
    def label_position(self, value: CommandBarLabelPosition) -> None: ...
    @_property
    def label(self) -> str: ...
    @label.setter
    def label(self, value: str) -> None: ...
    @_property
    def keyboard_accelerator_text_override(self) -> str: ...
    @keyboard_accelerator_text_override.setter
    def keyboard_accelerator_text_override(self, value: str) -> None: ...
    @_property
    def icon(self) -> IconElement: ...
    @icon.setter
    def icon(self, value: IconElement) -> None: ...
    @_property
    def template_settings(self) -> microsoft_ui_xaml_controls_primitives.AppBarToggleButtonTemplateSettings: ...
    @_property
    def is_compact(self) -> bool: ...
    @is_compact.setter
    def is_compact(self, value: bool) -> None: ...
    @_property
    def dynamic_overflow_order(self) -> winrt.system.Int32: ...
    @dynamic_overflow_order.setter
    def dynamic_overflow_order(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_in_overflow(self) -> bool: ...

class Button_Static(microsoft_ui_xaml_controls_primitives.ButtonBase_Static):
    @_property
    def flyout_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class Button(microsoft_ui_xaml_controls_primitives.ButtonBase, metaclass=Button_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Button: ...
    def __new__(cls: typing.Type[Button]) -> Button: ...
    @_property
    def flyout(self) -> microsoft_ui_xaml_controls_primitives.FlyoutBase: ...
    @flyout.setter
    def flyout(self, value: microsoft_ui_xaml_controls_primitives.FlyoutBase) -> None: ...

class CheckBox_Static(microsoft_ui_xaml_controls_primitives.ToggleButton_Static):
    pass

class CheckBox(microsoft_ui_xaml_controls_primitives.ToggleButton, metaclass=CheckBox_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CheckBox: ...
    def __new__(cls: typing.Type[CheckBox]) -> CheckBox: ...

class ComboBox_Static(microsoft_ui_xaml_controls_primitives.Selector_Static):
    @_property
    def description_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def header_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_drop_down_open_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_editable_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_text_search_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def light_dismiss_overlay_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def max_drop_down_height_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def placeholder_foreground_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def placeholder_text_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def selection_changed_trigger_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def text_box_style_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def text_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ComboBox(microsoft_ui_xaml_controls_primitives.Selector, metaclass=ComboBox_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ComboBox: ...
    def __new__(cls: typing.Type[ComboBox]) -> ComboBox: ...
    def add_drop_down_closed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drop_down_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_drop_down_opened(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drop_down_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_text_submitted(self, handler: windows_foundation.TypedEventHandler[ComboBox, ComboBoxTextSubmittedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_text_submitted(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def text_box_style(self) -> microsoft_ui_xaml.Style: ...
    @text_box_style.setter
    def text_box_style(self, value: microsoft_ui_xaml.Style) -> None: ...
    @_property
    def text(self) -> str: ...
    @text.setter
    def text(self, value: str) -> None: ...
    @_property
    def selection_changed_trigger(self) -> ComboBoxSelectionChangedTrigger: ...
    @selection_changed_trigger.setter
    def selection_changed_trigger(self, value: ComboBoxSelectionChangedTrigger) -> None: ...
    @_property
    def placeholder_text(self) -> str: ...
    @placeholder_text.setter
    def placeholder_text(self, value: str) -> None: ...
    @_property
    def placeholder_foreground(self) -> microsoft_ui_xaml_media.Brush: ...
    @placeholder_foreground.setter
    def placeholder_foreground(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def max_drop_down_height(self) -> winrt.system.Double: ...
    @max_drop_down_height.setter
    def max_drop_down_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def light_dismiss_overlay_mode(self) -> LightDismissOverlayMode: ...
    @light_dismiss_overlay_mode.setter
    def light_dismiss_overlay_mode(self, value: LightDismissOverlayMode) -> None: ...
    @_property
    def is_text_search_enabled(self) -> bool: ...
    @is_text_search_enabled.setter
    def is_text_search_enabled(self, value: bool) -> None: ...
    @_property
    def is_editable(self) -> bool: ...
    @is_editable.setter
    def is_editable(self, value: bool) -> None: ...
    @_property
    def is_drop_down_open(self) -> bool: ...
    @is_drop_down_open.setter
    def is_drop_down_open(self, value: bool) -> None: ...
    @_property
    def header_template(self) -> microsoft_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: microsoft_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def description(self) -> winrt.system.Object: ...
    @description.setter
    def description(self, value: winrt.system.Object) -> None: ...
    @_property
    def is_selection_box_highlighted(self) -> bool: ...
    @_property
    def selection_box_item(self) -> winrt.system.Object: ...
    @_property
    def selection_box_item_template(self) -> microsoft_ui_xaml.DataTemplate: ...
    @_property
    def template_settings(self) -> microsoft_ui_xaml_controls_primitives.ComboBoxTemplateSettings: ...

class ComboBoxItem_Static(microsoft_ui_xaml_controls_primitives.SelectorItem_Static):
    pass

class ComboBoxItem(microsoft_ui_xaml_controls_primitives.SelectorItem, metaclass=ComboBoxItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ComboBoxItem: ...
    def __new__(cls: typing.Type[ComboBoxItem]) -> ComboBoxItem: ...

class CommandBarFlyout_Static(microsoft_ui_xaml_controls_primitives.FlyoutBase_Static):
    pass

class CommandBarFlyout(microsoft_ui_xaml_controls_primitives.FlyoutBase, metaclass=CommandBarFlyout_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CommandBarFlyout: ...
    def __new__(cls: typing.Type[CommandBarFlyout]) -> CommandBarFlyout: ...
    @_property
    def primary_commands(self) -> windows_foundation_collections.IObservableVector[ICommandBarElement]: ...
    @_property
    def secondary_commands(self) -> windows_foundation_collections.IObservableVector[ICommandBarElement]: ...
    @_property
    def always_expanded(self) -> bool: ...
    @always_expanded.setter
    def always_expanded(self, value: bool) -> None: ...

@typing.final
class DatePickerFlyout_Static(microsoft_ui_xaml_controls_primitives.PickerFlyoutBase_Static):
    @_property
    def calendar_identifier_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def date_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def day_format_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def day_visible_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def max_year_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def min_year_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def month_format_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def month_visible_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def year_format_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def year_visible_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class DatePickerFlyout(microsoft_ui_xaml_controls_primitives.PickerFlyoutBase, metaclass=DatePickerFlyout_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DatePickerFlyout: ...
    def __new__(cls: typing.Type[DatePickerFlyout]) -> DatePickerFlyout: ...
    def show_at_async(self, target: microsoft_ui_xaml.FrameworkElement, /) -> windows_foundation.IAsyncOperation[typing.Optional[datetime.datetime]]: ...
    def add_date_picked(self, handler: windows_foundation.TypedEventHandler[DatePickerFlyout, DatePickedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_date_picked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def year_visible(self) -> bool: ...
    @year_visible.setter
    def year_visible(self, value: bool) -> None: ...
    @_property
    def year_format(self) -> str: ...
    @year_format.setter
    def year_format(self, value: str) -> None: ...
    @_property
    def month_visible(self) -> bool: ...
    @month_visible.setter
    def month_visible(self, value: bool) -> None: ...
    @_property
    def month_format(self) -> str: ...
    @month_format.setter
    def month_format(self, value: str) -> None: ...
    @_property
    def min_year(self) -> datetime.datetime: ...
    @min_year.setter
    def min_year(self, value: datetime.datetime) -> None: ...
    @_property
    def max_year(self) -> datetime.datetime: ...
    @max_year.setter
    def max_year(self, value: datetime.datetime) -> None: ...
    @_property
    def day_visible(self) -> bool: ...
    @day_visible.setter
    def day_visible(self, value: bool) -> None: ...
    @_property
    def day_format(self) -> str: ...
    @day_format.setter
    def day_format(self, value: str) -> None: ...
    @_property
    def date(self) -> datetime.datetime: ...
    @date.setter
    def date(self, value: datetime.datetime) -> None: ...
    @_property
    def calendar_identifier(self) -> str: ...
    @calendar_identifier.setter
    def calendar_identifier(self, value: str) -> None: ...

class DropDownButton_Static(Button_Static):
    pass

class DropDownButton(Button, metaclass=DropDownButton_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DropDownButton: ...
    def __new__(cls: typing.Type[DropDownButton]) -> DropDownButton: ...

class FlipView_Static(microsoft_ui_xaml_controls_primitives.Selector_Static):
    @_property
    def use_touch_animations_for_all_navigation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class FlipView(microsoft_ui_xaml_controls_primitives.Selector, metaclass=FlipView_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FlipView: ...
    def __new__(cls: typing.Type[FlipView]) -> FlipView: ...
    @_property
    def use_touch_animations_for_all_navigation(self) -> bool: ...
    @use_touch_animations_for_all_navigation.setter
    def use_touch_animations_for_all_navigation(self, value: bool) -> None: ...

class FlipViewItem_Static(microsoft_ui_xaml_controls_primitives.SelectorItem_Static):
    pass

class FlipViewItem(microsoft_ui_xaml_controls_primitives.SelectorItem, metaclass=FlipViewItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FlipViewItem: ...
    def __new__(cls: typing.Type[FlipViewItem]) -> FlipViewItem: ...

class Flyout_Static(microsoft_ui_xaml_controls_primitives.FlyoutBase_Static):
    @_property
    def content_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def flyout_presenter_style_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class Flyout(microsoft_ui_xaml_controls_primitives.FlyoutBase, metaclass=Flyout_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Flyout: ...
    def __new__(cls: typing.Type[Flyout]) -> Flyout: ...
    @_property
    def flyout_presenter_style(self) -> microsoft_ui_xaml.Style: ...
    @flyout_presenter_style.setter
    def flyout_presenter_style(self, value: microsoft_ui_xaml.Style) -> None: ...
    @_property
    def content(self) -> microsoft_ui_xaml.UIElement: ...
    @content.setter
    def content(self, value: microsoft_ui_xaml.UIElement) -> None: ...

class GridView_Static(ListViewBase_Static):
    pass

class GridView(ListViewBase, metaclass=GridView_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GridView: ...
    def __new__(cls: typing.Type[GridView]) -> GridView: ...

class GridViewItem_Static(microsoft_ui_xaml_controls_primitives.SelectorItem_Static):
    pass

class GridViewItem(microsoft_ui_xaml_controls_primitives.SelectorItem, metaclass=GridViewItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GridViewItem: ...
    def __new__(cls: typing.Type[GridViewItem]) -> GridViewItem: ...
    @_property
    def template_settings(self) -> microsoft_ui_xaml_controls_primitives.GridViewItemTemplateSettings: ...

class HyperlinkButton_Static(microsoft_ui_xaml_controls_primitives.ButtonBase_Static):
    @_property
    def navigate_uri_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class HyperlinkButton(microsoft_ui_xaml_controls_primitives.ButtonBase, metaclass=HyperlinkButton_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HyperlinkButton: ...
    def __new__(cls: typing.Type[HyperlinkButton]) -> HyperlinkButton: ...
    @_property
    def navigate_uri(self) -> windows_foundation.Uri: ...
    @navigate_uri.setter
    def navigate_uri(self, value: windows_foundation.Uri) -> None: ...

class ListBox_Static(microsoft_ui_xaml_controls_primitives.Selector_Static):
    @_property
    def selection_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def single_selection_follows_focus_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ListBox(microsoft_ui_xaml_controls_primitives.Selector, metaclass=ListBox_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ListBox: ...
    def __new__(cls: typing.Type[ListBox]) -> ListBox: ...
    def scroll_into_view(self, item: winrt.system.Object, /) -> None: ...
    def select_all(self) -> None: ...
    @_property
    def single_selection_follows_focus(self) -> bool: ...
    @single_selection_follows_focus.setter
    def single_selection_follows_focus(self, value: bool) -> None: ...
    @_property
    def selection_mode(self) -> SelectionMode: ...
    @selection_mode.setter
    def selection_mode(self, value: SelectionMode) -> None: ...
    @_property
    def selected_items(self) -> typing.MutableSequence[winrt.system.Object]: ...

class ListBoxItem_Static(microsoft_ui_xaml_controls_primitives.SelectorItem_Static):
    pass

class ListBoxItem(microsoft_ui_xaml_controls_primitives.SelectorItem, metaclass=ListBoxItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ListBoxItem: ...
    def __new__(cls: typing.Type[ListBoxItem]) -> ListBoxItem: ...

@typing.final
class ListPickerFlyout_Static(microsoft_ui_xaml_controls_primitives.PickerFlyoutBase_Static):
    @_property
    def display_member_path_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def item_template_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def items_source_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def selected_index_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def selected_item_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def selected_value_path_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def selected_value_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def selection_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class ListPickerFlyout(microsoft_ui_xaml_controls_primitives.PickerFlyoutBase, metaclass=ListPickerFlyout_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ListPickerFlyout: ...
    def __new__(cls: typing.Type[ListPickerFlyout]) -> ListPickerFlyout: ...
    def show_at_async(self, target: microsoft_ui_xaml.FrameworkElement, /) -> windows_foundation.IAsyncOperation[typing.Sequence[winrt.system.Object]]: ...
    def add_items_picked(self, handler: windows_foundation.TypedEventHandler[ListPickerFlyout, ItemsPickedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_items_picked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def selection_mode(self) -> ListPickerFlyoutSelectionMode: ...
    @selection_mode.setter
    def selection_mode(self, value: ListPickerFlyoutSelectionMode) -> None: ...
    @_property
    def selected_value_path(self) -> str: ...
    @selected_value_path.setter
    def selected_value_path(self, value: str) -> None: ...
    @_property
    def selected_value(self) -> winrt.system.Object: ...
    @selected_value.setter
    def selected_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def selected_item(self) -> winrt.system.Object: ...
    @selected_item.setter
    def selected_item(self, value: winrt.system.Object) -> None: ...
    @_property
    def selected_index(self) -> winrt.system.Int32: ...
    @selected_index.setter
    def selected_index(self, value: winrt.system.Int32) -> None: ...
    @_property
    def items_source(self) -> winrt.system.Object: ...
    @items_source.setter
    def items_source(self, value: winrt.system.Object) -> None: ...
    @_property
    def item_template(self) -> microsoft_ui_xaml.DataTemplate: ...
    @item_template.setter
    def item_template(self, value: microsoft_ui_xaml.DataTemplate) -> None: ...
    @_property
    def display_member_path(self) -> str: ...
    @display_member_path.setter
    def display_member_path(self, value: str) -> None: ...
    @_property
    def selected_items(self) -> typing.MutableSequence[winrt.system.Object]: ...

class ListView_Static(ListViewBase_Static):
    pass

class ListView(ListViewBase, metaclass=ListView_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ListView: ...
    def __new__(cls: typing.Type[ListView]) -> ListView: ...

class ListViewBase_Static(microsoft_ui_xaml_controls_primitives.Selector_Static):
    @_property
    def can_drag_items_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def can_reorder_items_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def data_fetch_size_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def footer_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def footer_template_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def footer_transitions_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def header_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def header_transitions_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def incremental_loading_threshold_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def incremental_loading_trigger_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_active_view_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_item_click_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_multi_select_check_box_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_swipe_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_zoomed_in_view_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def reorder_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def selection_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def semantic_zoom_owner_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def shows_scrolling_placeholders_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def single_selection_follows_focus_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ListViewBase(microsoft_ui_xaml_controls_primitives.Selector, ImplementsISemanticZoomInformation, metaclass=ListViewBase_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ListViewBase: ...
    def complete_view_change(self) -> None: ...
    def complete_view_change_from(self, source: SemanticZoomLocation, destination: SemanticZoomLocation, /) -> None: ...
    def complete_view_change_to(self, source: SemanticZoomLocation, destination: SemanticZoomLocation, /) -> None: ...
    def deselect_range(self, item_index_range: microsoft_ui_xaml_data.ItemIndexRange, /) -> None: ...
    def initialize_view_change(self) -> None: ...
    def is_drag_source(self) -> bool: ...
    def load_more_items_async(self) -> windows_foundation.IAsyncOperation[microsoft_ui_xaml_data.LoadMoreItemsResult]: ...
    def make_visible(self, item: SemanticZoomLocation, /) -> None: ...
    def prepare_connected_animation(self, key: str, item: winrt.system.Object, element_name: str, /) -> microsoft_ui_xaml_media_animation.ConnectedAnimation: ...
    def scroll_into_view(self, item: winrt.system.Object, /) -> None: ...
    def scroll_into_view_with_alignment(self, item: winrt.system.Object, alignment: ScrollIntoViewAlignment, /) -> None: ...
    def select_all(self) -> None: ...
    def select_range(self, item_index_range: microsoft_ui_xaml_data.ItemIndexRange, /) -> None: ...
    def set_desired_container_update_duration(self, duration: datetime.timedelta, /) -> None: ...
    def start_view_change_from(self, source: SemanticZoomLocation, destination: SemanticZoomLocation, /) -> None: ...
    def start_view_change_to(self, source: SemanticZoomLocation, destination: SemanticZoomLocation, /) -> None: ...
    def try_start_connected_animation_async(self, animation: microsoft_ui_xaml_media_animation.ConnectedAnimation, item: winrt.system.Object, element_name: str, /) -> windows_foundation.IAsyncOperation[bool]: ...
    def add_choosing_group_header_container(self, handler: windows_foundation.TypedEventHandler[ListViewBase, ChoosingGroupHeaderContainerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_choosing_group_header_container(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_choosing_item_container(self, handler: windows_foundation.TypedEventHandler[ListViewBase, ChoosingItemContainerEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_choosing_item_container(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_container_content_changing(self, handler: windows_foundation.TypedEventHandler[ListViewBase, ContainerContentChangingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_container_content_changing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_drag_items_completed(self, handler: windows_foundation.TypedEventHandler[ListViewBase, DragItemsCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drag_items_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_drag_items_starting(self, handler: DragItemsStartingEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drag_items_starting(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_item_click(self, handler: ItemClickEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_item_click(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def single_selection_follows_focus(self) -> bool: ...
    @single_selection_follows_focus.setter
    def single_selection_follows_focus(self, value: bool) -> None: ...
    @_property
    def shows_scrolling_placeholders(self) -> bool: ...
    @shows_scrolling_placeholders.setter
    def shows_scrolling_placeholders(self, value: bool) -> None: ...
    @_property
    def selection_mode(self) -> ListViewSelectionMode: ...
    @selection_mode.setter
    def selection_mode(self, value: ListViewSelectionMode) -> None: ...
    @_property
    def reorder_mode(self) -> ListViewReorderMode: ...
    @reorder_mode.setter
    def reorder_mode(self, value: ListViewReorderMode) -> None: ...
    @_property
    def is_swipe_enabled(self) -> bool: ...
    @is_swipe_enabled.setter
    def is_swipe_enabled(self, value: bool) -> None: ...
    @_property
    def is_multi_select_check_box_enabled(self) -> bool: ...
    @is_multi_select_check_box_enabled.setter
    def is_multi_select_check_box_enabled(self, value: bool) -> None: ...
    @_property
    def is_item_click_enabled(self) -> bool: ...
    @is_item_click_enabled.setter
    def is_item_click_enabled(self, value: bool) -> None: ...
    @_property
    def incremental_loading_trigger(self) -> IncrementalLoadingTrigger: ...
    @incremental_loading_trigger.setter
    def incremental_loading_trigger(self, value: IncrementalLoadingTrigger) -> None: ...
    @_property
    def incremental_loading_threshold(self) -> winrt.system.Double: ...
    @incremental_loading_threshold.setter
    def incremental_loading_threshold(self, value: winrt.system.Double) -> None: ...
    @_property
    def header_transitions(self) -> microsoft_ui_xaml_media_animation.TransitionCollection: ...
    @header_transitions.setter
    def header_transitions(self, value: microsoft_ui_xaml_media_animation.TransitionCollection) -> None: ...
    @_property
    def header_template(self) -> microsoft_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: microsoft_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def footer_transitions(self) -> microsoft_ui_xaml_media_animation.TransitionCollection: ...
    @footer_transitions.setter
    def footer_transitions(self, value: microsoft_ui_xaml_media_animation.TransitionCollection) -> None: ...
    @_property
    def footer_template(self) -> microsoft_ui_xaml.DataTemplate: ...
    @footer_template.setter
    def footer_template(self, value: microsoft_ui_xaml.DataTemplate) -> None: ...
    @_property
    def footer(self) -> winrt.system.Object: ...
    @footer.setter
    def footer(self, value: winrt.system.Object) -> None: ...
    @_property
    def data_fetch_size(self) -> winrt.system.Double: ...
    @data_fetch_size.setter
    def data_fetch_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def can_reorder_items(self) -> bool: ...
    @can_reorder_items.setter
    def can_reorder_items(self, value: bool) -> None: ...
    @_property
    def can_drag_items(self) -> bool: ...
    @can_drag_items.setter
    def can_drag_items(self, value: bool) -> None: ...
    @_property
    def selected_items(self) -> typing.MutableSequence[winrt.system.Object]: ...
    @_property
    def selected_ranges(self) -> typing.Sequence[microsoft_ui_xaml_data.ItemIndexRange]: ...
    @_property
    def semantic_zoom_owner(self) -> SemanticZoom: ...
    @semantic_zoom_owner.setter
    def semantic_zoom_owner(self, value: SemanticZoom) -> None: ...
    @_property
    def is_zoomed_in_view(self) -> bool: ...
    @is_zoomed_in_view.setter
    def is_zoomed_in_view(self, value: bool) -> None: ...
    @_property
    def is_active_view(self) -> bool: ...
    @is_active_view.setter
    def is_active_view(self, value: bool) -> None: ...

class ListViewItem_Static(microsoft_ui_xaml_controls_primitives.SelectorItem_Static):
    pass

class ListViewItem(microsoft_ui_xaml_controls_primitives.SelectorItem, metaclass=ListViewItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ListViewItem: ...
    def __new__(cls: typing.Type[ListViewItem]) -> ListViewItem: ...
    @_property
    def template_settings(self) -> microsoft_ui_xaml_controls_primitives.ListViewItemTemplateSettings: ...

class MenuBarItemFlyout_Static(MenuFlyout_Static):
    pass

class MenuBarItemFlyout(MenuFlyout, metaclass=MenuBarItemFlyout_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MenuBarItemFlyout: ...
    def __new__(cls: typing.Type[MenuBarItemFlyout]) -> MenuBarItemFlyout: ...

class MenuFlyout_Static(microsoft_ui_xaml_controls_primitives.FlyoutBase_Static):
    @_property
    def menu_flyout_presenter_style_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class MenuFlyout(microsoft_ui_xaml_controls_primitives.FlyoutBase, metaclass=MenuFlyout_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MenuFlyout: ...
    def __new__(cls: typing.Type[MenuFlyout]) -> MenuFlyout: ...
    def show_at(self, target_element: microsoft_ui_xaml.UIElement, point: windows_foundation.Point, /) -> None: ...  # type: ignore[override]
    @_property
    def menu_flyout_presenter_style(self) -> microsoft_ui_xaml.Style: ...
    @menu_flyout_presenter_style.setter
    def menu_flyout_presenter_style(self, value: microsoft_ui_xaml.Style) -> None: ...
    @_property
    def items(self) -> typing.MutableSequence[MenuFlyoutItemBase]: ...

@typing.final
class PickerFlyout_Static(microsoft_ui_xaml_controls_primitives.PickerFlyoutBase_Static):
    @_property
    def confirmation_buttons_visible_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def content_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class PickerFlyout(microsoft_ui_xaml_controls_primitives.PickerFlyoutBase, metaclass=PickerFlyout_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PickerFlyout: ...
    def __new__(cls: typing.Type[PickerFlyout]) -> PickerFlyout: ...
    def show_at_async(self, target: microsoft_ui_xaml.FrameworkElement, /) -> windows_foundation.IAsyncOperation[bool]: ...
    def add_confirmed(self, handler: windows_foundation.TypedEventHandler[PickerFlyout, PickerConfirmedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_confirmed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def content(self) -> microsoft_ui_xaml.UIElement: ...
    @content.setter
    def content(self, value: microsoft_ui_xaml.UIElement) -> None: ...
    @_property
    def confirmation_buttons_visible(self) -> bool: ...
    @confirmation_buttons_visible.setter
    def confirmation_buttons_visible(self, value: bool) -> None: ...

class ProgressBar_Static(microsoft_ui_xaml_controls_primitives.RangeBase_Static):
    @_property
    def is_indeterminate_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def show_error_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def show_paused_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ProgressBar(microsoft_ui_xaml_controls_primitives.RangeBase, metaclass=ProgressBar_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ProgressBar: ...
    def __new__(cls: typing.Type[ProgressBar]) -> ProgressBar: ...
    @_property
    def show_paused(self) -> bool: ...
    @show_paused.setter
    def show_paused(self, value: bool) -> None: ...
    @_property
    def show_error(self) -> bool: ...
    @show_error.setter
    def show_error(self, value: bool) -> None: ...
    @_property
    def is_indeterminate(self) -> bool: ...
    @is_indeterminate.setter
    def is_indeterminate(self, value: bool) -> None: ...
    @_property
    def template_settings(self) -> ProgressBarTemplateSettings: ...

class RadioButton_Static(microsoft_ui_xaml_controls_primitives.ToggleButton_Static):
    @_property
    def group_name_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class RadioButton(microsoft_ui_xaml_controls_primitives.ToggleButton, metaclass=RadioButton_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RadioButton: ...
    def __new__(cls: typing.Type[RadioButton]) -> RadioButton: ...
    @_property
    def group_name(self) -> str: ...
    @group_name.setter
    def group_name(self, value: str) -> None: ...

class RevealListViewItemPresenter_Static(microsoft_ui_xaml_controls_primitives.ListViewItemPresenter_Static):
    pass

class RevealListViewItemPresenter(microsoft_ui_xaml_controls_primitives.ListViewItemPresenter, metaclass=RevealListViewItemPresenter_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RevealListViewItemPresenter: ...
    def __new__(cls: typing.Type[RevealListViewItemPresenter]) -> RevealListViewItemPresenter: ...

class Slider_Static(microsoft_ui_xaml_controls_primitives.RangeBase_Static):
    @_property
    def header_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def intermediate_value_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_direction_reversed_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_thumb_tool_tip_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def orientation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def snaps_to_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def step_frequency_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def thumb_tool_tip_value_converter_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def tick_frequency_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def tick_placement_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class Slider(microsoft_ui_xaml_controls_primitives.RangeBase, metaclass=Slider_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Slider: ...
    def __new__(cls: typing.Type[Slider]) -> Slider: ...
    @_property
    def tick_placement(self) -> microsoft_ui_xaml_controls_primitives.TickPlacement: ...
    @tick_placement.setter
    def tick_placement(self, value: microsoft_ui_xaml_controls_primitives.TickPlacement) -> None: ...
    @_property
    def tick_frequency(self) -> winrt.system.Double: ...
    @tick_frequency.setter
    def tick_frequency(self, value: winrt.system.Double) -> None: ...
    @_property
    def thumb_tool_tip_value_converter(self) -> microsoft_ui_xaml_data.IValueConverter: ...
    @thumb_tool_tip_value_converter.setter
    def thumb_tool_tip_value_converter(self, value: microsoft_ui_xaml_data.ImplementsIValueConverter) -> None: ...
    @_property
    def step_frequency(self) -> winrt.system.Double: ...
    @step_frequency.setter
    def step_frequency(self, value: winrt.system.Double) -> None: ...
    @_property
    def snaps_to(self) -> microsoft_ui_xaml_controls_primitives.SliderSnapsTo: ...
    @snaps_to.setter
    def snaps_to(self, value: microsoft_ui_xaml_controls_primitives.SliderSnapsTo) -> None: ...
    @_property
    def orientation(self) -> Orientation: ...
    @orientation.setter
    def orientation(self, value: Orientation) -> None: ...
    @_property
    def is_thumb_tool_tip_enabled(self) -> bool: ...
    @is_thumb_tool_tip_enabled.setter
    def is_thumb_tool_tip_enabled(self, value: bool) -> None: ...
    @_property
    def is_direction_reversed(self) -> bool: ...
    @is_direction_reversed.setter
    def is_direction_reversed(self, value: bool) -> None: ...
    @_property
    def intermediate_value(self) -> winrt.system.Double: ...
    @intermediate_value.setter
    def intermediate_value(self, value: winrt.system.Double) -> None: ...
    @_property
    def header_template(self) -> microsoft_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: microsoft_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...

class TabViewItem_Static(ListViewItem_Static):
    @_property
    def header_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def icon_source_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_closable_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def tab_view_template_settings_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class TabViewItem(ListViewItem, metaclass=TabViewItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TabViewItem: ...
    def __new__(cls: typing.Type[TabViewItem]) -> TabViewItem: ...
    def add_close_requested(self, handler: windows_foundation.TypedEventHandler[TabViewItem, TabViewTabCloseRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_close_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def is_closable(self) -> bool: ...
    @is_closable.setter
    def is_closable(self, value: bool) -> None: ...
    @_property
    def icon_source(self) -> IconSource: ...
    @icon_source.setter
    def icon_source(self, value: IconSource) -> None: ...
    @_property
    def header_template(self) -> microsoft_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: microsoft_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def tab_view_template_settings(self) -> TabViewItemTemplateSettings: ...

class TextCommandBarFlyout_Static(CommandBarFlyout_Static):
    pass

class TextCommandBarFlyout(CommandBarFlyout, metaclass=TextCommandBarFlyout_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextCommandBarFlyout: ...
    def __new__(cls: typing.Type[TextCommandBarFlyout]) -> TextCommandBarFlyout: ...

@typing.final
class TimePickerFlyout_Static(microsoft_ui_xaml_controls_primitives.PickerFlyoutBase_Static):
    @_property
    def clock_identifier_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def minute_increment_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def time_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class TimePickerFlyout(microsoft_ui_xaml_controls_primitives.PickerFlyoutBase, metaclass=TimePickerFlyout_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TimePickerFlyout: ...
    def __new__(cls: typing.Type[TimePickerFlyout]) -> TimePickerFlyout: ...
    def show_at_async(self, target: microsoft_ui_xaml.FrameworkElement, /) -> windows_foundation.IAsyncOperation[typing.Optional[datetime.timedelta]]: ...
    def add_time_picked(self, handler: windows_foundation.TypedEventHandler[TimePickerFlyout, TimePickedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_time_picked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def time(self) -> datetime.timedelta: ...
    @time.setter
    def time(self, value: datetime.timedelta) -> None: ...
    @_property
    def minute_increment(self) -> winrt.system.Int32: ...
    @minute_increment.setter
    def minute_increment(self, value: winrt.system.Int32) -> None: ...
    @_property
    def clock_identifier(self) -> str: ...
    @clock_identifier.setter
    def clock_identifier(self, value: str) -> None: ...

class TreeViewItem_Static(ListViewItem_Static):
    @_property
    def collapsed_glyph_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def expanded_glyph_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def glyph_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def glyph_opacity_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def glyph_size_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_expanded_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def tree_view_item_template_settings_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def has_unrealized_children_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def items_source_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class TreeViewItem(ListViewItem, metaclass=TreeViewItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TreeViewItem: ...
    def __new__(cls: typing.Type[TreeViewItem]) -> TreeViewItem: ...
    @_property
    def is_expanded(self) -> bool: ...
    @is_expanded.setter
    def is_expanded(self, value: bool) -> None: ...
    @_property
    def glyph_size(self) -> winrt.system.Double: ...
    @glyph_size.setter
    def glyph_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def glyph_opacity(self) -> winrt.system.Double: ...
    @glyph_opacity.setter
    def glyph_opacity(self, value: winrt.system.Double) -> None: ...
    @_property
    def glyph_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @glyph_brush.setter
    def glyph_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def expanded_glyph(self) -> str: ...
    @expanded_glyph.setter
    def expanded_glyph(self, value: str) -> None: ...
    @_property
    def collapsed_glyph(self) -> str: ...
    @collapsed_glyph.setter
    def collapsed_glyph(self, value: str) -> None: ...
    @_property
    def tree_view_item_template_settings(self) -> TreeViewItemTemplateSettings: ...
    @_property
    def items_source(self) -> winrt.system.Object: ...
    @items_source.setter
    def items_source(self, value: winrt.system.Object) -> None: ...
    @_property
    def has_unrealized_children(self) -> bool: ...
    @has_unrealized_children.setter
    def has_unrealized_children(self, value: bool) -> None: ...

class TreeViewList_Static(ListView_Static):
    pass

class TreeViewList(ListView, metaclass=TreeViewList_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TreeViewList: ...
    def __new__(cls: typing.Type[TreeViewList]) -> TreeViewList: ...

@typing.final
class VirtualizingStackPanel_Static(microsoft_ui_xaml_controls_primitives.OrientedVirtualizingPanel_Static):
    def get_is_virtualizing(cls, o: microsoft_ui_xaml.DependencyObject, /) -> bool: ...
    def get_virtualization_mode(cls, element: microsoft_ui_xaml.DependencyObject, /) -> VirtualizationMode: ...
    def set_virtualization_mode(cls, element: microsoft_ui_xaml.DependencyObject, value: VirtualizationMode, /) -> None: ...
    @_property
    def are_scroll_snap_points_regular_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_virtualizing_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def orientation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def virtualization_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class VirtualizingStackPanel(microsoft_ui_xaml_controls_primitives.OrientedVirtualizingPanel, metaclass=VirtualizingStackPanel_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> VirtualizingStackPanel: ...
    def __new__(cls: typing.Type[VirtualizingStackPanel]) -> VirtualizingStackPanel: ...
    def add_clean_up_virtualized_item_event(self, handler: CleanUpVirtualizedItemEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_clean_up_virtualized_item_event(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def orientation(self) -> Orientation: ...
    @orientation.setter
    def orientation(self, value: Orientation) -> None: ...
    @_property
    def are_scroll_snap_points_regular(self) -> bool: ...
    @are_scroll_snap_points_regular.setter
    def are_scroll_snap_points_regular(self, value: bool) -> None: ...

@typing.final
class WrapGrid_Static(microsoft_ui_xaml_controls_primitives.OrientedVirtualizingPanel_Static):
    @_property
    def horizontal_children_alignment_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def item_height_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def item_width_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def maximum_rows_or_columns_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def orientation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_children_alignment_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class WrapGrid(microsoft_ui_xaml_controls_primitives.OrientedVirtualizingPanel, metaclass=WrapGrid_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WrapGrid: ...
    def __new__(cls: typing.Type[WrapGrid]) -> WrapGrid: ...
    @_property
    def vertical_children_alignment(self) -> microsoft_ui_xaml.VerticalAlignment: ...
    @vertical_children_alignment.setter
    def vertical_children_alignment(self, value: microsoft_ui_xaml.VerticalAlignment) -> None: ...
    @_property
    def orientation(self) -> Orientation: ...
    @orientation.setter
    def orientation(self, value: Orientation) -> None: ...
    @_property
    def maximum_rows_or_columns(self) -> winrt.system.Int32: ...
    @maximum_rows_or_columns.setter
    def maximum_rows_or_columns(self, value: winrt.system.Int32) -> None: ...
    @_property
    def item_width(self) -> winrt.system.Double: ...
    @item_width.setter
    def item_width(self, value: winrt.system.Double) -> None: ...
    @_property
    def item_height(self) -> winrt.system.Double: ...
    @item_height.setter
    def item_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def horizontal_children_alignment(self) -> microsoft_ui_xaml.HorizontalAlignment: ...
    @horizontal_children_alignment.setter
    def horizontal_children_alignment(self, value: microsoft_ui_xaml.HorizontalAlignment) -> None: ...

