# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.1.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.storage.streams as windows_storage_streams

Self = typing.TypeVar('Self')

@typing.final
class DataProtectionProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DataProtectionProvider: ...
    @typing.overload
    def __new__(cls: typing.Type[DataProtectionProvider], protection_descriptor: str) -> DataProtectionProvider: ...
    @typing.overload
    def __new__(cls: typing.Type[DataProtectionProvider]) -> DataProtectionProvider: ...
    def protect_async(self, data: typing.Optional[windows_storage_streams.IBuffer], /) -> windows_foundation.IAsyncOperation[windows_storage_streams.IBuffer]: ...
    def protect_stream_async(self, src: typing.Optional[windows_storage_streams.IInputStream], dest: typing.Optional[windows_storage_streams.IOutputStream], /) -> windows_foundation.IAsyncAction: ...
    def unprotect_async(self, data: typing.Optional[windows_storage_streams.IBuffer], /) -> windows_foundation.IAsyncOperation[windows_storage_streams.IBuffer]: ...
    def unprotect_stream_async(self, src: typing.Optional[windows_storage_streams.IInputStream], dest: typing.Optional[windows_storage_streams.IOutputStream], /) -> windows_foundation.IAsyncAction: ...

