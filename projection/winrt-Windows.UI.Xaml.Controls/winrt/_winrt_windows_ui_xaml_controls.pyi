# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.contacts as windows_applicationmodel_contacts
import winrt.windows.applicationmodel.datatransfer as windows_applicationmodel_datatransfer
import winrt.windows.applicationmodel.search as windows_applicationmodel_search
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.globalization as windows_globalization
import winrt.windows.media.capture as windows_media_capture
import winrt.windows.media.casting as windows_media_casting
import winrt.windows.media.core as windows_media_core
import winrt.windows.media.playto as windows_media_playto
import winrt.windows.media.playback as windows_media_playback
import winrt.windows.media.protection as windows_media_protection
import winrt.windows.storage.streams as windows_storage_streams
import winrt.windows.system as windows_system
import winrt.windows.ui as windows_ui
import winrt.windows.ui.composition as windows_ui_composition
import winrt.windows.ui.core as windows_ui_core
import winrt.windows.ui.input.inking as windows_ui_input_inking
import winrt.windows.ui.text as windows_ui_text
import winrt.windows.ui.xaml as windows_ui_xaml
import winrt.windows.ui.xaml.automation as windows_ui_xaml_automation
import winrt.windows.ui.xaml.automation.peers as windows_ui_xaml_automation_peers
import winrt.windows.ui.xaml.automation.provider as windows_ui_xaml_automation_provider
import winrt.windows.ui.xaml.controls.primitives as windows_ui_xaml_controls_primitives
import winrt.windows.ui.xaml.data as windows_ui_xaml_data
import winrt.windows.ui.xaml.documents as windows_ui_xaml_documents
import winrt.windows.ui.xaml.input as windows_ui_xaml_input
import winrt.windows.ui.xaml.interop as windows_ui_xaml_interop
import winrt.windows.ui.xaml.media as windows_ui_xaml_media
import winrt.windows.ui.xaml.media.animation as windows_ui_xaml_media_animation
import winrt.windows.ui.xaml.navigation as windows_ui_xaml_navigation
import winrt.windows.web as windows_web
import winrt.windows.web.http as windows_web_http

from ._winrt_windows_ui_xaml_controls_2 import (
    AppBarButton,
    AppBarToggleButton,
    Button,
    CheckBox,
    ComboBox,
    ComboBoxItem,
    CommandBarFlyout,
    DatePickerFlyout,
    DropDownButton,
    FlipView,
    FlipViewItem,
    Flyout,
    GridView,
    GridViewItem,
    HyperlinkButton,
    InkToolbarBallpointPenButton,
    InkToolbarCustomPenButton,
    InkToolbarCustomToggleButton,
    InkToolbarCustomToolButton,
    InkToolbarEraserButton,
    InkToolbarFlyoutItem,
    InkToolbarHighlighterButton,
    InkToolbarMenuButton,
    InkToolbarPenButton,
    InkToolbarPencilButton,
    InkToolbarRulerButton,
    InkToolbarStencilButton,
    InkToolbarToggleButton,
    InkToolbarToolButton,
    ListBox,
    ListBoxItem,
    ListPickerFlyout,
    ListView,
    ListViewBase,
    ListViewItem,
    MenuBarItemFlyout,
    MenuFlyout,
    NavigationViewItem,
    NavigationViewItemBase,
    NavigationViewItemHeader,
    NavigationViewItemSeparator,
    NavigationViewList,
    PickerFlyout,
    ProgressBar,
    RadioButton,
    Slider,
    TextCommandBarFlyout,
    TimePickerFlyout,
    TreeViewItem,
    TreeViewList,
    VirtualizingStackPanel,
    WrapGrid,
)

from winrt.windows.ui.xaml.controls import AppBarClosedDisplayMode, AutoSuggestionBoxTextChangeReason, BackgroundSizing, CalendarViewDisplayMode, CalendarViewSelectionMode, CandidateWindowAlignment, CharacterCasing, ClickMode, ColorPickerHsvChannel, ColorSpectrumComponents, ColorSpectrumShape, ComboBoxSelectionChangedTrigger, CommandBarDefaultLabelPosition, CommandBarDynamicOverflowAction, CommandBarLabelPosition, CommandBarOverflowButtonVisibility, ContentDialogButton, ContentDialogPlacement, ContentDialogResult, ContentLinkChangeKind, DisabledFormattingAccelerators, HandwritingPanelPlacementAlignment, IncrementalLoadingTrigger, InkToolbarButtonFlyoutPlacement, InkToolbarFlyoutItemKind, InkToolbarInitialControls, InkToolbarMenuKind, InkToolbarStencilKind, InkToolbarToggle, InkToolbarTool, ItemsUpdatingScrollMode, LightDismissOverlayMode, ListPickerFlyoutSelectionMode, ListViewReorderMode, ListViewSelectionMode, NavigationViewBackButtonVisible, NavigationViewDisplayMode, NavigationViewOverflowLabelMode, NavigationViewPaneDisplayMode, NavigationViewSelectionFollowsFocus, NavigationViewShoulderNavigationEnabled, Orientation, PanelScrollingDirection, ParallaxSourceOffsetKind, PasswordRevealMode, PivotHeaderFocusVisualPlacement, PivotSlideInAnimationGroup, RefreshPullDirection, RefreshVisualizerOrientation, RefreshVisualizerState, RequiresPointer, RichEditClipboardFormat, ScrollBarVisibility, ScrollIntoViewAlignment, ScrollMode, SelectionMode, SnapPointsType, SplitViewDisplayMode, SplitViewPanePlacement, StretchDirection, SwipeBehaviorOnInvoked, SwipeMode, Symbol, TreeViewSelectionMode, TwoPaneViewMode, TwoPaneViewPriority, TwoPaneViewTallModeConfiguration, TwoPaneViewWideModeConfiguration, VirtualizationMode, WebViewExecutionMode, WebViewPermissionState, WebViewPermissionType, ZoomMode
from winrt.windows.ui.xaml.controls import BackClickEventHandler, CalendarViewDayItemChangingEventHandler, CleanUpVirtualizedItemEventHandler, ContextMenuOpeningEventHandler, DragItemsStartingEventHandler, HubSectionHeaderClickEventHandler, ItemClickEventHandler, ListViewItemToKeyHandler, ListViewKeyToItemHandler, NotifyEventHandler, SectionsInViewChangedEventHandler, SelectionChangedEventHandler, SemanticZoomViewChangedEventHandler, TextChangedEventHandler, TextControlPasteEventHandler, WebViewNavigationFailedEventHandler

Self = typing.TypeVar('Self')

@typing.final
class AnchorRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AnchorRequestedEventArgs: ...
    @_property
    def anchor(self) -> windows_ui_xaml.UIElement: ...
    @anchor.setter
    def anchor(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def anchor_candidates(self) -> typing.MutableSequence[windows_ui_xaml.UIElement]: ...

class AppBar_Static(ContentControl_Static):
    @_property
    def is_open_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_sticky_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def closed_display_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def light_dismiss_overlay_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class AppBar(ContentControl, metaclass=AppBar_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppBar: ...
    def __new__(cls: typing.Type[AppBar]) -> AppBar: ...
    def add_closed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_opened(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_closing(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_closing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_opening(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_opening(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def is_sticky(self) -> bool: ...
    @is_sticky.setter
    def is_sticky(self, value: bool) -> None: ...
    @_property
    def is_open(self) -> bool: ...
    @is_open.setter
    def is_open(self, value: bool) -> None: ...
    @_property
    def closed_display_mode(self) -> AppBarClosedDisplayMode: ...
    @closed_display_mode.setter
    def closed_display_mode(self, value: AppBarClosedDisplayMode) -> None: ...
    @_property
    def template_settings(self) -> windows_ui_xaml_controls_primitives.AppBarTemplateSettings: ...
    @_property
    def light_dismiss_overlay_mode(self) -> LightDismissOverlayMode: ...
    @light_dismiss_overlay_mode.setter
    def light_dismiss_overlay_mode(self, value: LightDismissOverlayMode) -> None: ...

class AppBarElementContainer_Static(ContentControl_Static):
    @_property
    def dynamic_overflow_order_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_compact_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_in_overflow_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class AppBarElementContainer(ContentControl, ImplementsICommandBarElement2, ImplementsICommandBarElement, metaclass=AppBarElementContainer_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppBarElementContainer: ...
    def __new__(cls: typing.Type[AppBarElementContainer]) -> AppBarElementContainer: ...
    @_property
    def is_compact(self) -> bool: ...
    @is_compact.setter
    def is_compact(self, value: bool) -> None: ...
    @_property
    def dynamic_overflow_order(self) -> winrt.system.Int32: ...
    @dynamic_overflow_order.setter
    def dynamic_overflow_order(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_in_overflow(self) -> bool: ...

class AppBarSeparator_Static(Control_Static):
    @_property
    def is_compact_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def dynamic_overflow_order_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_in_overflow_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class AppBarSeparator(Control, ImplementsICommandBarElement2, ImplementsICommandBarElement, metaclass=AppBarSeparator_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AppBarSeparator: ...
    def __new__(cls: typing.Type[AppBarSeparator]) -> AppBarSeparator: ...
    @_property
    def is_compact(self) -> bool: ...
    @is_compact.setter
    def is_compact(self, value: bool) -> None: ...
    @_property
    def dynamic_overflow_order(self) -> winrt.system.Int32: ...
    @dynamic_overflow_order.setter
    def dynamic_overflow_order(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_in_overflow(self) -> bool: ...

@typing.final
class AutoSuggestBox_Static(ItemsControl_Static):
    @_property
    def auto_maximize_suggestion_area_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_suggestion_list_open_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_suggestion_list_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placeholder_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_box_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_member_path_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def update_text_on_select_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def query_icon_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def light_dismiss_overlay_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def description_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class AutoSuggestBox(ItemsControl, metaclass=AutoSuggestBox_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AutoSuggestBox: ...
    def __new__(cls: typing.Type[AutoSuggestBox]) -> AutoSuggestBox: ...
    def add_suggestion_chosen(self, handler: windows_foundation.TypedEventHandler[AutoSuggestBox, AutoSuggestBoxSuggestionChosenEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_suggestion_chosen(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_text_changed(self, handler: windows_foundation.TypedEventHandler[AutoSuggestBox, AutoSuggestBoxTextChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_text_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_query_submitted(self, handler: windows_foundation.TypedEventHandler[AutoSuggestBox, AutoSuggestBoxQuerySubmittedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_query_submitted(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def update_text_on_select(self) -> bool: ...
    @update_text_on_select.setter
    def update_text_on_select(self, value: bool) -> None: ...
    @_property
    def text_member_path(self) -> str: ...
    @text_member_path.setter
    def text_member_path(self, value: str) -> None: ...
    @_property
    def text_box_style(self) -> windows_ui_xaml.Style: ...
    @text_box_style.setter
    def text_box_style(self, value: windows_ui_xaml.Style) -> None: ...
    @_property
    def text(self) -> str: ...
    @text.setter
    def text(self, value: str) -> None: ...
    @_property
    def placeholder_text(self) -> str: ...
    @placeholder_text.setter
    def placeholder_text(self, value: str) -> None: ...
    @_property
    def max_suggestion_list_height(self) -> winrt.system.Double: ...
    @max_suggestion_list_height.setter
    def max_suggestion_list_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_suggestion_list_open(self) -> bool: ...
    @is_suggestion_list_open.setter
    def is_suggestion_list_open(self, value: bool) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def auto_maximize_suggestion_area(self) -> bool: ...
    @auto_maximize_suggestion_area.setter
    def auto_maximize_suggestion_area(self, value: bool) -> None: ...
    @_property
    def query_icon(self) -> IconElement: ...
    @query_icon.setter
    def query_icon(self, value: IconElement) -> None: ...
    @_property
    def light_dismiss_overlay_mode(self) -> LightDismissOverlayMode: ...
    @light_dismiss_overlay_mode.setter
    def light_dismiss_overlay_mode(self, value: LightDismissOverlayMode) -> None: ...
    @_property
    def description(self) -> winrt.system.Object: ...
    @description.setter
    def description(self, value: winrt.system.Object) -> None: ...

@typing.final
class AutoSuggestBoxQuerySubmittedEventArgs(windows_ui_xaml.DependencyObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AutoSuggestBoxQuerySubmittedEventArgs: ...
    def __new__(cls: typing.Type[AutoSuggestBoxQuerySubmittedEventArgs]) -> AutoSuggestBoxQuerySubmittedEventArgs: ...
    @_property
    def chosen_suggestion(self) -> winrt.system.Object: ...
    @_property
    def query_text(self) -> str: ...

@typing.final
class AutoSuggestBoxSuggestionChosenEventArgs(windows_ui_xaml.DependencyObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AutoSuggestBoxSuggestionChosenEventArgs: ...
    def __new__(cls: typing.Type[AutoSuggestBoxSuggestionChosenEventArgs]) -> AutoSuggestBoxSuggestionChosenEventArgs: ...
    @_property
    def selected_item(self) -> winrt.system.Object: ...

@typing.final
class AutoSuggestBoxTextChangedEventArgs_Static(windows_ui_xaml.DependencyObject_Static):
    @_property
    def reason_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class AutoSuggestBoxTextChangedEventArgs(windows_ui_xaml.DependencyObject, metaclass=AutoSuggestBoxTextChangedEventArgs_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> AutoSuggestBoxTextChangedEventArgs: ...
    def __new__(cls: typing.Type[AutoSuggestBoxTextChangedEventArgs]) -> AutoSuggestBoxTextChangedEventArgs: ...
    def check_current(self) -> bool: ...
    @_property
    def reason(self) -> AutoSuggestionBoxTextChangeReason: ...
    @reason.setter
    def reason(self, value: AutoSuggestionBoxTextChangeReason) -> None: ...

@typing.final
class BackClickEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BackClickEventArgs: ...
    def __new__(cls: typing.Type[BackClickEventArgs]) -> BackClickEventArgs: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...

class BitmapIcon_Static(IconElement_Static):
    @_property
    def uri_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def show_as_monochrome_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class BitmapIcon(IconElement, metaclass=BitmapIcon_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BitmapIcon: ...
    def __new__(cls: typing.Type[BitmapIcon]) -> BitmapIcon: ...
    @_property
    def uri_source(self) -> windows_foundation.Uri: ...
    @uri_source.setter
    def uri_source(self, value: windows_foundation.Uri) -> None: ...
    @_property
    def show_as_monochrome(self) -> bool: ...
    @show_as_monochrome.setter
    def show_as_monochrome(self, value: bool) -> None: ...

class BitmapIconSource_Static(IconSource_Static):
    @_property
    def show_as_monochrome_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def uri_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class BitmapIconSource(IconSource, metaclass=BitmapIconSource_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BitmapIconSource: ...
    def __new__(cls: typing.Type[BitmapIconSource]) -> BitmapIconSource: ...
    @_property
    def uri_source(self) -> windows_foundation.Uri: ...
    @uri_source.setter
    def uri_source(self, value: windows_foundation.Uri) -> None: ...
    @_property
    def show_as_monochrome(self) -> bool: ...
    @show_as_monochrome.setter
    def show_as_monochrome(self, value: bool) -> None: ...

@typing.final
class Border_Static(windows_ui_xaml.FrameworkElement_Static):
    @_property
    def background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def border_thickness_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def child_transitions_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def corner_radius_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def padding_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def background_sizing_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class Border(windows_ui_xaml.FrameworkElement, metaclass=Border_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Border: ...
    def __new__(cls: typing.Type[Border]) -> Border: ...
    @_property
    def padding(self) -> windows_ui_xaml.Thickness: ...
    @padding.setter
    def padding(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def corner_radius(self) -> windows_ui_xaml.CornerRadius: ...
    @corner_radius.setter
    def corner_radius(self, value: windows_ui_xaml.CornerRadius) -> None: ...
    @_property
    def child_transitions(self) -> windows_ui_xaml_media_animation.TransitionCollection: ...
    @child_transitions.setter
    def child_transitions(self, value: windows_ui_xaml_media_animation.TransitionCollection) -> None: ...
    @_property
    def child(self) -> windows_ui_xaml.UIElement: ...
    @child.setter
    def child(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def border_thickness(self) -> windows_ui_xaml.Thickness: ...
    @border_thickness.setter
    def border_thickness(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @border_brush.setter
    def border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def background(self) -> windows_ui_xaml_media.Brush: ...
    @background.setter
    def background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def background_transition(self) -> windows_ui_xaml.BrushTransition: ...
    @background_transition.setter
    def background_transition(self, value: windows_ui_xaml.BrushTransition) -> None: ...
    @_property
    def background_sizing(self) -> BackgroundSizing: ...
    @background_sizing.setter
    def background_sizing(self, value: BackgroundSizing) -> None: ...

class CalendarDatePicker_Static(Control_Static):
    @_property
    def calendar_identifier_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def calendar_view_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def date_format_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def date_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def day_of_week_format_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def display_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def first_day_of_week_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_calendar_open_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_group_label_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_out_of_scope_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_today_highlighted_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_date_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def min_date_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placeholder_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def light_dismiss_overlay_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def description_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class CalendarDatePicker(Control, metaclass=CalendarDatePicker_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CalendarDatePicker: ...
    def __new__(cls: typing.Type[CalendarDatePicker]) -> CalendarDatePicker: ...
    def set_display_date(self, date: datetime.datetime, /) -> None: ...
    def set_year_decade_display_dimensions(self, columns: winrt.system.Int32, rows: winrt.system.Int32, /) -> None: ...
    def add_calendar_view_day_item_changing(self, handler: CalendarViewDayItemChangingEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_calendar_view_day_item_changing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_closed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_date_changed(self, handler: windows_foundation.TypedEventHandler[CalendarDatePicker, CalendarDatePickerDateChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_date_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_opened(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def placeholder_text(self) -> str: ...
    @placeholder_text.setter
    def placeholder_text(self, value: str) -> None: ...
    @_property
    def min_date(self) -> datetime.datetime: ...
    @min_date.setter
    def min_date(self, value: datetime.datetime) -> None: ...
    @_property
    def max_date(self) -> datetime.datetime: ...
    @max_date.setter
    def max_date(self, value: datetime.datetime) -> None: ...
    @_property
    def is_today_highlighted(self) -> bool: ...
    @is_today_highlighted.setter
    def is_today_highlighted(self, value: bool) -> None: ...
    @_property
    def is_out_of_scope_enabled(self) -> bool: ...
    @is_out_of_scope_enabled.setter
    def is_out_of_scope_enabled(self, value: bool) -> None: ...
    @_property
    def is_group_label_visible(self) -> bool: ...
    @is_group_label_visible.setter
    def is_group_label_visible(self, value: bool) -> None: ...
    @_property
    def is_calendar_open(self) -> bool: ...
    @is_calendar_open.setter
    def is_calendar_open(self, value: bool) -> None: ...
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def first_day_of_week(self) -> windows_globalization.DayOfWeek: ...
    @first_day_of_week.setter
    def first_day_of_week(self, value: windows_globalization.DayOfWeek) -> None: ...
    @_property
    def display_mode(self) -> CalendarViewDisplayMode: ...
    @display_mode.setter
    def display_mode(self, value: CalendarViewDisplayMode) -> None: ...
    @_property
    def day_of_week_format(self) -> str: ...
    @day_of_week_format.setter
    def day_of_week_format(self, value: str) -> None: ...
    @_property
    def date_format(self) -> str: ...
    @date_format.setter
    def date_format(self, value: str) -> None: ...
    @_property
    def date(self) -> typing.Optional[datetime.datetime]: ...
    @date.setter
    def date(self, value: typing.Optional[datetime.datetime]) -> None: ...
    @_property
    def calendar_view_style(self) -> windows_ui_xaml.Style: ...
    @calendar_view_style.setter
    def calendar_view_style(self, value: windows_ui_xaml.Style) -> None: ...
    @_property
    def calendar_identifier(self) -> str: ...
    @calendar_identifier.setter
    def calendar_identifier(self, value: str) -> None: ...
    @_property
    def light_dismiss_overlay_mode(self) -> LightDismissOverlayMode: ...
    @light_dismiss_overlay_mode.setter
    def light_dismiss_overlay_mode(self, value: LightDismissOverlayMode) -> None: ...
    @_property
    def description(self) -> winrt.system.Object: ...
    @description.setter
    def description(self, value: winrt.system.Object) -> None: ...

@typing.final
class CalendarDatePickerDateChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CalendarDatePickerDateChangedEventArgs: ...
    @_property
    def new_date(self) -> typing.Optional[datetime.datetime]: ...
    @_property
    def old_date(self) -> typing.Optional[datetime.datetime]: ...

class CalendarView_Static(Control_Static):
    @_property
    def is_out_of_scope_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_today_highlighted_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_date_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def min_date_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def month_year_item_font_family_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def month_year_item_font_size_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def month_year_item_font_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def month_year_item_font_weight_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def number_of_weeks_in_view_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def first_day_of_week_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def out_of_scope_background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def out_of_scope_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pressed_border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pressed_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_hover_border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_pressed_border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selection_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def template_settings_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def today_font_weight_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def today_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_day_item_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_first_of_month_label_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def blackout_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def calendar_identifier_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def calendar_item_background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def calendar_item_border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def calendar_item_border_thickness_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def calendar_item_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def calendar_view_day_item_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def day_item_font_family_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def day_item_font_size_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def day_item_font_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def day_item_font_weight_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def day_of_week_format_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def display_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_dates_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def first_of_month_label_font_family_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def first_of_month_label_font_size_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def first_of_month_label_font_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def first_of_month_label_font_weight_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def first_of_year_decade_label_font_family_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def first_of_year_decade_label_font_size_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def first_of_year_decade_label_font_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def first_of_year_decade_label_font_weight_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def focus_border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_day_item_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_first_of_month_label_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def hover_border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_group_label_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def blackout_background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def blackout_strikethrough_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def calendar_item_corner_radius_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def calendar_item_disabled_background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def calendar_item_hover_background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def calendar_item_pressed_background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def day_item_margin_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def disabled_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def first_of_month_label_margin_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def month_year_item_margin_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def out_of_scope_hover_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def out_of_scope_pressed_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_disabled_border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_disabled_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_hover_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_pressed_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def today_background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def today_blackout_background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def today_blackout_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def today_disabled_background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def today_hover_background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def today_pressed_background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def today_selected_inner_border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def first_of_year_decade_label_margin_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class CalendarView(Control, metaclass=CalendarView_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CalendarView: ...
    def __new__(cls: typing.Type[CalendarView]) -> CalendarView: ...
    def set_display_date(self, date: datetime.datetime, /) -> None: ...
    def set_year_decade_display_dimensions(self, columns: winrt.system.Int32, rows: winrt.system.Int32, /) -> None: ...
    def add_calendar_view_day_item_changing(self, handler: windows_foundation.TypedEventHandler[CalendarView, CalendarViewDayItemChangingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_calendar_view_day_item_changing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_selected_dates_changed(self, handler: windows_foundation.TypedEventHandler[CalendarView, CalendarViewSelectedDatesChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_selected_dates_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def first_of_month_label_font_weight(self) -> windows_ui_text.FontWeight: ...
    @first_of_month_label_font_weight.setter
    def first_of_month_label_font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def first_of_month_label_font_style(self) -> windows_ui_text.FontStyle: ...
    @first_of_month_label_font_style.setter
    def first_of_month_label_font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def first_of_month_label_font_size(self) -> winrt.system.Double: ...
    @first_of_month_label_font_size.setter
    def first_of_month_label_font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def first_of_month_label_font_family(self) -> windows_ui_xaml_media.FontFamily: ...
    @first_of_month_label_font_family.setter
    def first_of_month_label_font_family(self, value: windows_ui_xaml_media.FontFamily) -> None: ...
    @_property
    def first_day_of_week(self) -> windows_globalization.DayOfWeek: ...
    @first_day_of_week.setter
    def first_day_of_week(self, value: windows_globalization.DayOfWeek) -> None: ...
    @_property
    def display_mode(self) -> CalendarViewDisplayMode: ...
    @display_mode.setter
    def display_mode(self, value: CalendarViewDisplayMode) -> None: ...
    @_property
    def day_of_week_format(self) -> str: ...
    @day_of_week_format.setter
    def day_of_week_format(self, value: str) -> None: ...
    @_property
    def day_item_font_weight(self) -> windows_ui_text.FontWeight: ...
    @day_item_font_weight.setter
    def day_item_font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def is_today_highlighted(self) -> bool: ...
    @is_today_highlighted.setter
    def is_today_highlighted(self, value: bool) -> None: ...
    @_property
    def day_item_font_size(self) -> winrt.system.Double: ...
    @day_item_font_size.setter
    def day_item_font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def day_item_font_family(self) -> windows_ui_xaml_media.FontFamily: ...
    @day_item_font_family.setter
    def day_item_font_family(self, value: windows_ui_xaml_media.FontFamily) -> None: ...
    @_property
    def calendar_view_day_item_style(self) -> windows_ui_xaml.Style: ...
    @calendar_view_day_item_style.setter
    def calendar_view_day_item_style(self, value: windows_ui_xaml.Style) -> None: ...
    @_property
    def calendar_item_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @calendar_item_foreground.setter
    def calendar_item_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def calendar_item_border_thickness(self) -> windows_ui_xaml.Thickness: ...
    @calendar_item_border_thickness.setter
    def calendar_item_border_thickness(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def calendar_item_border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @calendar_item_border_brush.setter
    def calendar_item_border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def calendar_item_background(self) -> windows_ui_xaml_media.Brush: ...
    @calendar_item_background.setter
    def calendar_item_background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def calendar_identifier(self) -> str: ...
    @calendar_identifier.setter
    def calendar_identifier(self, value: str) -> None: ...
    @_property
    def out_of_scope_background(self) -> windows_ui_xaml_media.Brush: ...
    @out_of_scope_background.setter
    def out_of_scope_background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def blackout_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @blackout_foreground.setter
    def blackout_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def first_of_year_decade_label_font_family(self) -> windows_ui_xaml_media.FontFamily: ...
    @first_of_year_decade_label_font_family.setter
    def first_of_year_decade_label_font_family(self, value: windows_ui_xaml_media.FontFamily) -> None: ...
    @_property
    def number_of_weeks_in_view(self) -> winrt.system.Int32: ...
    @number_of_weeks_in_view.setter
    def number_of_weeks_in_view(self, value: winrt.system.Int32) -> None: ...
    @_property
    def month_year_item_font_weight(self) -> windows_ui_text.FontWeight: ...
    @month_year_item_font_weight.setter
    def month_year_item_font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def month_year_item_font_style(self) -> windows_ui_text.FontStyle: ...
    @month_year_item_font_style.setter
    def month_year_item_font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def month_year_item_font_size(self) -> winrt.system.Double: ...
    @month_year_item_font_size.setter
    def month_year_item_font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def month_year_item_font_family(self) -> windows_ui_xaml_media.FontFamily: ...
    @month_year_item_font_family.setter
    def month_year_item_font_family(self, value: windows_ui_xaml_media.FontFamily) -> None: ...
    @_property
    def min_date(self) -> datetime.datetime: ...
    @min_date.setter
    def min_date(self, value: datetime.datetime) -> None: ...
    @_property
    def max_date(self) -> datetime.datetime: ...
    @max_date.setter
    def max_date(self, value: datetime.datetime) -> None: ...
    @_property
    def out_of_scope_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @out_of_scope_foreground.setter
    def out_of_scope_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def is_out_of_scope_enabled(self) -> bool: ...
    @is_out_of_scope_enabled.setter
    def is_out_of_scope_enabled(self, value: bool) -> None: ...
    @_property
    def is_group_label_visible(self) -> bool: ...
    @is_group_label_visible.setter
    def is_group_label_visible(self, value: bool) -> None: ...
    @_property
    def hover_border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @hover_border_brush.setter
    def hover_border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def horizontal_first_of_month_label_alignment(self) -> windows_ui_xaml.HorizontalAlignment: ...
    @horizontal_first_of_month_label_alignment.setter
    def horizontal_first_of_month_label_alignment(self, value: windows_ui_xaml.HorizontalAlignment) -> None: ...
    @_property
    def horizontal_day_item_alignment(self) -> windows_ui_xaml.HorizontalAlignment: ...
    @horizontal_day_item_alignment.setter
    def horizontal_day_item_alignment(self, value: windows_ui_xaml.HorizontalAlignment) -> None: ...
    @_property
    def focus_border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @focus_border_brush.setter
    def focus_border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def first_of_year_decade_label_font_weight(self) -> windows_ui_text.FontWeight: ...
    @first_of_year_decade_label_font_weight.setter
    def first_of_year_decade_label_font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def first_of_year_decade_label_font_style(self) -> windows_ui_text.FontStyle: ...
    @first_of_year_decade_label_font_style.setter
    def first_of_year_decade_label_font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def first_of_year_decade_label_font_size(self) -> winrt.system.Double: ...
    @first_of_year_decade_label_font_size.setter
    def first_of_year_decade_label_font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def day_item_font_style(self) -> windows_ui_text.FontStyle: ...
    @day_item_font_style.setter
    def day_item_font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def vertical_first_of_month_label_alignment(self) -> windows_ui_xaml.VerticalAlignment: ...
    @vertical_first_of_month_label_alignment.setter
    def vertical_first_of_month_label_alignment(self, value: windows_ui_xaml.VerticalAlignment) -> None: ...
    @_property
    def vertical_day_item_alignment(self) -> windows_ui_xaml.VerticalAlignment: ...
    @vertical_day_item_alignment.setter
    def vertical_day_item_alignment(self, value: windows_ui_xaml.VerticalAlignment) -> None: ...
    @_property
    def today_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @today_foreground.setter
    def today_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def today_font_weight(self) -> windows_ui_text.FontWeight: ...
    @today_font_weight.setter
    def today_font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def selection_mode(self) -> CalendarViewSelectionMode: ...
    @selection_mode.setter
    def selection_mode(self, value: CalendarViewSelectionMode) -> None: ...
    @_property
    def selected_pressed_border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @selected_pressed_border_brush.setter
    def selected_pressed_border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_hover_border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @selected_hover_border_brush.setter
    def selected_hover_border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @selected_foreground.setter
    def selected_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @selected_border_brush.setter
    def selected_border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def pressed_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @pressed_foreground.setter
    def pressed_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def pressed_border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @pressed_border_brush.setter
    def pressed_border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_dates(self) -> typing.MutableSequence[datetime.datetime]: ...
    @_property
    def template_settings(self) -> windows_ui_xaml_controls_primitives.CalendarViewTemplateSettings: ...
    @_property
    def calendar_item_hover_background(self) -> windows_ui_xaml_media.Brush: ...
    @calendar_item_hover_background.setter
    def calendar_item_hover_background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def calendar_item_disabled_background(self) -> windows_ui_xaml_media.Brush: ...
    @calendar_item_disabled_background.setter
    def calendar_item_disabled_background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def calendar_item_corner_radius(self) -> windows_ui_xaml.CornerRadius: ...
    @calendar_item_corner_radius.setter
    def calendar_item_corner_radius(self, value: windows_ui_xaml.CornerRadius) -> None: ...
    @_property
    def blackout_strikethrough_brush(self) -> windows_ui_xaml_media.Brush: ...
    @blackout_strikethrough_brush.setter
    def blackout_strikethrough_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def blackout_background(self) -> windows_ui_xaml_media.Brush: ...
    @blackout_background.setter
    def blackout_background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def calendar_item_pressed_background(self) -> windows_ui_xaml_media.Brush: ...
    @calendar_item_pressed_background.setter
    def calendar_item_pressed_background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def today_selected_inner_border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @today_selected_inner_border_brush.setter
    def today_selected_inner_border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def today_pressed_background(self) -> windows_ui_xaml_media.Brush: ...
    @today_pressed_background.setter
    def today_pressed_background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def today_hover_background(self) -> windows_ui_xaml_media.Brush: ...
    @today_hover_background.setter
    def today_hover_background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def today_disabled_background(self) -> windows_ui_xaml_media.Brush: ...
    @today_disabled_background.setter
    def today_disabled_background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def today_blackout_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @today_blackout_foreground.setter
    def today_blackout_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def today_blackout_background(self) -> windows_ui_xaml_media.Brush: ...
    @today_blackout_background.setter
    def today_blackout_background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def today_background(self) -> windows_ui_xaml_media.Brush: ...
    @today_background.setter
    def today_background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_pressed_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @selected_pressed_foreground.setter
    def selected_pressed_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_hover_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @selected_hover_foreground.setter
    def selected_hover_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_disabled_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @selected_disabled_foreground.setter
    def selected_disabled_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_disabled_border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @selected_disabled_border_brush.setter
    def selected_disabled_border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def out_of_scope_pressed_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @out_of_scope_pressed_foreground.setter
    def out_of_scope_pressed_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def out_of_scope_hover_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @out_of_scope_hover_foreground.setter
    def out_of_scope_hover_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def month_year_item_margin(self) -> windows_ui_xaml.Thickness: ...
    @month_year_item_margin.setter
    def month_year_item_margin(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def first_of_year_decade_label_margin(self) -> windows_ui_xaml.Thickness: ...
    @first_of_year_decade_label_margin.setter
    def first_of_year_decade_label_margin(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def first_of_month_label_margin(self) -> windows_ui_xaml.Thickness: ...
    @first_of_month_label_margin.setter
    def first_of_month_label_margin(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def disabled_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @disabled_foreground.setter
    def disabled_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def day_item_margin(self) -> windows_ui_xaml.Thickness: ...
    @day_item_margin.setter
    def day_item_margin(self, value: windows_ui_xaml.Thickness) -> None: ...

class CalendarViewDayItem_Static(Control_Static):
    @_property
    def date_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_blackout_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class CalendarViewDayItem(Control, metaclass=CalendarViewDayItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CalendarViewDayItem: ...
    def __new__(cls: typing.Type[CalendarViewDayItem]) -> CalendarViewDayItem: ...
    def set_density_colors(self, colors: typing.Iterable[windows_ui.Color], /) -> None: ...
    @_property
    def is_blackout(self) -> bool: ...
    @is_blackout.setter
    def is_blackout(self, value: bool) -> None: ...
    @_property
    def date(self) -> datetime.datetime: ...

@typing.final
class CalendarViewDayItemChangingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CalendarViewDayItemChangingEventArgs: ...
    def register_update_callback(self, callback: windows_foundation.TypedEventHandler[CalendarView, CalendarViewDayItemChangingEventArgs], /) -> None: ...
    def register_update_callback_with_phase(self, callback_phase: winrt.system.UInt32, callback: windows_foundation.TypedEventHandler[CalendarView, CalendarViewDayItemChangingEventArgs], /) -> None: ...
    @_property
    def in_recycle_queue(self) -> bool: ...
    @_property
    def item(self) -> CalendarViewDayItem: ...
    @_property
    def phase(self) -> winrt.system.UInt32: ...

@typing.final
class CalendarViewSelectedDatesChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CalendarViewSelectedDatesChangedEventArgs: ...
    @_property
    def added_dates(self) -> typing.Sequence[datetime.datetime]: ...
    @_property
    def removed_dates(self) -> typing.Sequence[datetime.datetime]: ...

@typing.final
class CandidateWindowBoundsChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CandidateWindowBoundsChangedEventArgs: ...
    @_property
    def bounds(self) -> windows_foundation.Rect: ...

class Canvas_Static(Panel_Static):
    def get_left(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Double: ...
    def get_top(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Double: ...
    def get_z_index(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Int32: ...
    def set_left(cls, element: windows_ui_xaml.UIElement, length: winrt.system.Double, /) -> None: ...
    def set_top(cls, element: windows_ui_xaml.UIElement, length: winrt.system.Double, /) -> None: ...
    def set_z_index(cls, element: windows_ui_xaml.UIElement, value: winrt.system.Int32, /) -> None: ...
    @_property
    def left_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def top_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def z_index_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class Canvas(Panel, metaclass=Canvas_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Canvas: ...
    def __new__(cls: typing.Type[Canvas]) -> Canvas: ...

@typing.final
class CaptureElement_Static(windows_ui_xaml.FrameworkElement_Static):
    @_property
    def source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def stretch_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class CaptureElement(windows_ui_xaml.FrameworkElement, metaclass=CaptureElement_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CaptureElement: ...
    def __new__(cls: typing.Type[CaptureElement]) -> CaptureElement: ...
    @_property
    def stretch(self) -> windows_ui_xaml_media.Stretch: ...
    @stretch.setter
    def stretch(self, value: windows_ui_xaml_media.Stretch) -> None: ...
    @_property
    def source(self) -> windows_media_capture.MediaCapture: ...
    @source.setter
    def source(self, value: windows_media_capture.MediaCapture) -> None: ...

@typing.final
class ChoosingGroupHeaderContainerEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ChoosingGroupHeaderContainerEventArgs: ...
    def __new__(cls: typing.Type[ChoosingGroupHeaderContainerEventArgs]) -> ChoosingGroupHeaderContainerEventArgs: ...
    @_property
    def group_header_container(self) -> ListViewBaseHeaderItem: ...
    @group_header_container.setter
    def group_header_container(self, value: ListViewBaseHeaderItem) -> None: ...
    @_property
    def group(self) -> winrt.system.Object: ...
    @_property
    def group_index(self) -> winrt.system.Int32: ...

@typing.final
class ChoosingItemContainerEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ChoosingItemContainerEventArgs: ...
    def __new__(cls: typing.Type[ChoosingItemContainerEventArgs]) -> ChoosingItemContainerEventArgs: ...
    @_property
    def item_container(self) -> windows_ui_xaml_controls_primitives.SelectorItem: ...
    @item_container.setter
    def item_container(self, value: windows_ui_xaml_controls_primitives.SelectorItem) -> None: ...
    @_property
    def is_container_prepared(self) -> bool: ...
    @is_container_prepared.setter
    def is_container_prepared(self, value: bool) -> None: ...
    @_property
    def item(self) -> winrt.system.Object: ...
    @_property
    def item_index(self) -> winrt.system.Int32: ...

@typing.final
class CleanUpVirtualizedItemEventArgs(windows_ui_xaml.RoutedEventArgs):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CleanUpVirtualizedItemEventArgs: ...
    @_property
    def cancel(self) -> bool: ...
    @cancel.setter
    def cancel(self, value: bool) -> None: ...
    @_property
    def ui_element(self) -> windows_ui_xaml.UIElement: ...
    @_property
    def value(self) -> winrt.system.Object: ...

@typing.final
class ColorChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ColorChangedEventArgs: ...
    @_property
    def new_color(self) -> windows_ui.Color: ...
    @_property
    def old_color(self) -> windows_ui.Color: ...

class ColorPicker_Static(Control_Static):
    @_property
    def color_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def color_spectrum_components_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def color_spectrum_shape_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_alpha_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_alpha_slider_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_alpha_text_input_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_color_channel_text_input_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_color_preview_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_color_slider_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_color_spectrum_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_hex_input_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_more_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_hue_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_saturation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_value_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def min_hue_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def min_saturation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def min_value_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def previous_color_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ColorPicker(Control, metaclass=ColorPicker_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ColorPicker: ...
    def __new__(cls: typing.Type[ColorPicker]) -> ColorPicker: ...
    def add_color_changed(self, handler: windows_foundation.TypedEventHandler[ColorPicker, ColorChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_color_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def previous_color(self) -> typing.Optional[windows_ui.Color]: ...
    @previous_color.setter
    def previous_color(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    @_property
    def min_value(self) -> winrt.system.Int32: ...
    @min_value.setter
    def min_value(self, value: winrt.system.Int32) -> None: ...
    @_property
    def min_saturation(self) -> winrt.system.Int32: ...
    @min_saturation.setter
    def min_saturation(self, value: winrt.system.Int32) -> None: ...
    @_property
    def min_hue(self) -> winrt.system.Int32: ...
    @min_hue.setter
    def min_hue(self, value: winrt.system.Int32) -> None: ...
    @_property
    def max_value(self) -> winrt.system.Int32: ...
    @max_value.setter
    def max_value(self, value: winrt.system.Int32) -> None: ...
    @_property
    def max_saturation(self) -> winrt.system.Int32: ...
    @max_saturation.setter
    def max_saturation(self, value: winrt.system.Int32) -> None: ...
    @_property
    def max_hue(self) -> winrt.system.Int32: ...
    @max_hue.setter
    def max_hue(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_more_button_visible(self) -> bool: ...
    @is_more_button_visible.setter
    def is_more_button_visible(self, value: bool) -> None: ...
    @_property
    def is_hex_input_visible(self) -> bool: ...
    @is_hex_input_visible.setter
    def is_hex_input_visible(self, value: bool) -> None: ...
    @_property
    def is_color_spectrum_visible(self) -> bool: ...
    @is_color_spectrum_visible.setter
    def is_color_spectrum_visible(self, value: bool) -> None: ...
    @_property
    def is_color_slider_visible(self) -> bool: ...
    @is_color_slider_visible.setter
    def is_color_slider_visible(self, value: bool) -> None: ...
    @_property
    def is_color_preview_visible(self) -> bool: ...
    @is_color_preview_visible.setter
    def is_color_preview_visible(self, value: bool) -> None: ...
    @_property
    def is_color_channel_text_input_visible(self) -> bool: ...
    @is_color_channel_text_input_visible.setter
    def is_color_channel_text_input_visible(self, value: bool) -> None: ...
    @_property
    def is_alpha_text_input_visible(self) -> bool: ...
    @is_alpha_text_input_visible.setter
    def is_alpha_text_input_visible(self, value: bool) -> None: ...
    @_property
    def is_alpha_slider_visible(self) -> bool: ...
    @is_alpha_slider_visible.setter
    def is_alpha_slider_visible(self, value: bool) -> None: ...
    @_property
    def is_alpha_enabled(self) -> bool: ...
    @is_alpha_enabled.setter
    def is_alpha_enabled(self, value: bool) -> None: ...
    @_property
    def color_spectrum_shape(self) -> ColorSpectrumShape: ...
    @color_spectrum_shape.setter
    def color_spectrum_shape(self, value: ColorSpectrumShape) -> None: ...
    @_property
    def color_spectrum_components(self) -> ColorSpectrumComponents: ...
    @color_spectrum_components.setter
    def color_spectrum_components(self, value: ColorSpectrumComponents) -> None: ...
    @_property
    def color(self) -> windows_ui.Color: ...
    @color.setter
    def color(self, value: windows_ui.Color) -> None: ...

@typing.final
class ColumnDefinition_Static(windows_ui_xaml.DependencyObject_Static):
    @_property
    def max_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def min_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def width_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ColumnDefinition(windows_ui_xaml.DependencyObject, metaclass=ColumnDefinition_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ColumnDefinition: ...
    def __new__(cls: typing.Type[ColumnDefinition]) -> ColumnDefinition: ...
    @_property
    def width(self) -> windows_ui_xaml.GridLength: ...
    @width.setter
    def width(self, value: windows_ui_xaml.GridLength) -> None: ...
    @_property
    def min_width(self) -> winrt.system.Double: ...
    @min_width.setter
    def min_width(self, value: winrt.system.Double) -> None: ...
    @_property
    def max_width(self) -> winrt.system.Double: ...
    @max_width.setter
    def max_width(self, value: winrt.system.Double) -> None: ...
    @_property
    def actual_width(self) -> winrt.system.Double: ...

@typing.final
class ColumnDefinitionCollection(winrt.system.Object, winrt._winrt.MutableSequence[ColumnDefinition]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[ColumnDefinition]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> ColumnDefinition: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[ColumnDefinition]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: ColumnDefinition) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[ColumnDefinition]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ColumnDefinitionCollection: ...
    def append(self, value: ColumnDefinition, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[ColumnDefinition]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> ColumnDefinition: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[ColumnDefinition], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[ColumnDefinition]: ...
    def index_of(self, value: ColumnDefinition, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: ColumnDefinition, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[ColumnDefinition], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: ColumnDefinition, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class ComboBoxTextSubmittedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ComboBoxTextSubmittedEventArgs: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...
    @_property
    def text(self) -> str: ...

class CommandBar_Static(AppBar_Static):
    @_property
    def primary_commands_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def secondary_commands_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def command_bar_overflow_presenter_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def default_label_position_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_dynamic_overflow_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def overflow_button_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class CommandBar(AppBar, metaclass=CommandBar_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CommandBar: ...
    def __new__(cls: typing.Type[CommandBar]) -> CommandBar: ...
    def add_dynamic_overflow_items_changing(self, handler: windows_foundation.TypedEventHandler[CommandBar, DynamicOverflowItemsChangingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_dynamic_overflow_items_changing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def primary_commands(self) -> windows_foundation_collections.IObservableVector[ICommandBarElement]: ...
    @_property
    def secondary_commands(self) -> windows_foundation_collections.IObservableVector[ICommandBarElement]: ...
    @_property
    def command_bar_overflow_presenter_style(self) -> windows_ui_xaml.Style: ...
    @command_bar_overflow_presenter_style.setter
    def command_bar_overflow_presenter_style(self, value: windows_ui_xaml.Style) -> None: ...
    @_property
    def command_bar_template_settings(self) -> windows_ui_xaml_controls_primitives.CommandBarTemplateSettings: ...
    @_property
    def overflow_button_visibility(self) -> CommandBarOverflowButtonVisibility: ...
    @overflow_button_visibility.setter
    def overflow_button_visibility(self, value: CommandBarOverflowButtonVisibility) -> None: ...
    @_property
    def is_dynamic_overflow_enabled(self) -> bool: ...
    @is_dynamic_overflow_enabled.setter
    def is_dynamic_overflow_enabled(self, value: bool) -> None: ...
    @_property
    def default_label_position(self) -> CommandBarDefaultLabelPosition: ...
    @default_label_position.setter
    def default_label_position(self, value: CommandBarDefaultLabelPosition) -> None: ...

class CommandBarOverflowPresenter_Static(ItemsControl_Static):
    pass

class CommandBarOverflowPresenter(ItemsControl, metaclass=CommandBarOverflowPresenter_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CommandBarOverflowPresenter: ...
    def __new__(cls: typing.Type[CommandBarOverflowPresenter]) -> CommandBarOverflowPresenter: ...

@typing.final
class ContainerContentChangingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContainerContentChangingEventArgs: ...
    def __new__(cls: typing.Type[ContainerContentChangingEventArgs]) -> ContainerContentChangingEventArgs: ...
    def register_update_callback(self, callback: windows_foundation.TypedEventHandler[ListViewBase, ContainerContentChangingEventArgs], /) -> None: ...
    def register_update_callback_with_phase(self, callback_phase: winrt.system.UInt32, callback: windows_foundation.TypedEventHandler[ListViewBase, ContainerContentChangingEventArgs], /) -> None: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...
    @_property
    def in_recycle_queue(self) -> bool: ...
    @_property
    def item(self) -> winrt.system.Object: ...
    @_property
    def item_container(self) -> windows_ui_xaml_controls_primitives.SelectorItem: ...
    @_property
    def item_index(self) -> winrt.system.Int32: ...
    @_property
    def phase(self) -> winrt.system.UInt32: ...

class ContentControl_Static(Control_Static):
    @_property
    def content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def content_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def content_template_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def content_transitions_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ContentControl(Control, metaclass=ContentControl_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentControl: ...
    def __new__(cls: typing.Type[ContentControl]) -> ContentControl: ...
    @_property
    def content_transitions(self) -> windows_ui_xaml_media_animation.TransitionCollection: ...
    @content_transitions.setter
    def content_transitions(self, value: windows_ui_xaml_media_animation.TransitionCollection) -> None: ...
    @_property
    def content_template_selector(self) -> DataTemplateSelector: ...
    @content_template_selector.setter
    def content_template_selector(self, value: DataTemplateSelector) -> None: ...
    @_property
    def content_template(self) -> windows_ui_xaml.DataTemplate: ...
    @content_template.setter
    def content_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def content(self) -> winrt.system.Object: ...
    @content.setter
    def content(self, value: winrt.system.Object) -> None: ...
    @_property
    def content_template_root(self) -> windows_ui_xaml.UIElement: ...

class ContentDialog_Static(ContentControl_Static):
    @_property
    def full_size_desired_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_primary_button_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_secondary_button_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def primary_button_command_parameter_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def primary_button_command_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def primary_button_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def secondary_button_command_parameter_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def secondary_button_command_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def secondary_button_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def title_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def title_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def close_button_command_parameter_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def close_button_command_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def close_button_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def close_button_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def default_button_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def primary_button_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def secondary_button_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ContentDialog(ContentControl, metaclass=ContentDialog_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentDialog: ...
    def __new__(cls: typing.Type[ContentDialog]) -> ContentDialog: ...
    def hide(self) -> None: ...
    def show_async(self) -> windows_foundation.IAsyncOperation[ContentDialogResult]: ...
    def show_async_with_placement(self, placement: ContentDialogPlacement, /) -> windows_foundation.IAsyncOperation[ContentDialogResult]: ...
    def add_closed(self, handler: windows_foundation.TypedEventHandler[ContentDialog, ContentDialogClosedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_closing(self, handler: windows_foundation.TypedEventHandler[ContentDialog, ContentDialogClosingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_closing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_opened(self, handler: windows_foundation.TypedEventHandler[ContentDialog, ContentDialogOpenedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_primary_button_click(self, handler: windows_foundation.TypedEventHandler[ContentDialog, ContentDialogButtonClickEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_primary_button_click(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_secondary_button_click(self, handler: windows_foundation.TypedEventHandler[ContentDialog, ContentDialogButtonClickEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_secondary_button_click(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_close_button_click(self, handler: windows_foundation.TypedEventHandler[ContentDialog, ContentDialogButtonClickEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_close_button_click(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def title_template(self) -> windows_ui_xaml.DataTemplate: ...
    @title_template.setter
    def title_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def title(self) -> winrt.system.Object: ...
    @title.setter
    def title(self, value: winrt.system.Object) -> None: ...
    @_property
    def secondary_button_text(self) -> str: ...
    @secondary_button_text.setter
    def secondary_button_text(self, value: str) -> None: ...
    @_property
    def secondary_button_command_parameter(self) -> winrt.system.Object: ...
    @secondary_button_command_parameter.setter
    def secondary_button_command_parameter(self, value: winrt.system.Object) -> None: ...
    @_property
    def secondary_button_command(self) -> windows_ui_xaml_input.ICommand: ...
    @secondary_button_command.setter
    def secondary_button_command(self, value: windows_ui_xaml_input.ICommand) -> None: ...
    @_property
    def primary_button_text(self) -> str: ...
    @primary_button_text.setter
    def primary_button_text(self, value: str) -> None: ...
    @_property
    def primary_button_command_parameter(self) -> winrt.system.Object: ...
    @primary_button_command_parameter.setter
    def primary_button_command_parameter(self, value: winrt.system.Object) -> None: ...
    @_property
    def primary_button_command(self) -> windows_ui_xaml_input.ICommand: ...
    @primary_button_command.setter
    def primary_button_command(self, value: windows_ui_xaml_input.ICommand) -> None: ...
    @_property
    def is_secondary_button_enabled(self) -> bool: ...
    @is_secondary_button_enabled.setter
    def is_secondary_button_enabled(self, value: bool) -> None: ...
    @_property
    def is_primary_button_enabled(self) -> bool: ...
    @is_primary_button_enabled.setter
    def is_primary_button_enabled(self, value: bool) -> None: ...
    @_property
    def full_size_desired(self) -> bool: ...
    @full_size_desired.setter
    def full_size_desired(self, value: bool) -> None: ...
    @_property
    def secondary_button_style(self) -> windows_ui_xaml.Style: ...
    @secondary_button_style.setter
    def secondary_button_style(self, value: windows_ui_xaml.Style) -> None: ...
    @_property
    def primary_button_style(self) -> windows_ui_xaml.Style: ...
    @primary_button_style.setter
    def primary_button_style(self, value: windows_ui_xaml.Style) -> None: ...
    @_property
    def default_button(self) -> ContentDialogButton: ...
    @default_button.setter
    def default_button(self, value: ContentDialogButton) -> None: ...
    @_property
    def close_button_text(self) -> str: ...
    @close_button_text.setter
    def close_button_text(self, value: str) -> None: ...
    @_property
    def close_button_style(self) -> windows_ui_xaml.Style: ...
    @close_button_style.setter
    def close_button_style(self, value: windows_ui_xaml.Style) -> None: ...
    @_property
    def close_button_command_parameter(self) -> winrt.system.Object: ...
    @close_button_command_parameter.setter
    def close_button_command_parameter(self, value: winrt.system.Object) -> None: ...
    @_property
    def close_button_command(self) -> windows_ui_xaml_input.ICommand: ...
    @close_button_command.setter
    def close_button_command(self, value: windows_ui_xaml_input.ICommand) -> None: ...

@typing.final
class ContentDialogButtonClickDeferral(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentDialogButtonClickDeferral: ...
    def complete(self) -> None: ...

@typing.final
class ContentDialogButtonClickEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentDialogButtonClickEventArgs: ...
    def get_deferral(self) -> ContentDialogButtonClickDeferral: ...
    @_property
    def cancel(self) -> bool: ...
    @cancel.setter
    def cancel(self, value: bool) -> None: ...

@typing.final
class ContentDialogClosedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentDialogClosedEventArgs: ...
    @_property
    def result(self) -> ContentDialogResult: ...

@typing.final
class ContentDialogClosingDeferral(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentDialogClosingDeferral: ...
    def complete(self) -> None: ...

@typing.final
class ContentDialogClosingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentDialogClosingEventArgs: ...
    def get_deferral(self) -> ContentDialogClosingDeferral: ...
    @_property
    def cancel(self) -> bool: ...
    @cancel.setter
    def cancel(self, value: bool) -> None: ...
    @_property
    def result(self) -> ContentDialogResult: ...

@typing.final
class ContentDialogOpenedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentDialogOpenedEventArgs: ...

@typing.final
class ContentLinkChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentLinkChangedEventArgs: ...
    @_property
    def change_kind(self) -> ContentLinkChangeKind: ...
    @_property
    def content_link_info(self) -> windows_ui_text.ContentLinkInfo: ...
    @_property
    def text_range(self) -> windows_ui_xaml_documents.TextRange: ...

class ContentPresenter_Static(windows_ui_xaml.FrameworkElement_Static):
    @_property
    def character_spacing_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def content_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def content_template_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def content_transitions_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_family_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_size_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_stretch_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_weight_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def optical_margin_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_line_bounds_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_text_scale_factor_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def border_thickness_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def corner_radius_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_content_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def line_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def line_stacking_strategy_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_lines_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def padding_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_wrapping_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_content_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def background_sizing_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ContentPresenter(windows_ui_xaml.FrameworkElement, metaclass=ContentPresenter_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentPresenter: ...
    def __new__(cls: typing.Type[ContentPresenter]) -> ContentPresenter: ...
    @_property
    def foreground(self) -> windows_ui_xaml_media.Brush: ...
    @foreground.setter
    def foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> windows_ui_xaml_media.FontFamily: ...
    @font_family.setter
    def font_family(self, value: windows_ui_xaml_media.FontFamily) -> None: ...
    @_property
    def content_transitions(self) -> windows_ui_xaml_media_animation.TransitionCollection: ...
    @content_transitions.setter
    def content_transitions(self, value: windows_ui_xaml_media_animation.TransitionCollection) -> None: ...
    @_property
    def content_template_selector(self) -> DataTemplateSelector: ...
    @content_template_selector.setter
    def content_template_selector(self, value: DataTemplateSelector) -> None: ...
    @_property
    def content_template(self) -> windows_ui_xaml.DataTemplate: ...
    @content_template.setter
    def content_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def content(self) -> winrt.system.Object: ...
    @content.setter
    def content(self, value: winrt.system.Object) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def text_line_bounds(self) -> windows_ui_xaml.TextLineBounds: ...
    @text_line_bounds.setter
    def text_line_bounds(self, value: windows_ui_xaml.TextLineBounds) -> None: ...
    @_property
    def optical_margin_alignment(self) -> windows_ui_xaml.OpticalMarginAlignment: ...
    @optical_margin_alignment.setter
    def optical_margin_alignment(self, value: windows_ui_xaml.OpticalMarginAlignment) -> None: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def vertical_content_alignment(self) -> windows_ui_xaml.VerticalAlignment: ...
    @vertical_content_alignment.setter
    def vertical_content_alignment(self, value: windows_ui_xaml.VerticalAlignment) -> None: ...
    @_property
    def text_wrapping(self) -> windows_ui_xaml.TextWrapping: ...
    @text_wrapping.setter
    def text_wrapping(self, value: windows_ui_xaml.TextWrapping) -> None: ...
    @_property
    def padding(self) -> windows_ui_xaml.Thickness: ...
    @padding.setter
    def padding(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def max_lines(self) -> winrt.system.Int32: ...
    @max_lines.setter
    def max_lines(self, value: winrt.system.Int32) -> None: ...
    @_property
    def line_stacking_strategy(self) -> windows_ui_xaml.LineStackingStrategy: ...
    @line_stacking_strategy.setter
    def line_stacking_strategy(self, value: windows_ui_xaml.LineStackingStrategy) -> None: ...
    @_property
    def line_height(self) -> winrt.system.Double: ...
    @line_height.setter
    def line_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def horizontal_content_alignment(self) -> windows_ui_xaml.HorizontalAlignment: ...
    @horizontal_content_alignment.setter
    def horizontal_content_alignment(self, value: windows_ui_xaml.HorizontalAlignment) -> None: ...
    @_property
    def corner_radius(self) -> windows_ui_xaml.CornerRadius: ...
    @corner_radius.setter
    def corner_radius(self, value: windows_ui_xaml.CornerRadius) -> None: ...
    @_property
    def border_thickness(self) -> windows_ui_xaml.Thickness: ...
    @border_thickness.setter
    def border_thickness(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @border_brush.setter
    def border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def background(self) -> windows_ui_xaml_media.Brush: ...
    @background.setter
    def background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def background_transition(self) -> windows_ui_xaml.BrushTransition: ...
    @background_transition.setter
    def background_transition(self, value: windows_ui_xaml.BrushTransition) -> None: ...
    @_property
    def background_sizing(self) -> BackgroundSizing: ...
    @background_sizing.setter
    def background_sizing(self, value: BackgroundSizing) -> None: ...

@typing.final
class ContextMenuEventArgs(windows_ui_xaml.RoutedEventArgs):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContextMenuEventArgs: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...
    @_property
    def cursor_left(self) -> winrt.system.Double: ...
    @_property
    def cursor_top(self) -> winrt.system.Double: ...

class Control_Static(windows_ui_xaml.FrameworkElement_Static):
    def get_is_template_focus_target(cls, element: windows_ui_xaml.FrameworkElement, /) -> bool: ...
    def get_is_template_key_tip_target(cls, element: windows_ui_xaml.DependencyObject, /) -> bool: ...
    def set_is_template_focus_target(cls, element: windows_ui_xaml.FrameworkElement, value: bool, /) -> None: ...
    def set_is_template_key_tip_target(cls, element: windows_ui_xaml.DependencyObject, value: bool, /) -> None: ...
    @_property
    def border_thickness_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def focus_state_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_family_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_size_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_stretch_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_weight_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_content_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_tab_stop_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def padding_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def tab_index_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def tab_navigation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_content_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def character_spacing_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def default_style_key_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_text_scale_factor_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_template_focus_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def use_system_focus_visuals_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def element_sound_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_focus_engaged_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_focus_engagement_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def requires_pointer_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def x_y_focus_down_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def x_y_focus_left_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def x_y_focus_right_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def x_y_focus_up_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def default_style_resource_uri_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_template_key_tip_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def corner_radius_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def background_sizing_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class Control(windows_ui_xaml.FrameworkElement, metaclass=Control_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Control: ...
    def apply_template(self) -> bool: ...
    def focus(self, value: windows_ui_xaml.FocusState, /) -> bool: ...
    def remove_focus_engagement(self) -> None: ...
    def add_is_enabled_changed(self, handler: windows_ui_xaml.DependencyPropertyChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_is_enabled_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_focus_disengaged(self, handler: windows_foundation.TypedEventHandler[Control, FocusDisengagedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_focus_disengaged(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_focus_engaged(self, handler: windows_foundation.TypedEventHandler[Control, FocusEngagedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_focus_engaged(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def padding(self) -> windows_ui_xaml.Thickness: ...
    @padding.setter
    def padding(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def is_tab_stop(self) -> bool: ...
    @is_tab_stop.setter
    def is_tab_stop(self, value: bool) -> None: ...
    @_property
    def is_enabled(self) -> bool: ...
    @is_enabled.setter
    def is_enabled(self, value: bool) -> None: ...
    @_property
    def horizontal_content_alignment(self) -> windows_ui_xaml.HorizontalAlignment: ...
    @horizontal_content_alignment.setter
    def horizontal_content_alignment(self, value: windows_ui_xaml.HorizontalAlignment) -> None: ...
    @_property
    def foreground(self) -> windows_ui_xaml_media.Brush: ...
    @foreground.setter
    def foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> windows_ui_xaml_media.FontFamily: ...
    @font_family.setter
    def font_family(self, value: windows_ui_xaml_media.FontFamily) -> None: ...
    @_property
    def tab_index(self) -> winrt.system.Int32: ...
    @tab_index.setter
    def tab_index(self, value: winrt.system.Int32) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def border_thickness(self) -> windows_ui_xaml.Thickness: ...
    @border_thickness.setter
    def border_thickness(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @border_brush.setter
    def border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def tab_navigation(self) -> windows_ui_xaml_input.KeyboardNavigationMode: ...
    @tab_navigation.setter
    def tab_navigation(self, value: windows_ui_xaml_input.KeyboardNavigationMode) -> None: ...
    @_property
    def background(self) -> windows_ui_xaml_media.Brush: ...
    @background.setter
    def background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def vertical_content_alignment(self) -> windows_ui_xaml.VerticalAlignment: ...
    @vertical_content_alignment.setter
    def vertical_content_alignment(self, value: windows_ui_xaml.VerticalAlignment) -> None: ...
    @_property
    def template(self) -> ControlTemplate: ...
    @template.setter
    def template(self, value: ControlTemplate) -> None: ...
    @_property
    def focus_state(self) -> windows_ui_xaml.FocusState: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def use_system_focus_visuals(self) -> bool: ...
    @use_system_focus_visuals.setter
    def use_system_focus_visuals(self, value: bool) -> None: ...
    @_property
    def x_y_focus_up(self) -> windows_ui_xaml.DependencyObject: ...
    @x_y_focus_up.setter
    def x_y_focus_up(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    @_property
    def x_y_focus_right(self) -> windows_ui_xaml.DependencyObject: ...
    @x_y_focus_right.setter
    def x_y_focus_right(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    @_property
    def x_y_focus_left(self) -> windows_ui_xaml.DependencyObject: ...
    @x_y_focus_left.setter
    def x_y_focus_left(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    @_property
    def x_y_focus_down(self) -> windows_ui_xaml.DependencyObject: ...
    @x_y_focus_down.setter
    def x_y_focus_down(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    @_property
    def requires_pointer(self) -> RequiresPointer: ...
    @requires_pointer.setter
    def requires_pointer(self, value: RequiresPointer) -> None: ...
    @_property
    def is_focus_engagement_enabled(self) -> bool: ...
    @is_focus_engagement_enabled.setter
    def is_focus_engagement_enabled(self, value: bool) -> None: ...
    @_property
    def is_focus_engaged(self) -> bool: ...
    @is_focus_engaged.setter
    def is_focus_engaged(self, value: bool) -> None: ...
    @_property
    def element_sound_mode(self) -> windows_ui_xaml.ElementSoundMode: ...
    @element_sound_mode.setter
    def element_sound_mode(self, value: windows_ui_xaml.ElementSoundMode) -> None: ...
    @_property
    def default_style_resource_uri(self) -> windows_foundation.Uri: ...
    @default_style_resource_uri.setter
    def default_style_resource_uri(self, value: windows_foundation.Uri) -> None: ...
    @_property
    def corner_radius(self) -> windows_ui_xaml.CornerRadius: ...
    @corner_radius.setter
    def corner_radius(self, value: windows_ui_xaml.CornerRadius) -> None: ...
    @_property
    def background_sizing(self) -> BackgroundSizing: ...
    @background_sizing.setter
    def background_sizing(self, value: BackgroundSizing) -> None: ...

@typing.final
class ControlTemplate(windows_ui_xaml.FrameworkTemplate):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ControlTemplate: ...
    def __new__(cls: typing.Type[ControlTemplate]) -> ControlTemplate: ...
    @_property
    def target_type(self) -> windows_ui_xaml_interop.TypeName: ...
    @target_type.setter
    def target_type(self, value: windows_ui_xaml_interop.TypeName) -> None: ...

class DataTemplateSelector_Static(type):
    pass

class DataTemplateSelector(winrt.system.Object, windows_ui_xaml.ImplementsIElementFactory, metaclass=DataTemplateSelector_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DataTemplateSelector: ...
    def __new__(cls: typing.Type[DataTemplateSelector]) -> DataTemplateSelector: ...
    def get_element(self, args: windows_ui_xaml.ElementFactoryGetArgs, /) -> windows_ui_xaml.UIElement: ...
    def recycle_element(self, args: windows_ui_xaml.ElementFactoryRecycleArgs, /) -> None: ...
    def select_template(self, item: winrt.system.Object, container: windows_ui_xaml.DependencyObject, /) -> windows_ui_xaml.DataTemplate: ...
    def select_template_for_item(self, item: winrt.system.Object, /) -> windows_ui_xaml.DataTemplate: ...

@typing.final
class DatePickedEventArgs(windows_ui_xaml.DependencyObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DatePickedEventArgs: ...
    def __new__(cls: typing.Type[DatePickedEventArgs]) -> DatePickedEventArgs: ...
    @_property
    def new_date(self) -> datetime.datetime: ...
    @_property
    def old_date(self) -> datetime.datetime: ...

class DatePicker_Static(Control_Static):
    @_property
    def calendar_identifier_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def date_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def day_format_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def day_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_year_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def min_year_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def month_format_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def month_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def orientation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def year_format_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def year_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def light_dismiss_overlay_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_date_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class DatePicker(Control, metaclass=DatePicker_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DatePicker: ...
    def __new__(cls: typing.Type[DatePicker]) -> DatePicker: ...
    def add_date_changed(self, handler: windows_foundation.EventHandler[DatePickerValueChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_date_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_selected_date_changed(self, handler: windows_foundation.TypedEventHandler[DatePicker, DatePickerSelectedValueChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_selected_date_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def year_visible(self) -> bool: ...
    @year_visible.setter
    def year_visible(self, value: bool) -> None: ...
    @_property
    def year_format(self) -> str: ...
    @year_format.setter
    def year_format(self, value: str) -> None: ...
    @_property
    def orientation(self) -> Orientation: ...
    @orientation.setter
    def orientation(self, value: Orientation) -> None: ...
    @_property
    def month_visible(self) -> bool: ...
    @month_visible.setter
    def month_visible(self, value: bool) -> None: ...
    @_property
    def month_format(self) -> str: ...
    @month_format.setter
    def month_format(self, value: str) -> None: ...
    @_property
    def min_year(self) -> datetime.datetime: ...
    @min_year.setter
    def min_year(self, value: datetime.datetime) -> None: ...
    @_property
    def max_year(self) -> datetime.datetime: ...
    @max_year.setter
    def max_year(self, value: datetime.datetime) -> None: ...
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def day_visible(self) -> bool: ...
    @day_visible.setter
    def day_visible(self, value: bool) -> None: ...
    @_property
    def day_format(self) -> str: ...
    @day_format.setter
    def day_format(self, value: str) -> None: ...
    @_property
    def date(self) -> datetime.datetime: ...
    @date.setter
    def date(self, value: datetime.datetime) -> None: ...
    @_property
    def calendar_identifier(self) -> str: ...
    @calendar_identifier.setter
    def calendar_identifier(self, value: str) -> None: ...
    @_property
    def light_dismiss_overlay_mode(self) -> LightDismissOverlayMode: ...
    @light_dismiss_overlay_mode.setter
    def light_dismiss_overlay_mode(self, value: LightDismissOverlayMode) -> None: ...
    @_property
    def selected_date(self) -> typing.Optional[datetime.datetime]: ...
    @selected_date.setter
    def selected_date(self, value: typing.Optional[datetime.datetime]) -> None: ...

@typing.final
class DatePickerFlyoutItem_Static(windows_ui_xaml.DependencyObject_Static):
    @_property
    def primary_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def secondary_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class DatePickerFlyoutItem(windows_ui_xaml.DependencyObject, windows_ui_xaml_data.ImplementsICustomPropertyProvider, metaclass=DatePickerFlyoutItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DatePickerFlyoutItem: ...
    def get_custom_property(self, name: str, /) -> windows_ui_xaml_data.ICustomProperty: ...
    def get_indexed_property(self, name: str, type: windows_ui_xaml_interop.TypeName, /) -> windows_ui_xaml_data.ICustomProperty: ...
    def get_string_representation(self) -> str: ...
    @_property
    def secondary_text(self) -> str: ...
    @secondary_text.setter
    def secondary_text(self, value: str) -> None: ...
    @_property
    def primary_text(self) -> str: ...
    @primary_text.setter
    def primary_text(self, value: str) -> None: ...
    @_property
    def type(self) -> windows_ui_xaml_interop.TypeName: ...

@typing.final
class DatePickerFlyoutPresenter_Static(Control_Static):
    @_property
    def is_default_shadow_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class DatePickerFlyoutPresenter(Control, metaclass=DatePickerFlyoutPresenter_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DatePickerFlyoutPresenter: ...
    @_property
    def is_default_shadow_enabled(self) -> bool: ...
    @is_default_shadow_enabled.setter
    def is_default_shadow_enabled(self, value: bool) -> None: ...

@typing.final
class DatePickerSelectedValueChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DatePickerSelectedValueChangedEventArgs: ...
    @_property
    def new_date(self) -> typing.Optional[datetime.datetime]: ...
    @_property
    def old_date(self) -> typing.Optional[datetime.datetime]: ...

@typing.final
class DatePickerValueChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DatePickerValueChangedEventArgs: ...
    @_property
    def new_date(self) -> datetime.datetime: ...
    @_property
    def old_date(self) -> datetime.datetime: ...

@typing.final
class DragItemsCompletedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DragItemsCompletedEventArgs: ...
    @_property
    def drop_result(self) -> windows_applicationmodel_datatransfer.DataPackageOperation: ...
    @_property
    def items(self) -> typing.Sequence[winrt.system.Object]: ...

@typing.final
class DragItemsStartingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DragItemsStartingEventArgs: ...
    def __new__(cls: typing.Type[DragItemsStartingEventArgs]) -> DragItemsStartingEventArgs: ...
    @_property
    def cancel(self) -> bool: ...
    @cancel.setter
    def cancel(self, value: bool) -> None: ...
    @_property
    def data(self) -> windows_applicationmodel_datatransfer.DataPackage: ...
    @_property
    def items(self) -> typing.MutableSequence[winrt.system.Object]: ...

class DropDownButtonAutomationPeer_Static(windows_ui_xaml_automation_peers.ButtonAutomationPeer_Static):
    pass

class DropDownButtonAutomationPeer(windows_ui_xaml_automation_peers.ButtonAutomationPeer, windows_ui_xaml_automation_provider.ImplementsIExpandCollapseProvider, metaclass=DropDownButtonAutomationPeer_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DropDownButtonAutomationPeer: ...
    def __new__(cls: typing.Type[DropDownButtonAutomationPeer], owner: DropDownButton) -> DropDownButtonAutomationPeer: ...
    def collapse(self) -> None: ...
    def expand(self) -> None: ...
    @_property
    def expand_collapse_state(self) -> windows_ui_xaml_automation.ExpandCollapseState: ...

@typing.final
class DynamicOverflowItemsChangingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> DynamicOverflowItemsChangingEventArgs: ...
    def __new__(cls: typing.Type[DynamicOverflowItemsChangingEventArgs]) -> DynamicOverflowItemsChangingEventArgs: ...
    @_property
    def action(self) -> CommandBarDynamicOverflowAction: ...

class FlyoutPresenter_Static(ContentControl_Static):
    @_property
    def is_default_shadow_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class FlyoutPresenter(ContentControl, metaclass=FlyoutPresenter_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FlyoutPresenter: ...
    def __new__(cls: typing.Type[FlyoutPresenter]) -> FlyoutPresenter: ...
    @_property
    def is_default_shadow_enabled(self) -> bool: ...
    @is_default_shadow_enabled.setter
    def is_default_shadow_enabled(self, value: bool) -> None: ...

@typing.final
class FocusDisengagedEventArgs(windows_ui_xaml.RoutedEventArgs):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FocusDisengagedEventArgs: ...

@typing.final
class FocusEngagedEventArgs(windows_ui_xaml.RoutedEventArgs):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FocusEngagedEventArgs: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...

class FontIcon_Static(IconElement_Static):
    @_property
    def font_family_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_size_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_weight_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_text_scale_factor_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def mirrored_when_right_to_left_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class FontIcon(IconElement, metaclass=FontIcon_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FontIcon: ...
    def __new__(cls: typing.Type[FontIcon]) -> FontIcon: ...
    @_property
    def glyph(self) -> str: ...
    @glyph.setter
    def glyph(self, value: str) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> windows_ui_xaml_media.FontFamily: ...
    @font_family.setter
    def font_family(self, value: windows_ui_xaml_media.FontFamily) -> None: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def mirrored_when_right_to_left(self) -> bool: ...
    @mirrored_when_right_to_left.setter
    def mirrored_when_right_to_left(self, value: bool) -> None: ...

class FontIconSource_Static(IconSource_Static):
    @_property
    def font_family_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_size_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_weight_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_text_scale_factor_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def mirrored_when_right_to_left_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class FontIconSource(IconSource, metaclass=FontIconSource_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> FontIconSource: ...
    def __new__(cls: typing.Type[FontIconSource]) -> FontIconSource: ...
    @_property
    def mirrored_when_right_to_left(self) -> bool: ...
    @mirrored_when_right_to_left.setter
    def mirrored_when_right_to_left(self, value: bool) -> None: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def glyph(self) -> str: ...
    @glyph.setter
    def glyph(self, value: str) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> windows_ui_xaml_media.FontFamily: ...
    @font_family.setter
    def font_family(self, value: windows_ui_xaml_media.FontFamily) -> None: ...

class Frame_Static(ContentControl_Static):
    @_property
    def back_stack_depth_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def cache_size_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def can_go_back_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def can_go_forward_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def current_source_page_type_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def source_page_type_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def back_stack_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def forward_stack_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_navigation_stack_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class Frame(ContentControl, ImplementsINavigate, metaclass=Frame_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Frame: ...
    def __new__(cls: typing.Type[Frame]) -> Frame: ...
    def get_navigation_state(self) -> str: ...
    @typing.overload
    def go_back(self) -> None: ...
    @typing.overload
    def go_back(self, transition_info_override: windows_ui_xaml_media_animation.NavigationTransitionInfo, /) -> None: ...
    def go_forward(self) -> None: ...
    @typing.overload
    def navigate(self, source_page_type: windows_ui_xaml_interop.TypeName, /) -> bool: ...
    @typing.overload
    def navigate(self, source_page_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, /) -> bool: ...
    @typing.overload
    def navigate(self, source_page_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, info_override: windows_ui_xaml_media_animation.NavigationTransitionInfo, /) -> bool: ...
    def navigate_to_type(self, source_page_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, navigation_options: windows_ui_xaml_navigation.FrameNavigationOptions, /) -> bool: ...
    def set_navigation_state(self, navigation_state: str, /) -> None: ...
    def set_navigation_state_with_navigation_control(self, navigation_state: str, suppress_navigate: bool, /) -> None: ...
    def add_navigated(self, handler: windows_ui_xaml_navigation.NavigatedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_navigated(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_navigating(self, handler: windows_ui_xaml_navigation.NavigatingCancelEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_navigating(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_navigation_failed(self, handler: windows_ui_xaml_navigation.NavigationFailedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_navigation_failed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_navigation_stopped(self, handler: windows_ui_xaml_navigation.NavigationStoppedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_navigation_stopped(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def source_page_type(self) -> windows_ui_xaml_interop.TypeName: ...
    @source_page_type.setter
    def source_page_type(self, value: windows_ui_xaml_interop.TypeName) -> None: ...
    @_property
    def cache_size(self) -> winrt.system.Int32: ...
    @cache_size.setter
    def cache_size(self, value: winrt.system.Int32) -> None: ...
    @_property
    def back_stack_depth(self) -> winrt.system.Int32: ...
    @_property
    def can_go_back(self) -> bool: ...
    @_property
    def can_go_forward(self) -> bool: ...
    @_property
    def current_source_page_type(self) -> windows_ui_xaml_interop.TypeName: ...
    @_property
    def back_stack(self) -> typing.MutableSequence[windows_ui_xaml_navigation.PageStackEntry]: ...
    @_property
    def forward_stack(self) -> typing.MutableSequence[windows_ui_xaml_navigation.PageStackEntry]: ...
    @_property
    def is_navigation_stack_enabled(self) -> bool: ...
    @is_navigation_stack_enabled.setter
    def is_navigation_stack_enabled(self, value: bool) -> None: ...

class Grid_Static(Panel_Static):
    def get_column(cls, element: windows_ui_xaml.FrameworkElement, /) -> winrt.system.Int32: ...
    def get_column_span(cls, element: windows_ui_xaml.FrameworkElement, /) -> winrt.system.Int32: ...
    def get_row(cls, element: windows_ui_xaml.FrameworkElement, /) -> winrt.system.Int32: ...
    def get_row_span(cls, element: windows_ui_xaml.FrameworkElement, /) -> winrt.system.Int32: ...
    def set_column(cls, element: windows_ui_xaml.FrameworkElement, value: winrt.system.Int32, /) -> None: ...
    def set_column_span(cls, element: windows_ui_xaml.FrameworkElement, value: winrt.system.Int32, /) -> None: ...
    def set_row(cls, element: windows_ui_xaml.FrameworkElement, value: winrt.system.Int32, /) -> None: ...
    def set_row_span(cls, element: windows_ui_xaml.FrameworkElement, value: winrt.system.Int32, /) -> None: ...
    @_property
    def column_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def column_span_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def row_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def row_span_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def border_thickness_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def corner_radius_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def padding_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def column_spacing_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def row_spacing_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def background_sizing_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class Grid(Panel, metaclass=Grid_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Grid: ...
    def __new__(cls: typing.Type[Grid]) -> Grid: ...
    @_property
    def column_definitions(self) -> ColumnDefinitionCollection: ...
    @_property
    def row_definitions(self) -> RowDefinitionCollection: ...
    @_property
    def padding(self) -> windows_ui_xaml.Thickness: ...
    @padding.setter
    def padding(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def corner_radius(self) -> windows_ui_xaml.CornerRadius: ...
    @corner_radius.setter
    def corner_radius(self, value: windows_ui_xaml.CornerRadius) -> None: ...
    @_property
    def border_thickness(self) -> windows_ui_xaml.Thickness: ...
    @border_thickness.setter
    def border_thickness(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @border_brush.setter
    def border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def row_spacing(self) -> winrt.system.Double: ...
    @row_spacing.setter
    def row_spacing(self, value: winrt.system.Double) -> None: ...
    @_property
    def column_spacing(self) -> winrt.system.Double: ...
    @column_spacing.setter
    def column_spacing(self, value: winrt.system.Double) -> None: ...
    @_property
    def background_sizing(self) -> BackgroundSizing: ...
    @background_sizing.setter
    def background_sizing(self, value: BackgroundSizing) -> None: ...

class GridViewHeaderItem_Static(ListViewBaseHeaderItem_Static):
    pass

class GridViewHeaderItem(ListViewBaseHeaderItem, metaclass=GridViewHeaderItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GridViewHeaderItem: ...
    def __new__(cls: typing.Type[GridViewHeaderItem]) -> GridViewHeaderItem: ...

class GroupItem_Static(ContentControl_Static):
    pass

class GroupItem(ContentControl, metaclass=GroupItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GroupItem: ...
    def __new__(cls: typing.Type[GroupItem]) -> GroupItem: ...

class GroupStyle_Static(type):
    pass

class GroupStyle(winrt.system.Object, windows_ui_xaml_data.ImplementsINotifyPropertyChanged, metaclass=GroupStyle_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GroupStyle: ...
    def __new__(cls: typing.Type[GroupStyle]) -> GroupStyle: ...
    def add_property_changed(self, handler: windows_ui_xaml_data.PropertyChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_property_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def panel(self) -> ItemsPanelTemplate: ...
    @panel.setter
    def panel(self, value: ItemsPanelTemplate) -> None: ...
    @_property
    def hides_if_empty(self) -> bool: ...
    @hides_if_empty.setter
    def hides_if_empty(self, value: bool) -> None: ...
    @_property
    def header_template_selector(self) -> DataTemplateSelector: ...
    @header_template_selector.setter
    def header_template_selector(self, value: DataTemplateSelector) -> None: ...
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def container_style_selector(self) -> StyleSelector: ...
    @container_style_selector.setter
    def container_style_selector(self, value: StyleSelector) -> None: ...
    @_property
    def container_style(self) -> windows_ui_xaml.Style: ...
    @container_style.setter
    def container_style(self, value: windows_ui_xaml.Style) -> None: ...
    @_property
    def header_container_style(self) -> windows_ui_xaml.Style: ...
    @header_container_style.setter
    def header_container_style(self, value: windows_ui_xaml.Style) -> None: ...

class GroupStyleSelector_Static(type):
    pass

class GroupStyleSelector(winrt.system.Object, metaclass=GroupStyleSelector_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GroupStyleSelector: ...
    def __new__(cls: typing.Type[GroupStyleSelector]) -> GroupStyleSelector: ...
    def select_group_style(self, group: winrt.system.Object, level: winrt.system.UInt32, /) -> GroupStyle: ...

@typing.final
class HandwritingPanelClosedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HandwritingPanelClosedEventArgs: ...

@typing.final
class HandwritingPanelOpenedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HandwritingPanelOpenedEventArgs: ...

class HandwritingView_Static(Control_Static):
    @_property
    def are_candidates_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_open_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placement_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placement_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_command_bar_open_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_switch_to_keyboard_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class HandwritingView(Control, metaclass=HandwritingView_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HandwritingView: ...
    def __new__(cls: typing.Type[HandwritingView]) -> HandwritingView: ...
    def get_candidates(self, candidates_session_id: winrt.system.UInt32, /) -> typing.Sequence[str]: ...
    def select_candidate(self, candidates_session_id: winrt.system.UInt32, selected_candidate_index: winrt.system.UInt32, /) -> None: ...
    def try_close(self) -> bool: ...
    def try_open(self) -> bool: ...
    def add_closed(self, handler: windows_foundation.TypedEventHandler[HandwritingView, HandwritingPanelClosedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_opened(self, handler: windows_foundation.TypedEventHandler[HandwritingView, HandwritingPanelOpenedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_candidates_changed(self, handler: windows_foundation.TypedEventHandler[HandwritingView, HandwritingViewCandidatesChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_candidates_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_text_submitted(self, handler: windows_foundation.TypedEventHandler[HandwritingView, HandwritingViewTextSubmittedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_text_submitted(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def placement_target(self) -> windows_ui_xaml.UIElement: ...
    @placement_target.setter
    def placement_target(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def placement_alignment(self) -> HandwritingPanelPlacementAlignment: ...
    @placement_alignment.setter
    def placement_alignment(self, value: HandwritingPanelPlacementAlignment) -> None: ...
    @_property
    def are_candidates_enabled(self) -> bool: ...
    @are_candidates_enabled.setter
    def are_candidates_enabled(self, value: bool) -> None: ...
    @_property
    def is_open(self) -> bool: ...
    @_property
    def is_switch_to_keyboard_enabled(self) -> bool: ...
    @is_switch_to_keyboard_enabled.setter
    def is_switch_to_keyboard_enabled(self, value: bool) -> None: ...
    @_property
    def is_command_bar_open(self) -> bool: ...
    @is_command_bar_open.setter
    def is_command_bar_open(self, value: bool) -> None: ...
    @_property
    def input_device_types(self) -> windows_ui_core.CoreInputDeviceTypes: ...
    @input_device_types.setter
    def input_device_types(self, value: windows_ui_core.CoreInputDeviceTypes) -> None: ...

@typing.final
class HandwritingViewCandidatesChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HandwritingViewCandidatesChangedEventArgs: ...
    @_property
    def candidates_session_id(self) -> winrt.system.UInt32: ...

@typing.final
class HandwritingViewTextSubmittedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HandwritingViewTextSubmittedEventArgs: ...

class Hub_Static(Control_Static):
    @_property
    def default_section_index_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_active_view_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_zoomed_in_view_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def orientation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def semantic_zoom_owner_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class Hub(Control, ImplementsISemanticZoomInformation, metaclass=Hub_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Hub: ...
    def __new__(cls: typing.Type[Hub]) -> Hub: ...
    def complete_view_change(self) -> None: ...
    def complete_view_change_from(self, source: SemanticZoomLocation, destination: SemanticZoomLocation, /) -> None: ...
    def complete_view_change_to(self, source: SemanticZoomLocation, destination: SemanticZoomLocation, /) -> None: ...
    def initialize_view_change(self) -> None: ...
    def make_visible(self, item: SemanticZoomLocation, /) -> None: ...
    def scroll_to_section(self, section: HubSection, /) -> None: ...
    def start_view_change_from(self, source: SemanticZoomLocation, destination: SemanticZoomLocation, /) -> None: ...
    def start_view_change_to(self, source: SemanticZoomLocation, destination: SemanticZoomLocation, /) -> None: ...
    def add_section_header_click(self, handler: HubSectionHeaderClickEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_section_header_click(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_sections_in_view_changed(self, handler: SectionsInViewChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_sections_in_view_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def orientation(self) -> Orientation: ...
    @orientation.setter
    def orientation(self, value: Orientation) -> None: ...
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def default_section_index(self) -> winrt.system.Int32: ...
    @default_section_index.setter
    def default_section_index(self, value: winrt.system.Int32) -> None: ...
    @_property
    def section_headers(self) -> windows_foundation_collections.IObservableVector[winrt.system.Object]: ...
    @_property
    def sections(self) -> typing.MutableSequence[HubSection]: ...
    @_property
    def sections_in_view(self) -> typing.MutableSequence[HubSection]: ...
    @_property
    def semantic_zoom_owner(self) -> SemanticZoom: ...
    @semantic_zoom_owner.setter
    def semantic_zoom_owner(self, value: SemanticZoom) -> None: ...
    @_property
    def is_zoomed_in_view(self) -> bool: ...
    @is_zoomed_in_view.setter
    def is_zoomed_in_view(self, value: bool) -> None: ...
    @_property
    def is_active_view(self) -> bool: ...
    @is_active_view.setter
    def is_active_view(self, value: bool) -> None: ...

class HubSection_Static(Control_Static):
    @_property
    def content_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_header_interactive_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class HubSection(Control, metaclass=HubSection_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HubSection: ...
    def __new__(cls: typing.Type[HubSection]) -> HubSection: ...
    @_property
    def is_header_interactive(self) -> bool: ...
    @is_header_interactive.setter
    def is_header_interactive(self, value: bool) -> None: ...
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def content_template(self) -> windows_ui_xaml.DataTemplate: ...
    @content_template.setter
    def content_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...

@typing.final
class HubSectionCollection(winrt.system.Object, winrt._winrt.MutableSequence[HubSection]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[HubSection]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> HubSection: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[HubSection]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: HubSection) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[HubSection]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HubSectionCollection: ...
    def append(self, value: HubSection, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[HubSection]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> HubSection: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[HubSection], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[HubSection]: ...
    def index_of(self, value: HubSection, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: HubSection, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[HubSection], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: HubSection, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class HubSectionHeaderClickEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HubSectionHeaderClickEventArgs: ...
    def __new__(cls: typing.Type[HubSectionHeaderClickEventArgs]) -> HubSectionHeaderClickEventArgs: ...
    @_property
    def section(self) -> HubSection: ...

class IconElement_Static(windows_ui_xaml.FrameworkElement_Static):
    @_property
    def foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class IconElement(windows_ui_xaml.FrameworkElement, metaclass=IconElement_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IconElement: ...
    @_property
    def foreground(self) -> windows_ui_xaml_media.Brush: ...
    @foreground.setter
    def foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...

class IconSource_Static(windows_ui_xaml.DependencyObject_Static):
    @_property
    def foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class IconSource(windows_ui_xaml.DependencyObject, metaclass=IconSource_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IconSource: ...
    @_property
    def foreground(self) -> windows_ui_xaml_media.Brush: ...
    @foreground.setter
    def foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...

class IconSourceElement_Static(IconElement_Static):
    @_property
    def icon_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class IconSourceElement(IconElement, metaclass=IconSourceElement_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IconSourceElement: ...
    def __new__(cls: typing.Type[IconSourceElement]) -> IconSourceElement: ...
    @_property
    def icon_source(self) -> IconSource: ...
    @icon_source.setter
    def icon_source(self, value: IconSource) -> None: ...

@typing.final
class Image_Static(windows_ui_xaml.FrameworkElement_Static):
    @_property
    def nine_grid_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def play_to_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def stretch_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class Image(windows_ui_xaml.FrameworkElement, metaclass=Image_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Image: ...
    def __new__(cls: typing.Type[Image]) -> Image: ...
    def get_alpha_mask(self) -> windows_ui_composition.CompositionBrush: ...
    def get_as_casting_source(self) -> windows_media_casting.CastingSource: ...
    def add_image_failed(self, handler: windows_ui_xaml.ExceptionRoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_image_failed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_image_opened(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_image_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def stretch(self) -> windows_ui_xaml_media.Stretch: ...
    @stretch.setter
    def stretch(self, value: windows_ui_xaml_media.Stretch) -> None: ...
    @_property
    def source(self) -> windows_ui_xaml_media.ImageSource: ...
    @source.setter
    def source(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    @_property
    def nine_grid(self) -> windows_ui_xaml.Thickness: ...
    @nine_grid.setter
    def nine_grid(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def play_to_source(self) -> windows_media_playto.PlayToSource: ...

class InkCanvas_Static(windows_ui_xaml.FrameworkElement_Static):
    pass

class InkCanvas(windows_ui_xaml.FrameworkElement, metaclass=InkCanvas_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InkCanvas: ...
    def __new__(cls: typing.Type[InkCanvas]) -> InkCanvas: ...
    @_property
    def ink_presenter(self) -> windows_ui_input_inking.InkPresenter: ...

class InkToolbar_Static(Control_Static):
    @_property
    def active_tool_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def children_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def initial_controls_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def ink_drawing_attributes_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_ruler_button_checked_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def target_ink_canvas_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def button_flyout_placement_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_stencil_button_checked_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def orientation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def target_ink_presenter_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class InkToolbar(Control, metaclass=InkToolbar_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InkToolbar: ...
    def __new__(cls: typing.Type[InkToolbar]) -> InkToolbar: ...
    def get_menu_button(self, menu: InkToolbarMenuKind, /) -> InkToolbarMenuButton: ...
    def get_toggle_button(self, tool: InkToolbarToggle, /) -> InkToolbarToggleButton: ...
    def get_tool_button(self, tool: InkToolbarTool, /) -> InkToolbarToolButton: ...
    def add_active_tool_changed(self, handler: windows_foundation.TypedEventHandler[InkToolbar, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_active_tool_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_erase_all_clicked(self, handler: windows_foundation.TypedEventHandler[InkToolbar, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_erase_all_clicked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_ink_drawing_attributes_changed(self, handler: windows_foundation.TypedEventHandler[InkToolbar, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_ink_drawing_attributes_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # @deprecated("InkToolbarRulerButton is replaced by InkToolbarStencilButton starting from Windows 10 Creators Update. For more info, see MSDN.")
    def add_is_ruler_button_checked_changed(self, handler: windows_foundation.TypedEventHandler[InkToolbar, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # @deprecated("InkToolbarRulerButton is replaced by InkToolbarStencilButton starting from Windows 10 Creators Update. For more info, see MSDN.")
    def remove_is_ruler_button_checked_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_is_stencil_button_checked_changed(self, handler: windows_foundation.TypedEventHandler[InkToolbar, InkToolbarIsStencilButtonCheckedChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_is_stencil_button_checked_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def target_ink_canvas(self) -> InkCanvas: ...
    @target_ink_canvas.setter
    def target_ink_canvas(self, value: InkCanvas) -> None: ...
    @_property
    def is_ruler_button_checked(self) -> bool: ...
    @is_ruler_button_checked.setter
    def is_ruler_button_checked(self, value: bool) -> None: ...
    @_property
    def initial_controls(self) -> InkToolbarInitialControls: ...
    @initial_controls.setter
    def initial_controls(self, value: InkToolbarInitialControls) -> None: ...
    @_property
    def active_tool(self) -> InkToolbarToolButton: ...
    @active_tool.setter
    def active_tool(self, value: InkToolbarToolButton) -> None: ...
    @_property
    def children(self) -> windows_ui_xaml.DependencyObjectCollection: ...
    @_property
    def ink_drawing_attributes(self) -> windows_ui_input_inking.InkDrawingAttributes: ...
    @_property
    def orientation(self) -> Orientation: ...
    @orientation.setter
    def orientation(self, value: Orientation) -> None: ...
    @_property
    def is_stencil_button_checked(self) -> bool: ...
    @is_stencil_button_checked.setter
    def is_stencil_button_checked(self, value: bool) -> None: ...
    @_property
    def button_flyout_placement(self) -> InkToolbarButtonFlyoutPlacement: ...
    @button_flyout_placement.setter
    def button_flyout_placement(self, value: InkToolbarButtonFlyoutPlacement) -> None: ...
    @_property
    def target_ink_presenter(self) -> windows_ui_input_inking.InkPresenter: ...
    @target_ink_presenter.setter
    def target_ink_presenter(self, value: windows_ui_input_inking.InkPresenter) -> None: ...

class InkToolbarCustomPen_Static(windows_ui_xaml.DependencyObject_Static):
    pass

class InkToolbarCustomPen(windows_ui_xaml.DependencyObject, metaclass=InkToolbarCustomPen_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InkToolbarCustomPen: ...
    def create_ink_drawing_attributes(self, brush: windows_ui_xaml_media.Brush, stroke_width: winrt.system.Double, /) -> windows_ui_input_inking.InkDrawingAttributes: ...

@typing.final
class InkToolbarIsStencilButtonCheckedChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InkToolbarIsStencilButtonCheckedChangedEventArgs: ...
    def __new__(cls: typing.Type[InkToolbarIsStencilButtonCheckedChangedEventArgs]) -> InkToolbarIsStencilButtonCheckedChangedEventArgs: ...
    @_property
    def stencil_button(self) -> InkToolbarStencilButton: ...
    @_property
    def stencil_kind(self) -> InkToolbarStencilKind: ...

class InkToolbarPenConfigurationControl_Static(Control_Static):
    @_property
    def pen_button_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class InkToolbarPenConfigurationControl(Control, metaclass=InkToolbarPenConfigurationControl_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InkToolbarPenConfigurationControl: ...
    def __new__(cls: typing.Type[InkToolbarPenConfigurationControl]) -> InkToolbarPenConfigurationControl: ...
    @_property
    def pen_button(self) -> InkToolbarPenButton: ...

@typing.final
class IsTextTrimmedChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IsTextTrimmedChangedEventArgs: ...

@typing.final
class ItemClickEventArgs(windows_ui_xaml.RoutedEventArgs):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ItemClickEventArgs: ...
    def __new__(cls: typing.Type[ItemClickEventArgs]) -> ItemClickEventArgs: ...
    @_property
    def clicked_item(self) -> winrt.system.Object: ...

@typing.final
class ItemCollection(winrt.system.Object, windows_foundation_collections.ImplementsIObservableVector[winrt.system.Object], winrt._winrt.MutableSequence[winrt.system.Object]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[winrt.system.Object]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> winrt.system.Object: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[winrt.system.Object]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: winrt.system.Object) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[winrt.system.Object]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ItemCollection: ...
    def append(self, value: winrt.system.Object, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[winrt.system.Object]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> winrt.system.Object: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[winrt.system.Object], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[winrt.system.Object]: ...
    def index_of(self, value: winrt.system.Object, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: winrt.system.Object, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[winrt.system.Object], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: winrt.system.Object, /) -> None: ...
    def add_vector_changed(self, vhnd: windows_foundation_collections.VectorChangedEventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_vector_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class ItemContainerGenerator(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ItemContainerGenerator: ...
    # @deprecated("ContainerFromIndex may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromIndex.")
    def container_from_index(self, index: winrt.system.Int32, /) -> windows_ui_xaml.DependencyObject: ...
    # @deprecated("ContainerFromItem may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromItem.")
    def container_from_item(self, item: winrt.system.Object, /) -> windows_ui_xaml.DependencyObject: ...
    def generate_next(self) -> typing.Tuple[windows_ui_xaml.DependencyObject, bool]: ...
    def generator_position_from_index(self, item_index: winrt.system.Int32, /) -> windows_ui_xaml_controls_primitives.GeneratorPosition: ...
    def get_item_container_generator_for_panel(self, panel: Panel, /) -> ItemContainerGenerator: ...
    # @deprecated("IndexFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.IndexFromContainer.")
    def index_from_container(self, container: windows_ui_xaml.DependencyObject, /) -> winrt.system.Int32: ...
    def index_from_generator_position(self, position: windows_ui_xaml_controls_primitives.GeneratorPosition, /) -> winrt.system.Int32: ...
    # @deprecated("ItemFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ItemFromContainer.")
    def item_from_container(self, container: windows_ui_xaml.DependencyObject, /) -> winrt.system.Object: ...
    def prepare_item_container(self, container: windows_ui_xaml.DependencyObject, /) -> None: ...
    def recycle(self, position: windows_ui_xaml_controls_primitives.GeneratorPosition, count: winrt.system.Int32, /) -> None: ...
    def remove(self, position: windows_ui_xaml_controls_primitives.GeneratorPosition, count: winrt.system.Int32, /) -> None: ...
    def remove_all(self) -> None: ...
    def start_at(self, position: windows_ui_xaml_controls_primitives.GeneratorPosition, direction: windows_ui_xaml_controls_primitives.GeneratorDirection, allow_start_at_realized_item: bool, /) -> None: ...
    def stop(self) -> None: ...
    def add_items_changed(self, handler: windows_ui_xaml_controls_primitives.ItemsChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_items_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...

class ItemsControl_Static(Control_Static):
    def get_items_owner(cls, element: windows_ui_xaml.DependencyObject, /) -> ItemsControl: ...
    def items_control_from_item_container(cls, container: windows_ui_xaml.DependencyObject, /) -> ItemsControl: ...
    @_property
    def display_member_path_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def group_style_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_grouping_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_container_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_container_style_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_container_transitions_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_template_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def items_panel_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def items_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ItemsControl(Control, ImplementsIItemContainerMapping, metaclass=ItemsControl_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ItemsControl: ...
    def __new__(cls: typing.Type[ItemsControl]) -> ItemsControl: ...
    def container_from_index(self, index: winrt.system.Int32, /) -> windows_ui_xaml.DependencyObject: ...
    def container_from_item(self, item: winrt.system.Object, /) -> windows_ui_xaml.DependencyObject: ...
    def group_header_container_from_item_container(self, item_container: windows_ui_xaml.DependencyObject, /) -> windows_ui_xaml.DependencyObject: ...
    def index_from_container(self, container: windows_ui_xaml.DependencyObject, /) -> winrt.system.Int32: ...
    def item_from_container(self, container: windows_ui_xaml.DependencyObject, /) -> winrt.system.Object: ...
    @_property
    def items_source(self) -> winrt.system.Object: ...
    @items_source.setter
    def items_source(self, value: winrt.system.Object) -> None: ...
    @_property
    def items_panel(self) -> ItemsPanelTemplate: ...
    @items_panel.setter
    def items_panel(self, value: ItemsPanelTemplate) -> None: ...
    @_property
    def item_template_selector(self) -> DataTemplateSelector: ...
    @item_template_selector.setter
    def item_template_selector(self, value: DataTemplateSelector) -> None: ...
    @_property
    def item_template(self) -> windows_ui_xaml.DataTemplate: ...
    @item_template.setter
    def item_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def item_container_transitions(self) -> windows_ui_xaml_media_animation.TransitionCollection: ...
    @item_container_transitions.setter
    def item_container_transitions(self, value: windows_ui_xaml_media_animation.TransitionCollection) -> None: ...
    @_property
    def item_container_style_selector(self) -> StyleSelector: ...
    @item_container_style_selector.setter
    def item_container_style_selector(self, value: StyleSelector) -> None: ...
    @_property
    def item_container_style(self) -> windows_ui_xaml.Style: ...
    @item_container_style.setter
    def item_container_style(self, value: windows_ui_xaml.Style) -> None: ...
    @_property
    def group_style_selector(self) -> GroupStyleSelector: ...
    @group_style_selector.setter
    def group_style_selector(self, value: GroupStyleSelector) -> None: ...
    @_property
    def display_member_path(self) -> str: ...
    @display_member_path.setter
    def display_member_path(self, value: str) -> None: ...
    @_property
    def group_style(self) -> windows_foundation_collections.IObservableVector[GroupStyle]: ...
    @_property
    def is_grouping(self) -> bool: ...
    @_property
    def item_container_generator(self) -> ItemContainerGenerator: ...
    @_property
    def items(self) -> ItemCollection: ...
    @_property
    def items_panel_root(self) -> Panel: ...

@typing.final
class ItemsPanelTemplate(windows_ui_xaml.FrameworkTemplate):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ItemsPanelTemplate: ...
    def __new__(cls: typing.Type[ItemsPanelTemplate]) -> ItemsPanelTemplate: ...

@typing.final
class ItemsPickedEventArgs(windows_ui_xaml.DependencyObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ItemsPickedEventArgs: ...
    def __new__(cls: typing.Type[ItemsPickedEventArgs]) -> ItemsPickedEventArgs: ...
    @_property
    def added_items(self) -> typing.MutableSequence[winrt.system.Object]: ...
    @_property
    def removed_items(self) -> typing.MutableSequence[winrt.system.Object]: ...

@typing.final
class ItemsPresenter_Static(windows_ui_xaml.FrameworkElement_Static):
    @_property
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_transitions_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def padding_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def footer_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def footer_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def footer_transitions_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ItemsPresenter(windows_ui_xaml.FrameworkElement, windows_ui_xaml_controls_primitives.ImplementsIScrollSnapPointsInfo, metaclass=ItemsPresenter_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ItemsPresenter: ...
    def __new__(cls: typing.Type[ItemsPresenter]) -> ItemsPresenter: ...
    def get_irregular_snap_points(self, orientation: Orientation, alignment: windows_ui_xaml_controls_primitives.SnapPointsAlignment, /) -> typing.Sequence[winrt.system.Single]: ...
    def get_regular_snap_points(self, orientation: Orientation, alignment: windows_ui_xaml_controls_primitives.SnapPointsAlignment, /) -> typing.Tuple[winrt.system.Single, winrt.system.Single]: ...
    def add_horizontal_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_horizontal_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_vertical_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_vertical_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def padding(self) -> windows_ui_xaml.Thickness: ...
    @padding.setter
    def padding(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def header_transitions(self) -> windows_ui_xaml_media_animation.TransitionCollection: ...
    @header_transitions.setter
    def header_transitions(self, value: windows_ui_xaml_media_animation.TransitionCollection) -> None: ...
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def footer_transitions(self) -> windows_ui_xaml_media_animation.TransitionCollection: ...
    @footer_transitions.setter
    def footer_transitions(self, value: windows_ui_xaml_media_animation.TransitionCollection) -> None: ...
    @_property
    def footer_template(self) -> windows_ui_xaml.DataTemplate: ...
    @footer_template.setter
    def footer_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def footer(self) -> winrt.system.Object: ...
    @footer.setter
    def footer(self, value: winrt.system.Object) -> None: ...
    @_property
    def are_horizontal_snap_points_regular(self) -> bool: ...
    @_property
    def are_vertical_snap_points_regular(self) -> bool: ...

@typing.final
class ItemsStackPanel_Static(Panel_Static):
    @_property
    def cache_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def group_header_placement_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def group_padding_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def orientation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def are_sticky_group_headers_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ItemsStackPanel(Panel, metaclass=ItemsStackPanel_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ItemsStackPanel: ...
    def __new__(cls: typing.Type[ItemsStackPanel]) -> ItemsStackPanel: ...
    @_property
    def orientation(self) -> Orientation: ...
    @orientation.setter
    def orientation(self, value: Orientation) -> None: ...
    @_property
    def items_updating_scroll_mode(self) -> ItemsUpdatingScrollMode: ...
    @items_updating_scroll_mode.setter
    def items_updating_scroll_mode(self, value: ItemsUpdatingScrollMode) -> None: ...
    @_property
    def group_padding(self) -> windows_ui_xaml.Thickness: ...
    @group_padding.setter
    def group_padding(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def group_header_placement(self) -> windows_ui_xaml_controls_primitives.GroupHeaderPlacement: ...
    @group_header_placement.setter
    def group_header_placement(self, value: windows_ui_xaml_controls_primitives.GroupHeaderPlacement) -> None: ...
    @_property
    def cache_length(self) -> winrt.system.Double: ...
    @cache_length.setter
    def cache_length(self, value: winrt.system.Double) -> None: ...
    @_property
    def first_cache_index(self) -> winrt.system.Int32: ...
    @_property
    def first_visible_index(self) -> winrt.system.Int32: ...
    @_property
    def last_cache_index(self) -> winrt.system.Int32: ...
    @_property
    def last_visible_index(self) -> winrt.system.Int32: ...
    @_property
    def scrolling_direction(self) -> PanelScrollingDirection: ...
    @_property
    def are_sticky_group_headers_enabled(self) -> bool: ...
    @are_sticky_group_headers_enabled.setter
    def are_sticky_group_headers_enabled(self, value: bool) -> None: ...

@typing.final
class ItemsWrapGrid_Static(Panel_Static):
    @_property
    def cache_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def group_header_placement_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def group_padding_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def maximum_rows_or_columns_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def orientation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def are_sticky_group_headers_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ItemsWrapGrid(Panel, metaclass=ItemsWrapGrid_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ItemsWrapGrid: ...
    def __new__(cls: typing.Type[ItemsWrapGrid]) -> ItemsWrapGrid: ...
    @_property
    def orientation(self) -> Orientation: ...
    @orientation.setter
    def orientation(self, value: Orientation) -> None: ...
    @_property
    def maximum_rows_or_columns(self) -> winrt.system.Int32: ...
    @maximum_rows_or_columns.setter
    def maximum_rows_or_columns(self, value: winrt.system.Int32) -> None: ...
    @_property
    def item_width(self) -> winrt.system.Double: ...
    @item_width.setter
    def item_width(self, value: winrt.system.Double) -> None: ...
    @_property
    def item_height(self) -> winrt.system.Double: ...
    @item_height.setter
    def item_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def group_padding(self) -> windows_ui_xaml.Thickness: ...
    @group_padding.setter
    def group_padding(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def group_header_placement(self) -> windows_ui_xaml_controls_primitives.GroupHeaderPlacement: ...
    @group_header_placement.setter
    def group_header_placement(self, value: windows_ui_xaml_controls_primitives.GroupHeaderPlacement) -> None: ...
    @_property
    def cache_length(self) -> winrt.system.Double: ...
    @cache_length.setter
    def cache_length(self, value: winrt.system.Double) -> None: ...
    @_property
    def first_cache_index(self) -> winrt.system.Int32: ...
    @_property
    def first_visible_index(self) -> winrt.system.Int32: ...
    @_property
    def last_cache_index(self) -> winrt.system.Int32: ...
    @_property
    def last_visible_index(self) -> winrt.system.Int32: ...
    @_property
    def scrolling_direction(self) -> PanelScrollingDirection: ...
    @_property
    def are_sticky_group_headers_enabled(self) -> bool: ...
    @are_sticky_group_headers_enabled.setter
    def are_sticky_group_headers_enabled(self, value: bool) -> None: ...

@typing.final
class ListPickerFlyoutPresenter(Control):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ListPickerFlyoutPresenter: ...

class ListViewBaseHeaderItem_Static(ContentControl_Static):
    pass

class ListViewBaseHeaderItem(ContentControl, metaclass=ListViewBaseHeaderItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ListViewBaseHeaderItem: ...

class ListViewHeaderItem_Static(ListViewBaseHeaderItem_Static):
    pass

class ListViewHeaderItem(ListViewBaseHeaderItem, metaclass=ListViewHeaderItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ListViewHeaderItem: ...
    def __new__(cls: typing.Type[ListViewHeaderItem]) -> ListViewHeaderItem: ...

@typing.final
class ListViewPersistenceHelper_Static(type):
    def get_relative_scroll_position(cls, list_view_base: ListViewBase, item_to_key_handler: ListViewItemToKeyHandler, /) -> str: ...
    def set_relative_scroll_position_async(cls, list_view_base: ListViewBase, relative_scroll_position: str, key_to_item_handler: ListViewKeyToItemHandler, /) -> windows_foundation.IAsyncAction: ...

@typing.final
class ListViewPersistenceHelper(winrt.system.Object, metaclass=ListViewPersistenceHelper_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ListViewPersistenceHelper: ...

@typing.final
class MediaElement_Static(windows_ui_xaml.FrameworkElement_Static):
    @_property
    def download_progress_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def stereo_3d_video_packing_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def stereo_3d_video_render_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def actual_stereo_3d_video_packing_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def aspect_ratio_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def aspect_ratio_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def audio_category_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def audio_device_type_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def audio_stream_count_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def audio_stream_index_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def auto_play_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def balance_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def buffering_progress_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def can_pause_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def can_seek_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def current_state_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def default_playback_rate_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def volume_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def download_progress_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_audio_only_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_looping_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_muted_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_stereo_3d_video_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def natural_duration_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def natural_video_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def natural_video_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def play_to_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def playback_rate_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def position_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def poster_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def protection_manager_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def real_time_playback_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_full_window_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def play_to_preferred_source_uri_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def stretch_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def are_transport_controls_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class MediaElement(windows_ui_xaml.FrameworkElement, metaclass=MediaElement_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MediaElement: ...
    def __new__(cls: typing.Type[MediaElement]) -> MediaElement: ...
    def add_audio_effect(self, effect_id: str, effect_optional: bool, effect_configuration: windows_foundation_collections.ImplementsIPropertySet, /) -> None: ...
    def add_video_effect(self, effect_id: str, effect_optional: bool, effect_configuration: windows_foundation_collections.ImplementsIPropertySet, /) -> None: ...
    def can_play_type(self, type: str, /) -> windows_ui_xaml_media.MediaCanPlayResponse: ...
    def get_as_casting_source(self) -> windows_media_casting.CastingSource: ...
    def get_audio_stream_language(self, index: typing.Optional[winrt.system.Int32], /) -> str: ...
    def pause(self) -> None: ...
    def play(self) -> None: ...
    def remove_all_effects(self) -> None: ...
    def set_media_stream_source(self, source: windows_media_core.ImplementsIMediaSource, /) -> None: ...
    def set_playback_source(self, source: windows_media_playback.ImplementsIMediaPlaybackSource, /) -> None: ...
    def set_source(self, stream: windows_storage_streams.ImplementsIRandomAccessStream, mime_type: str, /) -> None: ...
    def stop(self) -> None: ...
    def add_buffering_progress_changed(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_buffering_progress_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_current_state_changed(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_current_state_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_download_progress_changed(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_download_progress_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_marker_reached(self, handler: windows_ui_xaml_media.TimelineMarkerRoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_marker_reached(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_media_ended(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_media_ended(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_media_failed(self, handler: windows_ui_xaml.ExceptionRoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_media_failed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_media_opened(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_media_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_rate_changed(self, handler: windows_ui_xaml_media.RateChangedRoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_rate_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_seek_completed(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_seek_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_volume_changed(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_volume_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_partial_media_failure_detected(self, handler: windows_foundation.TypedEventHandler[MediaElement, windows_ui_xaml_media.PartialMediaFailureDetectedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_partial_media_failure_detected(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def volume(self) -> winrt.system.Double: ...
    @volume.setter
    def volume(self, value: winrt.system.Double) -> None: ...
    @_property
    def stereo_3d_video_render_mode(self) -> windows_ui_xaml_media.Stereo3DVideoRenderMode: ...
    @stereo_3d_video_render_mode.setter
    def stereo_3d_video_render_mode(self, value: windows_ui_xaml_media.Stereo3DVideoRenderMode) -> None: ...
    @_property
    def stereo_3d_video_packing_mode(self) -> windows_ui_xaml_media.Stereo3DVideoPackingMode: ...
    @stereo_3d_video_packing_mode.setter
    def stereo_3d_video_packing_mode(self, value: windows_ui_xaml_media.Stereo3DVideoPackingMode) -> None: ...
    @_property
    def source(self) -> windows_foundation.Uri: ...
    @source.setter
    def source(self, value: windows_foundation.Uri) -> None: ...
    @_property
    def real_time_playback(self) -> bool: ...
    @real_time_playback.setter
    def real_time_playback(self, value: bool) -> None: ...
    @_property
    def protection_manager(self) -> windows_media_protection.MediaProtectionManager: ...
    @protection_manager.setter
    def protection_manager(self, value: windows_media_protection.MediaProtectionManager) -> None: ...
    @_property
    def poster_source(self) -> windows_ui_xaml_media.ImageSource: ...
    @poster_source.setter
    def poster_source(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    @_property
    def position(self) -> datetime.timedelta: ...
    @position.setter
    def position(self, value: datetime.timedelta) -> None: ...
    @_property
    def playback_rate(self) -> winrt.system.Double: ...
    @playback_rate.setter
    def playback_rate(self, value: winrt.system.Double) -> None: ...
    @_property
    def auto_play(self) -> bool: ...
    @auto_play.setter
    def auto_play(self, value: bool) -> None: ...
    @_property
    def audio_stream_index(self) -> typing.Optional[winrt.system.Int32]: ...
    @audio_stream_index.setter
    def audio_stream_index(self, value: typing.Optional[winrt.system.Int32]) -> None: ...
    @_property
    def is_muted(self) -> bool: ...
    @is_muted.setter
    def is_muted(self, value: bool) -> None: ...
    @_property
    def audio_device_type(self) -> windows_ui_xaml_media.AudioDeviceType: ...
    @audio_device_type.setter
    def audio_device_type(self, value: windows_ui_xaml_media.AudioDeviceType) -> None: ...
    @_property
    def audio_category(self) -> windows_ui_xaml_media.AudioCategory: ...
    @audio_category.setter
    def audio_category(self, value: windows_ui_xaml_media.AudioCategory) -> None: ...
    @_property
    def default_playback_rate(self) -> winrt.system.Double: ...
    @default_playback_rate.setter
    def default_playback_rate(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_looping(self) -> bool: ...
    @is_looping.setter
    def is_looping(self, value: bool) -> None: ...
    @_property
    def balance(self) -> winrt.system.Double: ...
    @balance.setter
    def balance(self, value: winrt.system.Double) -> None: ...
    @_property
    def download_progress_offset(self) -> winrt.system.Double: ...
    @_property
    def is_audio_only(self) -> bool: ...
    @_property
    def is_stereo_3d_video(self) -> bool: ...
    @_property
    def markers(self) -> windows_ui_xaml_media.TimelineMarkerCollection: ...
    @_property
    def natural_duration(self) -> windows_ui_xaml.Duration: ...
    @_property
    def natural_video_height(self) -> winrt.system.Int32: ...
    @_property
    def natural_video_width(self) -> winrt.system.Int32: ...
    @_property
    def play_to_source(self) -> windows_media_playto.PlayToSource: ...
    @_property
    def actual_stereo_3d_video_packing_mode(self) -> windows_ui_xaml_media.Stereo3DVideoPackingMode: ...
    @_property
    def aspect_ratio_height(self) -> winrt.system.Int32: ...
    @_property
    def aspect_ratio_width(self) -> winrt.system.Int32: ...
    @_property
    def audio_stream_count(self) -> winrt.system.Int32: ...
    @_property
    def buffering_progress(self) -> winrt.system.Double: ...
    @_property
    def can_pause(self) -> bool: ...
    @_property
    def can_seek(self) -> bool: ...
    @_property
    def current_state(self) -> windows_ui_xaml_media.MediaElementState: ...
    @_property
    def download_progress(self) -> winrt.system.Double: ...
    @_property
    def stretch(self) -> windows_ui_xaml_media.Stretch: ...
    @stretch.setter
    def stretch(self, value: windows_ui_xaml_media.Stretch) -> None: ...
    @_property
    def play_to_preferred_source_uri(self) -> windows_foundation.Uri: ...
    @play_to_preferred_source_uri.setter
    def play_to_preferred_source_uri(self, value: windows_foundation.Uri) -> None: ...
    @_property
    def is_full_window(self) -> bool: ...
    @is_full_window.setter
    def is_full_window(self, value: bool) -> None: ...
    @_property
    def are_transport_controls_enabled(self) -> bool: ...
    @are_transport_controls_enabled.setter
    def are_transport_controls_enabled(self, value: bool) -> None: ...
    @_property
    def transport_controls(self) -> MediaTransportControls: ...
    @transport_controls.setter
    def transport_controls(self, value: MediaTransportControls) -> None: ...

class MediaPlayerElement_Static(Control_Static):
    @_property
    def are_transport_controls_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def auto_play_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_full_window_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def media_player_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def poster_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def stretch_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class MediaPlayerElement(Control, metaclass=MediaPlayerElement_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MediaPlayerElement: ...
    def __new__(cls: typing.Type[MediaPlayerElement]) -> MediaPlayerElement: ...
    def set_media_player(self, media_player: windows_media_playback.MediaPlayer, /) -> None: ...
    @_property
    def transport_controls(self) -> MediaTransportControls: ...
    @transport_controls.setter
    def transport_controls(self, value: MediaTransportControls) -> None: ...
    @_property
    def stretch(self) -> windows_ui_xaml_media.Stretch: ...
    @stretch.setter
    def stretch(self, value: windows_ui_xaml_media.Stretch) -> None: ...
    @_property
    def source(self) -> windows_media_playback.IMediaPlaybackSource: ...
    @source.setter
    def source(self, value: windows_media_playback.IMediaPlaybackSource) -> None: ...
    @_property
    def poster_source(self) -> windows_ui_xaml_media.ImageSource: ...
    @poster_source.setter
    def poster_source(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    @_property
    def is_full_window(self) -> bool: ...
    @is_full_window.setter
    def is_full_window(self, value: bool) -> None: ...
    @_property
    def auto_play(self) -> bool: ...
    @auto_play.setter
    def auto_play(self, value: bool) -> None: ...
    @_property
    def are_transport_controls_enabled(self) -> bool: ...
    @are_transport_controls_enabled.setter
    def are_transport_controls_enabled(self, value: bool) -> None: ...
    @_property
    def media_player(self) -> windows_media_playback.MediaPlayer: ...

class MediaPlayerPresenter_Static(windows_ui_xaml.FrameworkElement_Static):
    @_property
    def is_full_window_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def media_player_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def stretch_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class MediaPlayerPresenter(windows_ui_xaml.FrameworkElement, metaclass=MediaPlayerPresenter_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MediaPlayerPresenter: ...
    def __new__(cls: typing.Type[MediaPlayerPresenter]) -> MediaPlayerPresenter: ...
    @_property
    def stretch(self) -> windows_ui_xaml_media.Stretch: ...
    @stretch.setter
    def stretch(self, value: windows_ui_xaml_media.Stretch) -> None: ...
    @_property
    def media_player(self) -> windows_media_playback.MediaPlayer: ...
    @media_player.setter
    def media_player(self, value: windows_media_playback.MediaPlayer) -> None: ...
    @_property
    def is_full_window(self) -> bool: ...
    @is_full_window.setter
    def is_full_window(self, value: bool) -> None: ...

class MediaTransportControls_Static(Control_Static):
    @_property
    def is_compact_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_fast_forward_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_fast_forward_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_fast_rewind_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_fast_rewind_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_full_window_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_full_window_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_playback_rate_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_playback_rate_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_seek_bar_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_seek_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_stop_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_stop_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_volume_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_volume_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_zoom_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_zoom_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def fast_play_fallback_behaviour_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_next_track_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_previous_track_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_skip_backward_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_skip_backward_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_skip_forward_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_skip_forward_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_repeat_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_repeat_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def show_and_hide_automatically_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_compact_overlay_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_compact_overlay_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class MediaTransportControls(Control, metaclass=MediaTransportControls_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MediaTransportControls: ...
    def __new__(cls: typing.Type[MediaTransportControls]) -> MediaTransportControls: ...
    def hide(self) -> None: ...
    def show(self) -> None: ...
    def add_thumbnail_requested(self, handler: windows_foundation.TypedEventHandler[MediaTransportControls, windows_ui_xaml_media.MediaTransportControlsThumbnailRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_thumbnail_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def is_zoom_enabled(self) -> bool: ...
    @is_zoom_enabled.setter
    def is_zoom_enabled(self, value: bool) -> None: ...
    @_property
    def is_zoom_button_visible(self) -> bool: ...
    @is_zoom_button_visible.setter
    def is_zoom_button_visible(self, value: bool) -> None: ...
    @_property
    def is_volume_enabled(self) -> bool: ...
    @is_volume_enabled.setter
    def is_volume_enabled(self, value: bool) -> None: ...
    @_property
    def is_volume_button_visible(self) -> bool: ...
    @is_volume_button_visible.setter
    def is_volume_button_visible(self, value: bool) -> None: ...
    @_property
    def is_stop_enabled(self) -> bool: ...
    @is_stop_enabled.setter
    def is_stop_enabled(self, value: bool) -> None: ...
    @_property
    def is_stop_button_visible(self) -> bool: ...
    @is_stop_button_visible.setter
    def is_stop_button_visible(self, value: bool) -> None: ...
    @_property
    def is_seek_enabled(self) -> bool: ...
    @is_seek_enabled.setter
    def is_seek_enabled(self, value: bool) -> None: ...
    @_property
    def is_seek_bar_visible(self) -> bool: ...
    @is_seek_bar_visible.setter
    def is_seek_bar_visible(self, value: bool) -> None: ...
    @_property
    def is_playback_rate_enabled(self) -> bool: ...
    @is_playback_rate_enabled.setter
    def is_playback_rate_enabled(self, value: bool) -> None: ...
    @_property
    def is_playback_rate_button_visible(self) -> bool: ...
    @is_playback_rate_button_visible.setter
    def is_playback_rate_button_visible(self, value: bool) -> None: ...
    @_property
    def is_full_window_enabled(self) -> bool: ...
    @is_full_window_enabled.setter
    def is_full_window_enabled(self, value: bool) -> None: ...
    @_property
    def is_full_window_button_visible(self) -> bool: ...
    @is_full_window_button_visible.setter
    def is_full_window_button_visible(self, value: bool) -> None: ...
    @_property
    def is_fast_rewind_enabled(self) -> bool: ...
    @is_fast_rewind_enabled.setter
    def is_fast_rewind_enabled(self, value: bool) -> None: ...
    @_property
    def is_fast_rewind_button_visible(self) -> bool: ...
    @is_fast_rewind_button_visible.setter
    def is_fast_rewind_button_visible(self, value: bool) -> None: ...
    @_property
    def is_fast_forward_enabled(self) -> bool: ...
    @is_fast_forward_enabled.setter
    def is_fast_forward_enabled(self, value: bool) -> None: ...
    @_property
    def is_fast_forward_button_visible(self) -> bool: ...
    @is_fast_forward_button_visible.setter
    def is_fast_forward_button_visible(self, value: bool) -> None: ...
    @_property
    def is_compact(self) -> bool: ...
    @is_compact.setter
    def is_compact(self, value: bool) -> None: ...
    @_property
    def is_skip_forward_enabled(self) -> bool: ...
    @is_skip_forward_enabled.setter
    def is_skip_forward_enabled(self, value: bool) -> None: ...
    @_property
    def is_skip_forward_button_visible(self) -> bool: ...
    @is_skip_forward_button_visible.setter
    def is_skip_forward_button_visible(self, value: bool) -> None: ...
    @_property
    def is_skip_backward_enabled(self) -> bool: ...
    @is_skip_backward_enabled.setter
    def is_skip_backward_enabled(self, value: bool) -> None: ...
    @_property
    def is_skip_backward_button_visible(self) -> bool: ...
    @is_skip_backward_button_visible.setter
    def is_skip_backward_button_visible(self, value: bool) -> None: ...
    @_property
    def is_previous_track_button_visible(self) -> bool: ...
    @is_previous_track_button_visible.setter
    def is_previous_track_button_visible(self, value: bool) -> None: ...
    @_property
    def is_next_track_button_visible(self) -> bool: ...
    @is_next_track_button_visible.setter
    def is_next_track_button_visible(self, value: bool) -> None: ...
    @_property
    def fast_play_fallback_behaviour(self) -> windows_ui_xaml_media.FastPlayFallbackBehaviour: ...
    @fast_play_fallback_behaviour.setter
    def fast_play_fallback_behaviour(self, value: windows_ui_xaml_media.FastPlayFallbackBehaviour) -> None: ...
    @_property
    def show_and_hide_automatically(self) -> bool: ...
    @show_and_hide_automatically.setter
    def show_and_hide_automatically(self, value: bool) -> None: ...
    @_property
    def is_repeat_enabled(self) -> bool: ...
    @is_repeat_enabled.setter
    def is_repeat_enabled(self, value: bool) -> None: ...
    @_property
    def is_repeat_button_visible(self) -> bool: ...
    @is_repeat_button_visible.setter
    def is_repeat_button_visible(self, value: bool) -> None: ...
    @_property
    def is_compact_overlay_enabled(self) -> bool: ...
    @is_compact_overlay_enabled.setter
    def is_compact_overlay_enabled(self, value: bool) -> None: ...
    @_property
    def is_compact_overlay_button_visible(self) -> bool: ...
    @is_compact_overlay_button_visible.setter
    def is_compact_overlay_button_visible(self, value: bool) -> None: ...

@typing.final
class MediaTransportControlsHelper_Static(type):
    def get_dropout_order(cls, element: windows_ui_xaml.UIElement, /) -> typing.Optional[winrt.system.Int32]: ...
    def set_dropout_order(cls, element: windows_ui_xaml.UIElement, value: typing.Optional[winrt.system.Int32], /) -> None: ...
    @_property
    def dropout_order_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class MediaTransportControlsHelper(winrt.system.Object, metaclass=MediaTransportControlsHelper_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MediaTransportControlsHelper: ...

class MenuBar_Static(Control_Static):
    @_property
    def items_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class MenuBar(Control, metaclass=MenuBar_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MenuBar: ...
    def __new__(cls: typing.Type[MenuBar]) -> MenuBar: ...
    @_property
    def items(self) -> typing.MutableSequence[MenuBarItem]: ...

class MenuBarItem_Static(Control_Static):
    @_property
    def items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def title_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class MenuBarItem(Control, metaclass=MenuBarItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MenuBarItem: ...
    def __new__(cls: typing.Type[MenuBarItem]) -> MenuBarItem: ...
    @_property
    def title(self) -> str: ...
    @title.setter
    def title(self, value: str) -> None: ...
    @_property
    def items(self) -> typing.MutableSequence[MenuFlyoutItemBase]: ...

class MenuFlyoutItem_Static(MenuFlyoutItemBase_Static):
    @_property
    def command_parameter_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def command_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def icon_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def keyboard_accelerator_text_override_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class MenuFlyoutItem(MenuFlyoutItemBase, metaclass=MenuFlyoutItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MenuFlyoutItem: ...
    def __new__(cls: typing.Type[MenuFlyoutItem]) -> MenuFlyoutItem: ...
    def add_click(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_click(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def text(self) -> str: ...
    @text.setter
    def text(self, value: str) -> None: ...
    @_property
    def command_parameter(self) -> winrt.system.Object: ...
    @command_parameter.setter
    def command_parameter(self, value: winrt.system.Object) -> None: ...
    @_property
    def command(self) -> windows_ui_xaml_input.ICommand: ...
    @command.setter
    def command(self, value: windows_ui_xaml_input.ICommand) -> None: ...
    @_property
    def icon(self) -> IconElement: ...
    @icon.setter
    def icon(self, value: IconElement) -> None: ...
    @_property
    def keyboard_accelerator_text_override(self) -> str: ...
    @keyboard_accelerator_text_override.setter
    def keyboard_accelerator_text_override(self, value: str) -> None: ...
    @_property
    def template_settings(self) -> windows_ui_xaml_controls_primitives.MenuFlyoutItemTemplateSettings: ...

class MenuFlyoutItemBase_Static(Control_Static):
    pass

class MenuFlyoutItemBase(Control, metaclass=MenuFlyoutItemBase_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MenuFlyoutItemBase: ...

class MenuFlyoutPresenter_Static(ItemsControl_Static):
    @_property
    def is_default_shadow_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class MenuFlyoutPresenter(ItemsControl, metaclass=MenuFlyoutPresenter_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MenuFlyoutPresenter: ...
    def __new__(cls: typing.Type[MenuFlyoutPresenter]) -> MenuFlyoutPresenter: ...
    @_property
    def template_settings(self) -> windows_ui_xaml_controls_primitives.MenuFlyoutPresenterTemplateSettings: ...
    @_property
    def is_default_shadow_enabled(self) -> bool: ...
    @is_default_shadow_enabled.setter
    def is_default_shadow_enabled(self, value: bool) -> None: ...

class MenuFlyoutSeparator_Static(MenuFlyoutItemBase_Static):
    pass

class MenuFlyoutSeparator(MenuFlyoutItemBase, metaclass=MenuFlyoutSeparator_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MenuFlyoutSeparator: ...
    def __new__(cls: typing.Type[MenuFlyoutSeparator]) -> MenuFlyoutSeparator: ...

@typing.final
class MenuFlyoutSubItem_Static(MenuFlyoutItemBase_Static):
    @_property
    def text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def icon_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class MenuFlyoutSubItem(MenuFlyoutItemBase, metaclass=MenuFlyoutSubItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> MenuFlyoutSubItem: ...
    def __new__(cls: typing.Type[MenuFlyoutSubItem]) -> MenuFlyoutSubItem: ...
    @_property
    def text(self) -> str: ...
    @text.setter
    def text(self, value: str) -> None: ...
    @_property
    def items(self) -> typing.MutableSequence[MenuFlyoutItemBase]: ...
    @_property
    def icon(self) -> IconElement: ...
    @icon.setter
    def icon(self, value: IconElement) -> None: ...

class NavigationView_Static(ContentControl_Static):
    @_property
    def expanded_mode_threshold_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_settings_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def menu_item_container_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def menu_item_container_style_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def menu_item_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def menu_item_template_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def menu_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def menu_items_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def open_pane_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane_footer_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane_toggle_button_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_item_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def always_show_header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def auto_suggest_box_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def compact_mode_threshold_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def compact_pane_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def display_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def settings_item_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_pane_open_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_pane_toggle_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_back_button_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_back_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane_title_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_pane_visible_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def overflow_label_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane_custom_content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane_display_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane_header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selection_follows_focus_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def shoulder_navigation_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def template_settings_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def content_overlay_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class NavigationView(ContentControl, metaclass=NavigationView_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> NavigationView: ...
    def __new__(cls: typing.Type[NavigationView]) -> NavigationView: ...
    def container_from_menu_item(self, item: winrt.system.Object, /) -> windows_ui_xaml.DependencyObject: ...
    def menu_item_from_container(self, container: windows_ui_xaml.DependencyObject, /) -> winrt.system.Object: ...
    def add_display_mode_changed(self, handler: windows_foundation.TypedEventHandler[NavigationView, NavigationViewDisplayModeChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_display_mode_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_item_invoked(self, handler: windows_foundation.TypedEventHandler[NavigationView, NavigationViewItemInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_item_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_selection_changed(self, handler: windows_foundation.TypedEventHandler[NavigationView, NavigationViewSelectionChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_selection_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_back_requested(self, handler: windows_foundation.TypedEventHandler[NavigationView, NavigationViewBackRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_back_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pane_closed(self, handler: windows_foundation.TypedEventHandler[NavigationView, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pane_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pane_closing(self, handler: windows_foundation.TypedEventHandler[NavigationView, NavigationViewPaneClosingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pane_closing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pane_opened(self, handler: windows_foundation.TypedEventHandler[NavigationView, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pane_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pane_opening(self, handler: windows_foundation.TypedEventHandler[NavigationView, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pane_opening(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def menu_item_template_selector(self) -> DataTemplateSelector: ...
    @menu_item_template_selector.setter
    def menu_item_template_selector(self, value: DataTemplateSelector) -> None: ...
    @_property
    def menu_item_template(self) -> windows_ui_xaml.DataTemplate: ...
    @menu_item_template.setter
    def menu_item_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def menu_item_container_style_selector(self) -> StyleSelector: ...
    @menu_item_container_style_selector.setter
    def menu_item_container_style_selector(self, value: StyleSelector) -> None: ...
    @_property
    def menu_item_container_style(self) -> windows_ui_xaml.Style: ...
    @menu_item_container_style.setter
    def menu_item_container_style(self, value: windows_ui_xaml.Style) -> None: ...
    @_property
    def is_settings_visible(self) -> bool: ...
    @is_settings_visible.setter
    def is_settings_visible(self, value: bool) -> None: ...
    @_property
    def is_pane_toggle_button_visible(self) -> bool: ...
    @is_pane_toggle_button_visible.setter
    def is_pane_toggle_button_visible(self, value: bool) -> None: ...
    @_property
    def is_pane_open(self) -> bool: ...
    @is_pane_open.setter
    def is_pane_open(self, value: bool) -> None: ...
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def expanded_mode_threshold_width(self) -> winrt.system.Double: ...
    @expanded_mode_threshold_width.setter
    def expanded_mode_threshold_width(self, value: winrt.system.Double) -> None: ...
    @_property
    def menu_items_source(self) -> winrt.system.Object: ...
    @menu_items_source.setter
    def menu_items_source(self, value: winrt.system.Object) -> None: ...
    @_property
    def compact_pane_length(self) -> winrt.system.Double: ...
    @compact_pane_length.setter
    def compact_pane_length(self, value: winrt.system.Double) -> None: ...
    @_property
    def compact_mode_threshold_width(self) -> winrt.system.Double: ...
    @compact_mode_threshold_width.setter
    def compact_mode_threshold_width(self, value: winrt.system.Double) -> None: ...
    @_property
    def auto_suggest_box(self) -> AutoSuggestBox: ...
    @auto_suggest_box.setter
    def auto_suggest_box(self, value: AutoSuggestBox) -> None: ...
    @_property
    def open_pane_length(self) -> winrt.system.Double: ...
    @open_pane_length.setter
    def open_pane_length(self, value: winrt.system.Double) -> None: ...
    @_property
    def always_show_header(self) -> bool: ...
    @always_show_header.setter
    def always_show_header(self, value: bool) -> None: ...
    @_property
    def selected_item(self) -> winrt.system.Object: ...
    @selected_item.setter
    def selected_item(self, value: winrt.system.Object) -> None: ...
    @_property
    def pane_toggle_button_style(self) -> windows_ui_xaml.Style: ...
    @pane_toggle_button_style.setter
    def pane_toggle_button_style(self, value: windows_ui_xaml.Style) -> None: ...
    @_property
    def pane_footer(self) -> windows_ui_xaml.UIElement: ...
    @pane_footer.setter
    def pane_footer(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def display_mode(self) -> NavigationViewDisplayMode: ...
    @_property
    def menu_items(self) -> typing.MutableSequence[winrt.system.Object]: ...
    @_property
    def settings_item(self) -> winrt.system.Object: ...
    @_property
    def pane_title(self) -> str: ...
    @pane_title.setter
    def pane_title(self, value: str) -> None: ...
    @_property
    def is_back_enabled(self) -> bool: ...
    @is_back_enabled.setter
    def is_back_enabled(self, value: bool) -> None: ...
    @_property
    def is_back_button_visible(self) -> NavigationViewBackButtonVisible: ...
    @is_back_button_visible.setter
    def is_back_button_visible(self, value: NavigationViewBackButtonVisible) -> None: ...
    @_property
    def shoulder_navigation_enabled(self) -> NavigationViewShoulderNavigationEnabled: ...
    @shoulder_navigation_enabled.setter
    def shoulder_navigation_enabled(self, value: NavigationViewShoulderNavigationEnabled) -> None: ...
    @_property
    def selection_follows_focus(self) -> NavigationViewSelectionFollowsFocus: ...
    @selection_follows_focus.setter
    def selection_follows_focus(self, value: NavigationViewSelectionFollowsFocus) -> None: ...
    @_property
    def pane_header(self) -> windows_ui_xaml.UIElement: ...
    @pane_header.setter
    def pane_header(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def pane_display_mode(self) -> NavigationViewPaneDisplayMode: ...
    @pane_display_mode.setter
    def pane_display_mode(self, value: NavigationViewPaneDisplayMode) -> None: ...
    @_property
    def pane_custom_content(self) -> windows_ui_xaml.UIElement: ...
    @pane_custom_content.setter
    def pane_custom_content(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def overflow_label_mode(self) -> NavigationViewOverflowLabelMode: ...
    @overflow_label_mode.setter
    def overflow_label_mode(self, value: NavigationViewOverflowLabelMode) -> None: ...
    @_property
    def is_pane_visible(self) -> bool: ...
    @is_pane_visible.setter
    def is_pane_visible(self, value: bool) -> None: ...
    @_property
    def content_overlay(self) -> windows_ui_xaml.UIElement: ...
    @content_overlay.setter
    def content_overlay(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def template_settings(self) -> NavigationViewTemplateSettings: ...

@typing.final
class NavigationViewBackRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> NavigationViewBackRequestedEventArgs: ...

@typing.final
class NavigationViewDisplayModeChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> NavigationViewDisplayModeChangedEventArgs: ...
    @_property
    def display_mode(self) -> NavigationViewDisplayMode: ...

@typing.final
class NavigationViewItemInvokedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> NavigationViewItemInvokedEventArgs: ...
    def __new__(cls: typing.Type[NavigationViewItemInvokedEventArgs]) -> NavigationViewItemInvokedEventArgs: ...
    @_property
    def invoked_item(self) -> winrt.system.Object: ...
    @_property
    def is_settings_invoked(self) -> bool: ...
    @_property
    def invoked_item_container(self) -> NavigationViewItemBase: ...
    @_property
    def recommended_navigation_transition_info(self) -> windows_ui_xaml_media_animation.NavigationTransitionInfo: ...

@typing.final
class NavigationViewPaneClosingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> NavigationViewPaneClosingEventArgs: ...
    @_property
    def cancel(self) -> bool: ...
    @cancel.setter
    def cancel(self, value: bool) -> None: ...

@typing.final
class NavigationViewSelectionChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> NavigationViewSelectionChangedEventArgs: ...
    @_property
    def is_settings_selected(self) -> bool: ...
    @_property
    def selected_item(self) -> winrt.system.Object: ...
    @_property
    def recommended_navigation_transition_info(self) -> windows_ui_xaml_media_animation.NavigationTransitionInfo: ...
    @_property
    def selected_item_container(self) -> NavigationViewItemBase: ...

class NavigationViewTemplateSettings_Static(windows_ui_xaml.DependencyObject_Static):
    @_property
    def back_button_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def left_pane_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def overflow_button_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane_toggle_button_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def single_selection_follows_focus_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def top_padding_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def top_pane_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class NavigationViewTemplateSettings(windows_ui_xaml.DependencyObject, metaclass=NavigationViewTemplateSettings_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> NavigationViewTemplateSettings: ...
    def __new__(cls: typing.Type[NavigationViewTemplateSettings]) -> NavigationViewTemplateSettings: ...
    @_property
    def back_button_visibility(self) -> windows_ui_xaml.Visibility: ...
    @_property
    def left_pane_visibility(self) -> windows_ui_xaml.Visibility: ...
    @_property
    def overflow_button_visibility(self) -> windows_ui_xaml.Visibility: ...
    @_property
    def pane_toggle_button_visibility(self) -> windows_ui_xaml.Visibility: ...
    @_property
    def single_selection_follows_focus(self) -> bool: ...
    @_property
    def top_padding(self) -> winrt.system.Double: ...
    @_property
    def top_pane_visibility(self) -> windows_ui_xaml.Visibility: ...

@typing.final
class NotifyEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> NotifyEventArgs: ...
    @_property
    def value(self) -> str: ...
    @_property
    def calling_uri(self) -> windows_foundation.Uri: ...

class Page_Static(UserControl_Static):
    @_property
    def bottom_app_bar_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def frame_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def top_app_bar_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class Page(UserControl, metaclass=Page_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Page: ...
    def __new__(cls: typing.Type[Page]) -> Page: ...
    @_property
    def top_app_bar(self) -> AppBar: ...
    @top_app_bar.setter
    def top_app_bar(self, value: AppBar) -> None: ...
    @_property
    def navigation_cache_mode(self) -> windows_ui_xaml_navigation.NavigationCacheMode: ...
    @navigation_cache_mode.setter
    def navigation_cache_mode(self, value: windows_ui_xaml_navigation.NavigationCacheMode) -> None: ...
    @_property
    def bottom_app_bar(self) -> AppBar: ...
    @bottom_app_bar.setter
    def bottom_app_bar(self, value: AppBar) -> None: ...
    @_property
    def frame(self) -> Frame: ...

class Panel_Static(windows_ui_xaml.FrameworkElement_Static):
    @_property
    def background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def children_transitions_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_items_host_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class Panel(windows_ui_xaml.FrameworkElement, metaclass=Panel_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Panel: ...
    @_property
    def children_transitions(self) -> windows_ui_xaml_media_animation.TransitionCollection: ...
    @children_transitions.setter
    def children_transitions(self, value: windows_ui_xaml_media_animation.TransitionCollection) -> None: ...
    @_property
    def background(self) -> windows_ui_xaml_media.Brush: ...
    @background.setter
    def background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def children(self) -> UIElementCollection: ...
    @_property
    def is_items_host(self) -> bool: ...
    @_property
    def background_transition(self) -> windows_ui_xaml.BrushTransition: ...
    @background_transition.setter
    def background_transition(self, value: windows_ui_xaml.BrushTransition) -> None: ...

class ParallaxView_Static(windows_ui_xaml.FrameworkElement_Static):
    @_property
    def child_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_shift_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_source_end_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_source_offset_kind_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_source_start_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_horizontal_shift_clamped_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_vertical_shift_clamped_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_horizontal_shift_ratio_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_vertical_shift_ratio_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_shift_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_source_end_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_source_offset_kind_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_source_start_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ParallaxView(windows_ui_xaml.FrameworkElement, metaclass=ParallaxView_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ParallaxView: ...
    def __new__(cls: typing.Type[ParallaxView]) -> ParallaxView: ...
    def refresh_automatic_horizontal_offsets(self) -> None: ...
    def refresh_automatic_vertical_offsets(self) -> None: ...
    @_property
    def vertical_source_start_offset(self) -> winrt.system.Double: ...
    @vertical_source_start_offset.setter
    def vertical_source_start_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def vertical_source_offset_kind(self) -> ParallaxSourceOffsetKind: ...
    @vertical_source_offset_kind.setter
    def vertical_source_offset_kind(self, value: ParallaxSourceOffsetKind) -> None: ...
    @_property
    def vertical_source_end_offset(self) -> winrt.system.Double: ...
    @vertical_source_end_offset.setter
    def vertical_source_end_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def vertical_shift(self) -> winrt.system.Double: ...
    @vertical_shift.setter
    def vertical_shift(self, value: winrt.system.Double) -> None: ...
    @_property
    def source(self) -> windows_ui_xaml.UIElement: ...
    @source.setter
    def source(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def max_vertical_shift_ratio(self) -> winrt.system.Double: ...
    @max_vertical_shift_ratio.setter
    def max_vertical_shift_ratio(self, value: winrt.system.Double) -> None: ...
    @_property
    def max_horizontal_shift_ratio(self) -> winrt.system.Double: ...
    @max_horizontal_shift_ratio.setter
    def max_horizontal_shift_ratio(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_vertical_shift_clamped(self) -> bool: ...
    @is_vertical_shift_clamped.setter
    def is_vertical_shift_clamped(self, value: bool) -> None: ...
    @_property
    def is_horizontal_shift_clamped(self) -> bool: ...
    @is_horizontal_shift_clamped.setter
    def is_horizontal_shift_clamped(self, value: bool) -> None: ...
    @_property
    def horizontal_source_start_offset(self) -> winrt.system.Double: ...
    @horizontal_source_start_offset.setter
    def horizontal_source_start_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def horizontal_source_offset_kind(self) -> ParallaxSourceOffsetKind: ...
    @horizontal_source_offset_kind.setter
    def horizontal_source_offset_kind(self, value: ParallaxSourceOffsetKind) -> None: ...
    @_property
    def horizontal_source_end_offset(self) -> winrt.system.Double: ...
    @horizontal_source_end_offset.setter
    def horizontal_source_end_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def horizontal_shift(self) -> winrt.system.Double: ...
    @horizontal_shift.setter
    def horizontal_shift(self, value: winrt.system.Double) -> None: ...
    @_property
    def child(self) -> windows_ui_xaml.UIElement: ...
    @child.setter
    def child(self, value: windows_ui_xaml.UIElement) -> None: ...

@typing.final
class PasswordBox_Static(Control_Static):
    @_property
    def is_password_reveal_button_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def password_char_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def password_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placeholder_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def prevent_keyboard_display_on_programmatic_focus_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selection_highlight_color_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def input_scope_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def password_reveal_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_reading_order_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def can_paste_clipboard_content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def description_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selection_flyout_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class PasswordBox(Control, metaclass=PasswordBox_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PasswordBox: ...
    def __new__(cls: typing.Type[PasswordBox]) -> PasswordBox: ...
    def paste_from_clipboard(self) -> None: ...
    def select_all(self) -> None: ...
    def add_context_menu_opening(self, handler: ContextMenuOpeningEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_context_menu_opening(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_password_changed(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_password_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_paste(self, handler: TextControlPasteEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_paste(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_password_changing(self, handler: windows_foundation.TypedEventHandler[PasswordBox, PasswordBoxPasswordChangingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_password_changing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def password_char(self) -> str: ...
    @password_char.setter
    def password_char(self, value: str) -> None: ...
    @_property
    def password(self) -> str: ...
    @password.setter
    def password(self, value: str) -> None: ...
    @_property
    def max_length(self) -> winrt.system.Int32: ...
    @max_length.setter
    def max_length(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_password_reveal_button_enabled(self) -> bool: ...
    @is_password_reveal_button_enabled.setter
    def is_password_reveal_button_enabled(self, value: bool) -> None: ...
    @_property
    def selection_highlight_color(self) -> windows_ui_xaml_media.SolidColorBrush: ...
    @selection_highlight_color.setter
    def selection_highlight_color(self, value: windows_ui_xaml_media.SolidColorBrush) -> None: ...
    @_property
    def prevent_keyboard_display_on_programmatic_focus(self) -> bool: ...
    @prevent_keyboard_display_on_programmatic_focus.setter
    def prevent_keyboard_display_on_programmatic_focus(self, value: bool) -> None: ...
    @_property
    def placeholder_text(self) -> str: ...
    @placeholder_text.setter
    def placeholder_text(self, value: str) -> None: ...
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def text_reading_order(self) -> windows_ui_xaml.TextReadingOrder: ...
    @text_reading_order.setter
    def text_reading_order(self, value: windows_ui_xaml.TextReadingOrder) -> None: ...
    @_property
    def password_reveal_mode(self) -> PasswordRevealMode: ...
    @password_reveal_mode.setter
    def password_reveal_mode(self, value: PasswordRevealMode) -> None: ...
    @_property
    def input_scope(self) -> windows_ui_xaml_input.InputScope: ...
    @input_scope.setter
    def input_scope(self, value: windows_ui_xaml_input.InputScope) -> None: ...
    @_property
    def selection_flyout(self) -> windows_ui_xaml_controls_primitives.FlyoutBase: ...
    @selection_flyout.setter
    def selection_flyout(self, value: windows_ui_xaml_controls_primitives.FlyoutBase) -> None: ...
    @_property
    def description(self) -> winrt.system.Object: ...
    @description.setter
    def description(self, value: winrt.system.Object) -> None: ...
    @_property
    def can_paste_clipboard_content(self) -> bool: ...

@typing.final
class PasswordBoxPasswordChangingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PasswordBoxPasswordChangingEventArgs: ...
    @_property
    def is_content_changing(self) -> bool: ...

class PathIcon_Static(IconElement_Static):
    @_property
    def data_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class PathIcon(IconElement, metaclass=PathIcon_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PathIcon: ...
    def __new__(cls: typing.Type[PathIcon]) -> PathIcon: ...
    @_property
    def data(self) -> windows_ui_xaml_media.Geometry: ...
    @data.setter
    def data(self, value: windows_ui_xaml_media.Geometry) -> None: ...

class PathIconSource_Static(IconSource_Static):
    @_property
    def data_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class PathIconSource(IconSource, metaclass=PathIconSource_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PathIconSource: ...
    def __new__(cls: typing.Type[PathIconSource]) -> PathIconSource: ...
    @_property
    def data(self) -> windows_ui_xaml_media.Geometry: ...
    @data.setter
    def data(self, value: windows_ui_xaml_media.Geometry) -> None: ...

class PersonPicture_Static(Control_Static):
    @_property
    def badge_glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def badge_image_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def badge_number_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def badge_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def contact_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def display_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def initials_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_group_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def prefer_small_image_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def profile_picture_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class PersonPicture(Control, metaclass=PersonPicture_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PersonPicture: ...
    def __new__(cls: typing.Type[PersonPicture]) -> PersonPicture: ...
    @_property
    def profile_picture(self) -> windows_ui_xaml_media.ImageSource: ...
    @profile_picture.setter
    def profile_picture(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    @_property
    def prefer_small_image(self) -> bool: ...
    @prefer_small_image.setter
    def prefer_small_image(self, value: bool) -> None: ...
    @_property
    def is_group(self) -> bool: ...
    @is_group.setter
    def is_group(self, value: bool) -> None: ...
    @_property
    def initials(self) -> str: ...
    @initials.setter
    def initials(self, value: str) -> None: ...
    @_property
    def display_name(self) -> str: ...
    @display_name.setter
    def display_name(self, value: str) -> None: ...
    @_property
    def contact(self) -> windows_applicationmodel_contacts.Contact: ...
    @contact.setter
    def contact(self, value: windows_applicationmodel_contacts.Contact) -> None: ...
    @_property
    def badge_text(self) -> str: ...
    @badge_text.setter
    def badge_text(self, value: str) -> None: ...
    @_property
    def badge_number(self) -> winrt.system.Int32: ...
    @badge_number.setter
    def badge_number(self, value: winrt.system.Int32) -> None: ...
    @_property
    def badge_image_source(self) -> windows_ui_xaml_media.ImageSource: ...
    @badge_image_source.setter
    def badge_image_source(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    @_property
    def badge_glyph(self) -> str: ...
    @badge_glyph.setter
    def badge_glyph(self, value: str) -> None: ...

@typing.final
class PickerConfirmedEventArgs(windows_ui_xaml.DependencyObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PickerConfirmedEventArgs: ...
    def __new__(cls: typing.Type[PickerConfirmedEventArgs]) -> PickerConfirmedEventArgs: ...

@typing.final
class PickerFlyoutPresenter(ContentControl):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PickerFlyoutPresenter: ...

class Pivot_Static(ItemsControl_Static):
    def get_slide_in_animation_group(cls, element: windows_ui_xaml.FrameworkElement, /) -> PivotSlideInAnimationGroup: ...
    def set_slide_in_animation_group(cls, element: windows_ui_xaml.FrameworkElement, value: PivotSlideInAnimationGroup, /) -> None: ...
    @_property
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_locked_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_index_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_item_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def slide_in_animation_group_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def title_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def title_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def left_header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def left_header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def right_header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def right_header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_focus_visual_placement_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_header_items_carousel_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class Pivot(ItemsControl, metaclass=Pivot_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Pivot: ...
    def __new__(cls: typing.Type[Pivot]) -> Pivot: ...
    def add_pivot_item_loaded(self, handler: windows_foundation.TypedEventHandler[Pivot, PivotItemEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pivot_item_loaded(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pivot_item_loading(self, handler: windows_foundation.TypedEventHandler[Pivot, PivotItemEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pivot_item_loading(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pivot_item_unloaded(self, handler: windows_foundation.TypedEventHandler[Pivot, PivotItemEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pivot_item_unloaded(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pivot_item_unloading(self, handler: windows_foundation.TypedEventHandler[Pivot, PivotItemEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pivot_item_unloading(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_selection_changed(self, handler: SelectionChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_selection_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def title_template(self) -> windows_ui_xaml.DataTemplate: ...
    @title_template.setter
    def title_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def title(self) -> winrt.system.Object: ...
    @title.setter
    def title(self, value: winrt.system.Object) -> None: ...
    @_property
    def selected_item(self) -> winrt.system.Object: ...
    @selected_item.setter
    def selected_item(self, value: winrt.system.Object) -> None: ...
    @_property
    def selected_index(self) -> winrt.system.Int32: ...
    @selected_index.setter
    def selected_index(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_locked(self) -> bool: ...
    @is_locked.setter
    def is_locked(self, value: bool) -> None: ...
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def right_header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @right_header_template.setter
    def right_header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def right_header(self) -> winrt.system.Object: ...
    @right_header.setter
    def right_header(self, value: winrt.system.Object) -> None: ...
    @_property
    def left_header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @left_header_template.setter
    def left_header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def left_header(self) -> winrt.system.Object: ...
    @left_header.setter
    def left_header(self, value: winrt.system.Object) -> None: ...
    @_property
    def is_header_items_carousel_enabled(self) -> bool: ...
    @is_header_items_carousel_enabled.setter
    def is_header_items_carousel_enabled(self, value: bool) -> None: ...
    @_property
    def header_focus_visual_placement(self) -> PivotHeaderFocusVisualPlacement: ...
    @header_focus_visual_placement.setter
    def header_focus_visual_placement(self, value: PivotHeaderFocusVisualPlacement) -> None: ...

class PivotItem_Static(ContentControl_Static):
    @_property
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class PivotItem(ContentControl, metaclass=PivotItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PivotItem: ...
    def __new__(cls: typing.Type[PivotItem]) -> PivotItem: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...

@typing.final
class PivotItemEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PivotItemEventArgs: ...
    def __new__(cls: typing.Type[PivotItemEventArgs]) -> PivotItemEventArgs: ...
    @_property
    def item(self) -> PivotItem: ...
    @item.setter
    def item(self, value: PivotItem) -> None: ...

@typing.final
class ProgressRing_Static(Control_Static):
    @_property
    def is_active_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ProgressRing(Control, metaclass=ProgressRing_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ProgressRing: ...
    def __new__(cls: typing.Type[ProgressRing]) -> ProgressRing: ...
    @_property
    def is_active(self) -> bool: ...
    @is_active.setter
    def is_active(self, value: bool) -> None: ...
    @_property
    def template_settings(self) -> windows_ui_xaml_controls_primitives.ProgressRingTemplateSettings: ...

class RatingControl_Static(Control_Static):
    @_property
    def caption_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def initial_set_value_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_clear_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_read_only_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_info_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_rating_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placeholder_value_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def value_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RatingControl(Control, metaclass=RatingControl_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RatingControl: ...
    def __new__(cls: typing.Type[RatingControl]) -> RatingControl: ...
    def add_value_changed(self, handler: windows_foundation.TypedEventHandler[RatingControl, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_value_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def value(self) -> winrt.system.Double: ...
    @value.setter
    def value(self, value: winrt.system.Double) -> None: ...
    @_property
    def placeholder_value(self) -> winrt.system.Double: ...
    @placeholder_value.setter
    def placeholder_value(self, value: winrt.system.Double) -> None: ...
    @_property
    def max_rating(self) -> winrt.system.Int32: ...
    @max_rating.setter
    def max_rating(self, value: winrt.system.Int32) -> None: ...
    @_property
    def item_info(self) -> RatingItemInfo: ...
    @item_info.setter
    def item_info(self, value: RatingItemInfo) -> None: ...
    @_property
    def is_read_only(self) -> bool: ...
    @is_read_only.setter
    def is_read_only(self, value: bool) -> None: ...
    @_property
    def is_clear_enabled(self) -> bool: ...
    @is_clear_enabled.setter
    def is_clear_enabled(self, value: bool) -> None: ...
    @_property
    def initial_set_value(self) -> winrt.system.Int32: ...
    @initial_set_value.setter
    def initial_set_value(self, value: winrt.system.Int32) -> None: ...
    @_property
    def caption(self) -> str: ...
    @caption.setter
    def caption(self, value: str) -> None: ...

class RatingItemFontInfo_Static(RatingItemInfo_Static):
    @_property
    def disabled_glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placeholder_glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pointer_over_glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pointer_over_placeholder_glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def unset_glyph_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RatingItemFontInfo(RatingItemInfo, metaclass=RatingItemFontInfo_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RatingItemFontInfo: ...
    def __new__(cls: typing.Type[RatingItemFontInfo]) -> RatingItemFontInfo: ...
    @_property
    def unset_glyph(self) -> str: ...
    @unset_glyph.setter
    def unset_glyph(self, value: str) -> None: ...
    @_property
    def pointer_over_placeholder_glyph(self) -> str: ...
    @pointer_over_placeholder_glyph.setter
    def pointer_over_placeholder_glyph(self, value: str) -> None: ...
    @_property
    def pointer_over_glyph(self) -> str: ...
    @pointer_over_glyph.setter
    def pointer_over_glyph(self, value: str) -> None: ...
    @_property
    def placeholder_glyph(self) -> str: ...
    @placeholder_glyph.setter
    def placeholder_glyph(self, value: str) -> None: ...
    @_property
    def glyph(self) -> str: ...
    @glyph.setter
    def glyph(self, value: str) -> None: ...
    @_property
    def disabled_glyph(self) -> str: ...
    @disabled_glyph.setter
    def disabled_glyph(self, value: str) -> None: ...

class RatingItemImageInfo_Static(RatingItemInfo_Static):
    @_property
    def disabled_image_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def image_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placeholder_image_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pointer_over_image_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pointer_over_placeholder_image_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def unset_image_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RatingItemImageInfo(RatingItemInfo, metaclass=RatingItemImageInfo_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RatingItemImageInfo: ...
    def __new__(cls: typing.Type[RatingItemImageInfo]) -> RatingItemImageInfo: ...
    @_property
    def unset_image(self) -> windows_ui_xaml_media.ImageSource: ...
    @unset_image.setter
    def unset_image(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    @_property
    def pointer_over_placeholder_image(self) -> windows_ui_xaml_media.ImageSource: ...
    @pointer_over_placeholder_image.setter
    def pointer_over_placeholder_image(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    @_property
    def pointer_over_image(self) -> windows_ui_xaml_media.ImageSource: ...
    @pointer_over_image.setter
    def pointer_over_image(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    @_property
    def placeholder_image(self) -> windows_ui_xaml_media.ImageSource: ...
    @placeholder_image.setter
    def placeholder_image(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    @_property
    def image(self) -> windows_ui_xaml_media.ImageSource: ...
    @image.setter
    def image(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    @_property
    def disabled_image(self) -> windows_ui_xaml_media.ImageSource: ...
    @disabled_image.setter
    def disabled_image(self, value: windows_ui_xaml_media.ImageSource) -> None: ...

class RatingItemInfo_Static(windows_ui_xaml.DependencyObject_Static):
    pass

class RatingItemInfo(windows_ui_xaml.DependencyObject, metaclass=RatingItemInfo_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RatingItemInfo: ...
    def __new__(cls: typing.Type[RatingItemInfo]) -> RatingItemInfo: ...

class RefreshContainer_Static(ContentControl_Static):
    @_property
    def pull_direction_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def visualizer_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RefreshContainer(ContentControl, metaclass=RefreshContainer_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RefreshContainer: ...
    def __new__(cls: typing.Type[RefreshContainer]) -> RefreshContainer: ...
    def request_refresh(self) -> None: ...
    def add_refresh_requested(self, handler: windows_foundation.TypedEventHandler[RefreshContainer, RefreshRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_refresh_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def visualizer(self) -> RefreshVisualizer: ...
    @visualizer.setter
    def visualizer(self, value: RefreshVisualizer) -> None: ...
    @_property
    def pull_direction(self) -> RefreshPullDirection: ...
    @pull_direction.setter
    def pull_direction(self, value: RefreshPullDirection) -> None: ...

@typing.final
class RefreshInteractionRatioChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RefreshInteractionRatioChangedEventArgs: ...
    @_property
    def interaction_ratio(self) -> winrt.system.Double: ...

@typing.final
class RefreshRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RefreshRequestedEventArgs: ...
    def get_deferral(self) -> windows_foundation.Deferral: ...

@typing.final
class RefreshStateChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RefreshStateChangedEventArgs: ...
    @_property
    def new_state(self) -> RefreshVisualizerState: ...
    @_property
    def old_state(self) -> RefreshVisualizerState: ...

class RefreshVisualizer_Static(Control_Static):
    @_property
    def content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def info_provider_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def orientation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def state_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RefreshVisualizer(Control, metaclass=RefreshVisualizer_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RefreshVisualizer: ...
    def __new__(cls: typing.Type[RefreshVisualizer]) -> RefreshVisualizer: ...
    def request_refresh(self) -> None: ...
    def add_refresh_requested(self, handler: windows_foundation.TypedEventHandler[RefreshVisualizer, RefreshRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_refresh_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_refresh_state_changed(self, handler: windows_foundation.TypedEventHandler[RefreshVisualizer, RefreshStateChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_refresh_state_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def orientation(self) -> RefreshVisualizerOrientation: ...
    @orientation.setter
    def orientation(self, value: RefreshVisualizerOrientation) -> None: ...
    @_property
    def content(self) -> windows_ui_xaml.UIElement: ...
    @content.setter
    def content(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def state(self) -> RefreshVisualizerState: ...

class RelativePanel_Static(Panel_Static):
    def get_above(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Object: ...
    def get_align_bottom_with(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Object: ...
    def get_align_bottom_with_panel(cls, element: windows_ui_xaml.UIElement, /) -> bool: ...
    def get_align_horizontal_center_with(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Object: ...
    def get_align_horizontal_center_with_panel(cls, element: windows_ui_xaml.UIElement, /) -> bool: ...
    def get_align_left_with(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Object: ...
    def get_align_left_with_panel(cls, element: windows_ui_xaml.UIElement, /) -> bool: ...
    def get_align_right_with(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Object: ...
    def get_align_right_with_panel(cls, element: windows_ui_xaml.UIElement, /) -> bool: ...
    def get_align_top_with(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Object: ...
    def get_align_top_with_panel(cls, element: windows_ui_xaml.UIElement, /) -> bool: ...
    def get_align_vertical_center_with(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Object: ...
    def get_align_vertical_center_with_panel(cls, element: windows_ui_xaml.UIElement, /) -> bool: ...
    def get_below(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Object: ...
    def get_left_of(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Object: ...
    def get_right_of(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Object: ...
    def set_above(cls, element: windows_ui_xaml.UIElement, value: winrt.system.Object, /) -> None: ...
    def set_align_bottom_with(cls, element: windows_ui_xaml.UIElement, value: winrt.system.Object, /) -> None: ...
    def set_align_bottom_with_panel(cls, element: windows_ui_xaml.UIElement, value: bool, /) -> None: ...
    def set_align_horizontal_center_with(cls, element: windows_ui_xaml.UIElement, value: winrt.system.Object, /) -> None: ...
    def set_align_horizontal_center_with_panel(cls, element: windows_ui_xaml.UIElement, value: bool, /) -> None: ...
    def set_align_left_with(cls, element: windows_ui_xaml.UIElement, value: winrt.system.Object, /) -> None: ...
    def set_align_left_with_panel(cls, element: windows_ui_xaml.UIElement, value: bool, /) -> None: ...
    def set_align_right_with(cls, element: windows_ui_xaml.UIElement, value: winrt.system.Object, /) -> None: ...
    def set_align_right_with_panel(cls, element: windows_ui_xaml.UIElement, value: bool, /) -> None: ...
    def set_align_top_with(cls, element: windows_ui_xaml.UIElement, value: winrt.system.Object, /) -> None: ...
    def set_align_top_with_panel(cls, element: windows_ui_xaml.UIElement, value: bool, /) -> None: ...
    def set_align_vertical_center_with(cls, element: windows_ui_xaml.UIElement, value: winrt.system.Object, /) -> None: ...
    def set_align_vertical_center_with_panel(cls, element: windows_ui_xaml.UIElement, value: bool, /) -> None: ...
    def set_below(cls, element: windows_ui_xaml.UIElement, value: winrt.system.Object, /) -> None: ...
    def set_left_of(cls, element: windows_ui_xaml.UIElement, value: winrt.system.Object, /) -> None: ...
    def set_right_of(cls, element: windows_ui_xaml.UIElement, value: winrt.system.Object, /) -> None: ...
    @_property
    def above_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def align_bottom_with_panel_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def align_bottom_with_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def align_horizontal_center_with_panel_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def align_horizontal_center_with_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def align_left_with_panel_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def align_left_with_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def align_right_with_panel_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def align_right_with_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def align_top_with_panel_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def align_top_with_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def align_vertical_center_with_panel_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def align_vertical_center_with_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def below_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def border_thickness_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def corner_radius_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def left_of_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def padding_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def right_of_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def background_sizing_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RelativePanel(Panel, metaclass=RelativePanel_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RelativePanel: ...
    def __new__(cls: typing.Type[RelativePanel]) -> RelativePanel: ...
    @_property
    def padding(self) -> windows_ui_xaml.Thickness: ...
    @padding.setter
    def padding(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def corner_radius(self) -> windows_ui_xaml.CornerRadius: ...
    @corner_radius.setter
    def corner_radius(self, value: windows_ui_xaml.CornerRadius) -> None: ...
    @_property
    def border_thickness(self) -> windows_ui_xaml.Thickness: ...
    @border_thickness.setter
    def border_thickness(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @border_brush.setter
    def border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def background_sizing(self) -> BackgroundSizing: ...
    @background_sizing.setter
    def background_sizing(self, value: BackgroundSizing) -> None: ...

class RichEditBox_Static(Control_Static):
    @_property
    def accepts_return_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def input_scope_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_read_only_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_spell_check_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_text_prediction_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_wrapping_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_color_font_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placeholder_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def prevent_keyboard_display_on_programmatic_focus_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selection_highlight_color_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def desired_candidate_window_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_reading_order_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def clipboard_copy_format_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selection_highlight_color_when_not_focused_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def character_casing_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def disabled_formatting_accelerators_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_text_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def content_link_background_color_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def content_link_foreground_color_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def content_link_providers_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def handwriting_view_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_handwriting_view_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def description_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def proofing_menu_flyout_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selection_flyout_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class RichEditBox(Control, metaclass=RichEditBox_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RichEditBox: ...
    def __new__(cls: typing.Type[RichEditBox]) -> RichEditBox: ...
    def get_linguistic_alternatives_async(self) -> windows_foundation.IAsyncOperation[typing.Sequence[str]]: ...
    def add_context_menu_opening(self, handler: ContextMenuOpeningEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_context_menu_opening(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_selection_changed(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_selection_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_text_changed(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_text_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_paste(self, handler: TextControlPasteEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_paste(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_candidate_window_bounds_changed(self, handler: windows_foundation.TypedEventHandler[RichEditBox, CandidateWindowBoundsChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_candidate_window_bounds_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_text_changing(self, handler: windows_foundation.TypedEventHandler[RichEditBox, RichEditBoxTextChangingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_text_changing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_text_composition_changed(self, handler: windows_foundation.TypedEventHandler[RichEditBox, TextCompositionChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_text_composition_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_text_composition_ended(self, handler: windows_foundation.TypedEventHandler[RichEditBox, TextCompositionEndedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_text_composition_ended(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_text_composition_started(self, handler: windows_foundation.TypedEventHandler[RichEditBox, TextCompositionStartedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_text_composition_started(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_copying_to_clipboard(self, handler: windows_foundation.TypedEventHandler[RichEditBox, TextControlCopyingToClipboardEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_copying_to_clipboard(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_cutting_to_clipboard(self, handler: windows_foundation.TypedEventHandler[RichEditBox, TextControlCuttingToClipboardEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_cutting_to_clipboard(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_content_link_changed(self, handler: windows_foundation.TypedEventHandler[RichEditBox, ContentLinkChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_content_link_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_content_link_invoked(self, handler: windows_foundation.TypedEventHandler[RichEditBox, windows_ui_xaml_documents.ContentLinkInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_content_link_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_selection_changing(self, handler: windows_foundation.TypedEventHandler[RichEditBox, RichEditBoxSelectionChangingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_selection_changing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def text_wrapping(self) -> windows_ui_xaml.TextWrapping: ...
    @text_wrapping.setter
    def text_wrapping(self, value: windows_ui_xaml.TextWrapping) -> None: ...
    @_property
    def text_alignment(self) -> windows_ui_xaml.TextAlignment: ...
    @text_alignment.setter
    def text_alignment(self, value: windows_ui_xaml.TextAlignment) -> None: ...
    @_property
    def is_text_prediction_enabled(self) -> bool: ...
    @is_text_prediction_enabled.setter
    def is_text_prediction_enabled(self, value: bool) -> None: ...
    @_property
    def is_spell_check_enabled(self) -> bool: ...
    @is_spell_check_enabled.setter
    def is_spell_check_enabled(self, value: bool) -> None: ...
    @_property
    def is_read_only(self) -> bool: ...
    @is_read_only.setter
    def is_read_only(self, value: bool) -> None: ...
    @_property
    def input_scope(self) -> windows_ui_xaml_input.InputScope: ...
    @input_scope.setter
    def input_scope(self, value: windows_ui_xaml_input.InputScope) -> None: ...
    @_property
    def accepts_return(self) -> bool: ...
    @accepts_return.setter
    def accepts_return(self, value: bool) -> None: ...
    @_property
    def document(self) -> windows_ui_text.ITextDocument: ...
    @_property
    def selection_highlight_color(self) -> windows_ui_xaml_media.SolidColorBrush: ...
    @selection_highlight_color.setter
    def selection_highlight_color(self, value: windows_ui_xaml_media.SolidColorBrush) -> None: ...
    @_property
    def prevent_keyboard_display_on_programmatic_focus(self) -> bool: ...
    @prevent_keyboard_display_on_programmatic_focus.setter
    def prevent_keyboard_display_on_programmatic_focus(self, value: bool) -> None: ...
    @_property
    def placeholder_text(self) -> str: ...
    @placeholder_text.setter
    def placeholder_text(self, value: str) -> None: ...
    @_property
    def is_color_font_enabled(self) -> bool: ...
    @is_color_font_enabled.setter
    def is_color_font_enabled(self, value: bool) -> None: ...
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def text_reading_order(self) -> windows_ui_xaml.TextReadingOrder: ...
    @text_reading_order.setter
    def text_reading_order(self, value: windows_ui_xaml.TextReadingOrder) -> None: ...
    @_property
    def desired_candidate_window_alignment(self) -> CandidateWindowAlignment: ...
    @desired_candidate_window_alignment.setter
    def desired_candidate_window_alignment(self, value: CandidateWindowAlignment) -> None: ...
    @_property
    def clipboard_copy_format(self) -> RichEditClipboardFormat: ...
    @clipboard_copy_format.setter
    def clipboard_copy_format(self, value: RichEditClipboardFormat) -> None: ...
    @_property
    def selection_highlight_color_when_not_focused(self) -> windows_ui_xaml_media.SolidColorBrush: ...
    @selection_highlight_color_when_not_focused.setter
    def selection_highlight_color_when_not_focused(self, value: windows_ui_xaml_media.SolidColorBrush) -> None: ...
    @_property
    def max_length(self) -> winrt.system.Int32: ...
    @max_length.setter
    def max_length(self, value: winrt.system.Int32) -> None: ...
    @_property
    def horizontal_text_alignment(self) -> windows_ui_xaml.TextAlignment: ...
    @horizontal_text_alignment.setter
    def horizontal_text_alignment(self, value: windows_ui_xaml.TextAlignment) -> None: ...
    @_property
    def disabled_formatting_accelerators(self) -> DisabledFormattingAccelerators: ...
    @disabled_formatting_accelerators.setter
    def disabled_formatting_accelerators(self, value: DisabledFormattingAccelerators) -> None: ...
    @_property
    def character_casing(self) -> CharacterCasing: ...
    @character_casing.setter
    def character_casing(self, value: CharacterCasing) -> None: ...
    @_property
    def is_handwriting_view_enabled(self) -> bool: ...
    @is_handwriting_view_enabled.setter
    def is_handwriting_view_enabled(self, value: bool) -> None: ...
    @_property
    def handwriting_view(self) -> HandwritingView: ...
    @handwriting_view.setter
    def handwriting_view(self, value: HandwritingView) -> None: ...
    @_property
    def content_link_providers(self) -> windows_ui_xaml_documents.ContentLinkProviderCollection: ...
    @content_link_providers.setter
    def content_link_providers(self, value: windows_ui_xaml_documents.ContentLinkProviderCollection) -> None: ...
    @_property
    def content_link_foreground_color(self) -> windows_ui_xaml_media.SolidColorBrush: ...
    @content_link_foreground_color.setter
    def content_link_foreground_color(self, value: windows_ui_xaml_media.SolidColorBrush) -> None: ...
    @_property
    def content_link_background_color(self) -> windows_ui_xaml_media.SolidColorBrush: ...
    @content_link_background_color.setter
    def content_link_background_color(self, value: windows_ui_xaml_media.SolidColorBrush) -> None: ...
    @_property
    def selection_flyout(self) -> windows_ui_xaml_controls_primitives.FlyoutBase: ...
    @selection_flyout.setter
    def selection_flyout(self, value: windows_ui_xaml_controls_primitives.FlyoutBase) -> None: ...
    @_property
    def description(self) -> winrt.system.Object: ...
    @description.setter
    def description(self, value: winrt.system.Object) -> None: ...
    @_property
    def proofing_menu_flyout(self) -> windows_ui_xaml_controls_primitives.FlyoutBase: ...
    @_property
    def text_document(self) -> windows_ui_text.RichEditTextDocument: ...

@typing.final
class RichEditBoxSelectionChangingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RichEditBoxSelectionChangingEventArgs: ...
    @_property
    def cancel(self) -> bool: ...
    @cancel.setter
    def cancel(self, value: bool) -> None: ...
    @_property
    def selection_length(self) -> winrt.system.Int32: ...
    @_property
    def selection_start(self) -> winrt.system.Int32: ...

@typing.final
class RichEditBoxTextChangingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RichEditBoxTextChangingEventArgs: ...
    @_property
    def is_content_changing(self) -> bool: ...

@typing.final
class RichTextBlock_Static(windows_ui_xaml.FrameworkElement_Static):
    @_property
    def character_spacing_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_family_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_size_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_stretch_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_weight_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def has_overflow_content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_text_selection_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def line_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def line_stacking_strategy_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def overflow_content_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def padding_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_indent_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_trimming_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_wrapping_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_color_font_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_lines_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def optical_margin_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selection_highlight_color_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_line_bounds_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_reading_order_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_text_scale_factor_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_decorations_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_text_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_text_trimmed_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selection_flyout_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class RichTextBlock(windows_ui_xaml.FrameworkElement, metaclass=RichTextBlock_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RichTextBlock: ...
    def __new__(cls: typing.Type[RichTextBlock]) -> RichTextBlock: ...
    def copy_selection_to_clipboard(self) -> None: ...
    def focus(self, value: windows_ui_xaml.FocusState, /) -> bool: ...
    def get_position_from_point(self, point: windows_foundation.Point, /) -> windows_ui_xaml_documents.TextPointer: ...
    def select(self, start: windows_ui_xaml_documents.TextPointer, end: windows_ui_xaml_documents.TextPointer, /) -> None: ...
    def select_all(self) -> None: ...
    def add_context_menu_opening(self, handler: ContextMenuOpeningEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_context_menu_opening(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_selection_changed(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_selection_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_is_text_trimmed_changed(self, handler: windows_foundation.TypedEventHandler[RichTextBlock, IsTextTrimmedChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_is_text_trimmed_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def text_wrapping(self) -> windows_ui_xaml.TextWrapping: ...
    @text_wrapping.setter
    def text_wrapping(self, value: windows_ui_xaml.TextWrapping) -> None: ...
    @_property
    def text_trimming(self) -> windows_ui_xaml.TextTrimming: ...
    @text_trimming.setter
    def text_trimming(self, value: windows_ui_xaml.TextTrimming) -> None: ...
    @_property
    def text_indent(self) -> winrt.system.Double: ...
    @text_indent.setter
    def text_indent(self, value: winrt.system.Double) -> None: ...
    @_property
    def text_alignment(self) -> windows_ui_xaml.TextAlignment: ...
    @text_alignment.setter
    def text_alignment(self, value: windows_ui_xaml.TextAlignment) -> None: ...
    @_property
    def padding(self) -> windows_ui_xaml.Thickness: ...
    @padding.setter
    def padding(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def foreground(self) -> windows_ui_xaml_media.Brush: ...
    @foreground.setter
    def foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> windows_ui_xaml_media.FontFamily: ...
    @font_family.setter
    def font_family(self, value: windows_ui_xaml_media.FontFamily) -> None: ...
    @_property
    def overflow_content_target(self) -> RichTextBlockOverflow: ...
    @overflow_content_target.setter
    def overflow_content_target(self, value: RichTextBlockOverflow) -> None: ...
    @_property
    def line_stacking_strategy(self) -> windows_ui_xaml.LineStackingStrategy: ...
    @line_stacking_strategy.setter
    def line_stacking_strategy(self, value: windows_ui_xaml.LineStackingStrategy) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def line_height(self) -> winrt.system.Double: ...
    @line_height.setter
    def line_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_text_selection_enabled(self) -> bool: ...
    @is_text_selection_enabled.setter
    def is_text_selection_enabled(self, value: bool) -> None: ...
    @_property
    def has_overflow_content(self) -> bool: ...
    @_property
    def selected_text(self) -> str: ...
    @_property
    def selection_end(self) -> windows_ui_xaml_documents.TextPointer: ...
    @_property
    def selection_start(self) -> windows_ui_xaml_documents.TextPointer: ...
    @_property
    def baseline_offset(self) -> winrt.system.Double: ...
    @_property
    def blocks(self) -> windows_ui_xaml_documents.BlockCollection: ...
    @_property
    def content_end(self) -> windows_ui_xaml_documents.TextPointer: ...
    @_property
    def content_start(self) -> windows_ui_xaml_documents.TextPointer: ...
    @_property
    def text_reading_order(self) -> windows_ui_xaml.TextReadingOrder: ...
    @text_reading_order.setter
    def text_reading_order(self, value: windows_ui_xaml.TextReadingOrder) -> None: ...
    @_property
    def text_line_bounds(self) -> windows_ui_xaml.TextLineBounds: ...
    @text_line_bounds.setter
    def text_line_bounds(self, value: windows_ui_xaml.TextLineBounds) -> None: ...
    @_property
    def selection_highlight_color(self) -> windows_ui_xaml_media.SolidColorBrush: ...
    @selection_highlight_color.setter
    def selection_highlight_color(self, value: windows_ui_xaml_media.SolidColorBrush) -> None: ...
    @_property
    def optical_margin_alignment(self) -> windows_ui_xaml.OpticalMarginAlignment: ...
    @optical_margin_alignment.setter
    def optical_margin_alignment(self, value: windows_ui_xaml.OpticalMarginAlignment) -> None: ...
    @_property
    def max_lines(self) -> winrt.system.Int32: ...
    @max_lines.setter
    def max_lines(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_color_font_enabled(self) -> bool: ...
    @is_color_font_enabled.setter
    def is_color_font_enabled(self, value: bool) -> None: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def horizontal_text_alignment(self) -> windows_ui_xaml.TextAlignment: ...
    @horizontal_text_alignment.setter
    def horizontal_text_alignment(self, value: windows_ui_xaml.TextAlignment) -> None: ...
    @_property
    def is_text_trimmed(self) -> bool: ...
    @_property
    def text_highlighters(self) -> typing.MutableSequence[windows_ui_xaml_documents.TextHighlighter]: ...
    @_property
    def selection_flyout(self) -> windows_ui_xaml_controls_primitives.FlyoutBase: ...
    @selection_flyout.setter
    def selection_flyout(self, value: windows_ui_xaml_controls_primitives.FlyoutBase) -> None: ...

@typing.final
class RichTextBlockOverflow_Static(windows_ui_xaml.FrameworkElement_Static):
    @_property
    def has_overflow_content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def overflow_content_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def padding_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_lines_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_text_trimmed_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class RichTextBlockOverflow(windows_ui_xaml.FrameworkElement, metaclass=RichTextBlockOverflow_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RichTextBlockOverflow: ...
    def __new__(cls: typing.Type[RichTextBlockOverflow]) -> RichTextBlockOverflow: ...
    def focus(self, value: windows_ui_xaml.FocusState, /) -> bool: ...
    def get_position_from_point(self, point: windows_foundation.Point, /) -> windows_ui_xaml_documents.TextPointer: ...
    def add_is_text_trimmed_changed(self, handler: windows_foundation.TypedEventHandler[RichTextBlockOverflow, IsTextTrimmedChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_is_text_trimmed_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def padding(self) -> windows_ui_xaml.Thickness: ...
    @padding.setter
    def padding(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def overflow_content_target(self) -> RichTextBlockOverflow: ...
    @overflow_content_target.setter
    def overflow_content_target(self, value: RichTextBlockOverflow) -> None: ...
    @_property
    def baseline_offset(self) -> winrt.system.Double: ...
    @_property
    def content_end(self) -> windows_ui_xaml_documents.TextPointer: ...
    @_property
    def content_source(self) -> RichTextBlock: ...
    @_property
    def content_start(self) -> windows_ui_xaml_documents.TextPointer: ...
    @_property
    def has_overflow_content(self) -> bool: ...
    @_property
    def max_lines(self) -> winrt.system.Int32: ...
    @max_lines.setter
    def max_lines(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_text_trimmed(self) -> bool: ...

@typing.final
class RowDefinition_Static(windows_ui_xaml.DependencyObject_Static):
    @_property
    def height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def min_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class RowDefinition(windows_ui_xaml.DependencyObject, metaclass=RowDefinition_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RowDefinition: ...
    def __new__(cls: typing.Type[RowDefinition]) -> RowDefinition: ...
    @_property
    def min_height(self) -> winrt.system.Double: ...
    @min_height.setter
    def min_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def max_height(self) -> winrt.system.Double: ...
    @max_height.setter
    def max_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def height(self) -> windows_ui_xaml.GridLength: ...
    @height.setter
    def height(self, value: windows_ui_xaml.GridLength) -> None: ...
    @_property
    def actual_height(self) -> winrt.system.Double: ...

@typing.final
class RowDefinitionCollection(winrt.system.Object, winrt._winrt.MutableSequence[RowDefinition]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[RowDefinition]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> RowDefinition: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[RowDefinition]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: RowDefinition) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[RowDefinition]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> RowDefinitionCollection: ...
    def append(self, value: RowDefinition, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[RowDefinition]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> RowDefinition: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[RowDefinition], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[RowDefinition]: ...
    def index_of(self, value: RowDefinition, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: RowDefinition, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[RowDefinition], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: RowDefinition, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class ScrollContentPresenter_Static(ContentPresenter_Static):
    @_property
    def can_content_render_outside_bounds_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def sizes_content_to_templated_parent_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ScrollContentPresenter(ContentPresenter, metaclass=ScrollContentPresenter_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ScrollContentPresenter: ...
    def __new__(cls: typing.Type[ScrollContentPresenter]) -> ScrollContentPresenter: ...
    def line_down(self) -> None: ...
    def line_left(self) -> None: ...
    def line_right(self) -> None: ...
    def line_up(self) -> None: ...
    def make_visible(self, visual: windows_ui_xaml.UIElement, rectangle: windows_foundation.Rect, /) -> windows_foundation.Rect: ...
    def mouse_wheel_down(self) -> None: ...
    def mouse_wheel_left(self) -> None: ...
    def mouse_wheel_right(self) -> None: ...
    def mouse_wheel_up(self) -> None: ...
    def page_down(self) -> None: ...
    def page_left(self) -> None: ...
    def page_right(self) -> None: ...
    def page_up(self) -> None: ...
    def set_horizontal_offset(self, offset: winrt.system.Double, /) -> None: ...
    def set_vertical_offset(self, offset: winrt.system.Double, /) -> None: ...
    @_property
    def scroll_owner(self) -> winrt.system.Object: ...
    @scroll_owner.setter
    def scroll_owner(self, value: winrt.system.Object) -> None: ...
    @_property
    def can_vertically_scroll(self) -> bool: ...
    @can_vertically_scroll.setter
    def can_vertically_scroll(self, value: bool) -> None: ...
    @_property
    def can_horizontally_scroll(self) -> bool: ...
    @can_horizontally_scroll.setter
    def can_horizontally_scroll(self, value: bool) -> None: ...
    @_property
    def extent_height(self) -> winrt.system.Double: ...
    @_property
    def extent_width(self) -> winrt.system.Double: ...
    @_property
    def horizontal_offset(self) -> winrt.system.Double: ...
    @_property
    def vertical_offset(self) -> winrt.system.Double: ...
    @_property
    def viewport_height(self) -> winrt.system.Double: ...
    @_property
    def viewport_width(self) -> winrt.system.Double: ...
    @_property
    def sizes_content_to_templated_parent(self) -> bool: ...
    @sizes_content_to_templated_parent.setter
    def sizes_content_to_templated_parent(self, value: bool) -> None: ...
    @_property
    def can_content_render_outside_bounds(self) -> bool: ...
    @can_content_render_outside_bounds.setter
    def can_content_render_outside_bounds(self, value: bool) -> None: ...

@typing.final
class ScrollViewer_Static(ContentControl_Static):
    def get_bring_into_view_on_focus_change(cls, element: windows_ui_xaml.DependencyObject, /) -> bool: ...
    def get_can_content_render_outside_bounds(cls, element: windows_ui_xaml.DependencyObject, /) -> bool: ...
    def get_horizontal_scroll_bar_visibility(cls, element: windows_ui_xaml.DependencyObject, /) -> ScrollBarVisibility: ...
    def get_horizontal_scroll_mode(cls, element: windows_ui_xaml.DependencyObject, /) -> ScrollMode: ...
    def get_is_deferred_scrolling_enabled(cls, element: windows_ui_xaml.DependencyObject, /) -> bool: ...
    def get_is_horizontal_rail_enabled(cls, element: windows_ui_xaml.DependencyObject, /) -> bool: ...
    def get_is_horizontal_scroll_chaining_enabled(cls, element: windows_ui_xaml.DependencyObject, /) -> bool: ...
    def get_is_scroll_inertia_enabled(cls, element: windows_ui_xaml.DependencyObject, /) -> bool: ...
    def get_is_vertical_rail_enabled(cls, element: windows_ui_xaml.DependencyObject, /) -> bool: ...
    def get_is_vertical_scroll_chaining_enabled(cls, element: windows_ui_xaml.DependencyObject, /) -> bool: ...
    def get_is_zoom_chaining_enabled(cls, element: windows_ui_xaml.DependencyObject, /) -> bool: ...
    def get_is_zoom_inertia_enabled(cls, element: windows_ui_xaml.DependencyObject, /) -> bool: ...
    def get_vertical_scroll_bar_visibility(cls, element: windows_ui_xaml.DependencyObject, /) -> ScrollBarVisibility: ...
    def get_vertical_scroll_mode(cls, element: windows_ui_xaml.DependencyObject, /) -> ScrollMode: ...
    def get_zoom_mode(cls, element: windows_ui_xaml.DependencyObject, /) -> ZoomMode: ...
    def set_bring_into_view_on_focus_change(cls, element: windows_ui_xaml.DependencyObject, bring_into_view_on_focus_change: bool, /) -> None: ...
    def set_can_content_render_outside_bounds(cls, element: windows_ui_xaml.DependencyObject, can_content_render_outside_bounds: bool, /) -> None: ...
    def set_horizontal_scroll_bar_visibility(cls, element: windows_ui_xaml.DependencyObject, horizontal_scroll_bar_visibility: ScrollBarVisibility, /) -> None: ...
    def set_horizontal_scroll_mode(cls, element: windows_ui_xaml.DependencyObject, horizontal_scroll_mode: ScrollMode, /) -> None: ...
    def set_is_deferred_scrolling_enabled(cls, element: windows_ui_xaml.DependencyObject, is_deferred_scrolling_enabled: bool, /) -> None: ...
    def set_is_horizontal_rail_enabled(cls, element: windows_ui_xaml.DependencyObject, is_horizontal_rail_enabled: bool, /) -> None: ...
    def set_is_horizontal_scroll_chaining_enabled(cls, element: windows_ui_xaml.DependencyObject, is_horizontal_scroll_chaining_enabled: bool, /) -> None: ...
    def set_is_scroll_inertia_enabled(cls, element: windows_ui_xaml.DependencyObject, is_scroll_inertia_enabled: bool, /) -> None: ...
    def set_is_vertical_rail_enabled(cls, element: windows_ui_xaml.DependencyObject, is_vertical_rail_enabled: bool, /) -> None: ...
    def set_is_vertical_scroll_chaining_enabled(cls, element: windows_ui_xaml.DependencyObject, is_vertical_scroll_chaining_enabled: bool, /) -> None: ...
    def set_is_zoom_chaining_enabled(cls, element: windows_ui_xaml.DependencyObject, is_zoom_chaining_enabled: bool, /) -> None: ...
    def set_is_zoom_inertia_enabled(cls, element: windows_ui_xaml.DependencyObject, is_zoom_inertia_enabled: bool, /) -> None: ...
    def set_vertical_scroll_bar_visibility(cls, element: windows_ui_xaml.DependencyObject, vertical_scroll_bar_visibility: ScrollBarVisibility, /) -> None: ...
    def set_vertical_scroll_mode(cls, element: windows_ui_xaml.DependencyObject, vertical_scroll_mode: ScrollMode, /) -> None: ...
    def set_zoom_mode(cls, element: windows_ui_xaml.DependencyObject, zoom_mode: ZoomMode, /) -> None: ...
    @_property
    def is_scroll_inertia_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_snap_points_type_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def viewport_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def viewport_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def zoom_factor_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def zoom_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def zoom_snap_points_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def bring_into_view_on_focus_change_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def computed_horizontal_scroll_bar_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def computed_vertical_scroll_bar_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def extent_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def extent_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_scroll_bar_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_scroll_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_snap_points_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_snap_points_type_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_deferred_scrolling_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_horizontal_rail_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_horizontal_scroll_chaining_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def zoom_snap_points_type_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_vertical_rail_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_vertical_scroll_chaining_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_zoom_chaining_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_zoom_inertia_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_zoom_factor_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def min_zoom_factor_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def scrollable_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def scrollable_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_scroll_bar_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_scroll_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_snap_points_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def left_header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def top_header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def top_left_header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_anchor_ratio_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def reduce_viewport_for_core_input_view_occlusions_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_anchor_ratio_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def can_content_render_outside_bounds_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ScrollViewer(ContentControl, ImplementsIScrollAnchorProvider, metaclass=ScrollViewer_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ScrollViewer: ...
    def __new__(cls: typing.Type[ScrollViewer]) -> ScrollViewer: ...
    def change_view(self, horizontal_offset: typing.Optional[winrt.system.Double], vertical_offset: typing.Optional[winrt.system.Double], zoom_factor: typing.Optional[winrt.system.Single], /) -> bool: ...
    def change_view_with_optional_animation(self, horizontal_offset: typing.Optional[winrt.system.Double], vertical_offset: typing.Optional[winrt.system.Double], zoom_factor: typing.Optional[winrt.system.Single], disable_animation: bool, /) -> bool: ...
    def invalidate_scroll_info(self) -> None: ...
    def register_anchor_candidate(self, element: windows_ui_xaml.UIElement, /) -> None: ...
    # @deprecated("ScrollToHorizontalOffset may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.")
    def scroll_to_horizontal_offset(self, offset: winrt.system.Double, /) -> None: ...
    # @deprecated("ScrollToVerticalOffset may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.")
    def scroll_to_vertical_offset(self, offset: winrt.system.Double, /) -> None: ...
    def unregister_anchor_candidate(self, element: windows_ui_xaml.UIElement, /) -> None: ...
    # @deprecated("ZoomToFactor may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.")
    def zoom_to_factor(self, factor: winrt.system.Single, /) -> None: ...
    def add_view_changed(self, handler: windows_foundation.EventHandler[ScrollViewerViewChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_view_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_view_changing(self, handler: windows_foundation.EventHandler[ScrollViewerViewChangingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_view_changing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_direct_manipulation_completed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_direct_manipulation_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_direct_manipulation_started(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_direct_manipulation_started(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_anchor_requested(self, handler: windows_foundation.TypedEventHandler[ScrollViewer, AnchorRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_anchor_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def current_anchor(self) -> windows_ui_xaml.UIElement: ...
    @_property
    def is_vertical_rail_enabled(self) -> bool: ...
    @is_vertical_rail_enabled.setter
    def is_vertical_rail_enabled(self, value: bool) -> None: ...
    @_property
    def is_scroll_inertia_enabled(self) -> bool: ...
    @is_scroll_inertia_enabled.setter
    def is_scroll_inertia_enabled(self, value: bool) -> None: ...
    @_property
    def is_horizontal_scroll_chaining_enabled(self) -> bool: ...
    @is_horizontal_scroll_chaining_enabled.setter
    def is_horizontal_scroll_chaining_enabled(self, value: bool) -> None: ...
    @_property
    def is_horizontal_rail_enabled(self) -> bool: ...
    @is_horizontal_rail_enabled.setter
    def is_horizontal_rail_enabled(self, value: bool) -> None: ...
    @_property
    def is_deferred_scrolling_enabled(self) -> bool: ...
    @is_deferred_scrolling_enabled.setter
    def is_deferred_scrolling_enabled(self, value: bool) -> None: ...
    @_property
    def horizontal_snap_points_type(self) -> SnapPointsType: ...
    @horizontal_snap_points_type.setter
    def horizontal_snap_points_type(self, value: SnapPointsType) -> None: ...
    @_property
    def horizontal_snap_points_alignment(self) -> windows_ui_xaml_controls_primitives.SnapPointsAlignment: ...
    @horizontal_snap_points_alignment.setter
    def horizontal_snap_points_alignment(self, value: windows_ui_xaml_controls_primitives.SnapPointsAlignment) -> None: ...
    @_property
    def horizontal_scroll_mode(self) -> ScrollMode: ...
    @horizontal_scroll_mode.setter
    def horizontal_scroll_mode(self, value: ScrollMode) -> None: ...
    @_property
    def horizontal_scroll_bar_visibility(self) -> ScrollBarVisibility: ...
    @horizontal_scroll_bar_visibility.setter
    def horizontal_scroll_bar_visibility(self, value: ScrollBarVisibility) -> None: ...
    @_property
    def min_zoom_factor(self) -> winrt.system.Single: ...
    @min_zoom_factor.setter
    def min_zoom_factor(self, value: winrt.system.Single) -> None: ...
    @_property
    def max_zoom_factor(self) -> winrt.system.Single: ...
    @max_zoom_factor.setter
    def max_zoom_factor(self, value: winrt.system.Single) -> None: ...
    @_property
    def is_zoom_inertia_enabled(self) -> bool: ...
    @is_zoom_inertia_enabled.setter
    def is_zoom_inertia_enabled(self, value: bool) -> None: ...
    @_property
    def is_zoom_chaining_enabled(self) -> bool: ...
    @is_zoom_chaining_enabled.setter
    def is_zoom_chaining_enabled(self, value: bool) -> None: ...
    @_property
    def is_vertical_scroll_chaining_enabled(self) -> bool: ...
    @is_vertical_scroll_chaining_enabled.setter
    def is_vertical_scroll_chaining_enabled(self, value: bool) -> None: ...
    @_property
    def bring_into_view_on_focus_change(self) -> bool: ...
    @bring_into_view_on_focus_change.setter
    def bring_into_view_on_focus_change(self, value: bool) -> None: ...
    @_property
    def zoom_snap_points_type(self) -> SnapPointsType: ...
    @zoom_snap_points_type.setter
    def zoom_snap_points_type(self, value: SnapPointsType) -> None: ...
    @_property
    def zoom_mode(self) -> ZoomMode: ...
    @zoom_mode.setter
    def zoom_mode(self, value: ZoomMode) -> None: ...
    @_property
    def vertical_snap_points_type(self) -> SnapPointsType: ...
    @vertical_snap_points_type.setter
    def vertical_snap_points_type(self, value: SnapPointsType) -> None: ...
    @_property
    def vertical_snap_points_alignment(self) -> windows_ui_xaml_controls_primitives.SnapPointsAlignment: ...
    @vertical_snap_points_alignment.setter
    def vertical_snap_points_alignment(self, value: windows_ui_xaml_controls_primitives.SnapPointsAlignment) -> None: ...
    @_property
    def vertical_scroll_mode(self) -> ScrollMode: ...
    @vertical_scroll_mode.setter
    def vertical_scroll_mode(self, value: ScrollMode) -> None: ...
    @_property
    def vertical_scroll_bar_visibility(self) -> ScrollBarVisibility: ...
    @vertical_scroll_bar_visibility.setter
    def vertical_scroll_bar_visibility(self, value: ScrollBarVisibility) -> None: ...
    @_property
    def computed_horizontal_scroll_bar_visibility(self) -> windows_ui_xaml.Visibility: ...
    @_property
    def computed_vertical_scroll_bar_visibility(self) -> windows_ui_xaml.Visibility: ...
    @_property
    def extent_height(self) -> winrt.system.Double: ...
    @_property
    def extent_width(self) -> winrt.system.Double: ...
    @_property
    def horizontal_offset(self) -> winrt.system.Double: ...
    @_property
    def scrollable_width(self) -> winrt.system.Double: ...
    @_property
    def vertical_offset(self) -> winrt.system.Double: ...
    @_property
    def viewport_height(self) -> winrt.system.Double: ...
    @_property
    def viewport_width(self) -> winrt.system.Double: ...
    @_property
    def zoom_factor(self) -> winrt.system.Single: ...
    @_property
    def zoom_snap_points(self) -> typing.MutableSequence[winrt.system.Single]: ...
    @_property
    def scrollable_height(self) -> winrt.system.Double: ...
    @_property
    def top_left_header(self) -> windows_ui_xaml.UIElement: ...
    @top_left_header.setter
    def top_left_header(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def top_header(self) -> windows_ui_xaml.UIElement: ...
    @top_header.setter
    def top_header(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def left_header(self) -> windows_ui_xaml.UIElement: ...
    @left_header.setter
    def left_header(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def vertical_anchor_ratio(self) -> winrt.system.Double: ...
    @vertical_anchor_ratio.setter
    def vertical_anchor_ratio(self, value: winrt.system.Double) -> None: ...
    @_property
    def reduce_viewport_for_core_input_view_occlusions(self) -> bool: ...
    @reduce_viewport_for_core_input_view_occlusions.setter
    def reduce_viewport_for_core_input_view_occlusions(self, value: bool) -> None: ...
    @_property
    def horizontal_anchor_ratio(self) -> winrt.system.Double: ...
    @horizontal_anchor_ratio.setter
    def horizontal_anchor_ratio(self, value: winrt.system.Double) -> None: ...
    @_property
    def can_content_render_outside_bounds(self) -> bool: ...
    @can_content_render_outside_bounds.setter
    def can_content_render_outside_bounds(self, value: bool) -> None: ...

@typing.final
class ScrollViewerView(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ScrollViewerView: ...
    @_property
    def horizontal_offset(self) -> winrt.system.Double: ...
    @_property
    def vertical_offset(self) -> winrt.system.Double: ...
    @_property
    def zoom_factor(self) -> winrt.system.Single: ...

@typing.final
class ScrollViewerViewChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ScrollViewerViewChangedEventArgs: ...
    def __new__(cls: typing.Type[ScrollViewerViewChangedEventArgs]) -> ScrollViewerViewChangedEventArgs: ...
    @_property
    def is_intermediate(self) -> bool: ...

@typing.final
class ScrollViewerViewChangingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ScrollViewerViewChangingEventArgs: ...
    @_property
    def final_view(self) -> ScrollViewerView: ...
    @_property
    def is_inertial(self) -> bool: ...
    @_property
    def next_view(self) -> ScrollViewerView: ...

class SearchBox_Static(Control_Static):
    @_property
    def choose_suggestion_on_enter_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def focus_on_keyboard_input_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placeholder_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def query_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def search_history_context_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def search_history_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SearchBox(Control, metaclass=SearchBox_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchBox: ...
    def __new__(cls: typing.Type[SearchBox]) -> SearchBox: ...
    def set_local_content_suggestion_settings(self, settings: windows_applicationmodel_search.LocalContentSuggestionSettings, /) -> None: ...
    def add_prepare_for_focus_on_keyboard_input(self, handler: windows_foundation.TypedEventHandler[SearchBox, windows_ui_xaml.RoutedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_prepare_for_focus_on_keyboard_input(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_query_changed(self, handler: windows_foundation.TypedEventHandler[SearchBox, SearchBoxQueryChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_query_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_query_submitted(self, handler: windows_foundation.TypedEventHandler[SearchBox, SearchBoxQuerySubmittedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_query_submitted(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_result_suggestion_chosen(self, handler: windows_foundation.TypedEventHandler[SearchBox, SearchBoxResultSuggestionChosenEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_result_suggestion_chosen(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_suggestions_requested(self, handler: windows_foundation.TypedEventHandler[SearchBox, SearchBoxSuggestionsRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_suggestions_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def search_history_enabled(self) -> bool: ...
    @search_history_enabled.setter
    def search_history_enabled(self, value: bool) -> None: ...
    @_property
    def search_history_context(self) -> str: ...
    @search_history_context.setter
    def search_history_context(self, value: str) -> None: ...
    @_property
    def query_text(self) -> str: ...
    @query_text.setter
    def query_text(self, value: str) -> None: ...
    @_property
    def placeholder_text(self) -> str: ...
    @placeholder_text.setter
    def placeholder_text(self, value: str) -> None: ...
    @_property
    def focus_on_keyboard_input(self) -> bool: ...
    @focus_on_keyboard_input.setter
    def focus_on_keyboard_input(self, value: bool) -> None: ...
    @_property
    def choose_suggestion_on_enter(self) -> bool: ...
    @choose_suggestion_on_enter.setter
    def choose_suggestion_on_enter(self, value: bool) -> None: ...

@typing.final
class SearchBoxQueryChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchBoxQueryChangedEventArgs: ...
    @_property
    def language(self) -> str: ...
    @_property
    def linguistic_details(self) -> windows_applicationmodel_search.SearchQueryLinguisticDetails: ...
    @_property
    def query_text(self) -> str: ...

@typing.final
class SearchBoxQuerySubmittedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchBoxQuerySubmittedEventArgs: ...
    @_property
    def key_modifiers(self) -> windows_system.VirtualKeyModifiers: ...
    @_property
    def language(self) -> str: ...
    @_property
    def linguistic_details(self) -> windows_applicationmodel_search.SearchQueryLinguisticDetails: ...
    @_property
    def query_text(self) -> str: ...

@typing.final
class SearchBoxResultSuggestionChosenEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchBoxResultSuggestionChosenEventArgs: ...
    def __new__(cls: typing.Type[SearchBoxResultSuggestionChosenEventArgs]) -> SearchBoxResultSuggestionChosenEventArgs: ...
    @_property
    def key_modifiers(self) -> windows_system.VirtualKeyModifiers: ...
    @_property
    def tag(self) -> str: ...

@typing.final
class SearchBoxSuggestionsRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SearchBoxSuggestionsRequestedEventArgs: ...
    @_property
    def language(self) -> str: ...
    @_property
    def linguistic_details(self) -> windows_applicationmodel_search.SearchQueryLinguisticDetails: ...
    @_property
    def query_text(self) -> str: ...
    @_property
    def request(self) -> windows_applicationmodel_search.SearchSuggestionsRequest: ...

class SectionsInViewChangedEventArgs_Static(type):
    pass

class SectionsInViewChangedEventArgs(winrt.system.Object, metaclass=SectionsInViewChangedEventArgs_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SectionsInViewChangedEventArgs: ...
    @_property
    def added_sections(self) -> typing.MutableSequence[HubSection]: ...
    @_property
    def removed_sections(self) -> typing.MutableSequence[HubSection]: ...

class SelectionChangedEventArgs_Static(windows_ui_xaml.RoutedEventArgs_Static):
    pass

class SelectionChangedEventArgs(windows_ui_xaml.RoutedEventArgs, metaclass=SelectionChangedEventArgs_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SelectionChangedEventArgs: ...
    def __new__(cls: typing.Type[SelectionChangedEventArgs], removed_items: typing.MutableSequence[winrt.system.Object], added_items: typing.MutableSequence[winrt.system.Object]) -> SelectionChangedEventArgs: ...
    @_property
    def added_items(self) -> typing.MutableSequence[winrt.system.Object]: ...
    @_property
    def removed_items(self) -> typing.MutableSequence[winrt.system.Object]: ...

@typing.final
class SemanticZoom_Static(Control_Static):
    @_property
    def can_change_views_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_zoom_out_button_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_zoomed_in_view_active_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def zoomed_in_view_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def zoomed_out_view_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class SemanticZoom(Control, metaclass=SemanticZoom_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SemanticZoom: ...
    def __new__(cls: typing.Type[SemanticZoom]) -> SemanticZoom: ...
    def toggle_active_view(self) -> None: ...
    def add_view_change_completed(self, handler: SemanticZoomViewChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_view_change_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_view_change_started(self, handler: SemanticZoomViewChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_view_change_started(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def zoomed_out_view(self) -> ISemanticZoomInformation: ...
    @zoomed_out_view.setter
    def zoomed_out_view(self, value: ISemanticZoomInformation) -> None: ...
    @_property
    def zoomed_in_view(self) -> ISemanticZoomInformation: ...
    @zoomed_in_view.setter
    def zoomed_in_view(self, value: ISemanticZoomInformation) -> None: ...
    @_property
    def is_zoomed_in_view_active(self) -> bool: ...
    @is_zoomed_in_view_active.setter
    def is_zoomed_in_view_active(self, value: bool) -> None: ...
    @_property
    def is_zoom_out_button_enabled(self) -> bool: ...
    @is_zoom_out_button_enabled.setter
    def is_zoom_out_button_enabled(self, value: bool) -> None: ...
    @_property
    def can_change_views(self) -> bool: ...
    @can_change_views.setter
    def can_change_views(self, value: bool) -> None: ...

@typing.final
class SemanticZoomLocation(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SemanticZoomLocation: ...
    def __new__(cls: typing.Type[SemanticZoomLocation]) -> SemanticZoomLocation: ...
    @_property
    def item(self) -> winrt.system.Object: ...
    @item.setter
    def item(self, value: winrt.system.Object) -> None: ...
    @_property
    def bounds(self) -> windows_foundation.Rect: ...
    @bounds.setter
    def bounds(self, value: windows_foundation.Rect) -> None: ...

@typing.final
class SemanticZoomViewChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SemanticZoomViewChangedEventArgs: ...
    def __new__(cls: typing.Type[SemanticZoomViewChangedEventArgs]) -> SemanticZoomViewChangedEventArgs: ...
    @_property
    def source_item(self) -> SemanticZoomLocation: ...
    @source_item.setter
    def source_item(self, value: SemanticZoomLocation) -> None: ...
    @_property
    def is_source_zoomed_in_view(self) -> bool: ...
    @is_source_zoomed_in_view.setter
    def is_source_zoomed_in_view(self, value: bool) -> None: ...
    @_property
    def destination_item(self) -> SemanticZoomLocation: ...
    @destination_item.setter
    def destination_item(self, value: SemanticZoomLocation) -> None: ...

class SettingsFlyout_Static(ContentControl_Static):
    @_property
    def header_background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def icon_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def title_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SettingsFlyout(ContentControl, metaclass=SettingsFlyout_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SettingsFlyout: ...
    def __new__(cls: typing.Type[SettingsFlyout]) -> SettingsFlyout: ...
    def hide(self) -> None: ...
    def show(self) -> None: ...
    def show_independent(self) -> None: ...
    def add_back_click(self, handler: BackClickEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_back_click(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def title(self) -> str: ...
    @title.setter
    def title(self, value: str) -> None: ...
    @_property
    def icon_source(self) -> windows_ui_xaml_media.ImageSource: ...
    @icon_source.setter
    def icon_source(self, value: windows_ui_xaml_media.ImageSource) -> None: ...
    @_property
    def header_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @header_foreground.setter
    def header_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def header_background(self) -> windows_ui_xaml_media.Brush: ...
    @header_background.setter
    def header_background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def template_settings(self) -> windows_ui_xaml_controls_primitives.SettingsFlyoutTemplateSettings: ...

class SplitButton_Static(ContentControl_Static):
    @_property
    def command_parameter_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def command_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def flyout_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SplitButton(ContentControl, metaclass=SplitButton_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SplitButton: ...
    def __new__(cls: typing.Type[SplitButton]) -> SplitButton: ...
    def add_click(self, handler: windows_foundation.TypedEventHandler[SplitButton, SplitButtonClickEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_click(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def flyout(self) -> windows_ui_xaml_controls_primitives.FlyoutBase: ...
    @flyout.setter
    def flyout(self, value: windows_ui_xaml_controls_primitives.FlyoutBase) -> None: ...
    @_property
    def command_parameter(self) -> winrt.system.Object: ...
    @command_parameter.setter
    def command_parameter(self, value: winrt.system.Object) -> None: ...
    @_property
    def command(self) -> windows_ui_xaml_input.ICommand: ...
    @command.setter
    def command(self, value: windows_ui_xaml_input.ICommand) -> None: ...

class SplitButtonAutomationPeer_Static(windows_ui_xaml_automation_peers.FrameworkElementAutomationPeer_Static):
    pass

class SplitButtonAutomationPeer(windows_ui_xaml_automation_peers.FrameworkElementAutomationPeer, windows_ui_xaml_automation_provider.ImplementsIInvokeProvider, windows_ui_xaml_automation_provider.ImplementsIExpandCollapseProvider, metaclass=SplitButtonAutomationPeer_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SplitButtonAutomationPeer: ...
    def __new__(cls: typing.Type[SplitButtonAutomationPeer], owner: SplitButton) -> SplitButtonAutomationPeer: ...
    def collapse(self) -> None: ...
    def expand(self) -> None: ...
    def invoke(self) -> None: ...
    @_property
    def expand_collapse_state(self) -> windows_ui_xaml_automation.ExpandCollapseState: ...

@typing.final
class SplitButtonClickEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SplitButtonClickEventArgs: ...

class SplitView_Static(Control_Static):
    @_property
    def compact_pane_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def display_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_pane_open_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def open_pane_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane_background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane_placement_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def template_settings_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def light_dismiss_overlay_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SplitView(Control, metaclass=SplitView_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SplitView: ...
    def __new__(cls: typing.Type[SplitView]) -> SplitView: ...
    def add_pane_closed(self, handler: windows_foundation.TypedEventHandler[SplitView, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pane_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pane_closing(self, handler: windows_foundation.TypedEventHandler[SplitView, SplitViewPaneClosingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pane_closing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pane_opened(self, handler: windows_foundation.TypedEventHandler[SplitView, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pane_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pane_opening(self, handler: windows_foundation.TypedEventHandler[SplitView, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pane_opening(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def pane_placement(self) -> SplitViewPanePlacement: ...
    @pane_placement.setter
    def pane_placement(self, value: SplitViewPanePlacement) -> None: ...
    @_property
    def pane_background(self) -> windows_ui_xaml_media.Brush: ...
    @pane_background.setter
    def pane_background(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def pane(self) -> windows_ui_xaml.UIElement: ...
    @pane.setter
    def pane(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def open_pane_length(self) -> winrt.system.Double: ...
    @open_pane_length.setter
    def open_pane_length(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_pane_open(self) -> bool: ...
    @is_pane_open.setter
    def is_pane_open(self, value: bool) -> None: ...
    @_property
    def display_mode(self) -> SplitViewDisplayMode: ...
    @display_mode.setter
    def display_mode(self, value: SplitViewDisplayMode) -> None: ...
    @_property
    def content(self) -> windows_ui_xaml.UIElement: ...
    @content.setter
    def content(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def compact_pane_length(self) -> winrt.system.Double: ...
    @compact_pane_length.setter
    def compact_pane_length(self, value: winrt.system.Double) -> None: ...
    @_property
    def template_settings(self) -> windows_ui_xaml_controls_primitives.SplitViewTemplateSettings: ...
    @_property
    def light_dismiss_overlay_mode(self) -> LightDismissOverlayMode: ...
    @light_dismiss_overlay_mode.setter
    def light_dismiss_overlay_mode(self, value: LightDismissOverlayMode) -> None: ...

@typing.final
class SplitViewPaneClosingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SplitViewPaneClosingEventArgs: ...
    @_property
    def cancel(self) -> bool: ...
    @cancel.setter
    def cancel(self, value: bool) -> None: ...

class StackPanel_Static(Panel_Static):
    @_property
    def are_scroll_snap_points_regular_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def orientation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def border_brush_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def border_thickness_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def corner_radius_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def padding_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def spacing_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def background_sizing_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class StackPanel(Panel, ImplementsIInsertionPanel, windows_ui_xaml_controls_primitives.ImplementsIScrollSnapPointsInfo, metaclass=StackPanel_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> StackPanel: ...
    def __new__(cls: typing.Type[StackPanel]) -> StackPanel: ...
    def get_insertion_indexes(self, position: windows_foundation.Point, /) -> typing.Tuple[winrt.system.Int32, winrt.system.Int32]: ...
    def get_irregular_snap_points(self, orientation: Orientation, alignment: windows_ui_xaml_controls_primitives.SnapPointsAlignment, /) -> typing.Sequence[winrt.system.Single]: ...
    def get_regular_snap_points(self, orientation: Orientation, alignment: windows_ui_xaml_controls_primitives.SnapPointsAlignment, /) -> typing.Tuple[winrt.system.Single, winrt.system.Single]: ...
    def add_horizontal_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_horizontal_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_vertical_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_vertical_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def orientation(self) -> Orientation: ...
    @orientation.setter
    def orientation(self, value: Orientation) -> None: ...
    @_property
    def are_scroll_snap_points_regular(self) -> bool: ...
    @are_scroll_snap_points_regular.setter
    def are_scroll_snap_points_regular(self, value: bool) -> None: ...
    @_property
    def padding(self) -> windows_ui_xaml.Thickness: ...
    @padding.setter
    def padding(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def corner_radius(self) -> windows_ui_xaml.CornerRadius: ...
    @corner_radius.setter
    def corner_radius(self, value: windows_ui_xaml.CornerRadius) -> None: ...
    @_property
    def border_thickness(self) -> windows_ui_xaml.Thickness: ...
    @border_thickness.setter
    def border_thickness(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def border_brush(self) -> windows_ui_xaml_media.Brush: ...
    @border_brush.setter
    def border_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def spacing(self) -> winrt.system.Double: ...
    @spacing.setter
    def spacing(self, value: winrt.system.Double) -> None: ...
    @_property
    def background_sizing(self) -> BackgroundSizing: ...
    @background_sizing.setter
    def background_sizing(self, value: BackgroundSizing) -> None: ...
    @_property
    def are_horizontal_snap_points_regular(self) -> bool: ...
    @_property
    def are_vertical_snap_points_regular(self) -> bool: ...

class StyleSelector_Static(type):
    pass

class StyleSelector(winrt.system.Object, metaclass=StyleSelector_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> StyleSelector: ...
    def __new__(cls: typing.Type[StyleSelector]) -> StyleSelector: ...
    def select_style(self, item: winrt.system.Object, container: windows_ui_xaml.DependencyObject, /) -> windows_ui_xaml.Style: ...

class SwapChainBackgroundPanel_Static(Grid_Static):
    pass

class SwapChainBackgroundPanel(Grid, metaclass=SwapChainBackgroundPanel_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SwapChainBackgroundPanel: ...
    def __new__(cls: typing.Type[SwapChainBackgroundPanel]) -> SwapChainBackgroundPanel: ...
    def create_core_independent_input_source(self, device_types: windows_ui_core.CoreInputDeviceTypes, /) -> windows_ui_core.CoreIndependentInputSource: ...

class SwapChainPanel_Static(Grid_Static):
    @_property
    def composition_scale_x_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def composition_scale_y_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SwapChainPanel(Grid, metaclass=SwapChainPanel_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SwapChainPanel: ...
    def __new__(cls: typing.Type[SwapChainPanel]) -> SwapChainPanel: ...
    def create_core_independent_input_source(self, device_types: windows_ui_core.CoreInputDeviceTypes, /) -> windows_ui_core.CoreIndependentInputSource: ...
    def add_composition_scale_changed(self, handler: windows_foundation.TypedEventHandler[SwapChainPanel, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_composition_scale_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def composition_scale_x(self) -> winrt.system.Single: ...
    @_property
    def composition_scale_y(self) -> winrt.system.Single: ...

class SwipeControl_Static(ContentControl_Static):
    @_property
    def bottom_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def left_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def right_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def top_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SwipeControl(ContentControl, metaclass=SwipeControl_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SwipeControl: ...
    def __new__(cls: typing.Type[SwipeControl]) -> SwipeControl: ...
    def close(self) -> None: ...
    @_property
    def top_items(self) -> SwipeItems: ...
    @top_items.setter
    def top_items(self, value: SwipeItems) -> None: ...
    @_property
    def right_items(self) -> SwipeItems: ...
    @right_items.setter
    def right_items(self, value: SwipeItems) -> None: ...
    @_property
    def left_items(self) -> SwipeItems: ...
    @left_items.setter
    def left_items(self, value: SwipeItems) -> None: ...
    @_property
    def bottom_items(self) -> SwipeItems: ...
    @bottom_items.setter
    def bottom_items(self, value: SwipeItems) -> None: ...

class SwipeItem_Static(windows_ui_xaml.DependencyObject_Static):
    @_property
    def background_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def behavior_on_invoked_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def command_parameter_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def command_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def icon_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SwipeItem(windows_ui_xaml.DependencyObject, metaclass=SwipeItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SwipeItem: ...
    def __new__(cls: typing.Type[SwipeItem]) -> SwipeItem: ...
    def add_invoked(self, handler: windows_foundation.TypedEventHandler[SwipeItem, SwipeItemInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def text(self) -> str: ...
    @text.setter
    def text(self, value: str) -> None: ...
    @_property
    def icon_source(self) -> IconSource: ...
    @icon_source.setter
    def icon_source(self, value: IconSource) -> None: ...
    @_property
    def foreground(self) -> windows_ui_xaml_media.Brush: ...
    @foreground.setter
    def foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def command_parameter(self) -> winrt.system.Object: ...
    @command_parameter.setter
    def command_parameter(self, value: winrt.system.Object) -> None: ...
    @_property
    def command(self) -> windows_ui_xaml_input.ICommand: ...
    @command.setter
    def command(self, value: windows_ui_xaml_input.ICommand) -> None: ...
    @_property
    def behavior_on_invoked(self) -> SwipeBehaviorOnInvoked: ...
    @behavior_on_invoked.setter
    def behavior_on_invoked(self, value: SwipeBehaviorOnInvoked) -> None: ...
    @_property
    def background(self) -> windows_ui_xaml_media.Brush: ...
    @background.setter
    def background(self, value: windows_ui_xaml_media.Brush) -> None: ...

@typing.final
class SwipeItemInvokedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SwipeItemInvokedEventArgs: ...
    @_property
    def swipe_control(self) -> SwipeControl: ...

class SwipeItems_Static(windows_ui_xaml.DependencyObject_Static):
    @_property
    def mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SwipeItems(windows_ui_xaml.DependencyObject, winrt._winrt.MutableSequence[SwipeItem], metaclass=SwipeItems_Static):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[SwipeItem]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> SwipeItem: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[SwipeItem]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: SwipeItem) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[SwipeItem]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SwipeItems: ...
    def __new__(cls: typing.Type[SwipeItems]) -> SwipeItems: ...
    def append(self, value: SwipeItem, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[SwipeItem]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> SwipeItem: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[SwipeItem], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[SwipeItem]: ...
    def index_of(self, value: SwipeItem, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: SwipeItem, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[SwipeItem], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: SwipeItem, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...
    @_property
    def mode(self) -> SwipeMode: ...
    @mode.setter
    def mode(self, value: SwipeMode) -> None: ...

@typing.final
class SymbolIcon_Static(IconElement_Static):
    @_property
    def symbol_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class SymbolIcon(IconElement, metaclass=SymbolIcon_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SymbolIcon: ...
    @typing.overload
    def __new__(cls: typing.Type[SymbolIcon], symbol: Symbol) -> SymbolIcon: ...
    @typing.overload
    def __new__(cls: typing.Type[SymbolIcon]) -> SymbolIcon: ...
    @_property
    def symbol(self) -> Symbol: ...
    @symbol.setter
    def symbol(self, value: Symbol) -> None: ...

class SymbolIconSource_Static(IconSource_Static):
    @_property
    def symbol_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class SymbolIconSource(IconSource, metaclass=SymbolIconSource_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> SymbolIconSource: ...
    def __new__(cls: typing.Type[SymbolIconSource]) -> SymbolIconSource: ...
    @_property
    def symbol(self) -> Symbol: ...
    @symbol.setter
    def symbol(self, value: Symbol) -> None: ...

@typing.final
class TextBlock_Static(windows_ui_xaml.FrameworkElement_Static):
    @_property
    def character_spacing_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_family_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_size_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_stretch_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def font_weight_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_text_selection_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def line_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def line_stacking_strategy_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def padding_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_trimming_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_wrapping_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_color_font_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_lines_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def optical_margin_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selection_highlight_color_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_line_bounds_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_reading_order_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_text_scale_factor_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_decorations_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_text_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_text_trimmed_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selection_flyout_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class TextBlock(windows_ui_xaml.FrameworkElement, metaclass=TextBlock_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextBlock: ...
    def __new__(cls: typing.Type[TextBlock]) -> TextBlock: ...
    def copy_selection_to_clipboard(self) -> None: ...
    def focus(self, value: windows_ui_xaml.FocusState, /) -> bool: ...
    def get_alpha_mask(self) -> windows_ui_composition.CompositionBrush: ...
    def select(self, start: windows_ui_xaml_documents.TextPointer, end: windows_ui_xaml_documents.TextPointer, /) -> None: ...
    def select_all(self) -> None: ...
    def add_context_menu_opening(self, handler: ContextMenuOpeningEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_context_menu_opening(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_selection_changed(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_selection_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_is_text_trimmed_changed(self, handler: windows_foundation.TypedEventHandler[TextBlock, IsTextTrimmedChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_is_text_trimmed_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def text_wrapping(self) -> windows_ui_xaml.TextWrapping: ...
    @text_wrapping.setter
    def text_wrapping(self, value: windows_ui_xaml.TextWrapping) -> None: ...
    @_property
    def text_trimming(self) -> windows_ui_xaml.TextTrimming: ...
    @text_trimming.setter
    def text_trimming(self, value: windows_ui_xaml.TextTrimming) -> None: ...
    @_property
    def text_alignment(self) -> windows_ui_xaml.TextAlignment: ...
    @text_alignment.setter
    def text_alignment(self, value: windows_ui_xaml.TextAlignment) -> None: ...
    @_property
    def text(self) -> str: ...
    @text.setter
    def text(self, value: str) -> None: ...
    @_property
    def padding(self) -> windows_ui_xaml.Thickness: ...
    @padding.setter
    def padding(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def foreground(self) -> windows_ui_xaml_media.Brush: ...
    @foreground.setter
    def foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> windows_ui_xaml_media.FontFamily: ...
    @font_family.setter
    def font_family(self, value: windows_ui_xaml_media.FontFamily) -> None: ...
    @_property
    def line_stacking_strategy(self) -> windows_ui_xaml.LineStackingStrategy: ...
    @line_stacking_strategy.setter
    def line_stacking_strategy(self, value: windows_ui_xaml.LineStackingStrategy) -> None: ...
    @_property
    def line_height(self) -> winrt.system.Double: ...
    @line_height.setter
    def line_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_text_selection_enabled(self) -> bool: ...
    @is_text_selection_enabled.setter
    def is_text_selection_enabled(self, value: bool) -> None: ...
    @_property
    def selected_text(self) -> str: ...
    @_property
    def selection_end(self) -> windows_ui_xaml_documents.TextPointer: ...
    @_property
    def selection_start(self) -> windows_ui_xaml_documents.TextPointer: ...
    @_property
    def baseline_offset(self) -> winrt.system.Double: ...
    @_property
    def content_end(self) -> windows_ui_xaml_documents.TextPointer: ...
    @_property
    def content_start(self) -> windows_ui_xaml_documents.TextPointer: ...
    @_property
    def inlines(self) -> windows_ui_xaml_documents.InlineCollection: ...
    @_property
    def text_reading_order(self) -> windows_ui_xaml.TextReadingOrder: ...
    @text_reading_order.setter
    def text_reading_order(self, value: windows_ui_xaml.TextReadingOrder) -> None: ...
    @_property
    def text_line_bounds(self) -> windows_ui_xaml.TextLineBounds: ...
    @text_line_bounds.setter
    def text_line_bounds(self, value: windows_ui_xaml.TextLineBounds) -> None: ...
    @_property
    def selection_highlight_color(self) -> windows_ui_xaml_media.SolidColorBrush: ...
    @selection_highlight_color.setter
    def selection_highlight_color(self, value: windows_ui_xaml_media.SolidColorBrush) -> None: ...
    @_property
    def optical_margin_alignment(self) -> windows_ui_xaml.OpticalMarginAlignment: ...
    @optical_margin_alignment.setter
    def optical_margin_alignment(self, value: windows_ui_xaml.OpticalMarginAlignment) -> None: ...
    @_property
    def max_lines(self) -> winrt.system.Int32: ...
    @max_lines.setter
    def max_lines(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_color_font_enabled(self) -> bool: ...
    @is_color_font_enabled.setter
    def is_color_font_enabled(self, value: bool) -> None: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def horizontal_text_alignment(self) -> windows_ui_xaml.TextAlignment: ...
    @horizontal_text_alignment.setter
    def horizontal_text_alignment(self, value: windows_ui_xaml.TextAlignment) -> None: ...
    @_property
    def is_text_trimmed(self) -> bool: ...
    @_property
    def text_highlighters(self) -> typing.MutableSequence[windows_ui_xaml_documents.TextHighlighter]: ...
    @_property
    def selection_flyout(self) -> windows_ui_xaml_controls_primitives.FlyoutBase: ...
    @selection_flyout.setter
    def selection_flyout(self, value: windows_ui_xaml_controls_primitives.FlyoutBase) -> None: ...

class TextBox_Static(Control_Static):
    @_property
    def text_wrapping_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def max_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_text_prediction_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_spell_check_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_read_only_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def input_scope_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def accepts_return_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selection_highlight_color_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def prevent_keyboard_display_on_programmatic_focus_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placeholder_text_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_color_font_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def desired_candidate_window_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def text_reading_order_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selection_highlight_color_when_not_focused_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placeholder_foreground_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_text_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def character_casing_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_handwriting_view_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def handwriting_view_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selection_flyout_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def proofing_menu_flyout_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def description_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def can_undo_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def can_redo_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def can_paste_clipboard_content_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TextBox(Control, metaclass=TextBox_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextBox: ...
    def __new__(cls: typing.Type[TextBox]) -> TextBox: ...
    def clear_undo_redo_history(self) -> None: ...
    def copy_selection_to_clipboard(self) -> None: ...
    def cut_selection_to_clipboard(self) -> None: ...
    def get_linguistic_alternatives_async(self) -> windows_foundation.IAsyncOperation[typing.Sequence[str]]: ...
    def get_rect_from_character_index(self, char_index: winrt.system.Int32, trailing_edge: bool, /) -> windows_foundation.Rect: ...
    def paste_from_clipboard(self) -> None: ...
    def redo(self) -> None: ...
    def select(self, start: winrt.system.Int32, length: winrt.system.Int32, /) -> None: ...
    def select_all(self) -> None: ...
    def undo(self) -> None: ...
    def add_context_menu_opening(self, handler: ContextMenuOpeningEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_context_menu_opening(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_selection_changed(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_selection_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_text_changed(self, handler: TextChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_text_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_paste(self, handler: TextControlPasteEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_paste(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_candidate_window_bounds_changed(self, handler: windows_foundation.TypedEventHandler[TextBox, CandidateWindowBoundsChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_candidate_window_bounds_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_text_changing(self, handler: windows_foundation.TypedEventHandler[TextBox, TextBoxTextChangingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_text_changing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_text_composition_changed(self, handler: windows_foundation.TypedEventHandler[TextBox, TextCompositionChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_text_composition_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_text_composition_ended(self, handler: windows_foundation.TypedEventHandler[TextBox, TextCompositionEndedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_text_composition_ended(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_text_composition_started(self, handler: windows_foundation.TypedEventHandler[TextBox, TextCompositionStartedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_text_composition_started(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_before_text_changing(self, handler: windows_foundation.TypedEventHandler[TextBox, TextBoxBeforeTextChangingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_before_text_changing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_copying_to_clipboard(self, handler: windows_foundation.TypedEventHandler[TextBox, TextControlCopyingToClipboardEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_copying_to_clipboard(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_cutting_to_clipboard(self, handler: windows_foundation.TypedEventHandler[TextBox, TextControlCuttingToClipboardEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_cutting_to_clipboard(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_selection_changing(self, handler: windows_foundation.TypedEventHandler[TextBox, TextBoxSelectionChangingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_selection_changing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def text_wrapping(self) -> windows_ui_xaml.TextWrapping: ...
    @text_wrapping.setter
    def text_wrapping(self, value: windows_ui_xaml.TextWrapping) -> None: ...
    @_property
    def text_alignment(self) -> windows_ui_xaml.TextAlignment: ...
    @text_alignment.setter
    def text_alignment(self, value: windows_ui_xaml.TextAlignment) -> None: ...
    @_property
    def text(self) -> str: ...
    @text.setter
    def text(self, value: str) -> None: ...
    @_property
    def selection_start(self) -> winrt.system.Int32: ...
    @selection_start.setter
    def selection_start(self, value: winrt.system.Int32) -> None: ...
    @_property
    def selection_length(self) -> winrt.system.Int32: ...
    @selection_length.setter
    def selection_length(self, value: winrt.system.Int32) -> None: ...
    @_property
    def selected_text(self) -> str: ...
    @selected_text.setter
    def selected_text(self, value: str) -> None: ...
    @_property
    def max_length(self) -> winrt.system.Int32: ...
    @max_length.setter
    def max_length(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_text_prediction_enabled(self) -> bool: ...
    @is_text_prediction_enabled.setter
    def is_text_prediction_enabled(self, value: bool) -> None: ...
    @_property
    def is_spell_check_enabled(self) -> bool: ...
    @is_spell_check_enabled.setter
    def is_spell_check_enabled(self, value: bool) -> None: ...
    @_property
    def is_read_only(self) -> bool: ...
    @is_read_only.setter
    def is_read_only(self, value: bool) -> None: ...
    @_property
    def input_scope(self) -> windows_ui_xaml_input.InputScope: ...
    @input_scope.setter
    def input_scope(self, value: windows_ui_xaml_input.InputScope) -> None: ...
    @_property
    def accepts_return(self) -> bool: ...
    @accepts_return.setter
    def accepts_return(self, value: bool) -> None: ...
    @_property
    def is_color_font_enabled(self) -> bool: ...
    @is_color_font_enabled.setter
    def is_color_font_enabled(self, value: bool) -> None: ...
    @_property
    def placeholder_text(self) -> str: ...
    @placeholder_text.setter
    def placeholder_text(self, value: str) -> None: ...
    @_property
    def prevent_keyboard_display_on_programmatic_focus(self) -> bool: ...
    @prevent_keyboard_display_on_programmatic_focus.setter
    def prevent_keyboard_display_on_programmatic_focus(self, value: bool) -> None: ...
    @_property
    def selection_highlight_color(self) -> windows_ui_xaml_media.SolidColorBrush: ...
    @selection_highlight_color.setter
    def selection_highlight_color(self, value: windows_ui_xaml_media.SolidColorBrush) -> None: ...
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def desired_candidate_window_alignment(self) -> CandidateWindowAlignment: ...
    @desired_candidate_window_alignment.setter
    def desired_candidate_window_alignment(self, value: CandidateWindowAlignment) -> None: ...
    @_property
    def text_reading_order(self) -> windows_ui_xaml.TextReadingOrder: ...
    @text_reading_order.setter
    def text_reading_order(self, value: windows_ui_xaml.TextReadingOrder) -> None: ...
    @_property
    def selection_highlight_color_when_not_focused(self) -> windows_ui_xaml_media.SolidColorBrush: ...
    @selection_highlight_color_when_not_focused.setter
    def selection_highlight_color_when_not_focused(self, value: windows_ui_xaml_media.SolidColorBrush) -> None: ...
    @_property
    def placeholder_foreground(self) -> windows_ui_xaml_media.Brush: ...
    @placeholder_foreground.setter
    def placeholder_foreground(self, value: windows_ui_xaml_media.Brush) -> None: ...
    @_property
    def horizontal_text_alignment(self) -> windows_ui_xaml.TextAlignment: ...
    @horizontal_text_alignment.setter
    def horizontal_text_alignment(self, value: windows_ui_xaml.TextAlignment) -> None: ...
    @_property
    def character_casing(self) -> CharacterCasing: ...
    @character_casing.setter
    def character_casing(self, value: CharacterCasing) -> None: ...
    @_property
    def is_handwriting_view_enabled(self) -> bool: ...
    @is_handwriting_view_enabled.setter
    def is_handwriting_view_enabled(self, value: bool) -> None: ...
    @_property
    def handwriting_view(self) -> HandwritingView: ...
    @handwriting_view.setter
    def handwriting_view(self, value: HandwritingView) -> None: ...
    @_property
    def selection_flyout(self) -> windows_ui_xaml_controls_primitives.FlyoutBase: ...
    @selection_flyout.setter
    def selection_flyout(self, value: windows_ui_xaml_controls_primitives.FlyoutBase) -> None: ...
    @_property
    def description(self) -> winrt.system.Object: ...
    @description.setter
    def description(self, value: winrt.system.Object) -> None: ...
    @_property
    def can_paste_clipboard_content(self) -> bool: ...
    @_property
    def can_redo(self) -> bool: ...
    @_property
    def can_undo(self) -> bool: ...
    @_property
    def proofing_menu_flyout(self) -> windows_ui_xaml_controls_primitives.FlyoutBase: ...

@typing.final
class TextBoxBeforeTextChangingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextBoxBeforeTextChangingEventArgs: ...
    @_property
    def cancel(self) -> bool: ...
    @cancel.setter
    def cancel(self, value: bool) -> None: ...
    @_property
    def new_text(self) -> str: ...

@typing.final
class TextBoxSelectionChangingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextBoxSelectionChangingEventArgs: ...
    @_property
    def cancel(self) -> bool: ...
    @cancel.setter
    def cancel(self, value: bool) -> None: ...
    @_property
    def selection_length(self) -> winrt.system.Int32: ...
    @_property
    def selection_start(self) -> winrt.system.Int32: ...

@typing.final
class TextBoxTextChangingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextBoxTextChangingEventArgs: ...
    @_property
    def is_content_changing(self) -> bool: ...

@typing.final
class TextChangedEventArgs(windows_ui_xaml.RoutedEventArgs):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextChangedEventArgs: ...

@typing.final
class TextCompositionChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextCompositionChangedEventArgs: ...
    @_property
    def length(self) -> winrt.system.Int32: ...
    @_property
    def start_index(self) -> winrt.system.Int32: ...

@typing.final
class TextCompositionEndedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextCompositionEndedEventArgs: ...
    @_property
    def length(self) -> winrt.system.Int32: ...
    @_property
    def start_index(self) -> winrt.system.Int32: ...

@typing.final
class TextCompositionStartedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextCompositionStartedEventArgs: ...
    @_property
    def length(self) -> winrt.system.Int32: ...
    @_property
    def start_index(self) -> winrt.system.Int32: ...

@typing.final
class TextControlCopyingToClipboardEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextControlCopyingToClipboardEventArgs: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...

@typing.final
class TextControlCuttingToClipboardEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextControlCuttingToClipboardEventArgs: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...

@typing.final
class TextControlPasteEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextControlPasteEventArgs: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...

@typing.final
class TimePickedEventArgs(windows_ui_xaml.DependencyObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TimePickedEventArgs: ...
    def __new__(cls: typing.Type[TimePickedEventArgs]) -> TimePickedEventArgs: ...
    @_property
    def new_time(self) -> datetime.timedelta: ...
    @_property
    def old_time(self) -> datetime.timedelta: ...

class TimePicker_Static(Control_Static):
    @_property
    def clock_identifier_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def minute_increment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def time_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def light_dismiss_overlay_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def selected_time_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TimePicker(Control, metaclass=TimePicker_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TimePicker: ...
    def __new__(cls: typing.Type[TimePicker]) -> TimePicker: ...
    def add_time_changed(self, handler: windows_foundation.EventHandler[TimePickerValueChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_time_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_selected_time_changed(self, handler: windows_foundation.TypedEventHandler[TimePicker, TimePickerSelectedValueChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_selected_time_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def time(self) -> datetime.timedelta: ...
    @time.setter
    def time(self, value: datetime.timedelta) -> None: ...
    @_property
    def minute_increment(self) -> winrt.system.Int32: ...
    @minute_increment.setter
    def minute_increment(self, value: winrt.system.Int32) -> None: ...
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def clock_identifier(self) -> str: ...
    @clock_identifier.setter
    def clock_identifier(self, value: str) -> None: ...
    @_property
    def light_dismiss_overlay_mode(self) -> LightDismissOverlayMode: ...
    @light_dismiss_overlay_mode.setter
    def light_dismiss_overlay_mode(self, value: LightDismissOverlayMode) -> None: ...
    @_property
    def selected_time(self) -> typing.Optional[datetime.timedelta]: ...
    @selected_time.setter
    def selected_time(self, value: typing.Optional[datetime.timedelta]) -> None: ...

@typing.final
class TimePickerFlyoutPresenter_Static(Control_Static):
    @_property
    def is_default_shadow_enabled_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class TimePickerFlyoutPresenter(Control, metaclass=TimePickerFlyoutPresenter_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TimePickerFlyoutPresenter: ...
    @_property
    def is_default_shadow_enabled(self) -> bool: ...
    @is_default_shadow_enabled.setter
    def is_default_shadow_enabled(self, value: bool) -> None: ...

@typing.final
class TimePickerSelectedValueChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TimePickerSelectedValueChangedEventArgs: ...
    @_property
    def new_time(self) -> typing.Optional[datetime.timedelta]: ...
    @_property
    def old_time(self) -> typing.Optional[datetime.timedelta]: ...

@typing.final
class TimePickerValueChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TimePickerValueChangedEventArgs: ...
    @_property
    def new_time(self) -> datetime.timedelta: ...
    @_property
    def old_time(self) -> datetime.timedelta: ...

class ToggleMenuFlyoutItem_Static(MenuFlyoutItem_Static):
    @_property
    def is_checked_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ToggleMenuFlyoutItem(MenuFlyoutItem, metaclass=ToggleMenuFlyoutItem_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ToggleMenuFlyoutItem: ...
    def __new__(cls: typing.Type[ToggleMenuFlyoutItem]) -> ToggleMenuFlyoutItem: ...
    @_property
    def is_checked(self) -> bool: ...
    @is_checked.setter
    def is_checked(self, value: bool) -> None: ...

class ToggleSplitButton_Static(SplitButton_Static):
    pass

class ToggleSplitButton(SplitButton, metaclass=ToggleSplitButton_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ToggleSplitButton: ...
    def __new__(cls: typing.Type[ToggleSplitButton]) -> ToggleSplitButton: ...
    def add_is_checked_changed(self, handler: windows_foundation.TypedEventHandler[ToggleSplitButton, ToggleSplitButtonIsCheckedChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_is_checked_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def is_checked(self) -> bool: ...
    @is_checked.setter
    def is_checked(self, value: bool) -> None: ...

class ToggleSplitButtonAutomationPeer_Static(windows_ui_xaml_automation_peers.FrameworkElementAutomationPeer_Static):
    pass

class ToggleSplitButtonAutomationPeer(windows_ui_xaml_automation_peers.FrameworkElementAutomationPeer, windows_ui_xaml_automation_provider.ImplementsIToggleProvider, windows_ui_xaml_automation_provider.ImplementsIExpandCollapseProvider, metaclass=ToggleSplitButtonAutomationPeer_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ToggleSplitButtonAutomationPeer: ...
    def __new__(cls: typing.Type[ToggleSplitButtonAutomationPeer], owner: ToggleSplitButton) -> ToggleSplitButtonAutomationPeer: ...
    def collapse(self) -> None: ...
    def expand(self) -> None: ...
    def toggle(self) -> None: ...
    @_property
    def expand_collapse_state(self) -> windows_ui_xaml_automation.ExpandCollapseState: ...
    @_property
    def toggle_state(self) -> windows_ui_xaml_automation.ToggleState: ...

@typing.final
class ToggleSplitButtonIsCheckedChangedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ToggleSplitButtonIsCheckedChangedEventArgs: ...

@typing.final
class ToggleSwitch_Static(Control_Static):
    @_property
    def header_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def header_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_on_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def off_content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def off_content_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def on_content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def on_content_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ToggleSwitch(Control, metaclass=ToggleSwitch_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ToggleSwitch: ...
    def __new__(cls: typing.Type[ToggleSwitch]) -> ToggleSwitch: ...
    def add_toggled(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_toggled(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def on_content_template(self) -> windows_ui_xaml.DataTemplate: ...
    @on_content_template.setter
    def on_content_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def on_content(self) -> winrt.system.Object: ...
    @on_content.setter
    def on_content(self, value: winrt.system.Object) -> None: ...
    @_property
    def off_content_template(self) -> windows_ui_xaml.DataTemplate: ...
    @off_content_template.setter
    def off_content_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def off_content(self) -> winrt.system.Object: ...
    @off_content.setter
    def off_content(self, value: winrt.system.Object) -> None: ...
    @_property
    def is_on(self) -> bool: ...
    @is_on.setter
    def is_on(self, value: bool) -> None: ...
    @_property
    def header_template(self) -> windows_ui_xaml.DataTemplate: ...
    @header_template.setter
    def header_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def header(self) -> winrt.system.Object: ...
    @header.setter
    def header(self, value: winrt.system.Object) -> None: ...
    @_property
    def template_settings(self) -> windows_ui_xaml_controls_primitives.ToggleSwitchTemplateSettings: ...

class ToolTip_Static(ContentControl_Static):
    @_property
    def horizontal_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_open_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placement_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placement_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_offset_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placement_rect_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class ToolTip(ContentControl, metaclass=ToolTip_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ToolTip: ...
    def __new__(cls: typing.Type[ToolTip]) -> ToolTip: ...
    def add_closed(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_opened(self, handler: windows_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def vertical_offset(self) -> winrt.system.Double: ...
    @vertical_offset.setter
    def vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def placement_target(self) -> windows_ui_xaml.UIElement: ...
    @placement_target.setter
    def placement_target(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def placement(self) -> windows_ui_xaml_controls_primitives.PlacementMode: ...
    @placement.setter
    def placement(self, value: windows_ui_xaml_controls_primitives.PlacementMode) -> None: ...
    @_property
    def is_open(self) -> bool: ...
    @is_open.setter
    def is_open(self, value: bool) -> None: ...
    @_property
    def horizontal_offset(self) -> winrt.system.Double: ...
    @horizontal_offset.setter
    def horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def template_settings(self) -> windows_ui_xaml_controls_primitives.ToolTipTemplateSettings: ...
    @_property
    def placement_rect(self) -> typing.Optional[windows_foundation.Rect]: ...
    @placement_rect.setter
    def placement_rect(self, value: typing.Optional[windows_foundation.Rect]) -> None: ...

@typing.final
class ToolTipService_Static(type):
    def get_placement(cls, element: windows_ui_xaml.DependencyObject, /) -> windows_ui_xaml_controls_primitives.PlacementMode: ...
    def get_placement_target(cls, element: windows_ui_xaml.DependencyObject, /) -> windows_ui_xaml.UIElement: ...
    def get_tool_tip(cls, element: windows_ui_xaml.DependencyObject, /) -> winrt.system.Object: ...
    def set_placement(cls, element: windows_ui_xaml.DependencyObject, value: windows_ui_xaml_controls_primitives.PlacementMode, /) -> None: ...
    def set_placement_target(cls, element: windows_ui_xaml.DependencyObject, value: windows_ui_xaml.UIElement, /) -> None: ...
    def set_tool_tip(cls, element: windows_ui_xaml.DependencyObject, value: winrt.system.Object, /) -> None: ...
    @_property
    def placement_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def placement_target_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def tool_tip_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class ToolTipService(winrt.system.Object, metaclass=ToolTipService_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ToolTipService: ...

class TreeView_Static(Control_Static):
    @_property
    def selection_mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def can_drag_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def can_reorder_items_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_container_style_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_container_style_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_container_transitions_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_template_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_template_selector_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def items_source_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TreeView(Control, metaclass=TreeView_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TreeView: ...
    def __new__(cls: typing.Type[TreeView]) -> TreeView: ...
    def collapse(self, value: TreeViewNode, /) -> None: ...
    def container_from_item(self, item: winrt.system.Object, /) -> windows_ui_xaml.DependencyObject: ...
    def container_from_node(self, node: TreeViewNode, /) -> windows_ui_xaml.DependencyObject: ...
    def expand(self, value: TreeViewNode, /) -> None: ...
    def item_from_container(self, container: windows_ui_xaml.DependencyObject, /) -> winrt.system.Object: ...
    def node_from_container(self, container: windows_ui_xaml.DependencyObject, /) -> TreeViewNode: ...
    def select_all(self) -> None: ...
    def add_collapsed(self, handler: windows_foundation.TypedEventHandler[TreeView, TreeViewCollapsedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_collapsed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_expanding(self, handler: windows_foundation.TypedEventHandler[TreeView, TreeViewExpandingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_expanding(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_item_invoked(self, handler: windows_foundation.TypedEventHandler[TreeView, TreeViewItemInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_item_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_drag_items_completed(self, handler: windows_foundation.TypedEventHandler[TreeView, TreeViewDragItemsCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drag_items_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_drag_items_starting(self, handler: windows_foundation.TypedEventHandler[TreeView, TreeViewDragItemsStartingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drag_items_starting(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def selection_mode(self) -> TreeViewSelectionMode: ...
    @selection_mode.setter
    def selection_mode(self, value: TreeViewSelectionMode) -> None: ...
    @_property
    def root_nodes(self) -> typing.MutableSequence[TreeViewNode]: ...
    @_property
    def selected_nodes(self) -> typing.MutableSequence[TreeViewNode]: ...
    @_property
    def items_source(self) -> winrt.system.Object: ...
    @items_source.setter
    def items_source(self, value: winrt.system.Object) -> None: ...
    @_property
    def item_template_selector(self) -> DataTemplateSelector: ...
    @item_template_selector.setter
    def item_template_selector(self, value: DataTemplateSelector) -> None: ...
    @_property
    def item_template(self) -> windows_ui_xaml.DataTemplate: ...
    @item_template.setter
    def item_template(self, value: windows_ui_xaml.DataTemplate) -> None: ...
    @_property
    def item_container_transitions(self) -> windows_ui_xaml_media_animation.TransitionCollection: ...
    @item_container_transitions.setter
    def item_container_transitions(self, value: windows_ui_xaml_media_animation.TransitionCollection) -> None: ...
    @_property
    def item_container_style_selector(self) -> StyleSelector: ...
    @item_container_style_selector.setter
    def item_container_style_selector(self, value: StyleSelector) -> None: ...
    @_property
    def item_container_style(self) -> windows_ui_xaml.Style: ...
    @item_container_style.setter
    def item_container_style(self, value: windows_ui_xaml.Style) -> None: ...
    @_property
    def can_reorder_items(self) -> bool: ...
    @can_reorder_items.setter
    def can_reorder_items(self, value: bool) -> None: ...
    @_property
    def can_drag_items(self) -> bool: ...
    @can_drag_items.setter
    def can_drag_items(self, value: bool) -> None: ...

@typing.final
class TreeViewCollapsedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TreeViewCollapsedEventArgs: ...
    @_property
    def node(self) -> TreeViewNode: ...
    @_property
    def item(self) -> winrt.system.Object: ...

@typing.final
class TreeViewDragItemsCompletedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TreeViewDragItemsCompletedEventArgs: ...
    @_property
    def drop_result(self) -> windows_applicationmodel_datatransfer.DataPackageOperation: ...
    @_property
    def items(self) -> typing.Sequence[winrt.system.Object]: ...

@typing.final
class TreeViewDragItemsStartingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TreeViewDragItemsStartingEventArgs: ...
    @_property
    def cancel(self) -> bool: ...
    @cancel.setter
    def cancel(self, value: bool) -> None: ...
    @_property
    def data(self) -> windows_applicationmodel_datatransfer.DataPackage: ...
    @_property
    def items(self) -> typing.MutableSequence[winrt.system.Object]: ...

@typing.final
class TreeViewExpandingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TreeViewExpandingEventArgs: ...
    @_property
    def node(self) -> TreeViewNode: ...
    @_property
    def item(self) -> winrt.system.Object: ...

@typing.final
class TreeViewItemInvokedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TreeViewItemInvokedEventArgs: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...
    @_property
    def invoked_item(self) -> winrt.system.Object: ...

class TreeViewItemTemplateSettings_Static(windows_ui_xaml.DependencyObject_Static):
    @_property
    def collapsed_glyph_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def drag_items_count_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def expanded_glyph_visibility_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def indentation_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TreeViewItemTemplateSettings(windows_ui_xaml.DependencyObject, metaclass=TreeViewItemTemplateSettings_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TreeViewItemTemplateSettings: ...
    def __new__(cls: typing.Type[TreeViewItemTemplateSettings]) -> TreeViewItemTemplateSettings: ...
    @_property
    def collapsed_glyph_visibility(self) -> windows_ui_xaml.Visibility: ...
    @_property
    def drag_items_count(self) -> winrt.system.Int32: ...
    @_property
    def expanded_glyph_visibility(self) -> windows_ui_xaml.Visibility: ...
    @_property
    def indentation(self) -> windows_ui_xaml.Thickness: ...

class TreeViewNode_Static(windows_ui_xaml.DependencyObject_Static):
    @_property
    def content_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def depth_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def has_children_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def is_expanded_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TreeViewNode(windows_ui_xaml.DependencyObject, metaclass=TreeViewNode_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TreeViewNode: ...
    def __new__(cls: typing.Type[TreeViewNode]) -> TreeViewNode: ...
    @_property
    def is_expanded(self) -> bool: ...
    @is_expanded.setter
    def is_expanded(self, value: bool) -> None: ...
    @_property
    def has_unrealized_children(self) -> bool: ...
    @has_unrealized_children.setter
    def has_unrealized_children(self, value: bool) -> None: ...
    @_property
    def content(self) -> winrt.system.Object: ...
    @content.setter
    def content(self, value: winrt.system.Object) -> None: ...
    @_property
    def children(self) -> typing.MutableSequence[TreeViewNode]: ...
    @_property
    def depth(self) -> winrt.system.Int32: ...
    @_property
    def has_children(self) -> bool: ...
    @_property
    def parent(self) -> TreeViewNode: ...

class TwoPaneView_Static(Control_Static):
    @_property
    def min_tall_mode_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def min_wide_mode_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def mode_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane1_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane1_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane2_length_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane2_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def pane_priority_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def tall_mode_configuration_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def wide_mode_configuration_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class TwoPaneView(Control, metaclass=TwoPaneView_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TwoPaneView: ...
    def __new__(cls: typing.Type[TwoPaneView]) -> TwoPaneView: ...
    def add_mode_changed(self, handler: windows_foundation.TypedEventHandler[TwoPaneView, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_mode_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def wide_mode_configuration(self) -> TwoPaneViewWideModeConfiguration: ...
    @wide_mode_configuration.setter
    def wide_mode_configuration(self, value: TwoPaneViewWideModeConfiguration) -> None: ...
    @_property
    def tall_mode_configuration(self) -> TwoPaneViewTallModeConfiguration: ...
    @tall_mode_configuration.setter
    def tall_mode_configuration(self, value: TwoPaneViewTallModeConfiguration) -> None: ...
    @_property
    def pane_priority(self) -> TwoPaneViewPriority: ...
    @pane_priority.setter
    def pane_priority(self, value: TwoPaneViewPriority) -> None: ...
    @_property
    def pane2_length(self) -> windows_ui_xaml.GridLength: ...
    @pane2_length.setter
    def pane2_length(self, value: windows_ui_xaml.GridLength) -> None: ...
    @_property
    def pane2(self) -> windows_ui_xaml.UIElement: ...
    @pane2.setter
    def pane2(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def pane1_length(self) -> windows_ui_xaml.GridLength: ...
    @pane1_length.setter
    def pane1_length(self, value: windows_ui_xaml.GridLength) -> None: ...
    @_property
    def pane1(self) -> windows_ui_xaml.UIElement: ...
    @pane1.setter
    def pane1(self, value: windows_ui_xaml.UIElement) -> None: ...
    @_property
    def min_wide_mode_width(self) -> winrt.system.Double: ...
    @min_wide_mode_width.setter
    def min_wide_mode_width(self, value: winrt.system.Double) -> None: ...
    @_property
    def min_tall_mode_height(self) -> winrt.system.Double: ...
    @min_tall_mode_height.setter
    def min_tall_mode_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def mode(self) -> TwoPaneViewMode: ...

@typing.final
class UIElementCollection(winrt.system.Object, winrt._winrt.MutableSequence[windows_ui_xaml.UIElement]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[windows_ui_xaml.UIElement]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> windows_ui_xaml.UIElement: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[windows_ui_xaml.UIElement]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: windows_ui_xaml.UIElement) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[windows_ui_xaml.UIElement]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> UIElementCollection: ...
    def append(self, value: windows_ui_xaml.UIElement, /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[windows_ui_xaml.UIElement]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> windows_ui_xaml.UIElement: ...
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[windows_ui_xaml.UIElement], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Sequence[windows_ui_xaml.UIElement]: ...
    def index_of(self, value: windows_ui_xaml.UIElement, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: windows_ui_xaml.UIElement, /) -> None: ...
    def move(self, old_index: winrt.system.UInt32, new_index: winrt.system.UInt32, /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: typing.Union[winrt.system.Array[windows_ui_xaml.UIElement], winrt.system.ReadableBuffer], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: windows_ui_xaml.UIElement, /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

class UserControl_Static(Control_Static):
    @_property
    def content_property(cls) -> windows_ui_xaml.DependencyProperty: ...

class UserControl(Control, metaclass=UserControl_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> UserControl: ...
    def __new__(cls: typing.Type[UserControl]) -> UserControl: ...
    @_property
    def content(self) -> windows_ui_xaml.UIElement: ...
    @content.setter
    def content(self, value: windows_ui_xaml.UIElement) -> None: ...

@typing.final
class VariableSizedWrapGrid_Static(Panel_Static):
    def get_column_span(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Int32: ...
    def get_row_span(cls, element: windows_ui_xaml.UIElement, /) -> winrt.system.Int32: ...
    def set_column_span(cls, element: windows_ui_xaml.UIElement, value: winrt.system.Int32, /) -> None: ...
    def set_row_span(cls, element: windows_ui_xaml.UIElement, value: winrt.system.Int32, /) -> None: ...
    @_property
    def column_span_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_children_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_height_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def item_width_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def maximum_rows_or_columns_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def orientation_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def row_span_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_children_alignment_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class VariableSizedWrapGrid(Panel, metaclass=VariableSizedWrapGrid_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> VariableSizedWrapGrid: ...
    def __new__(cls: typing.Type[VariableSizedWrapGrid]) -> VariableSizedWrapGrid: ...
    @_property
    def vertical_children_alignment(self) -> windows_ui_xaml.VerticalAlignment: ...
    @vertical_children_alignment.setter
    def vertical_children_alignment(self, value: windows_ui_xaml.VerticalAlignment) -> None: ...
    @_property
    def orientation(self) -> Orientation: ...
    @orientation.setter
    def orientation(self, value: Orientation) -> None: ...
    @_property
    def maximum_rows_or_columns(self) -> winrt.system.Int32: ...
    @maximum_rows_or_columns.setter
    def maximum_rows_or_columns(self, value: winrt.system.Int32) -> None: ...
    @_property
    def item_width(self) -> winrt.system.Double: ...
    @item_width.setter
    def item_width(self, value: winrt.system.Double) -> None: ...
    @_property
    def item_height(self) -> winrt.system.Double: ...
    @item_height.setter
    def item_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def horizontal_children_alignment(self) -> windows_ui_xaml.HorizontalAlignment: ...
    @horizontal_children_alignment.setter
    def horizontal_children_alignment(self, value: windows_ui_xaml.HorizontalAlignment) -> None: ...

@typing.final
class Viewbox_Static(windows_ui_xaml.FrameworkElement_Static):
    @_property
    def stretch_direction_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def stretch_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class Viewbox(windows_ui_xaml.FrameworkElement, metaclass=Viewbox_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Viewbox: ...
    def __new__(cls: typing.Type[Viewbox]) -> Viewbox: ...
    @_property
    def stretch_direction(self) -> StretchDirection: ...
    @stretch_direction.setter
    def stretch_direction(self, value: StretchDirection) -> None: ...
    @_property
    def stretch(self) -> windows_ui_xaml_media.Stretch: ...
    @stretch.setter
    def stretch(self, value: windows_ui_xaml_media.Stretch) -> None: ...
    @_property
    def child(self) -> windows_ui_xaml.UIElement: ...
    @child.setter
    def child(self, value: windows_ui_xaml.UIElement) -> None: ...

class VirtualizingPanel_Static(Panel_Static):
    pass

class VirtualizingPanel(Panel, metaclass=VirtualizingPanel_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> VirtualizingPanel: ...
    @_property
    def item_container_generator(self) -> ItemContainerGenerator: ...

@typing.final
class WebView_Static(windows_ui_xaml.FrameworkElement_Static):
    def clear_temporary_web_data_async(cls) -> windows_foundation.IAsyncAction: ...
    @_property
    def allowed_script_notify_uris_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def any_script_notify_uri(cls) -> typing.MutableSequence[windows_foundation.Uri]: ...
    @_property
    def data_transfer_package_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def source_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def can_go_back_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def can_go_forward_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def default_background_color_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def document_title_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def contains_full_screen_element_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def default_execution_mode(cls) -> WebViewExecutionMode: ...
    @_property
    def x_y_focus_down_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def x_y_focus_left_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def x_y_focus_right_property(cls) -> windows_ui_xaml.DependencyProperty: ...
    @_property
    def x_y_focus_up_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class WebView(windows_ui_xaml.FrameworkElement, metaclass=WebView_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebView: ...
    @typing.overload
    def __new__(cls: typing.Type[WebView], execution_mode: WebViewExecutionMode) -> WebView: ...
    @typing.overload
    def __new__(cls: typing.Type[WebView]) -> WebView: ...
    def add_web_allowed_object(self, name: str, p_object: winrt.system.Object, /) -> None: ...
    def build_local_stream_uri(self, content_identifier: str, relative_path: str, /) -> windows_foundation.Uri: ...
    def capture_preview_to_stream_async(self, stream: windows_storage_streams.ImplementsIRandomAccessStream, /) -> windows_foundation.IAsyncAction: ...
    def capture_selected_content_to_data_package_async(self) -> windows_foundation.IAsyncOperation[windows_applicationmodel_datatransfer.DataPackage]: ...
    def deferred_permission_request_by_id(self, id: winrt.system.UInt32, /) -> WebViewDeferredPermissionRequest: ...
    def focus(self, value: windows_ui_xaml.FocusState, /) -> bool: ...
    def go_back(self) -> None: ...
    def go_forward(self) -> None: ...
    # @deprecated("Use InvokeScriptAsync instead of InvokeScript. For more info, see MSDN.")
    def invoke_script(self, script_name: str, arguments: typing.Union[winrt.system.Array[str], winrt.system.ReadableBuffer], /) -> str: ...
    def invoke_script_async(self, script_name: str, arguments: typing.Iterable[str], /) -> windows_foundation.IAsyncOperation[str]: ...
    def navigate(self, source: windows_foundation.Uri, /) -> None: ...
    def navigate_to_local_stream_uri(self, source: windows_foundation.Uri, stream_resolver: windows_web.ImplementsIUriToStreamResolver, /) -> None: ...
    def navigate_to_string(self, text: str, /) -> None: ...
    def navigate_with_http_request_message(self, request_message: windows_web_http.HttpRequestMessage, /) -> None: ...
    def refresh(self) -> None: ...
    def stop(self) -> None: ...
    # @deprecated("LoadCompleted may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.")
    def add_load_completed(self, handler: windows_ui_xaml_navigation.LoadCompletedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # @deprecated("LoadCompleted may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.")
    def remove_load_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # @deprecated("NavigationFailed may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.")
    def add_navigation_failed(self, handler: WebViewNavigationFailedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # @deprecated("NavigationFailed may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.")
    def remove_navigation_failed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_script_notify(self, handler: NotifyEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_script_notify(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_content_loading(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewContentLoadingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_content_loading(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_dom_content_loaded(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewDOMContentLoadedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_dom_content_loaded(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_frame_content_loading(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewContentLoadingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_frame_content_loading(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_frame_dom_content_loaded(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewDOMContentLoadedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_frame_dom_content_loaded(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_frame_navigation_completed(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewNavigationCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_frame_navigation_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_frame_navigation_starting(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewNavigationStartingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_frame_navigation_starting(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_long_running_script_detected(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewLongRunningScriptDetectedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_long_running_script_detected(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_navigation_completed(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewNavigationCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_navigation_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_navigation_starting(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewNavigationStartingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_navigation_starting(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_unsafe_content_warning_displaying(self, handler: windows_foundation.TypedEventHandler[WebView, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_unsafe_content_warning_displaying(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_unviewable_content_identified(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewUnviewableContentIdentifiedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_unviewable_content_identified(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_contains_full_screen_element_changed(self, handler: windows_foundation.TypedEventHandler[WebView, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_contains_full_screen_element_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_new_window_requested(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewNewWindowRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_new_window_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_permission_requested(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewPermissionRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_permission_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_unsupported_uri_scheme_identified(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewUnsupportedUriSchemeIdentifiedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_unsupported_uri_scheme_identified(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_separate_process_lost(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewSeparateProcessLostEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_separate_process_lost(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_web_resource_requested(self, handler: windows_foundation.TypedEventHandler[WebView, WebViewWebResourceRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_web_resource_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def source(self) -> windows_foundation.Uri: ...
    @source.setter
    def source(self, value: windows_foundation.Uri) -> None: ...
    @_property
    def allowed_script_notify_uris(self) -> typing.MutableSequence[windows_foundation.Uri]: ...
    @allowed_script_notify_uris.setter
    def allowed_script_notify_uris(self, value: typing.MutableSequence[windows_foundation.Uri]) -> None: ...
    @_property
    def data_transfer_package(self) -> windows_applicationmodel_datatransfer.DataPackage: ...
    @_property
    def default_background_color(self) -> windows_ui.Color: ...
    @default_background_color.setter
    def default_background_color(self, value: windows_ui.Color) -> None: ...
    @_property
    def can_go_back(self) -> bool: ...
    @_property
    def can_go_forward(self) -> bool: ...
    @_property
    def document_title(self) -> str: ...
    @_property
    def contains_full_screen_element(self) -> bool: ...
    @_property
    def deferred_permission_requests(self) -> typing.MutableSequence[WebViewDeferredPermissionRequest]: ...
    @_property
    def execution_mode(self) -> WebViewExecutionMode: ...
    @_property
    def settings(self) -> WebViewSettings: ...
    @_property
    def x_y_focus_up(self) -> windows_ui_xaml.DependencyObject: ...
    @x_y_focus_up.setter
    def x_y_focus_up(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    @_property
    def x_y_focus_right(self) -> windows_ui_xaml.DependencyObject: ...
    @x_y_focus_right.setter
    def x_y_focus_right(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    @_property
    def x_y_focus_left(self) -> windows_ui_xaml.DependencyObject: ...
    @x_y_focus_left.setter
    def x_y_focus_left(self, value: windows_ui_xaml.DependencyObject) -> None: ...
    @_property
    def x_y_focus_down(self) -> windows_ui_xaml.DependencyObject: ...
    @x_y_focus_down.setter
    def x_y_focus_down(self, value: windows_ui_xaml.DependencyObject) -> None: ...

@typing.final
class WebViewBrush_Static(windows_ui_xaml_media.TileBrush_Static):
    @_property
    def source_name_property(cls) -> windows_ui_xaml.DependencyProperty: ...

@typing.final
class WebViewBrush(windows_ui_xaml_media.TileBrush, metaclass=WebViewBrush_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewBrush: ...
    def __new__(cls: typing.Type[WebViewBrush]) -> WebViewBrush: ...
    def redraw(self) -> None: ...
    def set_source(self, source: WebView, /) -> None: ...
    @_property
    def source_name(self) -> str: ...
    @source_name.setter
    def source_name(self, value: str) -> None: ...

@typing.final
class WebViewContentLoadingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewContentLoadingEventArgs: ...
    @_property
    def uri(self) -> windows_foundation.Uri: ...

@typing.final
class WebViewDOMContentLoadedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewDOMContentLoadedEventArgs: ...
    @_property
    def uri(self) -> windows_foundation.Uri: ...

@typing.final
class WebViewDeferredPermissionRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewDeferredPermissionRequest: ...
    def allow(self) -> None: ...
    def deny(self) -> None: ...
    @_property
    def id(self) -> winrt.system.UInt32: ...
    @_property
    def permission_type(self) -> WebViewPermissionType: ...
    @_property
    def uri(self) -> windows_foundation.Uri: ...

@typing.final
class WebViewLongRunningScriptDetectedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewLongRunningScriptDetectedEventArgs: ...
    @_property
    def stop_page_script_execution(self) -> bool: ...
    @stop_page_script_execution.setter
    def stop_page_script_execution(self, value: bool) -> None: ...
    @_property
    def execution_time(self) -> datetime.timedelta: ...

@typing.final
class WebViewNavigationCompletedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewNavigationCompletedEventArgs: ...
    @_property
    def is_success(self) -> bool: ...
    @_property
    def uri(self) -> windows_foundation.Uri: ...
    @_property
    def web_error_status(self) -> windows_web.WebErrorStatus: ...

@typing.final
class WebViewNavigationFailedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewNavigationFailedEventArgs: ...
    @_property
    def uri(self) -> windows_foundation.Uri: ...
    @_property
    def web_error_status(self) -> windows_web.WebErrorStatus: ...

@typing.final
class WebViewNavigationStartingEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewNavigationStartingEventArgs: ...
    @_property
    def cancel(self) -> bool: ...
    @cancel.setter
    def cancel(self, value: bool) -> None: ...
    @_property
    def uri(self) -> windows_foundation.Uri: ...

@typing.final
class WebViewNewWindowRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewNewWindowRequestedEventArgs: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...
    @_property
    def referrer(self) -> windows_foundation.Uri: ...
    @_property
    def uri(self) -> windows_foundation.Uri: ...

@typing.final
class WebViewPermissionRequest(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewPermissionRequest: ...
    def allow(self) -> None: ...
    def defer(self) -> None: ...
    def deny(self) -> None: ...
    @_property
    def id(self) -> winrt.system.UInt32: ...
    @_property
    def permission_type(self) -> WebViewPermissionType: ...
    @_property
    def state(self) -> WebViewPermissionState: ...
    @_property
    def uri(self) -> windows_foundation.Uri: ...

@typing.final
class WebViewPermissionRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewPermissionRequestedEventArgs: ...
    @_property
    def permission_request(self) -> WebViewPermissionRequest: ...

@typing.final
class WebViewSeparateProcessLostEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewSeparateProcessLostEventArgs: ...

@typing.final
class WebViewSettings(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewSettings: ...
    @_property
    def is_java_script_enabled(self) -> bool: ...
    @is_java_script_enabled.setter
    def is_java_script_enabled(self, value: bool) -> None: ...
    @_property
    def is_indexed_db_enabled(self) -> bool: ...
    @is_indexed_db_enabled.setter
    def is_indexed_db_enabled(self, value: bool) -> None: ...

@typing.final
class WebViewUnsupportedUriSchemeIdentifiedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewUnsupportedUriSchemeIdentifiedEventArgs: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...
    @_property
    def uri(self) -> windows_foundation.Uri: ...

@typing.final
class WebViewUnviewableContentIdentifiedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewUnviewableContentIdentifiedEventArgs: ...
    @_property
    def referrer(self) -> windows_foundation.Uri: ...
    @_property
    def uri(self) -> windows_foundation.Uri: ...
    @_property
    def media_type(self) -> str: ...

@typing.final
class WebViewWebResourceRequestedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> WebViewWebResourceRequestedEventArgs: ...
    def get_deferral(self) -> windows_foundation.Deferral: ...
    @_property
    def response(self) -> windows_web_http.HttpResponseMessage: ...
    @response.setter
    def response(self, value: windows_web_http.HttpResponseMessage) -> None: ...
    @_property
    def request(self) -> windows_web_http.HttpRequestMessage: ...

class ImplementsICommandBarElement():
    pass

class ICommandBarElement(winrt.system.Object, ImplementsICommandBarElement):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ICommandBarElement: ...
    @_property
    def is_compact(self) -> bool: ...
    @is_compact.setter
    def is_compact(self, value: bool) -> None: ...

class ImplementsICommandBarElement2():
    pass

class ICommandBarElement2(winrt.system.Object, ImplementsICommandBarElement2):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ICommandBarElement2: ...
    @_property
    def dynamic_overflow_order(self) -> winrt.system.Int32: ...
    @dynamic_overflow_order.setter
    def dynamic_overflow_order(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_in_overflow(self) -> bool: ...

class ImplementsIInsertionPanel():
    pass

class IInsertionPanel(winrt.system.Object, ImplementsIInsertionPanel):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IInsertionPanel: ...
    def get_insertion_indexes(self, position: windows_foundation.Point, /) -> typing.Tuple[winrt.system.Int32, winrt.system.Int32]: ...

class ImplementsIItemContainerMapping():
    pass

class IItemContainerMapping(winrt.system.Object, ImplementsIItemContainerMapping):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IItemContainerMapping: ...
    def container_from_index(self, index: winrt.system.Int32, /) -> windows_ui_xaml.DependencyObject: ...
    def container_from_item(self, item: winrt.system.Object, /) -> windows_ui_xaml.DependencyObject: ...
    def index_from_container(self, container: windows_ui_xaml.DependencyObject, /) -> winrt.system.Int32: ...
    def item_from_container(self, container: windows_ui_xaml.DependencyObject, /) -> winrt.system.Object: ...

class ImplementsINavigate():
    pass

class INavigate(winrt.system.Object, ImplementsINavigate):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> INavigate: ...
    def navigate(self, source_page_type: windows_ui_xaml_interop.TypeName, /) -> bool: ...

class ImplementsIScrollAnchorProvider():
    pass

class IScrollAnchorProvider(winrt.system.Object, ImplementsIScrollAnchorProvider):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IScrollAnchorProvider: ...
    def register_anchor_candidate(self, element: windows_ui_xaml.UIElement, /) -> None: ...
    def unregister_anchor_candidate(self, element: windows_ui_xaml.UIElement, /) -> None: ...
    @_property
    def current_anchor(self) -> windows_ui_xaml.UIElement: ...

class ImplementsISemanticZoomInformation():
    pass

class ISemanticZoomInformation(winrt.system.Object, ImplementsISemanticZoomInformation):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ISemanticZoomInformation: ...
    def complete_view_change(self) -> None: ...
    def complete_view_change_from(self, source: SemanticZoomLocation, destination: SemanticZoomLocation, /) -> None: ...
    def complete_view_change_to(self, source: SemanticZoomLocation, destination: SemanticZoomLocation, /) -> None: ...
    def initialize_view_change(self) -> None: ...
    def make_visible(self, item: SemanticZoomLocation, /) -> None: ...
    def start_view_change_from(self, source: SemanticZoomLocation, destination: SemanticZoomLocation, /) -> None: ...
    def start_view_change_to(self, source: SemanticZoomLocation, destination: SemanticZoomLocation, /) -> None: ...
    @_property
    def is_active_view(self) -> bool: ...
    @is_active_view.setter
    def is_active_view(self, value: bool) -> None: ...
    @_property
    def is_zoomed_in_view(self) -> bool: ...
    @is_zoomed_in_view.setter
    def is_zoomed_in_view(self, value: bool) -> None: ...
    @_property
    def semantic_zoom_owner(self) -> SemanticZoom: ...
    @semantic_zoom_owner.setter
    def semantic_zoom_owner(self, value: SemanticZoom) -> None: ...

