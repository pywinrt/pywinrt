# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.microsoft.ui as microsoft_ui
import winrt.microsoft.ui.composition as microsoft_ui_composition
import winrt.windows.foundation as windows_foundation
import winrt.windows.ui as windows_ui
import winrt.windows.ui.composition as windows_ui_composition
import winrt.windows.ui.core as windows_ui_core

from winrt.microsoft.ui.composition.systembackdrops import DesktopAcrylicKind, MicaKind, SystemBackdropState, SystemBackdropTheme

Self = typing.TypeVar('Self')

@typing.final
class DesktopAcrylicController_Static(type):
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::IsSupported()
    def is_supported(cls) -> bool: ...

@typing.final
class DesktopAcrylicController(winrt.system.Object, microsoft_ui.ImplementsIClosableNotifier, ImplementsISystemBackdropControllerWithTargets, ImplementsISystemBackdropController, windows_foundation.ImplementsIClosable, metaclass=DesktopAcrylicController_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::AddSystemBackdropTarget(Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop)
    def add_system_backdrop_target(self, system_backdrop_target: microsoft_ui_composition.ImplementsICompositionSupportsSystemBackdrop, /) -> bool: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::Close()
    def close(self) -> None: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::RemoveAllSystemBackdropTargets()
    def remove_all_system_backdrop_targets(self) -> None: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::RemoveSystemBackdropTarget(Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop)
    def remove_system_backdrop_target(self, system_backdrop_target: microsoft_ui_composition.ImplementsICompositionSupportsSystemBackdrop, /) -> bool: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::ResetProperties()
    def reset_properties(self) -> None: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::SetSystemBackdropConfiguration(Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration)
    def set_system_backdrop_configuration(self, configuration: SystemBackdropConfiguration, /) -> None: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::SetTarget(Windows.UI.Core.CoreWindow,Windows.UI.Composition.CompositionTarget)
    def set_target_with_core_window(self, core_window: windows_ui_core.CoreWindow, composition_target: windows_ui_composition.CompositionTarget, /) -> bool: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::SetTarget(Microsoft.UI.WindowId,Windows.UI.Composition.CompositionTarget)
    def set_target_with_window_id(self, window_id: microsoft_ui.WindowId, desktop_window_target: windows_ui_composition.CompositionTarget, /) -> bool: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::add_StateChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets,System.Object>)
    def add_state_changed(self, handler: windows_foundation.TypedEventHandler[ISystemBackdropControllerWithTargets, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::remove_StateChanged(Windows.Foundation.EventRegistrationToken)
    def remove_state_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::add_Closed(Microsoft.UI.ClosableNotifierHandler)
    def add_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::remove_Closed(Windows.Foundation.EventRegistrationToken)
    def remove_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::add_FrameworkClosed(Microsoft.UI.ClosableNotifierHandler)
    def add_framework_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::remove_FrameworkClosed(Windows.Foundation.EventRegistrationToken)
    def remove_framework_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Single Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::get_TintOpacity()
    @_property
    def tint_opacity(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::put_TintOpacity(System.Single)
    @tint_opacity.setter
    def tint_opacity(self, value: winrt.system.Single) -> None: ...
    # Windows.UI.Color Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::get_TintColor()
    @_property
    def tint_color(self) -> windows_ui.Color: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::put_TintColor(Windows.UI.Color)
    @tint_color.setter
    def tint_color(self, value: windows_ui.Color) -> None: ...
    # System.Single Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::get_LuminosityOpacity()
    @_property
    def luminosity_opacity(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::put_LuminosityOpacity(System.Single)
    @luminosity_opacity.setter
    def luminosity_opacity(self, value: winrt.system.Single) -> None: ...
    # Windows.UI.Color Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::get_FallbackColor()
    @_property
    def fallback_color(self) -> windows_ui.Color: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::put_FallbackColor(Windows.UI.Color)
    @fallback_color.setter
    def fallback_color(self, value: windows_ui.Color) -> None: ...
    # Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicKind Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::get_Kind()
    @_property
    def kind(self) -> DesktopAcrylicKind: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::put_Kind(Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicKind)
    @kind.setter
    def kind(self, value: DesktopAcrylicKind) -> None: ...
    # Microsoft.UI.Composition.SystemBackdrops.SystemBackdropState Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::get_State()
    @_property
    def state(self) -> SystemBackdropState: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.DesktopAcrylicController::get_IsClosed()
    @_property
    def is_closed(self) -> bool: ...

@typing.final
class MicaController_Static(type):
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.MicaController::IsSupported()
    def is_supported(cls) -> bool: ...

@typing.final
class MicaController(winrt.system.Object, microsoft_ui.ImplementsIClosableNotifier, ImplementsISystemBackdropControllerWithTargets, ImplementsISystemBackdropController, windows_foundation.ImplementsIClosable, metaclass=MicaController_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.MicaController::AddSystemBackdropTarget(Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop)
    def add_system_backdrop_target(self, system_backdrop_target: microsoft_ui_composition.ImplementsICompositionSupportsSystemBackdrop, /) -> bool: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.MicaController::Close()
    def close(self) -> None: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.MicaController::RemoveAllSystemBackdropTargets()
    def remove_all_system_backdrop_targets(self) -> None: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.MicaController::RemoveSystemBackdropTarget(Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop)
    def remove_system_backdrop_target(self, system_backdrop_target: microsoft_ui_composition.ImplementsICompositionSupportsSystemBackdrop, /) -> bool: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.MicaController::ResetProperties()
    def reset_properties(self) -> None: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.MicaController::SetSystemBackdropConfiguration(Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration)
    def set_system_backdrop_configuration(self, configuration: SystemBackdropConfiguration, /) -> None: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.MicaController::SetTarget(Windows.UI.Core.CoreWindow,Windows.UI.Composition.CompositionTarget)
    def set_target_with_core_window(self, core_window: windows_ui_core.CoreWindow, composition_target: windows_ui_composition.CompositionTarget, /) -> bool: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.MicaController::SetTarget(Microsoft.UI.WindowId,Windows.UI.Composition.CompositionTarget)
    def set_target_with_window_id(self, window_id: microsoft_ui.WindowId, desktop_window_target: windows_ui_composition.CompositionTarget, /) -> bool: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Composition.SystemBackdrops.MicaController::add_StateChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets,System.Object>)
    def add_state_changed(self, handler: windows_foundation.TypedEventHandler[ISystemBackdropControllerWithTargets, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.MicaController::remove_StateChanged(Windows.Foundation.EventRegistrationToken)
    def remove_state_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Composition.SystemBackdrops.MicaController::add_Closed(Microsoft.UI.ClosableNotifierHandler)
    def add_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.MicaController::remove_Closed(Windows.Foundation.EventRegistrationToken)
    def remove_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Composition.SystemBackdrops.MicaController::add_FrameworkClosed(Microsoft.UI.ClosableNotifierHandler)
    def add_framework_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.MicaController::remove_FrameworkClosed(Windows.Foundation.EventRegistrationToken)
    def remove_framework_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Single Microsoft.UI.Composition.SystemBackdrops.MicaController::get_TintOpacity()
    @_property
    def tint_opacity(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.MicaController::put_TintOpacity(System.Single)
    @tint_opacity.setter
    def tint_opacity(self, value: winrt.system.Single) -> None: ...
    # Windows.UI.Color Microsoft.UI.Composition.SystemBackdrops.MicaController::get_TintColor()
    @_property
    def tint_color(self) -> windows_ui.Color: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.MicaController::put_TintColor(Windows.UI.Color)
    @tint_color.setter
    def tint_color(self, value: windows_ui.Color) -> None: ...
    # System.Single Microsoft.UI.Composition.SystemBackdrops.MicaController::get_LuminosityOpacity()
    @_property
    def luminosity_opacity(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.MicaController::put_LuminosityOpacity(System.Single)
    @luminosity_opacity.setter
    def luminosity_opacity(self, value: winrt.system.Single) -> None: ...
    # Windows.UI.Color Microsoft.UI.Composition.SystemBackdrops.MicaController::get_FallbackColor()
    @_property
    def fallback_color(self) -> windows_ui.Color: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.MicaController::put_FallbackColor(Windows.UI.Color)
    @fallback_color.setter
    def fallback_color(self, value: windows_ui.Color) -> None: ...
    # Microsoft.UI.Composition.SystemBackdrops.MicaKind Microsoft.UI.Composition.SystemBackdrops.MicaController::get_Kind()
    @_property
    def kind(self) -> MicaKind: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.MicaController::put_Kind(Microsoft.UI.Composition.SystemBackdrops.MicaKind)
    @kind.setter
    def kind(self, value: MicaKind) -> None: ...
    # Microsoft.UI.Composition.SystemBackdrops.SystemBackdropState Microsoft.UI.Composition.SystemBackdrops.MicaController::get_State()
    @_property
    def state(self) -> SystemBackdropState: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.MicaController::get_IsClosed()
    @_property
    def is_closed(self) -> bool: ...

@typing.final
class SystemBackdropConfiguration(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Microsoft.UI.Composition.SystemBackdrops.SystemBackdropTheme Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration::get_Theme()
    @_property
    def theme(self) -> SystemBackdropTheme: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration::put_Theme(Microsoft.UI.Composition.SystemBackdrops.SystemBackdropTheme)
    @theme.setter
    def theme(self, value: SystemBackdropTheme) -> None: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration::get_IsInputActive()
    @_property
    def is_input_active(self) -> bool: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration::put_IsInputActive(System.Boolean)
    @is_input_active.setter
    def is_input_active(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration::get_IsHighContrast()
    @_property
    def is_high_contrast(self) -> bool: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration::put_IsHighContrast(System.Boolean)
    @is_high_contrast.setter
    def is_high_contrast(self, value: bool) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration::get_HighContrastBackgroundColor()
    @_property
    def high_contrast_background_color(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration::put_HighContrastBackgroundColor(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @high_contrast_background_color.setter
    def high_contrast_background_color(self, value: typing.Optional[windows_ui.Color]) -> None: ...

class ImplementsISystemBackdropController():
    pass

@typing.final
class ISystemBackdropController(winrt.system.Object, ImplementsISystemBackdropController, windows_foundation.ImplementsIClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Windows.Foundation.IClosable::Close()
    def close(self) -> None: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController::SetTarget(Windows.UI.Core.CoreWindow,Windows.UI.Composition.CompositionTarget)
    def set_target_with_core_window(self, core_window: windows_ui_core.CoreWindow, composition_target: windows_ui_composition.CompositionTarget, /) -> bool: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController::SetTarget(Microsoft.UI.WindowId,Windows.UI.Composition.CompositionTarget)
    def set_target_with_window_id(self, window_id: microsoft_ui.WindowId, desktop_window_target: windows_ui_composition.CompositionTarget, /) -> bool: ...

class ImplementsISystemBackdropControllerWithTargets():
    pass

@typing.final
class ISystemBackdropControllerWithTargets(winrt.system.Object, ImplementsISystemBackdropControllerWithTargets, ImplementsISystemBackdropController, windows_foundation.ImplementsIClosable):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets::AddSystemBackdropTarget(Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop)
    def add_system_backdrop_target(self, system_backdrop_target: microsoft_ui_composition.ImplementsICompositionSupportsSystemBackdrop, /) -> bool: ...
    # System.Void Windows.Foundation.IClosable::Close()
    def close(self) -> None: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets::RemoveAllSystemBackdropTargets()
    def remove_all_system_backdrop_targets(self) -> None: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets::RemoveSystemBackdropTarget(Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop)
    def remove_system_backdrop_target(self, system_backdrop_target: microsoft_ui_composition.ImplementsICompositionSupportsSystemBackdrop, /) -> bool: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets::SetSystemBackdropConfiguration(Microsoft.UI.Composition.SystemBackdrops.SystemBackdropConfiguration)
    def set_system_backdrop_configuration(self, configuration: SystemBackdropConfiguration, /) -> None: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController::SetTarget(Windows.UI.Core.CoreWindow,Windows.UI.Composition.CompositionTarget)
    def set_target_with_core_window(self, core_window: windows_ui_core.CoreWindow, composition_target: windows_ui_composition.CompositionTarget, /) -> bool: ...
    # System.Boolean Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropController::SetTarget(Microsoft.UI.WindowId,Windows.UI.Composition.CompositionTarget)
    def set_target_with_window_id(self, window_id: microsoft_ui.WindowId, desktop_window_target: windows_ui_composition.CompositionTarget, /) -> bool: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets::add_StateChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets,System.Object>)
    def add_state_changed(self, handler: windows_foundation.TypedEventHandler[ISystemBackdropControllerWithTargets, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets::remove_StateChanged(Windows.Foundation.EventRegistrationToken)
    def remove_state_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Microsoft.UI.Composition.SystemBackdrops.SystemBackdropState Microsoft.UI.Composition.SystemBackdrops.ISystemBackdropControllerWithTargets::get_State()
    @_property
    def state(self) -> SystemBackdropState: ...

