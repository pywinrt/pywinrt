# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.appointments as windows_applicationmodel_appointments
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.security.cryptography.certificates as windows_security_cryptography_certificates
import winrt.windows.storage.streams as windows_storage_streams
import winrt.windows.system as windows_system

from winrt.windows.applicationmodel.email import EmailAttachmentDownloadState, EmailBatchStatus, EmailCertificateValidationStatus, EmailFlagState, EmailImportance, EmailMailboxActionKind, EmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation, EmailMailboxAutoReplyMessageResponseKind, EmailMailboxChangeType, EmailMailboxCreateFolderStatus, EmailMailboxDeleteFolderStatus, EmailMailboxEmptyFolderStatus, EmailMailboxOtherAppReadAccess, EmailMailboxOtherAppWriteAccess, EmailMailboxSmimeEncryptionAlgorithm, EmailMailboxSmimeSigningAlgorithm, EmailMailboxSyncStatus, EmailMeetingResponseType, EmailMessageBodyKind, EmailMessageDownloadState, EmailMessageResponseKind, EmailMessageSmimeKind, EmailQueryKind, EmailQuerySearchFields, EmailQuerySearchScope, EmailQuerySortDirection, EmailQuerySortProperty, EmailRecipientResolutionStatus, EmailSpecialFolderKind, EmailStoreAccessType

Self = typing.TypeVar('Self')

@typing.final
class EmailAttachment(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], file_name: str, data: windows_storage_streams.IRandomAccessStreamReference, mime_type: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], file_name: str, data: windows_storage_streams.IRandomAccessStreamReference) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.ApplicationModel.Email.EmailAttachment::get_FileName()
    @_property
    def file_name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailAttachment::put_FileName(System.String)
    @file_name.setter
    def file_name(self, value: str) -> None: ...
    # Windows.Storage.Streams.IRandomAccessStreamReference Windows.ApplicationModel.Email.EmailAttachment::get_Data()
    @_property
    def data(self) -> windows_storage_streams.IRandomAccessStreamReference: ...
    # System.Void Windows.ApplicationModel.Email.EmailAttachment::put_Data(Windows.Storage.Streams.IRandomAccessStreamReference)
    @data.setter
    def data(self, value: windows_storage_streams.IRandomAccessStreamReference) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailAttachment::get_MimeType()
    @_property
    def mime_type(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailAttachment::put_MimeType(System.String)
    @mime_type.setter
    def mime_type(self, value: str) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailAttachment::get_IsInline()
    @_property
    def is_inline(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailAttachment::put_IsInline(System.Boolean)
    @is_inline.setter
    def is_inline(self, value: bool) -> None: ...
    # System.UInt64 Windows.ApplicationModel.Email.EmailAttachment::get_EstimatedDownloadSizeInBytes()
    @_property
    def estimated_download_size_in_bytes(self) -> winrt.system.UInt64: ...
    # System.Void Windows.ApplicationModel.Email.EmailAttachment::put_EstimatedDownloadSizeInBytes(System.UInt64)
    @estimated_download_size_in_bytes.setter
    def estimated_download_size_in_bytes(self, value: winrt.system.UInt64) -> None: ...
    # Windows.ApplicationModel.Email.EmailAttachmentDownloadState Windows.ApplicationModel.Email.EmailAttachment::get_DownloadState()
    @_property
    def download_state(self) -> EmailAttachmentDownloadState: ...
    # System.Void Windows.ApplicationModel.Email.EmailAttachment::put_DownloadState(Windows.ApplicationModel.Email.EmailAttachmentDownloadState)
    @download_state.setter
    def download_state(self, value: EmailAttachmentDownloadState) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailAttachment::get_ContentLocation()
    @_property
    def content_location(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailAttachment::put_ContentLocation(System.String)
    @content_location.setter
    def content_location(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailAttachment::get_ContentId()
    @_property
    def content_id(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailAttachment::put_ContentId(System.String)
    @content_id.setter
    def content_id(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailAttachment::get_Id()
    @_property
    def id(self) -> str: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailAttachment::get_IsFromBaseMessage()
    @_property
    def is_from_base_message(self) -> bool: ...

@typing.final
class EmailConversation(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Email.EmailMessage>> Windows.ApplicationModel.Email.EmailConversation::FindMessagesAsync()
    def find_messages_async(self) -> windows_foundation.IAsyncOperation[typing.Sequence[EmailMessage]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Email.EmailMessage>> Windows.ApplicationModel.Email.EmailConversation::FindMessagesAsync(System.UInt32)
    def find_messages_with_count_async(self, count: winrt.system.UInt32, /) -> windows_foundation.IAsyncOperation[typing.Sequence[EmailMessage]]: ...
    # Windows.ApplicationModel.Email.EmailFlagState Windows.ApplicationModel.Email.EmailConversation::get_FlagState()
    @_property
    def flag_state(self) -> EmailFlagState: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailConversation::get_HasAttachment()
    @_property
    def has_attachment(self) -> bool: ...
    # System.String Windows.ApplicationModel.Email.EmailConversation::get_Id()
    @_property
    def id(self) -> str: ...
    # Windows.ApplicationModel.Email.EmailImportance Windows.ApplicationModel.Email.EmailConversation::get_Importance()
    @_property
    def importance(self) -> EmailImportance: ...
    # Windows.ApplicationModel.Email.EmailMessageResponseKind Windows.ApplicationModel.Email.EmailConversation::get_LastEmailResponseKind()
    @_property
    def last_email_response_kind(self) -> EmailMessageResponseKind: ...
    # Windows.ApplicationModel.Email.EmailRecipient Windows.ApplicationModel.Email.EmailConversation::get_LatestSender()
    @_property
    def latest_sender(self) -> EmailRecipient: ...
    # System.String Windows.ApplicationModel.Email.EmailConversation::get_MailboxId()
    @_property
    def mailbox_id(self) -> str: ...
    # System.UInt32 Windows.ApplicationModel.Email.EmailConversation::get_MessageCount()
    @_property
    def message_count(self) -> winrt.system.UInt32: ...
    # System.String Windows.ApplicationModel.Email.EmailConversation::get_MostRecentMessageId()
    @_property
    def most_recent_message_id(self) -> str: ...
    # Windows.Foundation.DateTime Windows.ApplicationModel.Email.EmailConversation::get_MostRecentMessageTime()
    @_property
    def most_recent_message_time(self) -> datetime.datetime: ...
    # System.String Windows.ApplicationModel.Email.EmailConversation::get_Preview()
    @_property
    def preview(self) -> str: ...
    # System.String Windows.ApplicationModel.Email.EmailConversation::get_Subject()
    @_property
    def subject(self) -> str: ...
    # System.UInt32 Windows.ApplicationModel.Email.EmailConversation::get_UnreadMessageCount()
    @_property
    def unread_message_count(self) -> winrt.system.UInt32: ...

@typing.final
class EmailConversationBatch(winrt.system.Object):
    # Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Email.EmailConversation> Windows.ApplicationModel.Email.EmailConversationBatch::get_Conversations()
    @_property
    def conversations(self) -> typing.Sequence[EmailConversation]: ...
    # Windows.ApplicationModel.Email.EmailBatchStatus Windows.ApplicationModel.Email.EmailConversationBatch::get_Status()
    @_property
    def status(self) -> EmailBatchStatus: ...

@typing.final
class EmailConversationReader(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailConversationBatch> Windows.ApplicationModel.Email.EmailConversationReader::ReadBatchAsync()
    def read_batch_async(self) -> windows_foundation.IAsyncOperation[EmailConversationBatch]: ...

@typing.final
class EmailFolder(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailFolder> Windows.ApplicationModel.Email.EmailFolder::CreateFolderAsync(System.String)
    def create_folder_async(self, name: str, /) -> windows_foundation.IAsyncOperation[EmailFolder]: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailFolder::DeleteAsync()
    def delete_async(self) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Email.EmailFolder>> Windows.ApplicationModel.Email.EmailFolder::FindChildFoldersAsync()
    def find_child_folders_async(self) -> windows_foundation.IAsyncOperation[typing.Sequence[EmailFolder]]: ...
    # Windows.ApplicationModel.Email.EmailConversationReader Windows.ApplicationModel.Email.EmailFolder::GetConversationReader()
    def get_conversation_reader(self) -> EmailConversationReader: ...
    # Windows.ApplicationModel.Email.EmailConversationReader Windows.ApplicationModel.Email.EmailFolder::GetConversationReader(Windows.ApplicationModel.Email.EmailQueryOptions)
    def get_conversation_reader_with_options(self, options: EmailQueryOptions, /) -> EmailConversationReader: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailMessage> Windows.ApplicationModel.Email.EmailFolder::GetMessageAsync(System.String)
    def get_message_async(self, id: str, /) -> windows_foundation.IAsyncOperation[EmailMessage]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailItemCounts> Windows.ApplicationModel.Email.EmailFolder::GetMessageCountsAsync()
    def get_message_counts_async(self) -> windows_foundation.IAsyncOperation[EmailItemCounts]: ...
    # Windows.ApplicationModel.Email.EmailMessageReader Windows.ApplicationModel.Email.EmailFolder::GetMessageReader()
    def get_message_reader(self) -> EmailMessageReader: ...
    # Windows.ApplicationModel.Email.EmailMessageReader Windows.ApplicationModel.Email.EmailFolder::GetMessageReader(Windows.ApplicationModel.Email.EmailQueryOptions)
    def get_message_reader_with_options(self, options: EmailQueryOptions, /) -> EmailMessageReader: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailFolder::SaveMessageAsync(Windows.ApplicationModel.Email.EmailMessage)
    def save_message_async(self, message: EmailMessage, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Email.EmailFolder::TryMoveAsync(Windows.ApplicationModel.Email.EmailFolder)
    def try_move_async(self, new_parent_folder: EmailFolder, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Email.EmailFolder::TryMoveAsync(Windows.ApplicationModel.Email.EmailFolder,System.String)
    def try_move_with_new_name_async(self, new_parent_folder: EmailFolder, new_folder_name: str, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Email.EmailFolder::TrySaveAsync()
    def try_save_async(self) -> windows_foundation.IAsyncOperation[bool]: ...
    # System.String Windows.ApplicationModel.Email.EmailFolder::get_RemoteId()
    @_property
    def remote_id(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailFolder::put_RemoteId(System.String)
    @remote_id.setter
    def remote_id(self, value: str) -> None: ...
    # Windows.Foundation.DateTime Windows.ApplicationModel.Email.EmailFolder::get_LastSuccessfulSyncTime()
    @_property
    def last_successful_sync_time(self) -> datetime.datetime: ...
    # System.Void Windows.ApplicationModel.Email.EmailFolder::put_LastSuccessfulSyncTime(Windows.Foundation.DateTime)
    @last_successful_sync_time.setter
    def last_successful_sync_time(self, value: datetime.datetime) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailFolder::get_IsSyncEnabled()
    @_property
    def is_sync_enabled(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailFolder::put_IsSyncEnabled(System.Boolean)
    @is_sync_enabled.setter
    def is_sync_enabled(self, value: bool) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailFolder::get_DisplayName()
    @_property
    def display_name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailFolder::put_DisplayName(System.String)
    @display_name.setter
    def display_name(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailFolder::get_Id()
    @_property
    def id(self) -> str: ...
    # Windows.ApplicationModel.Email.EmailSpecialFolderKind Windows.ApplicationModel.Email.EmailFolder::get_Kind()
    @_property
    def kind(self) -> EmailSpecialFolderKind: ...
    # System.String Windows.ApplicationModel.Email.EmailFolder::get_MailboxId()
    @_property
    def mailbox_id(self) -> str: ...
    # System.String Windows.ApplicationModel.Email.EmailFolder::get_ParentFolderId()
    @_property
    def parent_folder_id(self) -> str: ...

@typing.final
class EmailIrmInfo(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], expiration: datetime.datetime, irm_template: EmailIrmTemplate) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailIrmInfo::get_CanRemoveIrmOnResponse()
    @_property
    def can_remove_irm_on_response(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmInfo::put_CanRemoveIrmOnResponse(System.Boolean)
    @can_remove_irm_on_response.setter
    def can_remove_irm_on_response(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailIrmInfo::get_CanPrintData()
    @_property
    def can_print_data(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmInfo::put_CanPrintData(System.Boolean)
    @can_print_data.setter
    def can_print_data(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailIrmInfo::get_CanModifyRecipientsOnResponse()
    @_property
    def can_modify_recipients_on_response(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmInfo::put_CanModifyRecipientsOnResponse(System.Boolean)
    @can_modify_recipients_on_response.setter
    def can_modify_recipients_on_response(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailIrmInfo::get_CanForward()
    @_property
    def can_forward(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmInfo::put_CanForward(System.Boolean)
    @can_forward.setter
    def can_forward(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailIrmInfo::get_CanExtractData()
    @_property
    def can_extract_data(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmInfo::put_CanExtractData(System.Boolean)
    @can_extract_data.setter
    def can_extract_data(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailIrmInfo::get_CanReply()
    @_property
    def can_reply(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmInfo::put_CanReply(System.Boolean)
    @can_reply.setter
    def can_reply(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailIrmInfo::get_CanEdit()
    @_property
    def can_edit(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmInfo::put_CanEdit(System.Boolean)
    @can_edit.setter
    def can_edit(self, value: bool) -> None: ...
    # Windows.ApplicationModel.Email.EmailIrmTemplate Windows.ApplicationModel.Email.EmailIrmInfo::get_Template()
    @_property
    def template(self) -> EmailIrmTemplate: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmInfo::put_Template(Windows.ApplicationModel.Email.EmailIrmTemplate)
    @template.setter
    def template(self, value: EmailIrmTemplate) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailIrmInfo::get_IsProgramaticAccessAllowed()
    @_property
    def is_programatic_access_allowed(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmInfo::put_IsProgramaticAccessAllowed(System.Boolean)
    @is_programatic_access_allowed.setter
    def is_programatic_access_allowed(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailIrmInfo::get_IsIrmOriginator()
    @_property
    def is_irm_originator(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmInfo::put_IsIrmOriginator(System.Boolean)
    @is_irm_originator.setter
    def is_irm_originator(self, value: bool) -> None: ...
    # Windows.Foundation.DateTime Windows.ApplicationModel.Email.EmailIrmInfo::get_ExpirationDate()
    @_property
    def expiration_date(self) -> datetime.datetime: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmInfo::put_ExpirationDate(Windows.Foundation.DateTime)
    @expiration_date.setter
    def expiration_date(self, value: datetime.datetime) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailIrmInfo::get_CanReplyAll()
    @_property
    def can_reply_all(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmInfo::put_CanReplyAll(System.Boolean)
    @can_reply_all.setter
    def can_reply_all(self, value: bool) -> None: ...

@typing.final
class EmailIrmTemplate(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], id: str, name: str, description: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.ApplicationModel.Email.EmailIrmTemplate::get_Name()
    @_property
    def name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmTemplate::put_Name(System.String)
    @name.setter
    def name(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailIrmTemplate::get_Id()
    @_property
    def id(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmTemplate::put_Id(System.String)
    @id.setter
    def id(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailIrmTemplate::get_Description()
    @_property
    def description(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailIrmTemplate::put_Description(System.String)
    @description.setter
    def description(self, value: str) -> None: ...

@typing.final
class EmailItemCounts(winrt.system.Object):
    # System.UInt32 Windows.ApplicationModel.Email.EmailItemCounts::get_Flagged()
    @_property
    def flagged(self) -> winrt.system.UInt32: ...
    # System.UInt32 Windows.ApplicationModel.Email.EmailItemCounts::get_Important()
    @_property
    def important(self) -> winrt.system.UInt32: ...
    # System.UInt32 Windows.ApplicationModel.Email.EmailItemCounts::get_Total()
    @_property
    def total(self) -> winrt.system.UInt32: ...
    # System.UInt32 Windows.ApplicationModel.Email.EmailItemCounts::get_Unread()
    @_property
    def unread(self) -> winrt.system.UInt32: ...

@typing.final
class EmailMailbox(winrt.system.Object):
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailMailbox::ChangeMessageFlagStateAsync(System.String,Windows.ApplicationModel.Email.EmailFlagState)
    def change_message_flag_state_async(self, message_id: str, flag_state: EmailFlagState, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailMessage> Windows.ApplicationModel.Email.EmailMailbox::CreateResponseMessageAsync(System.String,Windows.ApplicationModel.Email.EmailMessageResponseKind,System.String,Windows.ApplicationModel.Email.EmailMessageBodyKind,System.String)
    def create_response_message_async(self, message_id: str, response_type: EmailMessageResponseKind, subject: str, response_header_type: EmailMessageBodyKind, response_header: str, /) -> windows_foundation.IAsyncOperation[EmailMessage]: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailMailbox::DeleteAsync()
    def delete_async(self) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailMailbox::DeleteMessageAsync(System.String)
    def delete_message_async(self, message_id: str, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailMailbox::DownloadAttachmentAsync(System.String)
    def download_attachment_async(self, attachment_id: str, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailMailbox::DownloadMessageAsync(System.String)
    def download_message_async(self, message_id: str, /) -> windows_foundation.IAsyncAction: ...
    # Windows.ApplicationModel.Email.EmailMailboxChangeTracker Windows.ApplicationModel.Email.EmailMailbox::GetChangeTracker(System.String)
    def get_change_tracker(self, identity: str, /) -> EmailMailboxChangeTracker: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailConversation> Windows.ApplicationModel.Email.EmailMailbox::GetConversationAsync(System.String)
    def get_conversation_async(self, id: str, /) -> windows_foundation.IAsyncOperation[EmailConversation]: ...
    # Windows.ApplicationModel.Email.EmailConversationReader Windows.ApplicationModel.Email.EmailMailbox::GetConversationReader()
    def get_conversation_reader(self) -> EmailConversationReader: ...
    # Windows.ApplicationModel.Email.EmailConversationReader Windows.ApplicationModel.Email.EmailMailbox::GetConversationReader(Windows.ApplicationModel.Email.EmailQueryOptions)
    def get_conversation_reader_with_options(self, options: EmailQueryOptions, /) -> EmailConversationReader: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailFolder> Windows.ApplicationModel.Email.EmailMailbox::GetFolderAsync(System.String)
    def get_folder_async(self, id: str, /) -> windows_foundation.IAsyncOperation[EmailFolder]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailMessage> Windows.ApplicationModel.Email.EmailMailbox::GetMessageAsync(System.String)
    def get_message_async(self, id: str, /) -> windows_foundation.IAsyncOperation[EmailMessage]: ...
    # Windows.ApplicationModel.Email.EmailMessageReader Windows.ApplicationModel.Email.EmailMailbox::GetMessageReader()
    def get_message_reader(self) -> EmailMessageReader: ...
    # Windows.ApplicationModel.Email.EmailMessageReader Windows.ApplicationModel.Email.EmailMailbox::GetMessageReader(Windows.ApplicationModel.Email.EmailQueryOptions)
    def get_message_reader_with_options(self, options: EmailQueryOptions, /) -> EmailMessageReader: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailFolder> Windows.ApplicationModel.Email.EmailMailbox::GetSpecialFolderAsync(Windows.ApplicationModel.Email.EmailSpecialFolderKind)
    def get_special_folder_async(self, folder_type: EmailSpecialFolderKind, /) -> windows_foundation.IAsyncOperation[EmailFolder]: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailMailbox::MarkFolderAsSeenAsync(System.String)
    def mark_folder_as_seen_async(self, folder_id: str, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailMailbox::MarkFolderSyncEnabledAsync(System.String,System.Boolean)
    def mark_folder_sync_enabled_async(self, folder_id: str, is_sync_enabled: bool, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailMailbox::MarkMessageAsSeenAsync(System.String)
    def mark_message_as_seen_async(self, message_id: str, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailMailbox::MarkMessageReadAsync(System.String,System.Boolean)
    def mark_message_read_async(self, message_id: str, is_read: bool, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailMailbox::RegisterSyncManagerAsync()
    def register_sync_manager_async(self) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Email.EmailRecipientResolutionResult>> Windows.ApplicationModel.Email.EmailMailbox::ResolveRecipientsAsync(Windows.Foundation.Collections.IIterable`1<System.String>)
    def resolve_recipients_async(self, recipients: typing.Iterable[str], /) -> windows_foundation.IAsyncOperation[typing.Sequence[EmailRecipientResolutionResult]]: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailMailbox::SaveAsync()
    def save_async(self) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailMailbox::SaveDraftAsync(Windows.ApplicationModel.Email.EmailMessage)
    def save_draft_async(self, message: EmailMessage, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailMailbox::SendMessageAsync(Windows.ApplicationModel.Email.EmailMessage)
    def send_message_async(self, message: EmailMessage, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailMailbox::SendMessageAsync(Windows.ApplicationModel.Email.EmailMessage,System.Boolean)
    def smart_send_message_async(self, message: EmailMessage, smart_send: bool, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailMailboxCreateFolderResult> Windows.ApplicationModel.Email.EmailMailbox::TryCreateFolderAsync(System.String,System.String)
    def try_create_folder_async(self, parent_folder_id: str, name: str, /) -> windows_foundation.IAsyncOperation[EmailMailboxCreateFolderResult]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailMailboxDeleteFolderStatus> Windows.ApplicationModel.Email.EmailMailbox::TryDeleteFolderAsync(System.String)
    def try_delete_folder_async(self, folder_id: str, /) -> windows_foundation.IAsyncOperation[EmailMailboxDeleteFolderStatus]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailMailboxEmptyFolderStatus> Windows.ApplicationModel.Email.EmailMailbox::TryEmptyFolderAsync(System.String)
    def try_empty_folder_async(self, folder_id: str, /) -> windows_foundation.IAsyncOperation[EmailMailboxEmptyFolderStatus]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Email.EmailMailbox::TryForwardMeetingAsync(Windows.ApplicationModel.Email.EmailMessage,Windows.Foundation.Collections.IIterable`1<Windows.ApplicationModel.Email.EmailRecipient>,System.String,Windows.ApplicationModel.Email.EmailMessageBodyKind,System.String,System.String)
    def try_forward_meeting_async(self, meeting: EmailMessage, recipients: typing.Iterable[EmailRecipient], subject: str, forward_header_type: EmailMessageBodyKind, forward_header: str, comment: str, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings> Windows.ApplicationModel.Email.EmailMailbox::TryGetAutoReplySettingsAsync(Windows.ApplicationModel.Email.EmailMailboxAutoReplyMessageResponseKind)
    def try_get_auto_reply_settings_async(self, requested_format: EmailMailboxAutoReplyMessageResponseKind, /) -> windows_foundation.IAsyncOperation[EmailMailboxAutoReplySettings]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Email.EmailMailbox::TryMoveFolderAsync(System.String,System.String)
    def try_move_folder_async(self, folder_id: str, new_parent_folder_id: str, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Email.EmailMailbox::TryMoveFolderAsync(System.String,System.String,System.String)
    def try_move_folder_with_new_name_async(self, folder_id: str, new_parent_folder_id: str, new_folder_name: str, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Email.EmailMailbox::TryMoveMessageAsync(System.String,System.String)
    def try_move_message_async(self, message_id: str, new_parent_folder_id: str, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Email.EmailMailbox::TryProposeNewTimeForMeetingAsync(Windows.ApplicationModel.Email.EmailMessage,Windows.Foundation.DateTime,Windows.Foundation.TimeSpan,System.String,System.String)
    def try_propose_new_time_for_meeting_async(self, meeting: EmailMessage, new_start_time: datetime.datetime, new_duration: datetime.timedelta, subject: str, comment: str, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Email.EmailMailbox::TrySetAutoReplySettingsAsync(Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings)
    def try_set_auto_reply_settings_async(self, auto_reply_settings: EmailMailboxAutoReplySettings, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Email.EmailMailbox::TryUpdateMeetingResponseAsync(Windows.ApplicationModel.Email.EmailMessage,Windows.ApplicationModel.Email.EmailMeetingResponseType,System.String,System.String,System.Boolean)
    def try_update_meeting_response_async(self, meeting: EmailMessage, response: EmailMeetingResponseType, subject: str, comment: str, send_update: bool, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Email.EmailCertificateValidationStatus>> Windows.ApplicationModel.Email.EmailMailbox::ValidateCertificatesAsync(Windows.Foundation.Collections.IIterable`1<Windows.Security.Cryptography.Certificates.Certificate>)
    def validate_certificates_async(self, certificates: typing.Iterable[windows_security_cryptography_certificates.Certificate], /) -> windows_foundation.IAsyncOperation[typing.Sequence[EmailCertificateValidationStatus]]: ...
    # Windows.Foundation.EventRegistrationToken Windows.ApplicationModel.Email.EmailMailbox::add_MailboxChanged(Windows.Foundation.TypedEventHandler`2<Windows.ApplicationModel.Email.EmailMailbox,Windows.ApplicationModel.Email.EmailMailboxChangedEventArgs>)
    def add_mailbox_changed(self, p_handler: windows_foundation.TypedEventHandler[EmailMailbox, EmailMailboxChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailbox::remove_MailboxChanged(Windows.Foundation.EventRegistrationToken)
    def remove_mailbox_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.ApplicationModel.Email.EmailMailboxOtherAppWriteAccess Windows.ApplicationModel.Email.EmailMailbox::get_OtherAppWriteAccess()
    @_property
    def other_app_write_access(self) -> EmailMailboxOtherAppWriteAccess: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailbox::put_OtherAppWriteAccess(Windows.ApplicationModel.Email.EmailMailboxOtherAppWriteAccess)
    @other_app_write_access.setter
    def other_app_write_access(self, value: EmailMailboxOtherAppWriteAccess) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailMailbox::get_MailAddress()
    @_property
    def mail_address(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailbox::put_MailAddress(System.String)
    @mail_address.setter
    def mail_address(self, value: str) -> None: ...
    # Windows.ApplicationModel.Email.EmailMailboxOtherAppReadAccess Windows.ApplicationModel.Email.EmailMailbox::get_OtherAppReadAccess()
    @_property
    def other_app_read_access(self) -> EmailMailboxOtherAppReadAccess: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailbox::put_OtherAppReadAccess(Windows.ApplicationModel.Email.EmailMailboxOtherAppReadAccess)
    @other_app_read_access.setter
    def other_app_read_access(self, value: EmailMailboxOtherAppReadAccess) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailMailbox::get_DisplayName()
    @_property
    def display_name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailbox::put_DisplayName(System.String)
    @display_name.setter
    def display_name(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailMailbox::get_Id()
    @_property
    def id(self) -> str: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailbox::get_IsDataEncryptedUnderLock()
    @_property
    def is_data_encrypted_under_lock(self) -> bool: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailbox::get_IsOwnedByCurrentApp()
    @_property
    def is_owned_by_current_app(self) -> bool: ...
    # Windows.Foundation.Collections.IVector`1<System.String> Windows.ApplicationModel.Email.EmailMailbox::get_MailAddressAliases()
    @_property
    def mail_address_aliases(self) -> typing.MutableSequence[str]: ...
    # Windows.ApplicationModel.Email.EmailMailboxCapabilities Windows.ApplicationModel.Email.EmailMailbox::get_Capabilities()
    @_property
    def capabilities(self) -> EmailMailboxCapabilities: ...
    # Windows.ApplicationModel.Email.EmailMailboxChangeTracker Windows.ApplicationModel.Email.EmailMailbox::get_ChangeTracker()
    @_property
    def change_tracker(self) -> EmailMailboxChangeTracker: ...
    # Windows.ApplicationModel.Email.EmailMailboxPolicies Windows.ApplicationModel.Email.EmailMailbox::get_Policies()
    @_property
    def policies(self) -> EmailMailboxPolicies: ...
    # System.String Windows.ApplicationModel.Email.EmailMailbox::get_SourceDisplayName()
    @_property
    def source_display_name(self) -> str: ...
    # Windows.ApplicationModel.Email.EmailMailboxSyncManager Windows.ApplicationModel.Email.EmailMailbox::get_SyncManager()
    @_property
    def sync_manager(self) -> EmailMailboxSyncManager: ...
    # System.String Windows.ApplicationModel.Email.EmailMailbox::get_UserDataAccountId()
    @_property
    def user_data_account_id(self) -> str: ...
    # System.String Windows.ApplicationModel.Email.EmailMailbox::get_LinkedMailboxId()
    @_property
    def linked_mailbox_id(self) -> str: ...
    # System.String Windows.ApplicationModel.Email.EmailMailbox::get_NetworkAccountId()
    @_property
    def network_account_id(self) -> str: ...
    # System.String Windows.ApplicationModel.Email.EmailMailbox::get_NetworkId()
    @_property
    def network_id(self) -> str: ...

@typing.final
class EmailMailboxAction(winrt.system.Object):
    # System.UInt64 Windows.ApplicationModel.Email.EmailMailboxAction::get_ChangeNumber()
    @_property
    def change_number(self) -> winrt.system.UInt64: ...
    # Windows.ApplicationModel.Email.EmailMailboxActionKind Windows.ApplicationModel.Email.EmailMailboxAction::get_Kind()
    @_property
    def kind(self) -> EmailMailboxActionKind: ...

@typing.final
class EmailMailboxAutoReply(winrt.system.Object):
    # System.String Windows.ApplicationModel.Email.EmailMailboxAutoReply::get_Response()
    @_property
    def response(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxAutoReply::put_Response(System.String)
    @response.setter
    def response(self, value: str) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxAutoReply::get_IsEnabled()
    @_property
    def is_enabled(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxAutoReply::put_IsEnabled(System.Boolean)
    @is_enabled.setter
    def is_enabled(self, value: bool) -> None: ...

@typing.final
class EmailMailboxAutoReplySettings(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings::get_StartTime()
    @_property
    def start_time(self) -> typing.Optional[datetime.datetime]: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings::put_StartTime(Windows.Foundation.IReference`1<Windows.Foundation.DateTime>)
    @start_time.setter
    def start_time(self, value: typing.Optional[datetime.datetime]) -> None: ...
    # Windows.ApplicationModel.Email.EmailMailboxAutoReplyMessageResponseKind Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings::get_ResponseKind()
    @_property
    def response_kind(self) -> EmailMailboxAutoReplyMessageResponseKind: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings::put_ResponseKind(Windows.ApplicationModel.Email.EmailMailboxAutoReplyMessageResponseKind)
    @response_kind.setter
    def response_kind(self, value: EmailMailboxAutoReplyMessageResponseKind) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings::get_IsEnabled()
    @_property
    def is_enabled(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings::put_IsEnabled(System.Boolean)
    @is_enabled.setter
    def is_enabled(self, value: bool) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings::get_EndTime()
    @_property
    def end_time(self) -> typing.Optional[datetime.datetime]: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings::put_EndTime(Windows.Foundation.IReference`1<Windows.Foundation.DateTime>)
    @end_time.setter
    def end_time(self, value: typing.Optional[datetime.datetime]) -> None: ...
    # Windows.ApplicationModel.Email.EmailMailboxAutoReply Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings::get_InternalReply()
    @_property
    def internal_reply(self) -> EmailMailboxAutoReply: ...
    # Windows.ApplicationModel.Email.EmailMailboxAutoReply Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings::get_KnownExternalReply()
    @_property
    def known_external_reply(self) -> EmailMailboxAutoReply: ...
    # Windows.ApplicationModel.Email.EmailMailboxAutoReply Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings::get_UnknownExternalReply()
    @_property
    def unknown_external_reply(self) -> EmailMailboxAutoReply: ...

@typing.final
class EmailMailboxCapabilities(winrt.system.Object):
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxCapabilities::get_CanSmartSend()
    @_property
    def can_smart_send(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxCapabilities::put_CanSmartSend(System.Boolean)
    @can_smart_send.setter
    def can_smart_send(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxCapabilities::get_CanUpdateMeetingResponses()
    @_property
    def can_update_meeting_responses(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxCapabilities::put_CanUpdateMeetingResponses(System.Boolean)
    @can_update_meeting_responses.setter
    def can_update_meeting_responses(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxCapabilities::get_CanServerSearchMailbox()
    @_property
    def can_server_search_mailbox(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxCapabilities::put_CanServerSearchMailbox(System.Boolean)
    @can_server_search_mailbox.setter
    def can_server_search_mailbox(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxCapabilities::get_CanServerSearchFolders()
    @_property
    def can_server_search_folders(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxCapabilities::put_CanServerSearchFolders(System.Boolean)
    @can_server_search_folders.setter
    def can_server_search_folders(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxCapabilities::get_CanForwardMeetings()
    @_property
    def can_forward_meetings(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxCapabilities::put_CanForwardMeetings(System.Boolean)
    @can_forward_meetings.setter
    def can_forward_meetings(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxCapabilities::get_CanProposeNewTimeForMeetings()
    @_property
    def can_propose_new_time_for_meetings(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxCapabilities::put_CanProposeNewTimeForMeetings(System.Boolean)
    @can_propose_new_time_for_meetings.setter
    def can_propose_new_time_for_meetings(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxCapabilities::get_CanGetAndSetInternalAutoReplies()
    @_property
    def can_get_and_set_internal_auto_replies(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxCapabilities::put_CanGetAndSetInternalAutoReplies(System.Boolean)
    @can_get_and_set_internal_auto_replies.setter
    def can_get_and_set_internal_auto_replies(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxCapabilities::get_CanGetAndSetExternalAutoReplies()
    @_property
    def can_get_and_set_external_auto_replies(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxCapabilities::put_CanGetAndSetExternalAutoReplies(System.Boolean)
    @can_get_and_set_external_auto_replies.setter
    def can_get_and_set_external_auto_replies(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxCapabilities::get_CanValidateCertificates()
    @_property
    def can_validate_certificates(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxCapabilities::put_CanValidateCertificates(System.Boolean)
    @can_validate_certificates.setter
    def can_validate_certificates(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxCapabilities::get_CanResolveRecipients()
    @_property
    def can_resolve_recipients(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxCapabilities::put_CanResolveRecipients(System.Boolean)
    @can_resolve_recipients.setter
    def can_resolve_recipients(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxCapabilities::get_CanMoveFolder()
    @_property
    def can_move_folder(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxCapabilities::put_CanMoveFolder(System.Boolean)
    @can_move_folder.setter
    def can_move_folder(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxCapabilities::get_CanEmptyFolder()
    @_property
    def can_empty_folder(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxCapabilities::put_CanEmptyFolder(System.Boolean)
    @can_empty_folder.setter
    def can_empty_folder(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxCapabilities::get_CanDeleteFolder()
    @_property
    def can_delete_folder(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxCapabilities::put_CanDeleteFolder(System.Boolean)
    @can_delete_folder.setter
    def can_delete_folder(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxCapabilities::get_CanCreateFolder()
    @_property
    def can_create_folder(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxCapabilities::put_CanCreateFolder(System.Boolean)
    @can_create_folder.setter
    def can_create_folder(self, value: bool) -> None: ...

@typing.final
class EmailMailboxChange(winrt.system.Object):
    # Windows.ApplicationModel.Email.EmailMailboxChangeType Windows.ApplicationModel.Email.EmailMailboxChange::get_ChangeType()
    @_property
    def change_type(self) -> EmailMailboxChangeType: ...
    # Windows.ApplicationModel.Email.EmailFolder Windows.ApplicationModel.Email.EmailMailboxChange::get_Folder()
    @_property
    def folder(self) -> EmailFolder: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Email.EmailMailboxAction> Windows.ApplicationModel.Email.EmailMailboxChange::get_MailboxActions()
    @_property
    def mailbox_actions(self) -> typing.MutableSequence[EmailMailboxAction]: ...
    # Windows.ApplicationModel.Email.EmailMessage Windows.ApplicationModel.Email.EmailMailboxChange::get_Message()
    @_property
    def message(self) -> EmailMessage: ...

@typing.final
class EmailMailboxChangeReader(winrt.system.Object):
    # System.Void Windows.ApplicationModel.Email.EmailMailboxChangeReader::AcceptChanges()
    def accept_changes(self) -> None: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxChangeReader::AcceptChangesThrough(Windows.ApplicationModel.Email.EmailMailboxChange)
    def accept_changes_through(self, last_change_to_acknowledge: EmailMailboxChange, /) -> None: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Email.EmailMailboxChange>> Windows.ApplicationModel.Email.EmailMailboxChangeReader::ReadBatchAsync()
    def read_batch_async(self) -> windows_foundation.IAsyncOperation[typing.Sequence[EmailMailboxChange]]: ...

@typing.final
class EmailMailboxChangeTracker(winrt.system.Object):
    # System.Void Windows.ApplicationModel.Email.EmailMailboxChangeTracker::Enable()
    def enable(self) -> None: ...
    # Windows.ApplicationModel.Email.EmailMailboxChangeReader Windows.ApplicationModel.Email.EmailMailboxChangeTracker::GetChangeReader()
    def get_change_reader(self) -> EmailMailboxChangeReader: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxChangeTracker::Reset()
    def reset(self) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxChangeTracker::get_IsTracking()
    @_property
    def is_tracking(self) -> bool: ...

@typing.final
class EmailMailboxChangedDeferral(winrt.system.Object):
    # System.Void Windows.ApplicationModel.Email.EmailMailboxChangedDeferral::Complete()
    def complete(self) -> None: ...

@typing.final
class EmailMailboxChangedEventArgs(winrt.system.Object):
    # Windows.ApplicationModel.Email.EmailMailboxChangedDeferral Windows.ApplicationModel.Email.EmailMailboxChangedEventArgs::GetDeferral()
    def get_deferral(self) -> EmailMailboxChangedDeferral: ...

@typing.final
class EmailMailboxCreateFolderResult(winrt.system.Object):
    # Windows.ApplicationModel.Email.EmailFolder Windows.ApplicationModel.Email.EmailMailboxCreateFolderResult::get_Folder()
    @_property
    def folder(self) -> EmailFolder: ...
    # Windows.ApplicationModel.Email.EmailMailboxCreateFolderStatus Windows.ApplicationModel.Email.EmailMailboxCreateFolderResult::get_Status()
    @_property
    def status(self) -> EmailMailboxCreateFolderStatus: ...

@typing.final
class EmailMailboxPolicies(winrt.system.Object):
    # Windows.Foundation.IReference`1<Windows.ApplicationModel.Email.EmailMailboxSmimeSigningAlgorithm> Windows.ApplicationModel.Email.EmailMailboxPolicies::get_RequiredSmimeSigningAlgorithm()
    @_property
    def required_smime_signing_algorithm(self) -> typing.Optional[EmailMailboxSmimeSigningAlgorithm]: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxPolicies::put_RequiredSmimeSigningAlgorithm(Windows.Foundation.IReference`1<Windows.ApplicationModel.Email.EmailMailboxSmimeSigningAlgorithm>)
    @required_smime_signing_algorithm.setter
    def required_smime_signing_algorithm(self, value: typing.Optional[EmailMailboxSmimeSigningAlgorithm]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.ApplicationModel.Email.EmailMailboxSmimeEncryptionAlgorithm> Windows.ApplicationModel.Email.EmailMailboxPolicies::get_RequiredSmimeEncryptionAlgorithm()
    @_property
    def required_smime_encryption_algorithm(self) -> typing.Optional[EmailMailboxSmimeEncryptionAlgorithm]: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxPolicies::put_RequiredSmimeEncryptionAlgorithm(Windows.Foundation.IReference`1<Windows.ApplicationModel.Email.EmailMailboxSmimeEncryptionAlgorithm>)
    @required_smime_encryption_algorithm.setter
    def required_smime_encryption_algorithm(self, value: typing.Optional[EmailMailboxSmimeEncryptionAlgorithm]) -> None: ...
    # Windows.ApplicationModel.Email.EmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation Windows.ApplicationModel.Email.EmailMailboxPolicies::get_AllowedSmimeEncryptionAlgorithmNegotiation()
    @_property
    def allowed_smime_encryption_algorithm_negotiation(self) -> EmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxPolicies::put_AllowedSmimeEncryptionAlgorithmNegotiation(Windows.ApplicationModel.Email.EmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation)
    @allowed_smime_encryption_algorithm_negotiation.setter
    def allowed_smime_encryption_algorithm_negotiation(self, value: EmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxPolicies::get_AllowSmimeSoftCertificates()
    @_property
    def allow_smime_soft_certificates(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxPolicies::put_AllowSmimeSoftCertificates(System.Boolean)
    @allow_smime_soft_certificates.setter
    def allow_smime_soft_certificates(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxPolicies::get_MustSignSmimeMessages()
    @_property
    def must_sign_smime_messages(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxPolicies::put_MustSignSmimeMessages(System.Boolean)
    @must_sign_smime_messages.setter
    def must_sign_smime_messages(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMailboxPolicies::get_MustEncryptSmimeMessages()
    @_property
    def must_encrypt_smime_messages(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxPolicies::put_MustEncryptSmimeMessages(System.Boolean)
    @must_encrypt_smime_messages.setter
    def must_encrypt_smime_messages(self, value: bool) -> None: ...

@typing.final
class EmailMailboxSyncManager(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.Email.EmailMailboxSyncManager::SyncAsync()
    def sync_async(self) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.EventRegistrationToken Windows.ApplicationModel.Email.EmailMailboxSyncManager::add_SyncStatusChanged(Windows.Foundation.TypedEventHandler`2<Windows.ApplicationModel.Email.EmailMailboxSyncManager,System.Object>)
    def add_sync_status_changed(self, handler: windows_foundation.TypedEventHandler[EmailMailboxSyncManager, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxSyncManager::remove_SyncStatusChanged(Windows.Foundation.EventRegistrationToken)
    def remove_sync_status_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.ApplicationModel.Email.EmailMailboxSyncStatus Windows.ApplicationModel.Email.EmailMailboxSyncManager::get_Status()
    @_property
    def status(self) -> EmailMailboxSyncStatus: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxSyncManager::put_Status(Windows.ApplicationModel.Email.EmailMailboxSyncStatus)
    @status.setter
    def status(self, value: EmailMailboxSyncStatus) -> None: ...
    # Windows.Foundation.DateTime Windows.ApplicationModel.Email.EmailMailboxSyncManager::get_LastSuccessfulSyncTime()
    @_property
    def last_successful_sync_time(self) -> datetime.datetime: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxSyncManager::put_LastSuccessfulSyncTime(Windows.Foundation.DateTime)
    @last_successful_sync_time.setter
    def last_successful_sync_time(self, value: datetime.datetime) -> None: ...
    # Windows.Foundation.DateTime Windows.ApplicationModel.Email.EmailMailboxSyncManager::get_LastAttemptedSyncTime()
    @_property
    def last_attempted_sync_time(self) -> datetime.datetime: ...
    # System.Void Windows.ApplicationModel.Email.EmailMailboxSyncManager::put_LastAttemptedSyncTime(Windows.Foundation.DateTime)
    @last_attempted_sync_time.setter
    def last_attempted_sync_time(self, value: datetime.datetime) -> None: ...

@typing.final
class EmailManager_Static(type):
    # Windows.ApplicationModel.Email.EmailManagerForUser Windows.ApplicationModel.Email.EmailManager::GetForUser(Windows.System.User)
    def get_for_user(cls, user: windows_system.User, /) -> EmailManagerForUser: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailStore> Windows.ApplicationModel.Email.EmailManager::RequestStoreAsync(Windows.ApplicationModel.Email.EmailStoreAccessType)
    def request_store_async(cls, access_type: EmailStoreAccessType, /) -> windows_foundation.IAsyncOperation[EmailStore]: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailManager::ShowComposeNewEmailAsync(Windows.ApplicationModel.Email.EmailMessage)
    def show_compose_new_email_async(cls, message: EmailMessage, /) -> windows_foundation.IAsyncAction: ...

@typing.final
class EmailManager(winrt.system.Object, metaclass=EmailManager_Static):
    pass

@typing.final
class EmailManagerForUser(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailStore> Windows.ApplicationModel.Email.EmailManagerForUser::RequestStoreAsync(Windows.ApplicationModel.Email.EmailStoreAccessType)
    def request_store_async(self, access_type: EmailStoreAccessType, /) -> windows_foundation.IAsyncOperation[EmailStore]: ...
    # Windows.Foundation.IAsyncAction Windows.ApplicationModel.Email.EmailManagerForUser::ShowComposeNewEmailAsync(Windows.ApplicationModel.Email.EmailMessage)
    def show_compose_new_email_async(self, message: EmailMessage, /) -> windows_foundation.IAsyncAction: ...
    # Windows.System.User Windows.ApplicationModel.Email.EmailManagerForUser::get_User()
    @_property
    def user(self) -> windows_system.User: ...

@typing.final
class EmailMeetingInfo(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.ApplicationModel.Email.EmailMeetingInfo::get_Location()
    @_property
    def location(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailMeetingInfo::put_Location(System.String)
    @location.setter
    def location(self, value: str) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMeetingInfo::get_IsResponseRequested()
    @_property
    def is_response_requested(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMeetingInfo::put_IsResponseRequested(System.Boolean)
    @is_response_requested.setter
    def is_response_requested(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMeetingInfo::get_IsAllDay()
    @_property
    def is_all_day(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMeetingInfo::put_IsAllDay(System.Boolean)
    @is_all_day.setter
    def is_all_day(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMeetingInfo::get_AllowNewTimeProposal()
    @_property
    def allow_new_time_proposal(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMeetingInfo::put_AllowNewTimeProposal(System.Boolean)
    @allow_new_time_proposal.setter
    def allow_new_time_proposal(self, value: bool) -> None: ...
    # Windows.Foundation.TimeSpan Windows.ApplicationModel.Email.EmailMeetingInfo::get_Duration()
    @_property
    def duration(self) -> datetime.timedelta: ...
    # System.Void Windows.ApplicationModel.Email.EmailMeetingInfo::put_Duration(Windows.Foundation.TimeSpan)
    @duration.setter
    def duration(self, value: datetime.timedelta) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailMeetingInfo::get_AppointmentRoamingId()
    @_property
    def appointment_roaming_id(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailMeetingInfo::put_AppointmentRoamingId(System.String)
    @appointment_roaming_id.setter
    def appointment_roaming_id(self, value: str) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.ApplicationModel.Email.EmailMeetingInfo::get_AppointmentOriginalStartTime()
    @_property
    def appointment_original_start_time(self) -> typing.Optional[datetime.datetime]: ...
    # System.Void Windows.ApplicationModel.Email.EmailMeetingInfo::put_AppointmentOriginalStartTime(Windows.Foundation.IReference`1<Windows.Foundation.DateTime>)
    @appointment_original_start_time.setter
    def appointment_original_start_time(self, value: typing.Optional[datetime.datetime]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan> Windows.ApplicationModel.Email.EmailMeetingInfo::get_ProposedDuration()
    @_property
    def proposed_duration(self) -> typing.Optional[datetime.timedelta]: ...
    # System.Void Windows.ApplicationModel.Email.EmailMeetingInfo::put_ProposedDuration(Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan>)
    @proposed_duration.setter
    def proposed_duration(self, value: typing.Optional[datetime.timedelta]) -> None: ...
    # System.UInt64 Windows.ApplicationModel.Email.EmailMeetingInfo::get_RemoteChangeNumber()
    @_property
    def remote_change_number(self) -> winrt.system.UInt64: ...
    # System.Void Windows.ApplicationModel.Email.EmailMeetingInfo::put_RemoteChangeNumber(System.UInt64)
    @remote_change_number.setter
    def remote_change_number(self, value: winrt.system.UInt64) -> None: ...
    # Windows.Foundation.DateTime Windows.ApplicationModel.Email.EmailMeetingInfo::get_StartTime()
    @_property
    def start_time(self) -> datetime.datetime: ...
    # System.Void Windows.ApplicationModel.Email.EmailMeetingInfo::put_StartTime(Windows.Foundation.DateTime)
    @start_time.setter
    def start_time(self, value: datetime.datetime) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.ApplicationModel.Email.EmailMeetingInfo::get_RecurrenceStartTime()
    @_property
    def recurrence_start_time(self) -> typing.Optional[datetime.datetime]: ...
    # System.Void Windows.ApplicationModel.Email.EmailMeetingInfo::put_RecurrenceStartTime(Windows.Foundation.IReference`1<Windows.Foundation.DateTime>)
    @recurrence_start_time.setter
    def recurrence_start_time(self, value: typing.Optional[datetime.datetime]) -> None: ...
    # Windows.ApplicationModel.Appointments.AppointmentRecurrence Windows.ApplicationModel.Email.EmailMeetingInfo::get_Recurrence()
    @_property
    def recurrence(self) -> windows_applicationmodel_appointments.AppointmentRecurrence: ...
    # System.Void Windows.ApplicationModel.Email.EmailMeetingInfo::put_Recurrence(Windows.ApplicationModel.Appointments.AppointmentRecurrence)
    @recurrence.setter
    def recurrence(self, value: windows_applicationmodel_appointments.AppointmentRecurrence) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.ApplicationModel.Email.EmailMeetingInfo::get_ProposedStartTime()
    @_property
    def proposed_start_time(self) -> typing.Optional[datetime.datetime]: ...
    # System.Void Windows.ApplicationModel.Email.EmailMeetingInfo::put_ProposedStartTime(Windows.Foundation.IReference`1<Windows.Foundation.DateTime>)
    @proposed_start_time.setter
    def proposed_start_time(self, value: typing.Optional[datetime.datetime]) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMeetingInfo::get_IsReportedOutOfDateByServer()
    @_property
    def is_reported_out_of_date_by_server(self) -> bool: ...

@typing.final
class EmailMessage(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Storage.Streams.IRandomAccessStreamReference Windows.ApplicationModel.Email.EmailMessage::GetBodyStream(Windows.ApplicationModel.Email.EmailMessageBodyKind)
    def get_body_stream(self, type: EmailMessageBodyKind, /) -> windows_storage_streams.IRandomAccessStreamReference: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::SetBodyStream(Windows.ApplicationModel.Email.EmailMessageBodyKind,Windows.Storage.Streams.IRandomAccessStreamReference)
    def set_body_stream(self, type: EmailMessageBodyKind, stream: windows_storage_streams.IRandomAccessStreamReference, /) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailMessage::get_Subject()
    @_property
    def subject(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_Subject(System.String)
    @subject.setter
    def subject(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailMessage::get_Body()
    @_property
    def body(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_Body(System.String)
    @body.setter
    def body(self, value: str) -> None: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Email.EmailRecipient> Windows.ApplicationModel.Email.EmailMessage::get_Bcc()
    @_property
    def bcc(self) -> typing.MutableSequence[EmailRecipient]: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Email.EmailRecipient> Windows.ApplicationModel.Email.EmailMessage::get_CC()
    @_property
    def cc(self) -> typing.MutableSequence[EmailRecipient]: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Email.EmailAttachment> Windows.ApplicationModel.Email.EmailMessage::get_Attachments()
    @_property
    def attachments(self) -> typing.MutableSequence[EmailAttachment]: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Email.EmailRecipient> Windows.ApplicationModel.Email.EmailMessage::get_To()
    @_property
    def to(self) -> typing.MutableSequence[EmailRecipient]: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMessage::get_AllowInternetImages()
    @_property
    def allow_internet_images(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_AllowInternetImages(System.Boolean)
    @allow_internet_images.setter
    def allow_internet_images(self, value: bool) -> None: ...
    # Windows.ApplicationModel.Email.EmailFlagState Windows.ApplicationModel.Email.EmailMessage::get_FlagState()
    @_property
    def flag_state(self) -> EmailFlagState: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_FlagState(Windows.ApplicationModel.Email.EmailFlagState)
    @flag_state.setter
    def flag_state(self, value: EmailFlagState) -> None: ...
    # System.UInt32 Windows.ApplicationModel.Email.EmailMessage::get_EstimatedDownloadSizeInBytes()
    @_property
    def estimated_download_size_in_bytes(self) -> winrt.system.UInt32: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_EstimatedDownloadSizeInBytes(System.UInt32)
    @estimated_download_size_in_bytes.setter
    def estimated_download_size_in_bytes(self, value: winrt.system.UInt32) -> None: ...
    # Windows.ApplicationModel.Email.EmailMessageDownloadState Windows.ApplicationModel.Email.EmailMessage::get_DownloadState()
    @_property
    def download_state(self) -> EmailMessageDownloadState: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_DownloadState(Windows.ApplicationModel.Email.EmailMessageDownloadState)
    @download_state.setter
    def download_state(self, value: EmailMessageDownloadState) -> None: ...
    # Windows.ApplicationModel.Email.EmailImportance Windows.ApplicationModel.Email.EmailMessage::get_Importance()
    @_property
    def importance(self) -> EmailImportance: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_Importance(Windows.ApplicationModel.Email.EmailImportance)
    @importance.setter
    def importance(self, value: EmailImportance) -> None: ...
    # Windows.ApplicationModel.Email.EmailIrmInfo Windows.ApplicationModel.Email.EmailMessage::get_IrmInfo()
    @_property
    def irm_info(self) -> EmailIrmInfo: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_IrmInfo(Windows.ApplicationModel.Email.EmailIrmInfo)
    @irm_info.setter
    def irm_info(self, value: EmailIrmInfo) -> None: ...
    # System.Int32 Windows.ApplicationModel.Email.EmailMessage::get_OriginalCodePage()
    @_property
    def original_code_page(self) -> winrt.system.Int32: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_OriginalCodePage(System.Int32)
    @original_code_page.setter
    def original_code_page(self, value: winrt.system.Int32) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.DateTime> Windows.ApplicationModel.Email.EmailMessage::get_SentTime()
    @_property
    def sent_time(self) -> typing.Optional[datetime.datetime]: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_SentTime(Windows.Foundation.IReference`1<Windows.Foundation.DateTime>)
    @sent_time.setter
    def sent_time(self, value: typing.Optional[datetime.datetime]) -> None: ...
    # Windows.ApplicationModel.Email.EmailRecipient Windows.ApplicationModel.Email.EmailMessage::get_Sender()
    @_property
    def sender(self) -> EmailRecipient: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_Sender(Windows.ApplicationModel.Email.EmailRecipient)
    @sender.setter
    def sender(self, value: EmailRecipient) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailMessage::get_RemoteId()
    @_property
    def remote_id(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_RemoteId(System.String)
    @remote_id.setter
    def remote_id(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailMessage::get_Preview()
    @_property
    def preview(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_Preview(System.String)
    @preview.setter
    def preview(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailMessage::get_MessageClass()
    @_property
    def message_class(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_MessageClass(System.String)
    @message_class.setter
    def message_class(self, value: str) -> None: ...
    # Windows.ApplicationModel.Email.EmailMeetingInfo Windows.ApplicationModel.Email.EmailMessage::get_MeetingInfo()
    @_property
    def meeting_info(self) -> EmailMeetingInfo: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_MeetingInfo(Windows.ApplicationModel.Email.EmailMeetingInfo)
    @meeting_info.setter
    def meeting_info(self, value: EmailMeetingInfo) -> None: ...
    # Windows.ApplicationModel.Email.EmailMessageResponseKind Windows.ApplicationModel.Email.EmailMessage::get_LastResponseKind()
    @_property
    def last_response_kind(self) -> EmailMessageResponseKind: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_LastResponseKind(Windows.ApplicationModel.Email.EmailMessageResponseKind)
    @last_response_kind.setter
    def last_response_kind(self, value: EmailMessageResponseKind) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMessage::get_IsSeen()
    @_property
    def is_seen(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_IsSeen(System.Boolean)
    @is_seen.setter
    def is_seen(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMessage::get_IsRead()
    @_property
    def is_read(self) -> bool: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_IsRead(System.Boolean)
    @is_read.setter
    def is_read(self, value: bool) -> None: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMessage::get_IsServerSearchMessage()
    @_property
    def is_server_search_message(self) -> bool: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMessage::get_IsSmartSendable()
    @_property
    def is_smart_sendable(self) -> bool: ...
    # System.String Windows.ApplicationModel.Email.EmailMessage::get_MailboxId()
    @_property
    def mailbox_id(self) -> str: ...
    # System.UInt64 Windows.ApplicationModel.Email.EmailMessage::get_ChangeNumber()
    @_property
    def change_number(self) -> winrt.system.UInt64: ...
    # System.String Windows.ApplicationModel.Email.EmailMessage::get_ConversationId()
    @_property
    def conversation_id(self) -> str: ...
    # System.String Windows.ApplicationModel.Email.EmailMessage::get_NormalizedSubject()
    @_property
    def normalized_subject(self) -> str: ...
    # System.String Windows.ApplicationModel.Email.EmailMessage::get_FolderId()
    @_property
    def folder_id(self) -> str: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMessage::get_HasPartialBodies()
    @_property
    def has_partial_bodies(self) -> bool: ...
    # System.String Windows.ApplicationModel.Email.EmailMessage::get_Id()
    @_property
    def id(self) -> str: ...
    # System.String Windows.ApplicationModel.Email.EmailMessage::get_InResponseToMessageId()
    @_property
    def in_response_to_message_id(self) -> str: ...
    # System.Boolean Windows.ApplicationModel.Email.EmailMessage::get_IsDraftMessage()
    @_property
    def is_draft_message(self) -> bool: ...
    # Windows.ApplicationModel.Email.EmailMessageSmimeKind Windows.ApplicationModel.Email.EmailMessage::get_SmimeKind()
    @_property
    def smime_kind(self) -> EmailMessageSmimeKind: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_SmimeKind(Windows.ApplicationModel.Email.EmailMessageSmimeKind)
    @smime_kind.setter
    def smime_kind(self, value: EmailMessageSmimeKind) -> None: ...
    # Windows.Storage.Streams.IRandomAccessStreamReference Windows.ApplicationModel.Email.EmailMessage::get_SmimeData()
    @_property
    def smime_data(self) -> windows_storage_streams.IRandomAccessStreamReference: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_SmimeData(Windows.Storage.Streams.IRandomAccessStreamReference)
    @smime_data.setter
    def smime_data(self, value: windows_storage_streams.IRandomAccessStreamReference) -> None: ...
    # Windows.ApplicationModel.Email.EmailRecipient Windows.ApplicationModel.Email.EmailMessage::get_SentRepresenting()
    @_property
    def sent_representing(self) -> EmailRecipient: ...
    # System.Void Windows.ApplicationModel.Email.EmailMessage::put_SentRepresenting(Windows.ApplicationModel.Email.EmailRecipient)
    @sent_representing.setter
    def sent_representing(self, value: EmailRecipient) -> None: ...
    # Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Email.EmailRecipient> Windows.ApplicationModel.Email.EmailMessage::get_ReplyTo()
    @_property
    def reply_to(self) -> typing.MutableSequence[EmailRecipient]: ...

@typing.final
class EmailMessageBatch(winrt.system.Object):
    # Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Email.EmailMessage> Windows.ApplicationModel.Email.EmailMessageBatch::get_Messages()
    @_property
    def messages(self) -> typing.Sequence[EmailMessage]: ...
    # Windows.ApplicationModel.Email.EmailBatchStatus Windows.ApplicationModel.Email.EmailMessageBatch::get_Status()
    @_property
    def status(self) -> EmailBatchStatus: ...

@typing.final
class EmailMessageReader(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailMessageBatch> Windows.ApplicationModel.Email.EmailMessageReader::ReadBatchAsync()
    def read_batch_async(self) -> windows_foundation.IAsyncOperation[EmailMessageBatch]: ...

@typing.final
class EmailQueryOptions(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], text: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], text: str, fields: EmailQuerySearchFields) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.ApplicationModel.Email.EmailQuerySortProperty Windows.ApplicationModel.Email.EmailQueryOptions::get_SortProperty()
    @_property
    def sort_property(self) -> EmailQuerySortProperty: ...
    # System.Void Windows.ApplicationModel.Email.EmailQueryOptions::put_SortProperty(Windows.ApplicationModel.Email.EmailQuerySortProperty)
    @sort_property.setter
    def sort_property(self, value: EmailQuerySortProperty) -> None: ...
    # Windows.ApplicationModel.Email.EmailQuerySortDirection Windows.ApplicationModel.Email.EmailQueryOptions::get_SortDirection()
    @_property
    def sort_direction(self) -> EmailQuerySortDirection: ...
    # System.Void Windows.ApplicationModel.Email.EmailQueryOptions::put_SortDirection(Windows.ApplicationModel.Email.EmailQuerySortDirection)
    @sort_direction.setter
    def sort_direction(self, value: EmailQuerySortDirection) -> None: ...
    # Windows.ApplicationModel.Email.EmailQueryKind Windows.ApplicationModel.Email.EmailQueryOptions::get_Kind()
    @_property
    def kind(self) -> EmailQueryKind: ...
    # System.Void Windows.ApplicationModel.Email.EmailQueryOptions::put_Kind(Windows.ApplicationModel.Email.EmailQueryKind)
    @kind.setter
    def kind(self, value: EmailQueryKind) -> None: ...
    # Windows.Foundation.Collections.IVector`1<System.String> Windows.ApplicationModel.Email.EmailQueryOptions::get_FolderIds()
    @_property
    def folder_ids(self) -> typing.MutableSequence[str]: ...
    # Windows.ApplicationModel.Email.EmailQueryTextSearch Windows.ApplicationModel.Email.EmailQueryOptions::get_TextSearch()
    @_property
    def text_search(self) -> EmailQueryTextSearch: ...

@typing.final
class EmailQueryTextSearch(winrt.system.Object):
    # System.String Windows.ApplicationModel.Email.EmailQueryTextSearch::get_Text()
    @_property
    def text(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailQueryTextSearch::put_Text(System.String)
    @text.setter
    def text(self, value: str) -> None: ...
    # Windows.ApplicationModel.Email.EmailQuerySearchScope Windows.ApplicationModel.Email.EmailQueryTextSearch::get_SearchScope()
    @_property
    def search_scope(self) -> EmailQuerySearchScope: ...
    # System.Void Windows.ApplicationModel.Email.EmailQueryTextSearch::put_SearchScope(Windows.ApplicationModel.Email.EmailQuerySearchScope)
    @search_scope.setter
    def search_scope(self, value: EmailQuerySearchScope) -> None: ...
    # Windows.ApplicationModel.Email.EmailQuerySearchFields Windows.ApplicationModel.Email.EmailQueryTextSearch::get_Fields()
    @_property
    def fields(self) -> EmailQuerySearchFields: ...
    # System.Void Windows.ApplicationModel.Email.EmailQueryTextSearch::put_Fields(Windows.ApplicationModel.Email.EmailQuerySearchFields)
    @fields.setter
    def fields(self, value: EmailQuerySearchFields) -> None: ...

@typing.final
class EmailRecipient(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], address: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], address: str, name: str) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.ApplicationModel.Email.EmailRecipient::get_Name()
    @_property
    def name(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailRecipient::put_Name(System.String)
    @name.setter
    def name(self, value: str) -> None: ...
    # System.String Windows.ApplicationModel.Email.EmailRecipient::get_Address()
    @_property
    def address(self) -> str: ...
    # System.Void Windows.ApplicationModel.Email.EmailRecipient::put_Address(System.String)
    @address.setter
    def address(self, value: str) -> None: ...

@typing.final
class EmailRecipientResolutionResult(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.ApplicationModel.Email.EmailRecipientResolutionResult::SetPublicKeys(Windows.Foundation.Collections.IIterable`1<Windows.Security.Cryptography.Certificates.Certificate>)
    def set_public_keys(self, value: typing.Iterable[windows_security_cryptography_certificates.Certificate], /) -> None: ...
    # Windows.ApplicationModel.Email.EmailRecipientResolutionStatus Windows.ApplicationModel.Email.EmailRecipientResolutionResult::get_Status()
    @_property
    def status(self) -> EmailRecipientResolutionStatus: ...
    # System.Void Windows.ApplicationModel.Email.EmailRecipientResolutionResult::put_Status(Windows.ApplicationModel.Email.EmailRecipientResolutionStatus)
    @status.setter
    def status(self, value: EmailRecipientResolutionStatus) -> None: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Security.Cryptography.Certificates.Certificate> Windows.ApplicationModel.Email.EmailRecipientResolutionResult::get_PublicKeys()
    @_property
    def public_keys(self) -> typing.Sequence[windows_security_cryptography_certificates.Certificate]: ...

@typing.final
class EmailStore(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailMailbox> Windows.ApplicationModel.Email.EmailStore::CreateMailboxAsync(System.String,System.String)
    def create_mailbox_async(self, account_name: str, account_address: str, /) -> windows_foundation.IAsyncOperation[EmailMailbox]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailMailbox> Windows.ApplicationModel.Email.EmailStore::CreateMailboxAsync(System.String,System.String,System.String)
    def create_mailbox_in_account_async(self, account_name: str, account_address: str, user_data_account_id: str, /) -> windows_foundation.IAsyncOperation[EmailMailbox]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Email.EmailMailbox>> Windows.ApplicationModel.Email.EmailStore::FindMailboxesAsync()
    def find_mailboxes_async(self) -> windows_foundation.IAsyncOperation[typing.Sequence[EmailMailbox]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailConversation> Windows.ApplicationModel.Email.EmailStore::GetConversationAsync(System.String)
    def get_conversation_async(self, id: str, /) -> windows_foundation.IAsyncOperation[EmailConversation]: ...
    # Windows.ApplicationModel.Email.EmailConversationReader Windows.ApplicationModel.Email.EmailStore::GetConversationReader()
    def get_conversation_reader(self) -> EmailConversationReader: ...
    # Windows.ApplicationModel.Email.EmailConversationReader Windows.ApplicationModel.Email.EmailStore::GetConversationReader(Windows.ApplicationModel.Email.EmailQueryOptions)
    def get_conversation_reader_with_options(self, options: EmailQueryOptions, /) -> EmailConversationReader: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailFolder> Windows.ApplicationModel.Email.EmailStore::GetFolderAsync(System.String)
    def get_folder_async(self, id: str, /) -> windows_foundation.IAsyncOperation[EmailFolder]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailMailbox> Windows.ApplicationModel.Email.EmailStore::GetMailboxAsync(System.String)
    def get_mailbox_async(self, id: str, /) -> windows_foundation.IAsyncOperation[EmailMailbox]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Email.EmailMessage> Windows.ApplicationModel.Email.EmailStore::GetMessageAsync(System.String)
    def get_message_async(self, id: str, /) -> windows_foundation.IAsyncOperation[EmailMessage]: ...
    # Windows.ApplicationModel.Email.EmailMessageReader Windows.ApplicationModel.Email.EmailStore::GetMessageReader()
    def get_message_reader(self) -> EmailMessageReader: ...
    # Windows.ApplicationModel.Email.EmailMessageReader Windows.ApplicationModel.Email.EmailStore::GetMessageReader(Windows.ApplicationModel.Email.EmailQueryOptions)
    def get_message_reader_with_options(self, options: EmailQueryOptions, /) -> EmailMessageReader: ...

@typing.final
class EmailStoreNotificationTriggerDetails(winrt.system.Object):
    pass

