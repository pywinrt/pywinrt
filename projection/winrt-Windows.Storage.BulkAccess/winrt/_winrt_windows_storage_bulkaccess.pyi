# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.storage as windows_storage
import winrt.windows.storage.fileproperties as windows_storage_fileproperties
import winrt.windows.storage.search as windows_storage_search
import winrt.windows.storage.streams as windows_storage_streams

Self = typing.TypeVar('Self')

@typing.final
class FileInformation(winrt.system.Object, windows_storage.IStorageFile2, windows_storage.IStorageFilePropertiesWithAvailability, windows_storage.IStorageItemPropertiesWithProvider, windows_storage.IStorageItem2, windows_storage.IStorageItemProperties, windows_storage.IStorageFile, windows_storage_streams.IInputStreamReference, windows_storage_streams.IRandomAccessStreamReference, windows_storage.IStorageItem, IStorageItemInformation):
    # Windows.Foundation.IAsyncAction Windows.Storage.BulkAccess.FileInformation::CopyAndReplaceAsync(Windows.Storage.IStorageFile)
    def copy_and_replace_async(self, file_to_replace: windows_storage.IStorageFile, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile> Windows.Storage.BulkAccess.FileInformation::CopyAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)
    def copy_overload(self, destination_folder: windows_storage.IStorageFolder, desired_new_name: str, option: windows_storage.NameCollisionOption, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFile]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile> Windows.Storage.BulkAccess.FileInformation::CopyAsync(Windows.Storage.IStorageFolder)
    def copy_overload_default_name_and_options(self, destination_folder: windows_storage.IStorageFolder, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFile]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile> Windows.Storage.BulkAccess.FileInformation::CopyAsync(Windows.Storage.IStorageFolder,System.String)
    def copy_overload_default_options(self, destination_folder: windows_storage.IStorageFolder, desired_new_name: str, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFile]: ...
    # Windows.Foundation.IAsyncAction Windows.Storage.BulkAccess.FileInformation::DeleteAsync(Windows.Storage.StorageDeleteOption)
    def delete_async(self, option: windows_storage.StorageDeleteOption, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Storage.BulkAccess.FileInformation::DeleteAsync()
    def delete_async_overload_default_options(self) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.FileProperties.BasicProperties> Windows.Storage.BulkAccess.FileInformation::GetBasicPropertiesAsync()
    def get_basic_properties_async(self) -> windows_foundation.IAsyncOperation[windows_storage_fileproperties.BasicProperties]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFolder> Windows.Storage.BulkAccess.FileInformation::GetParentAsync()
    def get_parent_async(self) -> windows_foundation.IAsyncOperation[windows_storage.StorageFolder]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.FileProperties.StorageItemThumbnail> Windows.Storage.BulkAccess.FileInformation::GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)
    def get_thumbnail_async(self, mode: windows_storage_fileproperties.ThumbnailMode, requested_size: winrt.system.UInt32, options: windows_storage_fileproperties.ThumbnailOptions, /) -> windows_foundation.IAsyncOperation[windows_storage_fileproperties.StorageItemThumbnail]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.FileProperties.StorageItemThumbnail> Windows.Storage.BulkAccess.FileInformation::GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)
    def get_thumbnail_async_overload_default_options(self, mode: windows_storage_fileproperties.ThumbnailMode, requested_size: winrt.system.UInt32, /) -> windows_foundation.IAsyncOperation[windows_storage_fileproperties.StorageItemThumbnail]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.FileProperties.StorageItemThumbnail> Windows.Storage.BulkAccess.FileInformation::GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)
    def get_thumbnail_async_overload_default_size_default_options(self, mode: windows_storage_fileproperties.ThumbnailMode, /) -> windows_foundation.IAsyncOperation[windows_storage_fileproperties.StorageItemThumbnail]: ...
    # System.Boolean Windows.Storage.BulkAccess.FileInformation::IsEqual(Windows.Storage.IStorageItem)
    def is_equal(self, item: windows_storage.IStorageItem, /) -> bool: ...
    # System.Boolean Windows.Storage.BulkAccess.FileInformation::IsOfType(Windows.Storage.StorageItemTypes)
    def is_of_type(self, type: windows_storage.StorageItemTypes, /) -> bool: ...
    # Windows.Foundation.IAsyncAction Windows.Storage.BulkAccess.FileInformation::MoveAndReplaceAsync(Windows.Storage.IStorageFile)
    def move_and_replace_async(self, file_to_replace: windows_storage.IStorageFile, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Storage.BulkAccess.FileInformation::MoveAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)
    def move_overload(self, destination_folder: windows_storage.IStorageFolder, desired_new_name: str, option: windows_storage.NameCollisionOption, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Storage.BulkAccess.FileInformation::MoveAsync(Windows.Storage.IStorageFolder)
    def move_overload_default_name_and_options(self, destination_folder: windows_storage.IStorageFolder, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Storage.BulkAccess.FileInformation::MoveAsync(Windows.Storage.IStorageFolder,System.String)
    def move_overload_default_options(self, destination_folder: windows_storage.IStorageFolder, desired_new_name: str, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.IRandomAccessStream> Windows.Storage.BulkAccess.FileInformation::OpenAsync(Windows.Storage.FileAccessMode)
    def open_async(self, access_mode: windows_storage.FileAccessMode, /) -> windows_foundation.IAsyncOperation[windows_storage_streams.IRandomAccessStream]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.IRandomAccessStreamWithContentType> Windows.Storage.BulkAccess.FileInformation::OpenReadAsync()
    def open_read_async(self) -> windows_foundation.IAsyncOperation[windows_storage_streams.IRandomAccessStreamWithContentType]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.IInputStream> Windows.Storage.BulkAccess.FileInformation::OpenSequentialReadAsync()
    def open_sequential_read_async(self) -> windows_foundation.IAsyncOperation[windows_storage_streams.IInputStream]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageStreamTransaction> Windows.Storage.BulkAccess.FileInformation::OpenTransactedWriteAsync()
    def open_transacted_write_async(self) -> windows_foundation.IAsyncOperation[windows_storage.StorageStreamTransaction]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageStreamTransaction> Windows.Storage.BulkAccess.FileInformation::OpenTransactedWriteAsync(Windows.Storage.StorageOpenOptions)
    def open_transacted_write_with_options_async(self, options: windows_storage.StorageOpenOptions, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageStreamTransaction]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.IRandomAccessStream> Windows.Storage.BulkAccess.FileInformation::OpenAsync(Windows.Storage.FileAccessMode,Windows.Storage.StorageOpenOptions)
    def open_with_options_async(self, access_mode: windows_storage.FileAccessMode, options: windows_storage.StorageOpenOptions, /) -> windows_foundation.IAsyncOperation[windows_storage_streams.IRandomAccessStream]: ...
    # Windows.Foundation.IAsyncAction Windows.Storage.BulkAccess.FileInformation::RenameAsync(System.String,Windows.Storage.NameCollisionOption)
    def rename_async(self, desired_name: str, option: windows_storage.NameCollisionOption, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Storage.BulkAccess.FileInformation::RenameAsync(System.String)
    def rename_async_overload_default_options(self, desired_name: str, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.EventRegistrationToken Windows.Storage.BulkAccess.FileInformation::add_PropertiesUpdated(Windows.Foundation.TypedEventHandler`2<Windows.Storage.BulkAccess.IStorageItemInformation,System.Object>)
    def add_properties_updated(self, changed_handler: windows_foundation.TypedEventHandler[IStorageItemInformation, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Storage.BulkAccess.FileInformation::remove_PropertiesUpdated(Windows.Foundation.EventRegistrationToken)
    def remove_properties_updated(self, event_cookie: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Storage.BulkAccess.FileInformation::add_ThumbnailUpdated(Windows.Foundation.TypedEventHandler`2<Windows.Storage.BulkAccess.IStorageItemInformation,System.Object>)
    def add_thumbnail_updated(self, changed_handler: windows_foundation.TypedEventHandler[IStorageItemInformation, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Storage.BulkAccess.FileInformation::remove_ThumbnailUpdated(Windows.Foundation.EventRegistrationToken)
    def remove_thumbnail_updated(self, event_cookie: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Storage.FileProperties.BasicProperties Windows.Storage.BulkAccess.FileInformation::get_BasicProperties()
    @_property
    def basic_properties(self) -> windows_storage_fileproperties.BasicProperties: ...
    # Windows.Storage.FileProperties.DocumentProperties Windows.Storage.BulkAccess.FileInformation::get_DocumentProperties()
    @_property
    def document_properties(self) -> windows_storage_fileproperties.DocumentProperties: ...
    # Windows.Storage.FileProperties.ImageProperties Windows.Storage.BulkAccess.FileInformation::get_ImageProperties()
    @_property
    def image_properties(self) -> windows_storage_fileproperties.ImageProperties: ...
    # Windows.Storage.FileProperties.MusicProperties Windows.Storage.BulkAccess.FileInformation::get_MusicProperties()
    @_property
    def music_properties(self) -> windows_storage_fileproperties.MusicProperties: ...
    # Windows.Storage.FileProperties.StorageItemThumbnail Windows.Storage.BulkAccess.FileInformation::get_Thumbnail()
    @_property
    def thumbnail(self) -> windows_storage_fileproperties.StorageItemThumbnail: ...
    # Windows.Storage.FileProperties.VideoProperties Windows.Storage.BulkAccess.FileInformation::get_VideoProperties()
    @_property
    def video_properties(self) -> windows_storage_fileproperties.VideoProperties: ...
    # System.String Windows.Storage.BulkAccess.FileInformation::get_ContentType()
    @_property
    def content_type(self) -> str: ...
    # System.String Windows.Storage.BulkAccess.FileInformation::get_FileType()
    @_property
    def file_type(self) -> str: ...
    # System.Boolean Windows.Storage.BulkAccess.FileInformation::get_IsAvailable()
    @_property
    def is_available(self) -> bool: ...
    # Windows.Storage.FileAttributes Windows.Storage.BulkAccess.FileInformation::get_Attributes()
    @_property
    def attributes(self) -> windows_storage.FileAttributes: ...
    # Windows.Foundation.DateTime Windows.Storage.BulkAccess.FileInformation::get_DateCreated()
    @_property
    def date_created(self) -> datetime.datetime: ...
    # System.String Windows.Storage.BulkAccess.FileInformation::get_Name()
    @_property
    def name(self) -> str: ...
    # System.String Windows.Storage.BulkAccess.FileInformation::get_Path()
    @_property
    def path(self) -> str: ...
    # System.String Windows.Storage.BulkAccess.FileInformation::get_DisplayName()
    @_property
    def display_name(self) -> str: ...
    # System.String Windows.Storage.BulkAccess.FileInformation::get_DisplayType()
    @_property
    def display_type(self) -> str: ...
    # System.String Windows.Storage.BulkAccess.FileInformation::get_FolderRelativeId()
    @_property
    def folder_relative_id(self) -> str: ...
    # Windows.Storage.FileProperties.StorageItemContentProperties Windows.Storage.BulkAccess.FileInformation::get_Properties()
    @_property
    def properties(self) -> windows_storage_fileproperties.StorageItemContentProperties: ...
    # Windows.Storage.StorageProvider Windows.Storage.BulkAccess.FileInformation::get_Provider()
    @_property
    def provider(self) -> windows_storage.StorageProvider: ...

@typing.final
class FileInformationFactory(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], query_result: windows_storage_search.IStorageQueryResultBase, mode: windows_storage_fileproperties.ThumbnailMode) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], query_result: windows_storage_search.IStorageQueryResultBase, mode: windows_storage_fileproperties.ThumbnailMode, requested_thumbnail_size: winrt.system.UInt32) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], query_result: windows_storage_search.IStorageQueryResultBase, mode: windows_storage_fileproperties.ThumbnailMode, requested_thumbnail_size: winrt.system.UInt32, thumbnail_options: windows_storage_fileproperties.ThumbnailOptions) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], query_result: windows_storage_search.IStorageQueryResultBase, mode: windows_storage_fileproperties.ThumbnailMode, requested_thumbnail_size: winrt.system.UInt32, thumbnail_options: windows_storage_fileproperties.ThumbnailOptions, delay_load: bool) -> Self: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Storage.BulkAccess.FileInformation>> Windows.Storage.BulkAccess.FileInformationFactory::GetFilesAsync(System.UInt32,System.UInt32)
    def get_files_async(self, start_index: winrt.system.UInt32, max_items_to_retrieve: winrt.system.UInt32, /) -> windows_foundation.IAsyncOperation[typing.Sequence[FileInformation]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Storage.BulkAccess.FileInformation>> Windows.Storage.BulkAccess.FileInformationFactory::GetFilesAsync()
    def get_files_async_default_start_and_count(self) -> windows_foundation.IAsyncOperation[typing.Sequence[FileInformation]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Storage.BulkAccess.FolderInformation>> Windows.Storage.BulkAccess.FileInformationFactory::GetFoldersAsync(System.UInt32,System.UInt32)
    def get_folders_async(self, start_index: winrt.system.UInt32, max_items_to_retrieve: winrt.system.UInt32, /) -> windows_foundation.IAsyncOperation[typing.Sequence[FolderInformation]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Storage.BulkAccess.FolderInformation>> Windows.Storage.BulkAccess.FileInformationFactory::GetFoldersAsync()
    def get_folders_async_default_start_and_count(self) -> windows_foundation.IAsyncOperation[typing.Sequence[FolderInformation]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Storage.BulkAccess.IStorageItemInformation>> Windows.Storage.BulkAccess.FileInformationFactory::GetItemsAsync(System.UInt32,System.UInt32)
    def get_items_async(self, start_index: winrt.system.UInt32, max_items_to_retrieve: winrt.system.UInt32, /) -> windows_foundation.IAsyncOperation[typing.Sequence[IStorageItemInformation]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Storage.BulkAccess.IStorageItemInformation>> Windows.Storage.BulkAccess.FileInformationFactory::GetItemsAsync()
    def get_items_async_default_start_and_count(self) -> windows_foundation.IAsyncOperation[typing.Sequence[IStorageItemInformation]]: ...
    # System.Object Windows.Storage.BulkAccess.FileInformationFactory::GetVirtualizedFilesVector()
    def get_virtualized_files_vector(self) -> winrt.system.Object: ...
    # System.Object Windows.Storage.BulkAccess.FileInformationFactory::GetVirtualizedFoldersVector()
    def get_virtualized_folders_vector(self) -> winrt.system.Object: ...
    # System.Object Windows.Storage.BulkAccess.FileInformationFactory::GetVirtualizedItemsVector()
    def get_virtualized_items_vector(self) -> winrt.system.Object: ...

@typing.final
class FolderInformation(winrt.system.Object, windows_storage.IStorageItemPropertiesWithProvider, windows_storage.IStorageFolder2, windows_storage.IStorageItem2, windows_storage_search.IStorageFolderQueryOperations, windows_storage.IStorageItemProperties, windows_storage.IStorageFolder, windows_storage.IStorageItem, IStorageItemInformation):
    # System.Boolean Windows.Storage.BulkAccess.FolderInformation::AreQueryOptionsSupported(Windows.Storage.Search.QueryOptions)
    def are_query_options_supported(self, query_options: windows_storage_search.QueryOptions, /) -> bool: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile> Windows.Storage.BulkAccess.FolderInformation::CreateFileAsync(System.String,Windows.Storage.CreationCollisionOption)
    def create_file_async(self, desired_name: str, options: windows_storage.CreationCollisionOption, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFile]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile> Windows.Storage.BulkAccess.FolderInformation::CreateFileAsync(System.String)
    def create_file_async_overload_default_options(self, desired_name: str, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFile]: ...
    # Windows.Storage.Search.StorageFileQueryResult Windows.Storage.BulkAccess.FolderInformation::CreateFileQuery(Windows.Storage.Search.CommonFileQuery)
    def create_file_query(self, query: windows_storage_search.CommonFileQuery, /) -> windows_storage_search.StorageFileQueryResult: ...
    # Windows.Storage.Search.StorageFileQueryResult Windows.Storage.BulkAccess.FolderInformation::CreateFileQuery()
    def create_file_query_overload_default(self) -> windows_storage_search.StorageFileQueryResult: ...
    # Windows.Storage.Search.StorageFileQueryResult Windows.Storage.BulkAccess.FolderInformation::CreateFileQueryWithOptions(Windows.Storage.Search.QueryOptions)
    def create_file_query_with_options(self, query_options: windows_storage_search.QueryOptions, /) -> windows_storage_search.StorageFileQueryResult: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFolder> Windows.Storage.BulkAccess.FolderInformation::CreateFolderAsync(System.String,Windows.Storage.CreationCollisionOption)
    def create_folder_async(self, desired_name: str, options: windows_storage.CreationCollisionOption, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFolder]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFolder> Windows.Storage.BulkAccess.FolderInformation::CreateFolderAsync(System.String)
    def create_folder_async_overload_default_options(self, desired_name: str, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFolder]: ...
    # Windows.Storage.Search.StorageFolderQueryResult Windows.Storage.BulkAccess.FolderInformation::CreateFolderQuery(Windows.Storage.Search.CommonFolderQuery)
    def create_folder_query(self, query: windows_storage_search.CommonFolderQuery, /) -> windows_storage_search.StorageFolderQueryResult: ...
    # Windows.Storage.Search.StorageFolderQueryResult Windows.Storage.BulkAccess.FolderInformation::CreateFolderQuery()
    def create_folder_query_overload_default(self) -> windows_storage_search.StorageFolderQueryResult: ...
    # Windows.Storage.Search.StorageFolderQueryResult Windows.Storage.BulkAccess.FolderInformation::CreateFolderQueryWithOptions(Windows.Storage.Search.QueryOptions)
    def create_folder_query_with_options(self, query_options: windows_storage_search.QueryOptions, /) -> windows_storage_search.StorageFolderQueryResult: ...
    # Windows.Storage.Search.StorageItemQueryResult Windows.Storage.BulkAccess.FolderInformation::CreateItemQuery()
    def create_item_query(self) -> windows_storage_search.StorageItemQueryResult: ...
    # Windows.Storage.Search.StorageItemQueryResult Windows.Storage.BulkAccess.FolderInformation::CreateItemQueryWithOptions(Windows.Storage.Search.QueryOptions)
    def create_item_query_with_options(self, query_options: windows_storage_search.QueryOptions, /) -> windows_storage_search.StorageItemQueryResult: ...
    # Windows.Foundation.IAsyncAction Windows.Storage.BulkAccess.FolderInformation::DeleteAsync(Windows.Storage.StorageDeleteOption)
    def delete_async(self, option: windows_storage.StorageDeleteOption, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Storage.BulkAccess.FolderInformation::DeleteAsync()
    def delete_async_overload_default_options(self) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.FileProperties.BasicProperties> Windows.Storage.BulkAccess.FolderInformation::GetBasicPropertiesAsync()
    def get_basic_properties_async(self) -> windows_foundation.IAsyncOperation[windows_storage_fileproperties.BasicProperties]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile> Windows.Storage.BulkAccess.FolderInformation::GetFileAsync(System.String)
    def get_file_async(self, name: str, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFile]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Storage.StorageFile>> Windows.Storage.BulkAccess.FolderInformation::GetFilesAsync(Windows.Storage.Search.CommonFileQuery,System.UInt32,System.UInt32)
    def get_files_async(self, query: windows_storage_search.CommonFileQuery, start_index: winrt.system.UInt32, max_items_to_retrieve: winrt.system.UInt32, /) -> windows_foundation.IAsyncOperation[typing.Sequence[windows_storage.StorageFile]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Storage.StorageFile>> Windows.Storage.BulkAccess.FolderInformation::GetFilesAsync()
    def get_files_async_overload_default_options_start_and_count(self) -> windows_foundation.IAsyncOperation[typing.Sequence[windows_storage.StorageFile]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Storage.StorageFile>> Windows.Storage.BulkAccess.FolderInformation::GetFilesAsync(Windows.Storage.Search.CommonFileQuery)
    def get_files_async_overload_default_start_and_count(self, query: windows_storage_search.CommonFileQuery, /) -> windows_foundation.IAsyncOperation[typing.Sequence[windows_storage.StorageFile]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFolder> Windows.Storage.BulkAccess.FolderInformation::GetFolderAsync(System.String)
    def get_folder_async(self, name: str, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFolder]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Storage.StorageFolder>> Windows.Storage.BulkAccess.FolderInformation::GetFoldersAsync(Windows.Storage.Search.CommonFolderQuery,System.UInt32,System.UInt32)
    def get_folders_async(self, query: windows_storage_search.CommonFolderQuery, start_index: winrt.system.UInt32, max_items_to_retrieve: winrt.system.UInt32, /) -> windows_foundation.IAsyncOperation[typing.Sequence[windows_storage.StorageFolder]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Storage.StorageFolder>> Windows.Storage.BulkAccess.FolderInformation::GetFoldersAsync()
    def get_folders_async_overload_default_options_start_and_count(self) -> windows_foundation.IAsyncOperation[typing.Sequence[windows_storage.StorageFolder]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Storage.StorageFolder>> Windows.Storage.BulkAccess.FolderInformation::GetFoldersAsync(Windows.Storage.Search.CommonFolderQuery)
    def get_folders_async_overload_default_start_and_count(self, query: windows_storage_search.CommonFolderQuery, /) -> windows_foundation.IAsyncOperation[typing.Sequence[windows_storage.StorageFolder]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.Search.IndexedState> Windows.Storage.BulkAccess.FolderInformation::GetIndexedStateAsync()
    def get_indexed_state_async(self) -> windows_foundation.IAsyncOperation[windows_storage_search.IndexedState]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.IStorageItem> Windows.Storage.BulkAccess.FolderInformation::GetItemAsync(System.String)
    def get_item_async(self, name: str, /) -> windows_foundation.IAsyncOperation[windows_storage.IStorageItem]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Storage.IStorageItem>> Windows.Storage.BulkAccess.FolderInformation::GetItemsAsync(System.UInt32,System.UInt32)
    def get_items_async(self, start_index: winrt.system.UInt32, max_items_to_retrieve: winrt.system.UInt32, /) -> windows_foundation.IAsyncOperation[typing.Sequence[windows_storage.IStorageItem]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Storage.IStorageItem>> Windows.Storage.BulkAccess.FolderInformation::GetItemsAsync()
    def get_items_async_overload_default_start_and_count(self) -> windows_foundation.IAsyncOperation[typing.Sequence[windows_storage.IStorageItem]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFolder> Windows.Storage.BulkAccess.FolderInformation::GetParentAsync()
    def get_parent_async(self) -> windows_foundation.IAsyncOperation[windows_storage.StorageFolder]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.FileProperties.StorageItemThumbnail> Windows.Storage.BulkAccess.FolderInformation::GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)
    def get_thumbnail_async(self, mode: windows_storage_fileproperties.ThumbnailMode, requested_size: winrt.system.UInt32, options: windows_storage_fileproperties.ThumbnailOptions, /) -> windows_foundation.IAsyncOperation[windows_storage_fileproperties.StorageItemThumbnail]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.FileProperties.StorageItemThumbnail> Windows.Storage.BulkAccess.FolderInformation::GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)
    def get_thumbnail_async_overload_default_options(self, mode: windows_storage_fileproperties.ThumbnailMode, requested_size: winrt.system.UInt32, /) -> windows_foundation.IAsyncOperation[windows_storage_fileproperties.StorageItemThumbnail]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.FileProperties.StorageItemThumbnail> Windows.Storage.BulkAccess.FolderInformation::GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)
    def get_thumbnail_async_overload_default_size_default_options(self, mode: windows_storage_fileproperties.ThumbnailMode, /) -> windows_foundation.IAsyncOperation[windows_storage_fileproperties.StorageItemThumbnail]: ...
    # System.Boolean Windows.Storage.BulkAccess.FolderInformation::IsCommonFileQuerySupported(Windows.Storage.Search.CommonFileQuery)
    def is_common_file_query_supported(self, query: windows_storage_search.CommonFileQuery, /) -> bool: ...
    # System.Boolean Windows.Storage.BulkAccess.FolderInformation::IsCommonFolderQuerySupported(Windows.Storage.Search.CommonFolderQuery)
    def is_common_folder_query_supported(self, query: windows_storage_search.CommonFolderQuery, /) -> bool: ...
    # System.Boolean Windows.Storage.BulkAccess.FolderInformation::IsEqual(Windows.Storage.IStorageItem)
    def is_equal(self, item: windows_storage.IStorageItem, /) -> bool: ...
    # System.Boolean Windows.Storage.BulkAccess.FolderInformation::IsOfType(Windows.Storage.StorageItemTypes)
    def is_of_type(self, type: windows_storage.StorageItemTypes, /) -> bool: ...
    # Windows.Foundation.IAsyncAction Windows.Storage.BulkAccess.FolderInformation::RenameAsync(System.String,Windows.Storage.NameCollisionOption)
    def rename_async(self, desired_name: str, option: windows_storage.NameCollisionOption, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Storage.BulkAccess.FolderInformation::RenameAsync(System.String)
    def rename_async_overload_default_options(self, desired_name: str, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.IStorageItem> Windows.Storage.BulkAccess.FolderInformation::TryGetItemAsync(System.String)
    def try_get_item_async(self, name: str, /) -> windows_foundation.IAsyncOperation[typing.Optional[windows_storage.IStorageItem]]: ...
    # Windows.Foundation.EventRegistrationToken Windows.Storage.BulkAccess.FolderInformation::add_PropertiesUpdated(Windows.Foundation.TypedEventHandler`2<Windows.Storage.BulkAccess.IStorageItemInformation,System.Object>)
    def add_properties_updated(self, changed_handler: windows_foundation.TypedEventHandler[IStorageItemInformation, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Storage.BulkAccess.FolderInformation::remove_PropertiesUpdated(Windows.Foundation.EventRegistrationToken)
    def remove_properties_updated(self, event_cookie: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Storage.BulkAccess.FolderInformation::add_ThumbnailUpdated(Windows.Foundation.TypedEventHandler`2<Windows.Storage.BulkAccess.IStorageItemInformation,System.Object>)
    def add_thumbnail_updated(self, changed_handler: windows_foundation.TypedEventHandler[IStorageItemInformation, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Storage.BulkAccess.FolderInformation::remove_ThumbnailUpdated(Windows.Foundation.EventRegistrationToken)
    def remove_thumbnail_updated(self, event_cookie: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Storage.FileProperties.BasicProperties Windows.Storage.BulkAccess.FolderInformation::get_BasicProperties()
    @_property
    def basic_properties(self) -> windows_storage_fileproperties.BasicProperties: ...
    # Windows.Storage.FileProperties.DocumentProperties Windows.Storage.BulkAccess.FolderInformation::get_DocumentProperties()
    @_property
    def document_properties(self) -> windows_storage_fileproperties.DocumentProperties: ...
    # Windows.Storage.FileProperties.ImageProperties Windows.Storage.BulkAccess.FolderInformation::get_ImageProperties()
    @_property
    def image_properties(self) -> windows_storage_fileproperties.ImageProperties: ...
    # Windows.Storage.FileProperties.MusicProperties Windows.Storage.BulkAccess.FolderInformation::get_MusicProperties()
    @_property
    def music_properties(self) -> windows_storage_fileproperties.MusicProperties: ...
    # Windows.Storage.FileProperties.StorageItemThumbnail Windows.Storage.BulkAccess.FolderInformation::get_Thumbnail()
    @_property
    def thumbnail(self) -> windows_storage_fileproperties.StorageItemThumbnail: ...
    # Windows.Storage.FileProperties.VideoProperties Windows.Storage.BulkAccess.FolderInformation::get_VideoProperties()
    @_property
    def video_properties(self) -> windows_storage_fileproperties.VideoProperties: ...
    # Windows.Storage.FileAttributes Windows.Storage.BulkAccess.FolderInformation::get_Attributes()
    @_property
    def attributes(self) -> windows_storage.FileAttributes: ...
    # Windows.Foundation.DateTime Windows.Storage.BulkAccess.FolderInformation::get_DateCreated()
    @_property
    def date_created(self) -> datetime.datetime: ...
    # System.String Windows.Storage.BulkAccess.FolderInformation::get_Name()
    @_property
    def name(self) -> str: ...
    # System.String Windows.Storage.BulkAccess.FolderInformation::get_Path()
    @_property
    def path(self) -> str: ...
    # System.String Windows.Storage.BulkAccess.FolderInformation::get_DisplayName()
    @_property
    def display_name(self) -> str: ...
    # System.String Windows.Storage.BulkAccess.FolderInformation::get_DisplayType()
    @_property
    def display_type(self) -> str: ...
    # System.String Windows.Storage.BulkAccess.FolderInformation::get_FolderRelativeId()
    @_property
    def folder_relative_id(self) -> str: ...
    # Windows.Storage.FileProperties.StorageItemContentProperties Windows.Storage.BulkAccess.FolderInformation::get_Properties()
    @_property
    def properties(self) -> windows_storage_fileproperties.StorageItemContentProperties: ...
    # Windows.Storage.StorageProvider Windows.Storage.BulkAccess.FolderInformation::get_Provider()
    @_property
    def provider(self) -> windows_storage.StorageProvider: ...

class IStorageItemInformation(winrt._winrt.IInspectable):
    # Windows.Foundation.EventRegistrationToken Windows.Storage.BulkAccess.IStorageItemInformation::add_PropertiesUpdated(Windows.Foundation.TypedEventHandler`2<Windows.Storage.BulkAccess.IStorageItemInformation,System.Object>)
    @abstractmethod
    def add_properties_updated(self, changed_handler: windows_foundation.TypedEventHandler[IStorageItemInformation, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Storage.BulkAccess.IStorageItemInformation::remove_PropertiesUpdated(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_properties_updated(self, event_cookie: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Storage.BulkAccess.IStorageItemInformation::add_ThumbnailUpdated(Windows.Foundation.TypedEventHandler`2<Windows.Storage.BulkAccess.IStorageItemInformation,System.Object>)
    @abstractmethod
    def add_thumbnail_updated(self, changed_handler: windows_foundation.TypedEventHandler[IStorageItemInformation, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Storage.BulkAccess.IStorageItemInformation::remove_ThumbnailUpdated(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_thumbnail_updated(self, event_cookie: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Storage.FileProperties.BasicProperties Windows.Storage.BulkAccess.IStorageItemInformation::get_BasicProperties()
    @_property
    @abstractmethod
    def basic_properties(self) -> windows_storage_fileproperties.BasicProperties: ...
    # Windows.Storage.FileProperties.DocumentProperties Windows.Storage.BulkAccess.IStorageItemInformation::get_DocumentProperties()
    @_property
    @abstractmethod
    def document_properties(self) -> windows_storage_fileproperties.DocumentProperties: ...
    # Windows.Storage.FileProperties.ImageProperties Windows.Storage.BulkAccess.IStorageItemInformation::get_ImageProperties()
    @_property
    @abstractmethod
    def image_properties(self) -> windows_storage_fileproperties.ImageProperties: ...
    # Windows.Storage.FileProperties.MusicProperties Windows.Storage.BulkAccess.IStorageItemInformation::get_MusicProperties()
    @_property
    @abstractmethod
    def music_properties(self) -> windows_storage_fileproperties.MusicProperties: ...
    # Windows.Storage.FileProperties.StorageItemThumbnail Windows.Storage.BulkAccess.IStorageItemInformation::get_Thumbnail()
    @_property
    @abstractmethod
    def thumbnail(self) -> windows_storage_fileproperties.StorageItemThumbnail: ...
    # Windows.Storage.FileProperties.VideoProperties Windows.Storage.BulkAccess.IStorageItemInformation::get_VideoProperties()
    @_property
    @abstractmethod
    def video_properties(self) -> windows_storage_fileproperties.VideoProperties: ...

