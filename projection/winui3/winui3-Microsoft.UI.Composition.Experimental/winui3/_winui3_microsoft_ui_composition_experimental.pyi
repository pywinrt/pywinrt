# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.windows.foundation.numerics as windows_foundation_numerics
import winrt.windows.graphics as windows_graphics
import winrt.windows.ui as windows_ui
import winui3.microsoft.ui.composition as microsoft_ui_composition

from winui3.microsoft.ui.composition.experimental import ExpExpressionNotificationProperty

Self = typing.TypeVar('Self')

@typing.final
class ExpCompositionVisualSurface_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Composition.CompositionVisualSurface Microsoft.UI.Composition.Experimental.ExpCompositionVisualSurface::CreateVisualSurface(Microsoft.UI.Composition.Compositor,Windows.Graphics.SizeInt32,System.Boolean)
    def create_visual_surface_with_realization_size(cls, compositor: microsoft_ui_composition.Compositor, realization_size: typing.Union[windows_graphics.SizeInt32, typing.Tuple[winrt.system.Int32, winrt.system.Int32]], frozen: bool, /) -> microsoft_ui_composition.CompositionVisualSurface: ...

@typing.final
class ExpCompositionVisualSurface(winrt.system.Object, metaclass=ExpCompositionVisualSurface_Static):
    pass

@typing.final
class _IExpCompositionPropertyChanged: ...

class IExpCompositionPropertyChanged(winrt._winrt.IInspectable):
    # System.Void Microsoft.UI.Composition.Experimental.IExpCompositionPropertyChanged::SetPropertyChangedListener(Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty,Microsoft.UI.Composition.Experimental.IExpCompositionPropertyChangedListener)
    @abstractmethod
    def set_property_changed_listener(self, property: ExpExpressionNotificationProperty, listener: IExpCompositionPropertyChangedListener, /) -> None: ...

@typing.final
class _IExpCompositionPropertyChangedListener: ...

class IExpCompositionPropertyChangedListener(winrt._winrt.IInspectable):
    # System.Void Microsoft.UI.Composition.Experimental.IExpCompositionPropertyChangedListener::NotifyBooleanPropertyChanged(Microsoft.UI.Composition.CompositionObject,Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty,System.Boolean)
    @abstractmethod
    def notify_boolean_property_changed(self, target: microsoft_ui_composition.CompositionObject, property: ExpExpressionNotificationProperty, value: bool, /) -> None: ...
    # System.Void Microsoft.UI.Composition.Experimental.IExpCompositionPropertyChangedListener::NotifyColorPropertyChanged(Microsoft.UI.Composition.CompositionObject,Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty,Windows.UI.Color)
    @abstractmethod
    def notify_color_property_changed(self, target: microsoft_ui_composition.CompositionObject, property: ExpExpressionNotificationProperty, value: typing.Union[windows_ui.Color, typing.Tuple[winrt.system.UInt8, winrt.system.UInt8, winrt.system.UInt8, winrt.system.UInt8]], /) -> None: ...
    # System.Void Microsoft.UI.Composition.Experimental.IExpCompositionPropertyChangedListener::NotifyMatrix3x2PropertyChanged(Microsoft.UI.Composition.CompositionObject,Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty,Windows.Foundation.Numerics.Matrix3x2)
    @abstractmethod
    def notify_matrix3x2_property_changed(self, target: microsoft_ui_composition.CompositionObject, property: ExpExpressionNotificationProperty, value: typing.Union[windows_foundation_numerics.Matrix3x2, typing.Tuple[winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single]], /) -> None: ...
    # System.Void Microsoft.UI.Composition.Experimental.IExpCompositionPropertyChangedListener::NotifyMatrix4x4PropertyChanged(Microsoft.UI.Composition.CompositionObject,Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty,Windows.Foundation.Numerics.Matrix4x4)
    @abstractmethod
    def notify_matrix4x4_property_changed(self, target: microsoft_ui_composition.CompositionObject, property: ExpExpressionNotificationProperty, value: typing.Union[windows_foundation_numerics.Matrix4x4, typing.Tuple[winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single]], /) -> None: ...
    # System.Void Microsoft.UI.Composition.Experimental.IExpCompositionPropertyChangedListener::NotifyReferencePropertyChanged(Microsoft.UI.Composition.CompositionObject,Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty)
    @abstractmethod
    def notify_reference_property_changed(self, target: microsoft_ui_composition.CompositionObject, property: ExpExpressionNotificationProperty, /) -> None: ...
    # System.Void Microsoft.UI.Composition.Experimental.IExpCompositionPropertyChangedListener::NotifySinglePropertyChanged(Microsoft.UI.Composition.CompositionObject,Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty,System.Single)
    @abstractmethod
    def notify_single_property_changed(self, target: microsoft_ui_composition.CompositionObject, property: ExpExpressionNotificationProperty, value: winrt.system.Single, /) -> None: ...
    # System.Void Microsoft.UI.Composition.Experimental.IExpCompositionPropertyChangedListener::NotifyVector2PropertyChanged(Microsoft.UI.Composition.CompositionObject,Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty,Windows.Foundation.Numerics.Vector2)
    @abstractmethod
    def notify_vector2_property_changed(self, target: microsoft_ui_composition.CompositionObject, property: ExpExpressionNotificationProperty, value: typing.Union[windows_foundation_numerics.Vector2, typing.Tuple[winrt.system.Single, winrt.system.Single]], /) -> None: ...
    # System.Void Microsoft.UI.Composition.Experimental.IExpCompositionPropertyChangedListener::NotifyVector3PropertyChanged(Microsoft.UI.Composition.CompositionObject,Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty,Windows.Foundation.Numerics.Vector3)
    @abstractmethod
    def notify_vector3_property_changed(self, target: microsoft_ui_composition.CompositionObject, property: ExpExpressionNotificationProperty, value: typing.Union[windows_foundation_numerics.Vector3, typing.Tuple[winrt.system.Single, winrt.system.Single, winrt.system.Single]], /) -> None: ...
    # System.Void Microsoft.UI.Composition.Experimental.IExpCompositionPropertyChangedListener::NotifyVector4PropertyChanged(Microsoft.UI.Composition.CompositionObject,Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty,Windows.Foundation.Numerics.Vector4)
    @abstractmethod
    def notify_vector4_property_changed(self, target: microsoft_ui_composition.CompositionObject, property: ExpExpressionNotificationProperty, value: typing.Union[windows_foundation_numerics.Vector4, typing.Tuple[winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single]], /) -> None: ...

@typing.final
class _IExpCompositor: ...

class IExpCompositor(winrt._winrt.IInspectable):
    # System.Object Microsoft.UI.Composition.Experimental.IExpCompositor::OpenSharedManipulationTransformFromHandle(System.UInt64)
    @abstractmethod
    def open_shared_manipulation_transform_from_handle(self, handle: winrt.system.UInt64, /) -> winrt.system.Object: ...

@typing.final
class _IExpVisual: ...

class IExpVisual(winrt._winrt.IInspectable):
    # System.Void Microsoft.UI.Composition.Experimental.IExpVisual::SetInteraction(System.Object)
    @abstractmethod
    def set_interaction(self, interaction: winrt.system.Object, /) -> None: ...

