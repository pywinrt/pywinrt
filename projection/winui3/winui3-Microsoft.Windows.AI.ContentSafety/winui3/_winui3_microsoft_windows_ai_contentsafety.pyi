# WARNING: Please don't edit this file. It was generated by Python/WinRT v3.2.1

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system

from winui3.microsoft.windows.ai.contentsafety import SeverityLevel

Self = typing.TypeVar('Self')

@typing.final
class ContentFilterOptions(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Microsoft.Windows.AI.ContentSafety.TextContentFilterSeverity Microsoft.Windows.AI.ContentSafety.ContentFilterOptions::get_ResponseMaxAllowedSeverityLevel()
    @_property
    def response_max_allowed_severity_level(self) -> TextContentFilterSeverity: ...
    # System.Void Microsoft.Windows.AI.ContentSafety.ContentFilterOptions::put_ResponseMaxAllowedSeverityLevel(Microsoft.Windows.AI.ContentSafety.TextContentFilterSeverity)
    @response_max_allowed_severity_level.setter
    def response_max_allowed_severity_level(self, value: TextContentFilterSeverity) -> None: ...
    # Microsoft.Windows.AI.ContentSafety.TextContentFilterSeverity Microsoft.Windows.AI.ContentSafety.ContentFilterOptions::get_PromptMaxAllowedSeverityLevel()
    @_property
    def prompt_max_allowed_severity_level(self) -> TextContentFilterSeverity: ...
    # System.Void Microsoft.Windows.AI.ContentSafety.ContentFilterOptions::put_PromptMaxAllowedSeverityLevel(Microsoft.Windows.AI.ContentSafety.TextContentFilterSeverity)
    @prompt_max_allowed_severity_level.setter
    def prompt_max_allowed_severity_level(self, value: TextContentFilterSeverity) -> None: ...
    # Microsoft.Windows.AI.ContentSafety.ImageContentFilterSeverity Microsoft.Windows.AI.ContentSafety.ContentFilterOptions::get_ImageMaxAllowedSeverityLevel()
    @_property
    def image_max_allowed_severity_level(self) -> ImageContentFilterSeverity: ...
    # System.Void Microsoft.Windows.AI.ContentSafety.ContentFilterOptions::put_ImageMaxAllowedSeverityLevel(Microsoft.Windows.AI.ContentSafety.ImageContentFilterSeverity)
    @image_max_allowed_severity_level.setter
    def image_max_allowed_severity_level(self, value: ImageContentFilterSeverity) -> None: ...

@typing.final
class ImageContentFilterSeverity(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], severity_for_a_ll_categories: SeverityLevel) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Microsoft.Windows.AI.ContentSafety.SeverityLevel Microsoft.Windows.AI.ContentSafety.ImageContentFilterSeverity::get_ViolentContentLevel()
    @_property
    def violent_content_level(self) -> SeverityLevel: ...
    # System.Void Microsoft.Windows.AI.ContentSafety.ImageContentFilterSeverity::put_ViolentContentLevel(Microsoft.Windows.AI.ContentSafety.SeverityLevel)
    @violent_content_level.setter
    def violent_content_level(self, value: SeverityLevel) -> None: ...
    # Microsoft.Windows.AI.ContentSafety.SeverityLevel Microsoft.Windows.AI.ContentSafety.ImageContentFilterSeverity::get_RacyContentLevel()
    @_property
    def racy_content_level(self) -> SeverityLevel: ...
    # System.Void Microsoft.Windows.AI.ContentSafety.ImageContentFilterSeverity::put_RacyContentLevel(Microsoft.Windows.AI.ContentSafety.SeverityLevel)
    @racy_content_level.setter
    def racy_content_level(self, value: SeverityLevel) -> None: ...
    # Microsoft.Windows.AI.ContentSafety.SeverityLevel Microsoft.Windows.AI.ContentSafety.ImageContentFilterSeverity::get_GoryContentLevel()
    @_property
    def gory_content_level(self) -> SeverityLevel: ...
    # System.Void Microsoft.Windows.AI.ContentSafety.ImageContentFilterSeverity::put_GoryContentLevel(Microsoft.Windows.AI.ContentSafety.SeverityLevel)
    @gory_content_level.setter
    def gory_content_level(self, value: SeverityLevel) -> None: ...
    # Microsoft.Windows.AI.ContentSafety.SeverityLevel Microsoft.Windows.AI.ContentSafety.ImageContentFilterSeverity::get_AdultContentLevel()
    @_property
    def adult_content_level(self) -> SeverityLevel: ...
    # System.Void Microsoft.Windows.AI.ContentSafety.ImageContentFilterSeverity::put_AdultContentLevel(Microsoft.Windows.AI.ContentSafety.SeverityLevel)
    @adult_content_level.setter
    def adult_content_level(self, value: SeverityLevel) -> None: ...

@typing.final
class TextContentFilterSeverity(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], severity_for_all_categories: SeverityLevel) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Microsoft.Windows.AI.ContentSafety.SeverityLevel Microsoft.Windows.AI.ContentSafety.TextContentFilterSeverity::get_Violent()
    @_property
    def violent(self) -> SeverityLevel: ...
    # System.Void Microsoft.Windows.AI.ContentSafety.TextContentFilterSeverity::put_Violent(Microsoft.Windows.AI.ContentSafety.SeverityLevel)
    @violent.setter
    def violent(self, value: SeverityLevel) -> None: ...
    # Microsoft.Windows.AI.ContentSafety.SeverityLevel Microsoft.Windows.AI.ContentSafety.TextContentFilterSeverity::get_Sexual()
    @_property
    def sexual(self) -> SeverityLevel: ...
    # System.Void Microsoft.Windows.AI.ContentSafety.TextContentFilterSeverity::put_Sexual(Microsoft.Windows.AI.ContentSafety.SeverityLevel)
    @sexual.setter
    def sexual(self, value: SeverityLevel) -> None: ...
    # Microsoft.Windows.AI.ContentSafety.SeverityLevel Microsoft.Windows.AI.ContentSafety.TextContentFilterSeverity::get_SelfHarm()
    @_property
    def self_harm(self) -> SeverityLevel: ...
    # System.Void Microsoft.Windows.AI.ContentSafety.TextContentFilterSeverity::put_SelfHarm(Microsoft.Windows.AI.ContentSafety.SeverityLevel)
    @self_harm.setter
    def self_harm(self, value: SeverityLevel) -> None: ...
    # Microsoft.Windows.AI.ContentSafety.SeverityLevel Microsoft.Windows.AI.ContentSafety.TextContentFilterSeverity::get_Hate()
    @_property
    def hate(self) -> SeverityLevel: ...
    # System.Void Microsoft.Windows.AI.ContentSafety.TextContentFilterSeverity::put_Hate(Microsoft.Windows.AI.ContentSafety.SeverityLevel)
    @hate.setter
    def hate(self, value: SeverityLevel) -> None: ...

