# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.ui.composition as windows_ui_composition
import winui3.microsoft.ui as microsoft_ui

Self = typing.TypeVar('Self')

@typing.final
class DesignerOutputHost_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Designer.DesignerOutputHost Microsoft.UI.Designer.DesignerOutputHost::CreateForWindowId(Windows.UI.Composition.Compositor,Microsoft.UI.WindowId)
    def create_for_window_id(cls, compositor: windows_ui_composition.Compositor, window_id: typing.Union[microsoft_ui.WindowId, typing.Tuple[winrt.system.UInt64]], /) -> DesignerOutputHost: ...

@typing.final
class DesignerOutputHost(winrt.system.Object, windows_foundation.IClosable, metaclass=DesignerOutputHost_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Microsoft.UI.Designer.DesignerOutputHost::Close()
    def close(self) -> None: ...
    # Microsoft.UI.WindowId Microsoft.UI.Designer.DesignerOutputHost::get_WindowId()
    @_property
    def window_id(self) -> microsoft_ui.WindowId: ...

