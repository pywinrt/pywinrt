# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.foundation.numerics as windows_foundation_numerics
import winrt.windows.graphics as windows_graphics
import winrt.windows.ui as windows_ui
import winrt.windows.ui.composition as windows_ui_composition
import winrt.windows.ui.core as windows_ui_core
import winui3.microsoft.ui as microsoft_ui
import winui3.microsoft.ui.composition as microsoft_ui_composition
import winui3.microsoft.ui.dispatching as microsoft_ui_dispatching

from winui3.microsoft.ui.content import ContentAutomationOptions, ContentCoordinateRoundingMode, ContentDisplayOrientations, ContentLayoutDirection, ContentSizePolicy

Self = typing.TypeVar('Self')

@typing.final
class ChildSiteLink_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Content.ChildSiteLink Microsoft.UI.Content.ChildSiteLink::Create(Microsoft.UI.Content.ContentIsland,Microsoft.UI.Composition.ContainerVisual)
    def create(cls, parent: ContentIsland, placement_visual: microsoft_ui_composition.ContainerVisual, /) -> ChildSiteLink: ...
    # Microsoft.UI.Content.ChildSiteLink Microsoft.UI.Content.ChildSiteLink::CreateForSystemVisual(Microsoft.UI.Content.ContentIsland,Windows.UI.Composition.ContainerVisual)
    def create_for_system_visual(cls, parent: ContentIsland, placement_visual: windows_ui_composition.ContainerVisual, /) -> ChildSiteLink: ...

@typing.final
class ChildSiteLink(winrt.system.Object, IContentSiteLink, IContentSiteInput, IContentSiteAutomation, microsoft_ui.IClosableNotifier, windows_foundation.IClosable, metaclass=ChildSiteLink_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Microsoft.UI.Content.ChildSiteLink::Close()
    def close(self) -> None: ...
    # System.Void Microsoft.UI.Content.ChildSiteLink::Connect(Microsoft.UI.Content.ContentIsland)
    def connect(self, content: ContentIsland, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ChildSiteLink::add_Closed(Microsoft.UI.ClosableNotifierHandler)
    def add_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.ChildSiteLink::remove_Closed(Windows.Foundation.EventRegistrationToken)
    def remove_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ChildSiteLink::add_FrameworkClosed(Microsoft.UI.ClosableNotifierHandler)
    def add_framework_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.ChildSiteLink::remove_FrameworkClosed(Windows.Foundation.EventRegistrationToken)
    def remove_framework_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ChildSiteLink::add_FragmentRootAutomationProviderRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteAutomation,Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>)
    def add_fragment_root_automation_provider_requested(self, handler: windows_foundation.TypedEventHandler[IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.ChildSiteLink::remove_FragmentRootAutomationProviderRequested(Windows.Foundation.EventRegistrationToken)
    def remove_fragment_root_automation_provider_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ChildSiteLink::add_NextSiblingAutomationProviderRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteAutomation,Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>)
    def add_next_sibling_automation_provider_requested(self, handler: windows_foundation.TypedEventHandler[IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.ChildSiteLink::remove_NextSiblingAutomationProviderRequested(Windows.Foundation.EventRegistrationToken)
    def remove_next_sibling_automation_provider_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ChildSiteLink::add_ParentAutomationProviderRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteAutomation,Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>)
    def add_parent_automation_provider_requested(self, handler: windows_foundation.TypedEventHandler[IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.ChildSiteLink::remove_ParentAutomationProviderRequested(Windows.Foundation.EventRegistrationToken)
    def remove_parent_automation_provider_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ChildSiteLink::add_PreviousSiblingAutomationProviderRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteAutomation,Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>)
    def add_previous_sibling_automation_provider_requested(self, handler: windows_foundation.TypedEventHandler[IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.ChildSiteLink::remove_PreviousSiblingAutomationProviderRequested(Windows.Foundation.EventRegistrationToken)
    def remove_previous_sibling_automation_provider_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.Numerics.Matrix4x4 Microsoft.UI.Content.ChildSiteLink::get_LocalToParentTransformMatrix()
    @_property
    def local_to_parent_transform_matrix(self) -> windows_foundation_numerics.Matrix4x4: ...
    # System.Void Microsoft.UI.Content.ChildSiteLink::put_LocalToParentTransformMatrix(Windows.Foundation.Numerics.Matrix4x4)
    @local_to_parent_transform_matrix.setter
    def local_to_parent_transform_matrix(self, value: typing.Union[windows_foundation_numerics.Matrix4x4, typing.Tuple[winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single]]) -> None: ...
    # Windows.Foundation.Numerics.Vector2 Microsoft.UI.Content.ChildSiteLink::get_ActualSize()
    @_property
    def actual_size(self) -> windows_foundation_numerics.Vector2: ...
    # System.Void Microsoft.UI.Content.ChildSiteLink::put_ActualSize(Windows.Foundation.Numerics.Vector2)
    @actual_size.setter
    def actual_size(self, value: typing.Union[windows_foundation_numerics.Vector2, typing.Tuple[winrt.system.Single, winrt.system.Single]]) -> None: ...
    # Microsoft.UI.Dispatching.DispatcherQueue Microsoft.UI.Content.ChildSiteLink::get_DispatcherQueue()
    @_property
    def dispatcher_queue(self) -> microsoft_ui_dispatching.DispatcherQueue: ...
    # Microsoft.UI.Content.ContentSiteView Microsoft.UI.Content.ChildSiteLink::get_SiteView()
    @_property
    def site_view(self) -> ContentSiteView: ...
    # Microsoft.UI.Content.ContentAutomationOptions Microsoft.UI.Content.ChildSiteLink::get_AutomationOption()
    @_property
    def automation_option(self) -> ContentAutomationOptions: ...
    # System.Void Microsoft.UI.Content.ChildSiteLink::put_AutomationOption(Microsoft.UI.Content.ContentAutomationOptions)
    @automation_option.setter
    def automation_option(self, value: ContentAutomationOptions) -> None: ...
    # System.Object Microsoft.UI.Content.ChildSiteLink::get_AutomationProvider()
    @_property
    def automation_provider(self) -> winrt.system.Object: ...
    # System.Boolean Microsoft.UI.Content.ChildSiteLink::get_ProcessesPointerInput()
    @_property
    def processes_pointer_input(self) -> bool: ...
    # System.Void Microsoft.UI.Content.ChildSiteLink::put_ProcessesPointerInput(System.Boolean)
    @processes_pointer_input.setter
    def processes_pointer_input(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Content.ChildSiteLink::get_ProcessesKeyboardInput()
    @_property
    def processes_keyboard_input(self) -> bool: ...
    # System.Void Microsoft.UI.Content.ChildSiteLink::put_ProcessesKeyboardInput(System.Boolean)
    @processes_keyboard_input.setter
    def processes_keyboard_input(self, value: bool) -> None: ...
    # Microsoft.UI.Content.ContentIsland Microsoft.UI.Content.ChildSiteLink::get_Parent()
    @_property
    def parent(self) -> ContentIsland: ...
    # System.Boolean Microsoft.UI.Content.ChildSiteLink::get_IsClosed()
    @_property
    def is_closed(self) -> bool: ...

@typing.final
class ContentAppWindowBridge_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Content.ContentAppWindowBridge Microsoft.UI.Content.ContentAppWindowBridge::GetForWindowId(Microsoft.UI.WindowId)
    def get_for_window_id(cls, child_window_id: typing.Union[microsoft_ui.WindowId, typing.Tuple[winrt.system.UInt64]], /) -> ContentAppWindowBridge: ...

@typing.final
class ContentAppWindowBridge(winrt.system.Object, IContentNodeOwner, metaclass=ContentAppWindowBridge_Static):
    pass

class ContentCoordinateConverter_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Content.ContentCoordinateConverter Microsoft.UI.Content.ContentCoordinateConverter::CreateForWindowId(Microsoft.UI.WindowId)
    def create_for_window_id(cls, window_id: typing.Union[microsoft_ui.WindowId, typing.Tuple[winrt.system.UInt64]], /) -> ContentCoordinateConverter: ...

class ContentCoordinateConverter(winrt.system.Object, metaclass=ContentCoordinateConverter_Static):
    @typing.final
    # Windows.Graphics.PointInt32 Microsoft.UI.Content.ContentCoordinateConverter::ConvertLocalToScreen(Windows.Foundation.Point)
    def convert_local_to_screen_with_point(self, local_point: typing.Union[windows_foundation.Point, typing.Tuple[winrt.system.Single, winrt.system.Single]], /) -> windows_graphics.PointInt32: ...
    @typing.final
    # Windows.Graphics.PointInt32[] Microsoft.UI.Content.ContentCoordinateConverter::ConvertLocalToScreen(Windows.Foundation.Point[])
    def convert_local_to_screen_with_points(self, local_points: typing.Union[winrt.system.Array[windows_foundation.Point], winrt.system.ReadableBuffer], /) -> winrt.system.Array[windows_graphics.PointInt32]: ...
    @typing.final
    # Windows.Graphics.PointInt32[] Microsoft.UI.Content.ContentCoordinateConverter::ConvertLocalToScreen(Windows.Foundation.Point[],Microsoft.UI.Content.ContentCoordinateRoundingMode)
    def convert_local_to_screen_with_points_and_rounding_mode(self, local_points: typing.Union[winrt.system.Array[windows_foundation.Point], winrt.system.ReadableBuffer], rounding_mode: ContentCoordinateRoundingMode, /) -> winrt.system.Array[windows_graphics.PointInt32]: ...
    @typing.final
    # Windows.Graphics.RectInt32 Microsoft.UI.Content.ContentCoordinateConverter::ConvertLocalToScreen(Windows.Foundation.Rect)
    def convert_local_to_screen_with_rect(self, local_rect: typing.Union[windows_foundation.Rect, typing.Tuple[winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single]], /) -> windows_graphics.RectInt32: ...
    @typing.final
    # Windows.Foundation.Point Microsoft.UI.Content.ContentCoordinateConverter::ConvertScreenToLocal(Windows.Graphics.PointInt32)
    def convert_screen_to_local_with_point(self, screen_point: typing.Union[windows_graphics.PointInt32, typing.Tuple[winrt.system.Int32, winrt.system.Int32]], /) -> windows_foundation.Point: ...
    @typing.final
    # Windows.Foundation.Point[] Microsoft.UI.Content.ContentCoordinateConverter::ConvertScreenToLocal(Windows.Graphics.PointInt32[])
    def convert_screen_to_local_with_points(self, screen_points: typing.Union[winrt.system.Array[windows_graphics.PointInt32], winrt.system.ReadableBuffer], /) -> winrt.system.Array[windows_foundation.Point]: ...
    @typing.final
    # Windows.Foundation.Rect Microsoft.UI.Content.ContentCoordinateConverter::ConvertScreenToLocal(Windows.Graphics.RectInt32)
    def convert_screen_to_local_with_rect(self, screen_rect: typing.Union[windows_graphics.RectInt32, typing.Tuple[winrt.system.Int32, winrt.system.Int32, winrt.system.Int32, winrt.system.Int32]], /) -> windows_foundation.Rect: ...

@typing.final
class ContentDeferral(winrt.system.Object):
    # System.Void Microsoft.UI.Content.ContentDeferral::Complete()
    def complete(self) -> None: ...

@typing.final
class ContentEnvironmentSettingChangedEventArgs(winrt.system.Object):
    # System.String Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs::get_SettingName()
    @_property
    def setting_name(self) -> str: ...

@typing.final
class ContentEnvironmentStateChangedEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs::get_DidAppWindowIdChange()
    @_property
    def did_app_window_id_change(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs::get_DidDisplayIdChange()
    @_property
    def did_display_id_change(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs::get_DidDisplayScaleChange()
    @_property
    def did_display_scale_change(self) -> bool: ...

@typing.final
class ContentExternalBackdropLink_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Content.ContentExternalBackdropLink Microsoft.UI.Content.ContentExternalBackdropLink::Create(Microsoft.UI.Composition.Compositor)
    def create(cls, compositor: microsoft_ui_composition.Compositor, /) -> ContentExternalBackdropLink: ...

@typing.final
class ContentExternalBackdropLink(winrt.system.Object, microsoft_ui_composition.ICompositionSupportsSystemBackdrop, windows_foundation.IClosable, metaclass=ContentExternalBackdropLink_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Microsoft.UI.Content.ContentExternalBackdropLink::Close()
    def close(self) -> None: ...
    # Windows.UI.Composition.CompositionBrush Microsoft.UI.Content.ContentExternalBackdropLink::get_SystemBackdrop()
    @_property
    def system_backdrop(self) -> windows_ui_composition.CompositionBrush: ...
    # System.Void Microsoft.UI.Content.ContentExternalBackdropLink::put_SystemBackdrop(Windows.UI.Composition.CompositionBrush)
    @system_backdrop.setter
    def system_backdrop(self, value: windows_ui_composition.CompositionBrush) -> None: ...
    # Microsoft.UI.Composition.CompositionBorderMode Microsoft.UI.Content.ContentExternalBackdropLink::get_ExternalBackdropBorderMode()
    @_property
    def external_backdrop_border_mode(self) -> microsoft_ui_composition.CompositionBorderMode: ...
    # System.Void Microsoft.UI.Content.ContentExternalBackdropLink::put_ExternalBackdropBorderMode(Microsoft.UI.Composition.CompositionBorderMode)
    @external_backdrop_border_mode.setter
    def external_backdrop_border_mode(self, value: microsoft_ui_composition.CompositionBorderMode) -> None: ...
    # Microsoft.UI.Dispatching.DispatcherQueue Microsoft.UI.Content.ContentExternalBackdropLink::get_DispatcherQueue()
    @_property
    def dispatcher_queue(self) -> microsoft_ui_dispatching.DispatcherQueue: ...
    # Microsoft.UI.Composition.Visual Microsoft.UI.Content.ContentExternalBackdropLink::get_PlacementVisual()
    @_property
    def placement_visual(self) -> microsoft_ui_composition.Visual: ...

@typing.final
class ContentExternalOutputLink_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Content.ContentExternalOutputLink Microsoft.UI.Content.ContentExternalOutputLink::Create(Microsoft.UI.Composition.Compositor)
    def create(cls, compositor: microsoft_ui_composition.Compositor, /) -> ContentExternalOutputLink: ...
    # System.Boolean Microsoft.UI.Content.ContentExternalOutputLink::IsSupported()
    def is_supported(cls) -> bool: ...

@typing.final
class ContentExternalOutputLink(winrt.system.Object, windows_foundation.IClosable, metaclass=ContentExternalOutputLink_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Microsoft.UI.Content.ContentExternalOutputLink::Close()
    def close(self) -> None: ...
    # System.Boolean Microsoft.UI.Content.ContentExternalOutputLink::get_IsAboveContent()
    @_property
    def is_above_content(self) -> bool: ...
    # System.Void Microsoft.UI.Content.ContentExternalOutputLink::put_IsAboveContent(System.Boolean)
    @is_above_content.setter
    def is_above_content(self, value: bool) -> None: ...
    # Microsoft.UI.Composition.CompositionBorderMode Microsoft.UI.Content.ContentExternalOutputLink::get_ExternalOutputBorderMode()
    @_property
    def external_output_border_mode(self) -> microsoft_ui_composition.CompositionBorderMode: ...
    # System.Void Microsoft.UI.Content.ContentExternalOutputLink::put_ExternalOutputBorderMode(Microsoft.UI.Composition.CompositionBorderMode)
    @external_output_border_mode.setter
    def external_output_border_mode(self, value: microsoft_ui_composition.CompositionBorderMode) -> None: ...
    # Windows.UI.Color Microsoft.UI.Content.ContentExternalOutputLink::get_BackgroundColor()
    @_property
    def background_color(self) -> windows_ui.Color: ...
    # System.Void Microsoft.UI.Content.ContentExternalOutputLink::put_BackgroundColor(Windows.UI.Color)
    @background_color.setter
    def background_color(self, value: typing.Union[windows_ui.Color, typing.Tuple[winrt.system.UInt8, winrt.system.UInt8, winrt.system.UInt8, winrt.system.UInt8]]) -> None: ...
    # Microsoft.UI.Dispatching.DispatcherQueue Microsoft.UI.Content.ContentExternalOutputLink::get_DispatcherQueue()
    @_property
    def dispatcher_queue(self) -> microsoft_ui_dispatching.DispatcherQueue: ...
    # Microsoft.UI.Composition.Visual Microsoft.UI.Content.ContentExternalOutputLink::get_PlacementVisual()
    @_property
    def placement_visual(self) -> microsoft_ui_composition.Visual: ...

class ContentIsland_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Content.ContentIsland Microsoft.UI.Content.ContentIsland::Create(Microsoft.UI.Composition.Visual)
    def create(cls, root: microsoft_ui_composition.Visual, /) -> ContentIsland: ...
    # Microsoft.UI.Content.ContentIsland Microsoft.UI.Content.ContentIsland::CreateForSystemVisual(Microsoft.UI.Dispatching.DispatcherQueue,Windows.UI.Composition.Visual)
    def create_for_system_visual(cls, queue: microsoft_ui_dispatching.DispatcherQueue, root: windows_ui_composition.Visual, /) -> ContentIsland: ...
    # Microsoft.UI.Content.ContentIsland[] Microsoft.UI.Content.ContentIsland::FindAllForCompositor(Microsoft.UI.Composition.Compositor)
    def find_all_for_compositor(cls, compositor: microsoft_ui_composition.Compositor, /) -> winrt.system.Array[ContentIsland]: ...
    # Microsoft.UI.Content.ContentIsland[] Microsoft.UI.Content.ContentIsland::FindAllForCurrentThread()
    def find_all_for_current_thread(cls) -> winrt.system.Array[ContentIsland]: ...
    # Microsoft.UI.Content.ContentIsland[] Microsoft.UI.Content.ContentIsland::FindAllForSystemCompositor(Windows.UI.Composition.Compositor)
    def find_all_for_system_compositor(cls, compositor: windows_ui_composition.Compositor, /) -> winrt.system.Array[ContentIsland]: ...
    # Microsoft.UI.Content.ContentIsland Microsoft.UI.Content.ContentIsland::GetBySystemVisual(Windows.UI.Composition.Visual)
    def get_by_system_visual(cls, child: windows_ui_composition.Visual, /) -> ContentIsland: ...
    # Microsoft.UI.Content.ContentIsland Microsoft.UI.Content.ContentIsland::GetByVisual(Microsoft.UI.Composition.Visual)
    def get_by_visual(cls, child: microsoft_ui_composition.Visual, /) -> ContentIsland: ...
    # Microsoft.UI.Content.ContentIsland Microsoft.UI.Content.ContentIsland::GetFromId(System.UInt64)
    def get_from_id(cls, id: winrt.system.UInt64, /) -> ContentIsland: ...

class ContentIsland(winrt.system.Object, IContentIslandEndpointConnectionPrivate, microsoft_ui_composition.ICompositionSupportsSystemBackdrop, microsoft_ui.IClosableNotifier, windows_foundation.IClosable, metaclass=ContentIsland_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Microsoft.UI.Content.ContentIsland::Close()
    def close(self) -> None: ...
    # System.Void Microsoft.UI.Content.ContentIsland::ConnectRemoteEndpoint(System.String)
    def connect_remote_endpoint(self, site_connection_info: str, /) -> None: ...
    @typing.final
    # System.Object Microsoft.UI.Content.ContentIsland::GetAutomationHostProvider()
    def get_automation_host_provider(self) -> winrt.system.Object: ...
    @typing.final
    # Microsoft.UI.Content.ContentDeferral Microsoft.UI.Content.ContentIsland::GetStateChangeDeferral()
    def get_state_change_deferral(self) -> ContentDeferral: ...
    @typing.final
    # System.Void Microsoft.UI.Content.ContentIsland::RequestSize(Windows.Foundation.Numerics.Vector2)
    def request_size(self, size: typing.Union[windows_foundation_numerics.Vector2, typing.Tuple[winrt.system.Single, winrt.system.Single]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ContentIsland::add_AutomationProviderRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.ContentIsland,Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs>)
    def add_automation_provider_requested(self, handler: windows_foundation.TypedEventHandler[ContentIsland, ContentIslandAutomationProviderRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Content.ContentIsland::remove_AutomationProviderRequested(Windows.Foundation.EventRegistrationToken)
    def remove_automation_provider_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ContentIsland::add_StateChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.ContentIsland,Microsoft.UI.Content.ContentIslandStateChangedEventArgs>)
    def add_state_changed(self, handler: windows_foundation.TypedEventHandler[ContentIsland, ContentIslandStateChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Content.ContentIsland::remove_StateChanged(Windows.Foundation.EventRegistrationToken)
    def remove_state_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ContentIsland::add_Connected(Windows.Foundation.EventHandler`1<Microsoft.UI.Content.ContentIsland>)
    def add_connected(self, handler: windows_foundation.EventHandler[ContentIsland], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Content.ContentIsland::remove_Connected(Windows.Foundation.EventRegistrationToken)
    def remove_connected(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ContentIsland::add_Disconnected(Windows.Foundation.EventHandler`1<Microsoft.UI.Content.ContentIsland>)
    def add_disconnected(self, handler: windows_foundation.EventHandler[ContentIsland], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Content.ContentIsland::remove_Disconnected(Windows.Foundation.EventRegistrationToken)
    def remove_disconnected(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ContentIsland::add_Closed(Microsoft.UI.ClosableNotifierHandler)
    def add_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Content.ContentIsland::remove_Closed(Windows.Foundation.EventRegistrationToken)
    def remove_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ContentIsland::add_FrameworkClosed(Microsoft.UI.ClosableNotifierHandler)
    def add_framework_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Content.ContentIsland::remove_FrameworkClosed(Windows.Foundation.EventRegistrationToken)
    def remove_framework_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.UI.Composition.CompositionBrush Microsoft.UI.Content.ContentIsland::get_SystemBackdrop()
    @_property
    def system_backdrop(self) -> windows_ui_composition.CompositionBrush: ...
    # System.Void Microsoft.UI.Content.ContentIsland::put_SystemBackdrop(Windows.UI.Composition.CompositionBrush)
    @system_backdrop.setter
    @typing.final
    def system_backdrop(self, value: windows_ui_composition.CompositionBrush) -> None: ...
    # System.Boolean Microsoft.UI.Content.ContentIsland::get_IsIslandVisible()
    @_property
    def is_island_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Content.ContentIsland::put_IsIslandVisible(System.Boolean)
    @is_island_visible.setter
    @typing.final
    def is_island_visible(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Content.ContentIsland::get_IsIslandEnabled()
    @_property
    def is_island_enabled(self) -> bool: ...
    # System.Void Microsoft.UI.Content.ContentIsland::put_IsIslandEnabled(System.Boolean)
    @is_island_enabled.setter
    @typing.final
    def is_island_enabled(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Content.ContentIsland::get_IsHitTestVisibleWhenTransparent()
    @_property
    def is_hit_test_visible_when_transparent(self) -> bool: ...
    # System.Void Microsoft.UI.Content.ContentIsland::put_IsHitTestVisibleWhenTransparent(System.Boolean)
    @is_hit_test_visible_when_transparent.setter
    @typing.final
    def is_hit_test_visible_when_transparent(self, value: bool) -> None: ...
    # System.Object Microsoft.UI.Content.ContentIsland::get_AppData()
    @_property
    def app_data(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Content.ContentIsland::put_AppData(System.Object)
    @app_data.setter
    @typing.final
    def app_data(self, value: winrt.system.Object) -> None: ...
    # Windows.Foundation.Numerics.Vector2 Microsoft.UI.Content.ContentIsland::get_ActualSize()
    @_property
    @typing.final
    def actual_size(self) -> windows_foundation_numerics.Vector2: ...
    # Microsoft.UI.Content.ContentCoordinateConverter Microsoft.UI.Content.ContentIsland::get_CoordinateConverter()
    @_property
    @typing.final
    def coordinate_converter(self) -> ContentCoordinateConverter: ...
    # Windows.Foundation.Collections.IPropertySet Microsoft.UI.Content.ContentIsland::get_CustomProperties()
    @_property
    @typing.final
    def custom_properties(self) -> windows_foundation_collections.IPropertySet: ...
    # Microsoft.UI.Dispatching.DispatcherQueue Microsoft.UI.Content.ContentIsland::get_DispatcherQueue()
    @_property
    @typing.final
    def dispatcher_queue(self) -> microsoft_ui_dispatching.DispatcherQueue: ...
    # Microsoft.UI.Content.ContentIslandEnvironment Microsoft.UI.Content.ContentIsland::get_Environment()
    @_property
    @typing.final
    def environment(self) -> ContentIslandEnvironment: ...
    # System.UInt64 Microsoft.UI.Content.ContentIsland::get_Id()
    @_property
    @typing.final
    def id(self) -> winrt.system.UInt64: ...
    # System.Boolean Microsoft.UI.Content.ContentIsland::get_IsConnected()
    @_property
    @typing.final
    def is_connected(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.ContentIsland::get_IsSiteEnabled()
    @_property
    @typing.final
    def is_site_enabled(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.ContentIsland::get_IsSiteVisible()
    @_property
    @typing.final
    def is_site_visible(self) -> bool: ...
    # Microsoft.UI.Content.ContentLayoutDirection Microsoft.UI.Content.ContentIsland::get_LayoutDirection()
    @_property
    @typing.final
    def layout_direction(self) -> ContentLayoutDirection: ...
    # System.Single Microsoft.UI.Content.ContentIsland::get_RasterizationScale()
    @_property
    @typing.final
    def rasterization_scale(self) -> winrt.system.Single: ...
    # Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Content.ChildSiteLink> Microsoft.UI.Content.ContentIsland::get_Children()
    @_property
    @typing.final
    def children(self) -> typing.Iterable[ChildSiteLink]: ...
    # Windows.Foundation.Numerics.Matrix4x4 Microsoft.UI.Content.ContentIsland::get_LocalToClientTransformMatrix()
    @_property
    @typing.final
    def local_to_client_transform_matrix(self) -> windows_foundation_numerics.Matrix4x4: ...
    # Windows.Foundation.Numerics.Matrix4x4 Microsoft.UI.Content.ContentIsland::get_LocalToParentTransformMatrix()
    @_property
    @typing.final
    def local_to_parent_transform_matrix(self) -> windows_foundation_numerics.Matrix4x4: ...
    # Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Content.DesktopPopupSiteBridge> Microsoft.UI.Content.ContentIsland::get_Popups()
    @_property
    @typing.final
    def popups(self) -> typing.Iterable[DesktopPopupSiteBridge]: ...
    # System.Boolean Microsoft.UI.Content.ContentIsland::get_ProcessesKeyboardInput()
    @_property
    @typing.final
    def processes_keyboard_input(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.ContentIsland::get_ProcessesPointerInput()
    @_property
    @typing.final
    def processes_pointer_input(self) -> bool: ...
    # Microsoft.UI.Content.ContentAutomationOptions Microsoft.UI.Content.ContentIsland::get_AutomationOption()
    @_property
    @typing.final
    def automation_option(self) -> ContentAutomationOptions: ...
    # System.Object Microsoft.UI.Content.ContentIsland::get_FragmentRootAutomationProvider()
    @_property
    @typing.final
    def fragment_root_automation_provider(self) -> winrt.system.Object: ...
    # System.Object Microsoft.UI.Content.ContentIsland::get_NextSiblingAutomationProvider()
    @_property
    @typing.final
    def next_sibling_automation_provider(self) -> winrt.system.Object: ...
    # System.Object Microsoft.UI.Content.ContentIsland::get_ParentAutomationProvider()
    @_property
    @typing.final
    def parent_automation_provider(self) -> winrt.system.Object: ...
    # System.Object Microsoft.UI.Content.ContentIsland::get_PreviousSiblingAutomationProvider()
    @_property
    @typing.final
    def previous_sibling_automation_provider(self) -> winrt.system.Object: ...
    # System.String Microsoft.UI.Content.ContentIsland::get_ConnectionInfo()
    @_property
    @typing.final
    def connection_info(self) -> str: ...
    # System.Boolean Microsoft.UI.Content.ContentIsland::get_IsRemoteEndpointConnected()
    @_property
    @typing.final
    def is_remote_endpoint_connected(self) -> bool: ...
    # Microsoft.UI.Composition.Visual Microsoft.UI.Content.ContentIsland::get_Root()
    @_property
    def root(self) -> microsoft_ui_composition.Visual: ...
    # System.Void Microsoft.UI.Content.ContentIsland::put_Root(Microsoft.UI.Composition.Visual)
    @root.setter
    @typing.final
    def root(self, value: microsoft_ui_composition.Visual) -> None: ...
    # System.Boolean Microsoft.UI.Content.ContentIsland::get_IsClosed()
    @_property
    @typing.final
    def is_closed(self) -> bool: ...

@typing.final
class ContentIslandAutomationProviderRequestedEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...
    # System.Object Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs::get_AutomationProvider()
    @_property
    def automation_provider(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs::put_AutomationProvider(System.Object)
    @automation_provider.setter
    def automation_provider(self, value: winrt.system.Object) -> None: ...

class ContentIslandEnvironment_Static(winrt._winrt.IInspectable_Static):
    pass

class ContentIslandEnvironment(winrt.system.Object, metaclass=ContentIslandEnvironment_Static):
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ContentIslandEnvironment::add_SettingChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.ContentIslandEnvironment,Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs>)
    def add_setting_changed(self, handler: windows_foundation.TypedEventHandler[ContentIslandEnvironment, ContentEnvironmentSettingChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Content.ContentIslandEnvironment::remove_SettingChanged(Windows.Foundation.EventRegistrationToken)
    def remove_setting_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ContentIslandEnvironment::add_StateChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.ContentIslandEnvironment,Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs>)
    def add_state_changed(self, handler: windows_foundation.TypedEventHandler[ContentIslandEnvironment, ContentEnvironmentStateChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Content.ContentIslandEnvironment::remove_StateChanged(Windows.Foundation.EventRegistrationToken)
    def remove_state_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ContentIslandEnvironment::add_ThemeChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.ContentIslandEnvironment,System.Object>)
    def add_theme_changed(self, handler: windows_foundation.TypedEventHandler[ContentIslandEnvironment, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Content.ContentIslandEnvironment::remove_ThemeChanged(Windows.Foundation.EventRegistrationToken)
    def remove_theme_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Microsoft.UI.WindowId Microsoft.UI.Content.ContentIslandEnvironment::get_AppWindowId()
    @_property
    @typing.final
    def app_window_id(self) -> microsoft_ui.WindowId: ...
    # Microsoft.UI.DisplayId Microsoft.UI.Content.ContentIslandEnvironment::get_DisplayId()
    @_property
    @typing.final
    def display_id(self) -> microsoft_ui.DisplayId: ...
    # System.Single Microsoft.UI.Content.ContentIslandEnvironment::get_DisplayScale()
    @_property
    @typing.final
    def display_scale(self) -> winrt.system.Single: ...
    # Microsoft.UI.Content.ContentDisplayOrientations Microsoft.UI.Content.ContentIslandEnvironment::get_CurrentOrientation()
    @_property
    @typing.final
    def current_orientation(self) -> ContentDisplayOrientations: ...
    # Microsoft.UI.Content.ContentDisplayOrientations Microsoft.UI.Content.ContentIslandEnvironment::get_NativeOrientation()
    @_property
    @typing.final
    def native_orientation(self) -> ContentDisplayOrientations: ...

@typing.final
class ContentIslandStateChangedEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Content.ContentIslandStateChangedEventArgs::get_DidActualSizeChange()
    @_property
    def did_actual_size_change(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.ContentIslandStateChangedEventArgs::get_DidLayoutDirectionChange()
    @_property
    def did_layout_direction_change(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.ContentIslandStateChangedEventArgs::get_DidRasterizationScaleChange()
    @_property
    def did_rasterization_scale_change(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.ContentIslandStateChangedEventArgs::get_DidSiteEnabledChange()
    @_property
    def did_site_enabled_change(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.ContentIslandStateChangedEventArgs::get_DidSiteVisibleChange()
    @_property
    def did_site_visible_change(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.ContentIslandStateChangedEventArgs::get_DidLocalToClientTransformMatrixChange()
    @_property
    def did_local_to_client_transform_matrix_change(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.ContentIslandStateChangedEventArgs::get_DidLocalToParentTransformMatrixChange()
    @_property
    def did_local_to_parent_transform_matrix_change(self) -> bool: ...

class ContentSite_Static(winrt._winrt.IInspectable_Static):
    pass

class ContentSite(winrt.system.Object, microsoft_ui.IClosableNotifier, windows_foundation.IClosable, metaclass=ContentSite_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Microsoft.UI.Content.ContentSite::Close()
    def close(self) -> None: ...
    @typing.final
    # Microsoft.UI.Content.ContentDeferral Microsoft.UI.Content.ContentSite::GetIslandStateChangeDeferral()
    def get_island_state_change_deferral(self) -> ContentDeferral: ...
    @typing.final
    # System.Boolean Microsoft.UI.Content.ContentSite::TryGetAutomationProvider(System.Object&)
    def try_get_automation_provider(self) -> typing.Tuple[bool, winrt.system.Object]: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ContentSite::add_RequestedStateChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.ContentSite,Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs>)
    def add_requested_state_changed(self, handler: windows_foundation.TypedEventHandler[ContentSite, ContentSiteRequestedStateChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Content.ContentSite::remove_RequestedStateChanged(Windows.Foundation.EventRegistrationToken)
    def remove_requested_state_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ContentSite::add_Closed(Microsoft.UI.ClosableNotifierHandler)
    def add_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Content.ContentSite::remove_Closed(Windows.Foundation.EventRegistrationToken)
    def remove_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.ContentSite::add_FrameworkClosed(Microsoft.UI.ClosableNotifierHandler)
    def add_framework_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Content.ContentSite::remove_FrameworkClosed(Windows.Foundation.EventRegistrationToken)
    def remove_framework_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Boolean Microsoft.UI.Content.ContentSite::get_ShouldApplyRasterizationScale()
    @_property
    def should_apply_rasterization_scale(self) -> bool: ...
    # System.Void Microsoft.UI.Content.ContentSite::put_ShouldApplyRasterizationScale(System.Boolean)
    @should_apply_rasterization_scale.setter
    @typing.final
    def should_apply_rasterization_scale(self, value: bool) -> None: ...
    # System.Single Microsoft.UI.Content.ContentSite::get_ParentScale()
    @_property
    def parent_scale(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Content.ContentSite::put_ParentScale(System.Single)
    @parent_scale.setter
    @typing.final
    def parent_scale(self, value: winrt.system.Single) -> None: ...
    # System.Single Microsoft.UI.Content.ContentSite::get_OverrideScale()
    @_property
    def override_scale(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Content.ContentSite::put_OverrideScale(System.Single)
    @override_scale.setter
    @typing.final
    def override_scale(self, value: winrt.system.Single) -> None: ...
    # Microsoft.UI.Content.ContentLayoutDirection Microsoft.UI.Content.ContentSite::get_LayoutDirection()
    @_property
    def layout_direction(self) -> ContentLayoutDirection: ...
    # System.Void Microsoft.UI.Content.ContentSite::put_LayoutDirection(Microsoft.UI.Content.ContentLayoutDirection)
    @layout_direction.setter
    @typing.final
    def layout_direction(self, value: ContentLayoutDirection) -> None: ...
    # System.Boolean Microsoft.UI.Content.ContentSite::get_IsSiteVisible()
    @_property
    def is_site_visible(self) -> bool: ...
    # System.Void Microsoft.UI.Content.ContentSite::put_IsSiteVisible(System.Boolean)
    @is_site_visible.setter
    @typing.final
    def is_site_visible(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Content.ContentSite::get_IsSiteEnabled()
    @_property
    def is_site_enabled(self) -> bool: ...
    # System.Void Microsoft.UI.Content.ContentSite::put_IsSiteEnabled(System.Boolean)
    @is_site_enabled.setter
    @typing.final
    def is_site_enabled(self, value: bool) -> None: ...
    # Windows.Graphics.SizeInt32 Microsoft.UI.Content.ContentSite::get_ClientSize()
    @_property
    def client_size(self) -> windows_graphics.SizeInt32: ...
    # System.Void Microsoft.UI.Content.ContentSite::put_ClientSize(Windows.Graphics.SizeInt32)
    @client_size.setter
    @typing.final
    def client_size(self, value: typing.Union[windows_graphics.SizeInt32, typing.Tuple[winrt.system.Int32, winrt.system.Int32]]) -> None: ...
    # Windows.Foundation.Numerics.Vector2 Microsoft.UI.Content.ContentSite::get_ActualSize()
    @_property
    def actual_size(self) -> windows_foundation_numerics.Vector2: ...
    # System.Void Microsoft.UI.Content.ContentSite::put_ActualSize(Windows.Foundation.Numerics.Vector2)
    @actual_size.setter
    @typing.final
    def actual_size(self, value: typing.Union[windows_foundation_numerics.Vector2, typing.Tuple[winrt.system.Single, winrt.system.Single]]) -> None: ...
    # Microsoft.UI.Content.ContentCoordinateConverter Microsoft.UI.Content.ContentSite::get_CoordinateConverter()
    @_property
    @typing.final
    def coordinate_converter(self) -> ContentCoordinateConverter: ...
    # Microsoft.UI.Dispatching.DispatcherQueue Microsoft.UI.Content.ContentSite::get_DispatcherQueue()
    @_property
    @typing.final
    def dispatcher_queue(self) -> microsoft_ui_dispatching.DispatcherQueue: ...
    # Microsoft.UI.Content.ContentSiteEnvironment Microsoft.UI.Content.ContentSite::get_Environment()
    @_property
    @typing.final
    def environment(self) -> ContentSiteEnvironment: ...
    # System.Boolean Microsoft.UI.Content.ContentSite::get_IsConnected()
    @_property
    @typing.final
    def is_connected(self) -> bool: ...
    # System.Single Microsoft.UI.Content.ContentSite::get_RasterizationScale()
    @_property
    @typing.final
    def rasterization_scale(self) -> winrt.system.Single: ...
    # Windows.Foundation.Numerics.Vector2 Microsoft.UI.Content.ContentSite::get_RequestedSize()
    @_property
    @typing.final
    def requested_size(self) -> windows_foundation_numerics.Vector2: ...
    # Microsoft.UI.Content.ContentSiteView Microsoft.UI.Content.ContentSite::get_View()
    @_property
    @typing.final
    def view(self) -> ContentSiteView: ...
    # System.Boolean Microsoft.UI.Content.ContentSite::get_ProcessesPointerInput()
    @_property
    def processes_pointer_input(self) -> bool: ...
    # System.Void Microsoft.UI.Content.ContentSite::put_ProcessesPointerInput(System.Boolean)
    @processes_pointer_input.setter
    @typing.final
    def processes_pointer_input(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Content.ContentSite::get_ProcessesKeyboardInput()
    @_property
    def processes_keyboard_input(self) -> bool: ...
    # System.Void Microsoft.UI.Content.ContentSite::put_ProcessesKeyboardInput(System.Boolean)
    @processes_keyboard_input.setter
    @typing.final
    def processes_keyboard_input(self, value: bool) -> None: ...
    # Windows.Foundation.Numerics.Matrix4x4 Microsoft.UI.Content.ContentSite::get_LocalToParentTransformMatrix()
    @_property
    def local_to_parent_transform_matrix(self) -> windows_foundation_numerics.Matrix4x4: ...
    # System.Void Microsoft.UI.Content.ContentSite::put_LocalToParentTransformMatrix(Windows.Foundation.Numerics.Matrix4x4)
    @local_to_parent_transform_matrix.setter
    @typing.final
    def local_to_parent_transform_matrix(self, value: typing.Union[windows_foundation_numerics.Matrix4x4, typing.Tuple[winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single, winrt.system.Single]]) -> None: ...
    # Windows.Foundation.Numerics.Matrix4x4 Microsoft.UI.Content.ContentSite::get_LocalToClientTransformMatrix()
    @_property
    @typing.final
    def local_to_client_transform_matrix(self) -> windows_foundation_numerics.Matrix4x4: ...
    # System.Boolean Microsoft.UI.Content.ContentSite::get_IsClosed()
    @_property
    @typing.final
    def is_closed(self) -> bool: ...

@typing.final
class ContentSiteAutomationProviderRequestedEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...
    # System.Object Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs::get_AutomationProvider()
    @_property
    def automation_provider(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs::put_AutomationProvider(System.Object)
    @automation_provider.setter
    def automation_provider(self, value: winrt.system.Object) -> None: ...

class ContentSiteEnvironment_Static(winrt._winrt.IInspectable_Static):
    pass

class ContentSiteEnvironment(winrt.system.Object, metaclass=ContentSiteEnvironment_Static):
    @typing.final
    # System.Void Microsoft.UI.Content.ContentSiteEnvironment::NotifySettingChanged(System.String)
    def notify_setting_changed(self, setting: str, /) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Content.ContentSiteEnvironment::NotifyThemeChanged()
    def notify_theme_changed(self) -> None: ...
    # Microsoft.UI.DisplayId Microsoft.UI.Content.ContentSiteEnvironment::get_DisplayId()
    @_property
    def display_id(self) -> microsoft_ui.DisplayId: ...
    # System.Void Microsoft.UI.Content.ContentSiteEnvironment::put_DisplayId(Microsoft.UI.DisplayId)
    @display_id.setter
    @typing.final
    def display_id(self, value: typing.Union[microsoft_ui.DisplayId, typing.Tuple[winrt.system.UInt64]]) -> None: ...
    # Microsoft.UI.WindowId Microsoft.UI.Content.ContentSiteEnvironment::get_AppWindowId()
    @_property
    def app_window_id(self) -> microsoft_ui.WindowId: ...
    # System.Void Microsoft.UI.Content.ContentSiteEnvironment::put_AppWindowId(Microsoft.UI.WindowId)
    @app_window_id.setter
    @typing.final
    def app_window_id(self, value: typing.Union[microsoft_ui.WindowId, typing.Tuple[winrt.system.UInt64]]) -> None: ...
    # Microsoft.UI.Content.ContentSiteEnvironmentView Microsoft.UI.Content.ContentSiteEnvironment::get_View()
    @_property
    @typing.final
    def view(self) -> ContentSiteEnvironmentView: ...
    # System.Single Microsoft.UI.Content.ContentSiteEnvironment::get_DisplayScale()
    @_property
    def display_scale(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Content.ContentSiteEnvironment::put_DisplayScale(System.Single)
    @display_scale.setter
    @typing.final
    def display_scale(self, value: winrt.system.Single) -> None: ...
    # Microsoft.UI.Content.ContentDisplayOrientations Microsoft.UI.Content.ContentSiteEnvironment::get_NativeOrientation()
    @_property
    def native_orientation(self) -> ContentDisplayOrientations: ...
    # System.Void Microsoft.UI.Content.ContentSiteEnvironment::put_NativeOrientation(Microsoft.UI.Content.ContentDisplayOrientations)
    @native_orientation.setter
    @typing.final
    def native_orientation(self, value: ContentDisplayOrientations) -> None: ...
    # Microsoft.UI.Content.ContentDisplayOrientations Microsoft.UI.Content.ContentSiteEnvironment::get_CurrentOrientation()
    @_property
    def current_orientation(self) -> ContentDisplayOrientations: ...
    # System.Void Microsoft.UI.Content.ContentSiteEnvironment::put_CurrentOrientation(Microsoft.UI.Content.ContentDisplayOrientations)
    @current_orientation.setter
    @typing.final
    def current_orientation(self, value: ContentDisplayOrientations) -> None: ...

class ContentSiteEnvironmentView_Static(winrt._winrt.IInspectable_Static):
    pass

class ContentSiteEnvironmentView(winrt.system.Object, metaclass=ContentSiteEnvironmentView_Static):
    # Microsoft.UI.WindowId Microsoft.UI.Content.ContentSiteEnvironmentView::get_AppWindowId()
    @_property
    @typing.final
    def app_window_id(self) -> microsoft_ui.WindowId: ...
    # Microsoft.UI.DisplayId Microsoft.UI.Content.ContentSiteEnvironmentView::get_DisplayId()
    @_property
    @typing.final
    def display_id(self) -> microsoft_ui.DisplayId: ...
    # System.Single Microsoft.UI.Content.ContentSiteEnvironmentView::get_DisplayScale()
    @_property
    @typing.final
    def display_scale(self) -> winrt.system.Single: ...

@typing.final
class ContentSiteRequestedStateChangedEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs::get_DidRequestedSizeChange()
    @_property
    def did_requested_size_change(self) -> bool: ...

class ContentSiteView_Static(winrt._winrt.IInspectable_Static):
    pass

class ContentSiteView(winrt.system.Object, metaclass=ContentSiteView_Static):
    # Windows.Foundation.Numerics.Vector2 Microsoft.UI.Content.ContentSiteView::get_ActualSize()
    @_property
    @typing.final
    def actual_size(self) -> windows_foundation_numerics.Vector2: ...
    # Windows.Graphics.SizeInt32 Microsoft.UI.Content.ContentSiteView::get_ClientSize()
    @_property
    @typing.final
    def client_size(self) -> windows_graphics.SizeInt32: ...
    # Microsoft.UI.Content.ContentCoordinateConverter Microsoft.UI.Content.ContentSiteView::get_CoordinateConverter()
    @_property
    @typing.final
    def coordinate_converter(self) -> ContentCoordinateConverter: ...
    # Microsoft.UI.Dispatching.DispatcherQueue Microsoft.UI.Content.ContentSiteView::get_DispatcherQueue()
    @_property
    @typing.final
    def dispatcher_queue(self) -> microsoft_ui_dispatching.DispatcherQueue: ...
    # Microsoft.UI.Content.ContentSiteEnvironmentView Microsoft.UI.Content.ContentSiteView::get_EnvironmentView()
    @_property
    @typing.final
    def environment_view(self) -> ContentSiteEnvironmentView: ...
    # System.Boolean Microsoft.UI.Content.ContentSiteView::get_IsConnected()
    @_property
    @typing.final
    def is_connected(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.ContentSiteView::get_IsSiteEnabled()
    @_property
    @typing.final
    def is_site_enabled(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.ContentSiteView::get_IsSiteVisible()
    @_property
    @typing.final
    def is_site_visible(self) -> bool: ...
    # Microsoft.UI.Content.ContentLayoutDirection Microsoft.UI.Content.ContentSiteView::get_LayoutDirection()
    @_property
    @typing.final
    def layout_direction(self) -> ContentLayoutDirection: ...
    # System.Single Microsoft.UI.Content.ContentSiteView::get_OverrideScale()
    @_property
    @typing.final
    def override_scale(self) -> winrt.system.Single: ...
    # System.Single Microsoft.UI.Content.ContentSiteView::get_ParentScale()
    @_property
    @typing.final
    def parent_scale(self) -> winrt.system.Single: ...
    # System.Single Microsoft.UI.Content.ContentSiteView::get_RasterizationScale()
    @_property
    @typing.final
    def rasterization_scale(self) -> winrt.system.Single: ...
    # Windows.Foundation.Numerics.Vector2 Microsoft.UI.Content.ContentSiteView::get_RequestedSize()
    @_property
    @typing.final
    def requested_size(self) -> windows_foundation_numerics.Vector2: ...
    # System.Boolean Microsoft.UI.Content.ContentSiteView::get_ShouldApplyRasterizationScale()
    @_property
    @typing.final
    def should_apply_rasterization_scale(self) -> bool: ...
    # Windows.Foundation.Numerics.Matrix4x4 Microsoft.UI.Content.ContentSiteView::get_LocalToClientTransformMatrix()
    @_property
    @typing.final
    def local_to_client_transform_matrix(self) -> windows_foundation_numerics.Matrix4x4: ...
    # Windows.Foundation.Numerics.Matrix4x4 Microsoft.UI.Content.ContentSiteView::get_LocalToParentTransformMatrix()
    @_property
    @typing.final
    def local_to_parent_transform_matrix(self) -> windows_foundation_numerics.Matrix4x4: ...
    # System.Boolean Microsoft.UI.Content.ContentSiteView::get_ProcessesKeyboardInput()
    @_property
    @typing.final
    def processes_keyboard_input(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.ContentSiteView::get_ProcessesPointerInput()
    @_property
    @typing.final
    def processes_pointer_input(self) -> bool: ...
    # Microsoft.UI.Content.ContentAutomationOptions Microsoft.UI.Content.ContentSiteView::get_AutomationOption()
    @_property
    @typing.final
    def automation_option(self) -> ContentAutomationOptions: ...

@typing.final
class CoreWindowSiteBridge_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Content.CoreWindowSiteBridge Microsoft.UI.Content.CoreWindowSiteBridge::Create(Microsoft.UI.Composition.Compositor,Windows.UI.Core.CoreWindow)
    def create(cls, compositor: microsoft_ui_composition.Compositor, core_window: windows_ui_core.CoreWindow, /) -> CoreWindowSiteBridge: ...
    # System.Boolean Microsoft.UI.Content.CoreWindowSiteBridge::IsSupported()
    def is_supported(cls) -> bool: ...

@typing.final
class CoreWindowSiteBridge(winrt.system.Object, IContentSiteBridge, windows_foundation.IClosable, metaclass=CoreWindowSiteBridge_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Microsoft.UI.Content.CoreWindowSiteBridge::Close()
    def close(self) -> None: ...
    # System.Void Microsoft.UI.Content.CoreWindowSiteBridge::Connect(Microsoft.UI.Content.ContentIsland)
    def connect(self, content: ContentIsland, /) -> None: ...
    # System.Single Microsoft.UI.Content.CoreWindowSiteBridge::get_OverrideScale()
    @_property
    def override_scale(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Content.CoreWindowSiteBridge::put_OverrideScale(System.Single)
    @override_scale.setter
    def override_scale(self, value: winrt.system.Single) -> None: ...
    # Windows.Foundation.IReference`1<Microsoft.UI.Content.ContentLayoutDirection> Microsoft.UI.Content.CoreWindowSiteBridge::get_LayoutDirectionOverride()
    @_property
    def layout_direction_override(self) -> typing.Optional[ContentLayoutDirection]: ...
    # System.Void Microsoft.UI.Content.CoreWindowSiteBridge::put_LayoutDirectionOverride(Windows.Foundation.IReference`1<Microsoft.UI.Content.ContentLayoutDirection>)
    @layout_direction_override.setter
    def layout_direction_override(self, value: typing.Optional[ContentLayoutDirection]) -> None: ...
    # Microsoft.UI.Dispatching.DispatcherQueue Microsoft.UI.Content.CoreWindowSiteBridge::get_DispatcherQueue()
    @_property
    def dispatcher_queue(self) -> microsoft_ui_dispatching.DispatcherQueue: ...

@typing.final
class CoreWindowTopLevelWindowBridge(winrt.system.Object, IContentNodeOwner):
    pass

@typing.final
class DesktopAttachedSiteBridge_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Content.DesktopAttachedSiteBridge Microsoft.UI.Content.DesktopAttachedSiteBridge::CreateFromWindowId(Microsoft.UI.Dispatching.DispatcherQueue,Microsoft.UI.WindowId)
    def create_from_window_id(cls, queue: microsoft_ui_dispatching.DispatcherQueue, window_id: typing.Union[microsoft_ui.WindowId, typing.Tuple[winrt.system.UInt64]], /) -> DesktopAttachedSiteBridge: ...

@typing.final
class DesktopAttachedSiteBridge(winrt.system.Object, IContentSiteInput, IContentSiteBridge, microsoft_ui.IClosableNotifier, windows_foundation.IClosable, metaclass=DesktopAttachedSiteBridge_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Microsoft.UI.Content.DesktopAttachedSiteBridge::Close()
    def close(self) -> None: ...
    # System.Void Microsoft.UI.Content.DesktopAttachedSiteBridge::Connect(Microsoft.UI.Content.ContentIsland)
    def connect(self, content: ContentIsland, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.DesktopAttachedSiteBridge::add_Closed(Microsoft.UI.ClosableNotifierHandler)
    def add_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.DesktopAttachedSiteBridge::remove_Closed(Windows.Foundation.EventRegistrationToken)
    def remove_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.DesktopAttachedSiteBridge::add_FrameworkClosed(Microsoft.UI.ClosableNotifierHandler)
    def add_framework_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.DesktopAttachedSiteBridge::remove_FrameworkClosed(Windows.Foundation.EventRegistrationToken)
    def remove_framework_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Single Microsoft.UI.Content.DesktopAttachedSiteBridge::get_OverrideScale()
    @_property
    def override_scale(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Content.DesktopAttachedSiteBridge::put_OverrideScale(System.Single)
    @override_scale.setter
    def override_scale(self, value: winrt.system.Single) -> None: ...
    # Windows.Foundation.IReference`1<Microsoft.UI.Content.ContentLayoutDirection> Microsoft.UI.Content.DesktopAttachedSiteBridge::get_LayoutDirectionOverride()
    @_property
    def layout_direction_override(self) -> typing.Optional[ContentLayoutDirection]: ...
    # System.Void Microsoft.UI.Content.DesktopAttachedSiteBridge::put_LayoutDirectionOverride(Windows.Foundation.IReference`1<Microsoft.UI.Content.ContentLayoutDirection>)
    @layout_direction_override.setter
    def layout_direction_override(self, value: typing.Optional[ContentLayoutDirection]) -> None: ...
    # Microsoft.UI.Dispatching.DispatcherQueue Microsoft.UI.Content.DesktopAttachedSiteBridge::get_DispatcherQueue()
    @_property
    def dispatcher_queue(self) -> microsoft_ui_dispatching.DispatcherQueue: ...
    # System.Boolean Microsoft.UI.Content.DesktopAttachedSiteBridge::get_ProcessesPointerInput()
    @_property
    def processes_pointer_input(self) -> bool: ...
    # System.Void Microsoft.UI.Content.DesktopAttachedSiteBridge::put_ProcessesPointerInput(System.Boolean)
    @processes_pointer_input.setter
    def processes_pointer_input(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Content.DesktopAttachedSiteBridge::get_ProcessesKeyboardInput()
    @_property
    def processes_keyboard_input(self) -> bool: ...
    # System.Void Microsoft.UI.Content.DesktopAttachedSiteBridge::put_ProcessesKeyboardInput(System.Boolean)
    @processes_keyboard_input.setter
    def processes_keyboard_input(self, value: bool) -> None: ...
    # Microsoft.UI.Content.ContentSiteView Microsoft.UI.Content.DesktopAttachedSiteBridge::get_SiteView()
    @_property
    def site_view(self) -> ContentSiteView: ...
    # Microsoft.UI.WindowId Microsoft.UI.Content.DesktopAttachedSiteBridge::get_WindowId()
    @_property
    def window_id(self) -> microsoft_ui.WindowId: ...
    # System.Boolean Microsoft.UI.Content.DesktopAttachedSiteBridge::get_IsClosed()
    @_property
    def is_closed(self) -> bool: ...

@typing.final
class DesktopChildSiteBridge_Static(DesktopSiteBridge_Static):
    # Microsoft.UI.Content.DesktopChildSiteBridge Microsoft.UI.Content.DesktopChildSiteBridge::Create(Microsoft.UI.Composition.Compositor,Microsoft.UI.WindowId)
    def create(cls, compositor: microsoft_ui_composition.Compositor, parent_window_id: typing.Union[microsoft_ui.WindowId, typing.Tuple[winrt.system.UInt64]], /) -> DesktopChildSiteBridge: ...
    # Microsoft.UI.Content.DesktopChildSiteBridge Microsoft.UI.Content.DesktopChildSiteBridge::CreateWithDispatcherQueue(Microsoft.UI.Dispatching.DispatcherQueue,Microsoft.UI.WindowId)
    def create_with_dispatcher_queue(cls, queue: microsoft_ui_dispatching.DispatcherQueue, parent_window_id: typing.Union[microsoft_ui.WindowId, typing.Tuple[winrt.system.UInt64]], /) -> DesktopChildSiteBridge: ...

@typing.final
class DesktopChildSiteBridge(DesktopSiteBridge, IContentSiteBridgeEndpointConnectionPrivate, metaclass=DesktopChildSiteBridge_Static):
    # System.Void Microsoft.UI.Content.DesktopChildSiteBridge::AcceptRemoteEndpoint(System.String)
    def accept_remote_endpoint(self, island_connection_info: str, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.DesktopChildSiteBridge::add_RemoteEndpointConnecting(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate,Microsoft.UI.Content.EndpointConnectionEventArgs>)
    def add_remote_endpoint_connecting(self, handler: windows_foundation.TypedEventHandler[IContentSiteBridgeEndpointConnectionPrivate, EndpointConnectionEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.DesktopChildSiteBridge::remove_RemoteEndpointConnecting(Windows.Foundation.EventRegistrationToken)
    def remove_remote_endpoint_connecting(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.DesktopChildSiteBridge::add_RemoteEndpointDisconnected(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate,Microsoft.UI.Content.EndpointConnectionEventArgs>)
    def add_remote_endpoint_disconnected(self, handler: windows_foundation.TypedEventHandler[IContentSiteBridgeEndpointConnectionPrivate, EndpointConnectionEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.DesktopChildSiteBridge::remove_RemoteEndpointDisconnected(Windows.Foundation.EventRegistrationToken)
    def remove_remote_endpoint_disconnected(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.DesktopChildSiteBridge::add_RemoteEndpointRequestedStateChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate,Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>)
    def add_remote_endpoint_requested_state_changed(self, handler: windows_foundation.TypedEventHandler[IContentSiteBridgeEndpointConnectionPrivate, EndpointRequestedStateChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.DesktopChildSiteBridge::remove_RemoteEndpointRequestedStateChanged(Windows.Foundation.EventRegistrationToken)
    def remove_remote_endpoint_requested_state_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.String Microsoft.UI.Content.DesktopChildSiteBridge::get_ConnectionInfo()
    @_property
    def connection_info(self) -> str: ...
    # System.Boolean Microsoft.UI.Content.DesktopChildSiteBridge::get_IsRemoteEndpointConnected()
    @_property
    def is_remote_endpoint_connected(self) -> bool: ...
    # Microsoft.UI.Content.ContentSizePolicy Microsoft.UI.Content.DesktopChildSiteBridge::get_ResizePolicy()
    @_property
    def resize_policy(self) -> ContentSizePolicy: ...
    # System.Void Microsoft.UI.Content.DesktopChildSiteBridge::put_ResizePolicy(Microsoft.UI.Content.ContentSizePolicy)
    @resize_policy.setter
    def resize_policy(self, value: ContentSizePolicy) -> None: ...
    # Microsoft.UI.Content.ContentSiteView Microsoft.UI.Content.DesktopChildSiteBridge::get_SiteView()
    @_property
    def site_view(self) -> ContentSiteView: ...

@typing.final
class DesktopPopupSiteBridge_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Content.DesktopPopupSiteBridge Microsoft.UI.Content.DesktopPopupSiteBridge::Create(Microsoft.UI.Content.ContentIsland)
    def create(cls, parent: ContentIsland, /) -> DesktopPopupSiteBridge: ...

@typing.final
class DesktopPopupSiteBridge(winrt.system.Object, IContentSiteLink, IContentSiteBridge, IContentSiteAutomation, microsoft_ui.IClosableNotifier, windows_foundation.IClosable, metaclass=DesktopPopupSiteBridge_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::Close()
    def close(self) -> None: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::Connect(Microsoft.UI.Content.ContentIsland)
    def connect(self, content: ContentIsland, /) -> None: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::Disable()
    def disable(self) -> None: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::Enable()
    def enable(self) -> None: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::Hide()
    def hide(self) -> None: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::MoveAndResize(Windows.Graphics.RectInt32)
    def move_and_resize(self, rect: typing.Union[windows_graphics.RectInt32, typing.Tuple[winrt.system.Int32, winrt.system.Int32, winrt.system.Int32, winrt.system.Int32]], /) -> None: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::MoveInZOrderAtBottom()
    def move_in_z_order_at_bottom(self) -> None: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::MoveInZOrderAtTop()
    def move_in_z_order_at_top(self) -> None: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::MoveInZOrderBelow(Microsoft.UI.WindowId)
    def move_in_z_order_below(self, window_id: typing.Union[microsoft_ui.WindowId, typing.Tuple[winrt.system.UInt64]], /) -> None: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::Show()
    def show(self) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.DesktopPopupSiteBridge::add_Closed(Microsoft.UI.ClosableNotifierHandler)
    def add_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::remove_Closed(Windows.Foundation.EventRegistrationToken)
    def remove_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.DesktopPopupSiteBridge::add_FrameworkClosed(Microsoft.UI.ClosableNotifierHandler)
    def add_framework_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::remove_FrameworkClosed(Windows.Foundation.EventRegistrationToken)
    def remove_framework_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.DesktopPopupSiteBridge::add_FragmentRootAutomationProviderRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteAutomation,Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>)
    def add_fragment_root_automation_provider_requested(self, handler: windows_foundation.TypedEventHandler[IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::remove_FragmentRootAutomationProviderRequested(Windows.Foundation.EventRegistrationToken)
    def remove_fragment_root_automation_provider_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.DesktopPopupSiteBridge::add_NextSiblingAutomationProviderRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteAutomation,Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>)
    def add_next_sibling_automation_provider_requested(self, handler: windows_foundation.TypedEventHandler[IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::remove_NextSiblingAutomationProviderRequested(Windows.Foundation.EventRegistrationToken)
    def remove_next_sibling_automation_provider_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.DesktopPopupSiteBridge::add_ParentAutomationProviderRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteAutomation,Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>)
    def add_parent_automation_provider_requested(self, handler: windows_foundation.TypedEventHandler[IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::remove_ParentAutomationProviderRequested(Windows.Foundation.EventRegistrationToken)
    def remove_parent_automation_provider_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.DesktopPopupSiteBridge::add_PreviousSiblingAutomationProviderRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteAutomation,Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>)
    def add_previous_sibling_automation_provider_requested(self, handler: windows_foundation.TypedEventHandler[IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::remove_PreviousSiblingAutomationProviderRequested(Windows.Foundation.EventRegistrationToken)
    def remove_previous_sibling_automation_provider_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Microsoft.UI.Content.ContentAutomationOptions Microsoft.UI.Content.DesktopPopupSiteBridge::get_AutomationOption()
    @_property
    def automation_option(self) -> ContentAutomationOptions: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::put_AutomationOption(Microsoft.UI.Content.ContentAutomationOptions)
    @automation_option.setter
    def automation_option(self, value: ContentAutomationOptions) -> None: ...
    # System.Object Microsoft.UI.Content.DesktopPopupSiteBridge::get_AutomationProvider()
    @_property
    def automation_provider(self) -> winrt.system.Object: ...
    # System.Single Microsoft.UI.Content.DesktopPopupSiteBridge::get_OverrideScale()
    @_property
    def override_scale(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::put_OverrideScale(System.Single)
    @override_scale.setter
    def override_scale(self, value: winrt.system.Single) -> None: ...
    # Windows.Foundation.IReference`1<Microsoft.UI.Content.ContentLayoutDirection> Microsoft.UI.Content.DesktopPopupSiteBridge::get_LayoutDirectionOverride()
    @_property
    def layout_direction_override(self) -> typing.Optional[ContentLayoutDirection]: ...
    # System.Void Microsoft.UI.Content.DesktopPopupSiteBridge::put_LayoutDirectionOverride(Windows.Foundation.IReference`1<Microsoft.UI.Content.ContentLayoutDirection>)
    @layout_direction_override.setter
    def layout_direction_override(self, value: typing.Optional[ContentLayoutDirection]) -> None: ...
    # Microsoft.UI.Dispatching.DispatcherQueue Microsoft.UI.Content.DesktopPopupSiteBridge::get_DispatcherQueue()
    @_property
    def dispatcher_queue(self) -> microsoft_ui_dispatching.DispatcherQueue: ...
    # Microsoft.UI.Content.ContentIsland Microsoft.UI.Content.DesktopPopupSiteBridge::get_Parent()
    @_property
    def parent(self) -> ContentIsland: ...
    # System.Boolean Microsoft.UI.Content.DesktopPopupSiteBridge::get_IsEnabled()
    @_property
    def is_enabled(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.DesktopPopupSiteBridge::get_IsVisible()
    @_property
    def is_visible(self) -> bool: ...
    # Microsoft.UI.Content.ContentSiteView Microsoft.UI.Content.DesktopPopupSiteBridge::get_SiteView()
    @_property
    def site_view(self) -> ContentSiteView: ...
    # Microsoft.UI.WindowId Microsoft.UI.Content.DesktopPopupSiteBridge::get_WindowId()
    @_property
    def window_id(self) -> microsoft_ui.WindowId: ...
    # System.Boolean Microsoft.UI.Content.DesktopPopupSiteBridge::get_IsClosed()
    @_property
    def is_closed(self) -> bool: ...

class DesktopSiteBridge_Static(winrt._winrt.IInspectable_Static):
    # System.Boolean Microsoft.UI.Content.DesktopSiteBridge::IsSupported()
    def is_supported(cls) -> bool: ...

class DesktopSiteBridge(winrt.system.Object, IContentSiteBridge, windows_foundation.IClosable, microsoft_ui.IClosableNotifier, metaclass=DesktopSiteBridge_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Microsoft.UI.Content.DesktopSiteBridge::Close()
    def close(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Content.DesktopSiteBridge::Connect(Microsoft.UI.Content.ContentIsland)
    def connect(self, content: ContentIsland, /) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Content.DesktopSiteBridge::Disable()
    def disable(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Content.DesktopSiteBridge::Enable()
    def enable(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Content.DesktopSiteBridge::Hide()
    def hide(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Content.DesktopSiteBridge::MoveAndResize(Windows.Graphics.RectInt32)
    def move_and_resize(self, rect: typing.Union[windows_graphics.RectInt32, typing.Tuple[winrt.system.Int32, winrt.system.Int32, winrt.system.Int32, winrt.system.Int32]], /) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Content.DesktopSiteBridge::MoveInZOrderAtBottom()
    def move_in_z_order_at_bottom(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Content.DesktopSiteBridge::MoveInZOrderAtTop()
    def move_in_z_order_at_top(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Content.DesktopSiteBridge::MoveInZOrderBelow(Microsoft.UI.WindowId)
    def move_in_z_order_below(self, window_id: typing.Union[microsoft_ui.WindowId, typing.Tuple[winrt.system.UInt64]], /) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Content.DesktopSiteBridge::Show()
    def show(self) -> None: ...
    @typing.final
    # Microsoft.UI.Content.PopupWindowSiteBridge Microsoft.UI.Content.DesktopSiteBridge::TryCreatePopupSiteBridge()
    def try_create_popup_site_bridge(self) -> PopupWindowSiteBridge: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.DesktopSiteBridge::add_Closed(Microsoft.UI.ClosableNotifierHandler)
    def add_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Content.DesktopSiteBridge::remove_Closed(Windows.Foundation.EventRegistrationToken)
    def remove_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.DesktopSiteBridge::add_FrameworkClosed(Microsoft.UI.ClosableNotifierHandler)
    def add_framework_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Content.DesktopSiteBridge::remove_FrameworkClosed(Windows.Foundation.EventRegistrationToken)
    def remove_framework_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Single Microsoft.UI.Content.DesktopSiteBridge::get_OverrideScale()
    @_property
    def override_scale(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Content.DesktopSiteBridge::put_OverrideScale(System.Single)
    @override_scale.setter
    @typing.final
    def override_scale(self, value: winrt.system.Single) -> None: ...
    # Windows.Foundation.IReference`1<Microsoft.UI.Content.ContentLayoutDirection> Microsoft.UI.Content.DesktopSiteBridge::get_LayoutDirectionOverride()
    @_property
    def layout_direction_override(self) -> typing.Optional[ContentLayoutDirection]: ...
    # System.Void Microsoft.UI.Content.DesktopSiteBridge::put_LayoutDirectionOverride(Windows.Foundation.IReference`1<Microsoft.UI.Content.ContentLayoutDirection>)
    @layout_direction_override.setter
    @typing.final
    def layout_direction_override(self, value: typing.Optional[ContentLayoutDirection]) -> None: ...
    # Microsoft.UI.Dispatching.DispatcherQueue Microsoft.UI.Content.DesktopSiteBridge::get_DispatcherQueue()
    @_property
    @typing.final
    def dispatcher_queue(self) -> microsoft_ui_dispatching.DispatcherQueue: ...
    # System.Boolean Microsoft.UI.Content.DesktopSiteBridge::get_IsEnabled()
    @_property
    @typing.final
    def is_enabled(self) -> bool: ...
    # System.Boolean Microsoft.UI.Content.DesktopSiteBridge::get_IsVisible()
    @_property
    @typing.final
    def is_visible(self) -> bool: ...
    # Microsoft.UI.WindowId Microsoft.UI.Content.DesktopSiteBridge::get_WindowId()
    @_property
    @typing.final
    def window_id(self) -> microsoft_ui.WindowId: ...
    # System.Boolean Microsoft.UI.Content.DesktopSiteBridge::get_IsClosed()
    @_property
    @typing.final
    def is_closed(self) -> bool: ...

@typing.final
class EndpointConnectionEventArgs(winrt.system.Object):
    # System.String Microsoft.UI.Content.EndpointConnectionEventArgs::get_ConnectionInfo()
    @_property
    def connection_info(self) -> str: ...

@typing.final
class EndpointRequestedStateChangedEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs::get_DidRequestedSizeChange()
    @_property
    def did_requested_size_change(self) -> bool: ...

@typing.final
class PopupWindowSiteBridge(DesktopSiteBridge):
    # System.Boolean Microsoft.UI.Content.PopupWindowSiteBridge::get_Anchored()
    @_property
    def anchored(self) -> bool: ...
    # System.Void Microsoft.UI.Content.PopupWindowSiteBridge::put_Anchored(System.Boolean)
    @anchored.setter
    def anchored(self, value: bool) -> None: ...

class ProcessStarter_Static(winrt._winrt.IInspectable_Static):
    # System.Void Microsoft.UI.Content.ProcessStarter::StartProcess(System.String,System.String,System.UInt32&)
    def start_process(cls, executable_path: str, connection_info: str, /) -> winrt.system.UInt32: ...

class ProcessStarter(winrt.system.Object, metaclass=ProcessStarter_Static):
    pass

@typing.final
class SystemVisualSiteBridge_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Content.SystemVisualSiteBridge Microsoft.UI.Content.SystemVisualSiteBridge::Create(Microsoft.UI.Dispatching.DispatcherQueue,Windows.UI.Composition.ContainerVisual,Microsoft.UI.WindowId)
    def create(cls, queue: microsoft_ui_dispatching.DispatcherQueue, host_visual: windows_ui_composition.ContainerVisual, parent_for_input_window_id: typing.Union[microsoft_ui.WindowId, typing.Tuple[winrt.system.UInt64]], /) -> SystemVisualSiteBridge: ...

@typing.final
class SystemVisualSiteBridge(winrt.system.Object, IContentSiteBridge, windows_foundation.IClosable, microsoft_ui.IClosableNotifier, metaclass=SystemVisualSiteBridge_Static):
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, exc_type: typing.Optional[typing.Type[BaseException]], exc_value: typing.Optional[BaseException], traceback: typing.Optional[types.TracebackType]) -> None: ...
    # System.Void Microsoft.UI.Content.SystemVisualSiteBridge::Close()
    def close(self) -> None: ...
    # System.Void Microsoft.UI.Content.SystemVisualSiteBridge::Connect(Microsoft.UI.Content.ContentIsland)
    def connect(self, content: ContentIsland, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.SystemVisualSiteBridge::add_Closed(Microsoft.UI.ClosableNotifierHandler)
    def add_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.SystemVisualSiteBridge::remove_Closed(Windows.Foundation.EventRegistrationToken)
    def remove_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.SystemVisualSiteBridge::add_FrameworkClosed(Microsoft.UI.ClosableNotifierHandler)
    def add_framework_closed(self, handler: microsoft_ui.ClosableNotifierHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.SystemVisualSiteBridge::remove_FrameworkClosed(Windows.Foundation.EventRegistrationToken)
    def remove_framework_closed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.Single Microsoft.UI.Content.SystemVisualSiteBridge::get_OverrideScale()
    @_property
    def override_scale(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Content.SystemVisualSiteBridge::put_OverrideScale(System.Single)
    @override_scale.setter
    def override_scale(self, value: winrt.system.Single) -> None: ...
    # Windows.Foundation.IReference`1<Microsoft.UI.Content.ContentLayoutDirection> Microsoft.UI.Content.SystemVisualSiteBridge::get_LayoutDirectionOverride()
    @_property
    def layout_direction_override(self) -> typing.Optional[ContentLayoutDirection]: ...
    # System.Void Microsoft.UI.Content.SystemVisualSiteBridge::put_LayoutDirectionOverride(Windows.Foundation.IReference`1<Microsoft.UI.Content.ContentLayoutDirection>)
    @layout_direction_override.setter
    def layout_direction_override(self, value: typing.Optional[ContentLayoutDirection]) -> None: ...
    # Microsoft.UI.Dispatching.DispatcherQueue Microsoft.UI.Content.SystemVisualSiteBridge::get_DispatcherQueue()
    @_property
    def dispatcher_queue(self) -> microsoft_ui_dispatching.DispatcherQueue: ...
    # Microsoft.UI.Content.ContentSite Microsoft.UI.Content.SystemVisualSiteBridge::get_Site()
    @_property
    def site(self) -> ContentSite: ...
    # System.Boolean Microsoft.UI.Content.SystemVisualSiteBridge::get_IsClosed()
    @_property
    def is_closed(self) -> bool: ...

@typing.final
class _IContentIslandEndpointConnectionPrivate: ...

class IContentIslandEndpointConnectionPrivate(winrt._winrt.IInspectable):
    # System.Void Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate::ConnectRemoteEndpoint(System.String)
    @abstractmethod
    def connect_remote_endpoint(self, site_connection_info: str, /) -> None: ...
    # System.String Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate::get_ConnectionInfo()
    @_property
    @abstractmethod
    def connection_info(self) -> str: ...
    # System.Boolean Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate::get_IsRemoteEndpointConnected()
    @_property
    @abstractmethod
    def is_remote_endpoint_connected(self) -> bool: ...

@typing.final
class _IContentNodeOwner: ...

class IContentNodeOwner(winrt._winrt.IInspectable):  # type: ignore[misc]
    pass

@typing.final
class _IContentSiteAutomation: ...

class IContentSiteAutomation(winrt._winrt.IInspectable):
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.IContentSiteAutomation::add_FragmentRootAutomationProviderRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteAutomation,Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>)
    @abstractmethod
    def add_fragment_root_automation_provider_requested(self, handler: windows_foundation.TypedEventHandler[IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.IContentSiteAutomation::remove_FragmentRootAutomationProviderRequested(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_fragment_root_automation_provider_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.IContentSiteAutomation::add_NextSiblingAutomationProviderRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteAutomation,Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>)
    @abstractmethod
    def add_next_sibling_automation_provider_requested(self, handler: windows_foundation.TypedEventHandler[IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.IContentSiteAutomation::remove_NextSiblingAutomationProviderRequested(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_next_sibling_automation_provider_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.IContentSiteAutomation::add_ParentAutomationProviderRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteAutomation,Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>)
    @abstractmethod
    def add_parent_automation_provider_requested(self, handler: windows_foundation.TypedEventHandler[IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.IContentSiteAutomation::remove_ParentAutomationProviderRequested(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_parent_automation_provider_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.IContentSiteAutomation::add_PreviousSiblingAutomationProviderRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteAutomation,Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs>)
    @abstractmethod
    def add_previous_sibling_automation_provider_requested(self, handler: windows_foundation.TypedEventHandler[IContentSiteAutomation, ContentSiteAutomationProviderRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.IContentSiteAutomation::remove_PreviousSiblingAutomationProviderRequested(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_previous_sibling_automation_provider_requested(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Microsoft.UI.Content.ContentAutomationOptions Microsoft.UI.Content.IContentSiteAutomation::get_AutomationOption()
    @_property
    @abstractmethod
    def automation_option(self) -> ContentAutomationOptions: ...
    # System.Void Microsoft.UI.Content.IContentSiteAutomation::put_AutomationOption(Microsoft.UI.Content.ContentAutomationOptions)
    @automation_option.setter
    @abstractmethod
    def automation_option(self, value: ContentAutomationOptions) -> None: ...
    # System.Object Microsoft.UI.Content.IContentSiteAutomation::get_AutomationProvider()
    @_property
    @abstractmethod
    def automation_provider(self) -> winrt.system.Object: ...

@typing.final
class _IContentSiteBridge: ...

class IContentSiteBridge(windows_foundation.IClosable, winrt._winrt.IInspectable):
    # Microsoft.UI.Dispatching.DispatcherQueue Microsoft.UI.Content.IContentSiteBridge::get_DispatcherQueue()
    @_property
    @abstractmethod
    def dispatcher_queue(self) -> microsoft_ui_dispatching.DispatcherQueue: ...
    # Windows.Foundation.IReference`1<Microsoft.UI.Content.ContentLayoutDirection> Microsoft.UI.Content.IContentSiteBridge::get_LayoutDirectionOverride()
    @_property
    @abstractmethod
    def layout_direction_override(self) -> typing.Optional[ContentLayoutDirection]: ...
    # System.Void Microsoft.UI.Content.IContentSiteBridge::put_LayoutDirectionOverride(Windows.Foundation.IReference`1<Microsoft.UI.Content.ContentLayoutDirection>)
    @layout_direction_override.setter
    @abstractmethod
    def layout_direction_override(self, value: typing.Optional[ContentLayoutDirection]) -> None: ...
    # System.Single Microsoft.UI.Content.IContentSiteBridge::get_OverrideScale()
    @_property
    @abstractmethod
    def override_scale(self) -> winrt.system.Single: ...
    # System.Void Microsoft.UI.Content.IContentSiteBridge::put_OverrideScale(System.Single)
    @override_scale.setter
    @abstractmethod
    def override_scale(self, value: winrt.system.Single) -> None: ...

@typing.final
class _IContentSiteBridgeEndpointConnectionPrivate: ...

class IContentSiteBridgeEndpointConnectionPrivate(winrt._winrt.IInspectable):
    # System.Void Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate::AcceptRemoteEndpoint(System.String)
    @abstractmethod
    def accept_remote_endpoint(self, island_connection_info: str, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate::add_RemoteEndpointConnecting(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate,Microsoft.UI.Content.EndpointConnectionEventArgs>)
    @abstractmethod
    def add_remote_endpoint_connecting(self, handler: windows_foundation.TypedEventHandler[IContentSiteBridgeEndpointConnectionPrivate, EndpointConnectionEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate::remove_RemoteEndpointConnecting(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_remote_endpoint_connecting(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate::add_RemoteEndpointDisconnected(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate,Microsoft.UI.Content.EndpointConnectionEventArgs>)
    @abstractmethod
    def add_remote_endpoint_disconnected(self, handler: windows_foundation.TypedEventHandler[IContentSiteBridgeEndpointConnectionPrivate, EndpointConnectionEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate::remove_RemoteEndpointDisconnected(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_remote_endpoint_disconnected(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate::add_RemoteEndpointRequestedStateChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate,Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs>)
    @abstractmethod
    def add_remote_endpoint_requested_state_changed(self, handler: windows_foundation.TypedEventHandler[IContentSiteBridgeEndpointConnectionPrivate, EndpointRequestedStateChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate::remove_RemoteEndpointRequestedStateChanged(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_remote_endpoint_requested_state_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # System.String Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate::get_ConnectionInfo()
    @_property
    @abstractmethod
    def connection_info(self) -> str: ...
    # System.Boolean Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate::get_IsRemoteEndpointConnected()
    @_property
    @abstractmethod
    def is_remote_endpoint_connected(self) -> bool: ...

@typing.final
class _IContentSiteInput: ...

class IContentSiteInput(winrt._winrt.IInspectable):
    # System.Boolean Microsoft.UI.Content.IContentSiteInput::get_ProcessesKeyboardInput()
    @_property
    @abstractmethod
    def processes_keyboard_input(self) -> bool: ...
    # System.Void Microsoft.UI.Content.IContentSiteInput::put_ProcessesKeyboardInput(System.Boolean)
    @processes_keyboard_input.setter
    @abstractmethod
    def processes_keyboard_input(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Content.IContentSiteInput::get_ProcessesPointerInput()
    @_property
    @abstractmethod
    def processes_pointer_input(self) -> bool: ...
    # System.Void Microsoft.UI.Content.IContentSiteInput::put_ProcessesPointerInput(System.Boolean)
    @processes_pointer_input.setter
    @abstractmethod
    def processes_pointer_input(self, value: bool) -> None: ...

@typing.final
class _IContentSiteLink: ...

class IContentSiteLink(winrt._winrt.IInspectable):
    # Microsoft.UI.Content.ContentIsland Microsoft.UI.Content.IContentSiteLink::get_Parent()
    @_property
    @abstractmethod
    def parent(self) -> ContentIsland: ...

