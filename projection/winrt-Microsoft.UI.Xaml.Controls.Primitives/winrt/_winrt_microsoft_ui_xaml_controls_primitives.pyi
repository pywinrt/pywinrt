# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.microsoft.ui.composition as microsoft_ui_composition
import winrt.microsoft.ui.input as microsoft_ui_input
import winrt.microsoft.ui.xaml as microsoft_ui_xaml
import winrt.microsoft.ui.xaml.automation.peers as microsoft_ui_xaml_automation_peers
import winrt.microsoft.ui.xaml.controls as microsoft_ui_xaml_controls
import winrt.microsoft.ui.xaml.data as microsoft_ui_xaml_data
import winrt.microsoft.ui.xaml.input as microsoft_ui_xaml_input
import winrt.microsoft.ui.xaml.media as microsoft_ui_xaml_media
import winrt.microsoft.ui.xaml.media.animation as microsoft_ui_xaml_media_animation
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.foundation.numerics as windows_foundation_numerics
import winrt.windows.ui as windows_ui
import winrt.windows.ui.xaml.interop as windows_ui_xaml_interop

from ._winrt_microsoft_ui_xaml_controls_primitives_2 import (
    ColorPickerSlider,
    TabViewListView,
)

from winrt.microsoft.ui.xaml.controls.primitives import AnimationDirection, ComponentResourceLocation, CornerRadiusFilterKind, CornerRadiusToThicknessConverterKind, EdgeTransitionLocation, FlyoutPlacementMode, FlyoutShowMode, GeneratorDirection, GroupHeaderPlacement, ListViewItemPresenterCheckMode, ListViewItemPresenterSelectionIndicatorMode, PlacementMode, PopupPlacementMode, ScrollEventType, ScrollSnapPointsAlignment, ScrollingIndicatorMode, SliderSnapsTo, SnapPointsAlignment, TickPlacement
from winrt.microsoft.ui.xaml.controls.primitives import DragCompletedEventHandler, DragDeltaEventHandler, DragStartedEventHandler, ItemsChangedEventHandler, RangeBaseValueChangedEventHandler, ScrollEventHandler

Self = typing.TypeVar('Self')

@typing.final
class GeneratorPosition:
    index: winrt.system.Int32
    offset: winrt.system.Int32
    def __init__(self, index: winrt.system.Int32 = 0, offset: winrt.system.Int32 = 0) -> None: ...

@typing.final
class AppBarButtonTemplateSettings(microsoft_ui_xaml.DependencyObject):
    @_property
    def keyboard_accelerator_text_min_width(self) -> winrt.system.Double: ...

@typing.final
class AppBarTemplateSettings(microsoft_ui_xaml.DependencyObject):
    @_property
    def clip_rect(self) -> windows_foundation.Rect: ...
    @_property
    def compact_root_margin(self) -> microsoft_ui_xaml.Thickness: ...
    @_property
    def compact_vertical_delta(self) -> winrt.system.Double: ...
    @_property
    def hidden_root_margin(self) -> microsoft_ui_xaml.Thickness: ...
    @_property
    def hidden_vertical_delta(self) -> winrt.system.Double: ...
    @_property
    def minimal_root_margin(self) -> microsoft_ui_xaml.Thickness: ...
    @_property
    def minimal_vertical_delta(self) -> winrt.system.Double: ...
    @_property
    def negative_compact_vertical_delta(self) -> winrt.system.Double: ...
    @_property
    def negative_hidden_vertical_delta(self) -> winrt.system.Double: ...
    @_property
    def negative_minimal_vertical_delta(self) -> winrt.system.Double: ...

@typing.final
class AppBarToggleButtonTemplateSettings(microsoft_ui_xaml.DependencyObject):
    @_property
    def keyboard_accelerator_text_min_width(self) -> winrt.system.Double: ...

@typing.final
class AutoSuggestBoxHelper_Static(type):
    def get_keep_interior_corners_square(cls, auto_suggest_box: microsoft_ui_xaml_controls.AutoSuggestBox, /) -> bool: ...
    def set_keep_interior_corners_square(cls, auto_suggest_box: microsoft_ui_xaml_controls.AutoSuggestBox, value: bool, /) -> None: ...
    @_property
    def keep_interior_corners_square_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class AutoSuggestBoxHelper(winrt.system.Object, metaclass=AutoSuggestBoxHelper_Static):
    pass

class ButtonBase_Static(microsoft_ui_xaml_controls.ContentControl_Static):
    @_property
    @typing.final
    def click_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def command_parameter_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def command_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def is_pointer_over_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def is_pressed_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ButtonBase(microsoft_ui_xaml_controls.ContentControl, metaclass=ButtonBase_Static):
    @typing.final
    def add_click(self, handler: microsoft_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_click(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def command_parameter(self) -> winrt.system.Object: ...
    @command_parameter.setter
    @typing.final
    def command_parameter(self, value: winrt.system.Object) -> None: ...
    @_property
    def command(self) -> microsoft_ui_xaml_input.ICommand: ...
    @command.setter
    @typing.final
    def command(self, value: microsoft_ui_xaml_input.ImplementsICommand) -> None: ...
    @_property
    def click_mode(self) -> microsoft_ui_xaml_controls.ClickMode: ...
    @click_mode.setter
    @typing.final
    def click_mode(self, value: microsoft_ui_xaml_controls.ClickMode) -> None: ...
    @_property
    @typing.final
    def is_pointer_over(self) -> bool: ...
    @_property
    @typing.final
    def is_pressed(self) -> bool: ...

@typing.final
class CalendarPanel(microsoft_ui_xaml_controls.Panel):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class CalendarViewTemplateSettings(microsoft_ui_xaml.DependencyObject):
    @_property
    def center_x(self) -> winrt.system.Double: ...
    @_property
    def center_y(self) -> winrt.system.Double: ...
    @_property
    def clip_rect(self) -> windows_foundation.Rect: ...
    @_property
    def has_more_content_after(self) -> bool: ...
    @_property
    def has_more_content_before(self) -> bool: ...
    @_property
    def has_more_views(self) -> bool: ...
    @_property
    def header_text(self) -> str: ...
    @_property
    def min_view_width(self) -> winrt.system.Double: ...
    @_property
    def week_day1(self) -> str: ...
    @_property
    def week_day2(self) -> str: ...
    @_property
    def week_day3(self) -> str: ...
    @_property
    def week_day4(self) -> str: ...
    @_property
    def week_day5(self) -> str: ...
    @_property
    def week_day6(self) -> str: ...
    @_property
    def week_day7(self) -> str: ...

class CarouselPanel_Static(microsoft_ui_xaml_controls.VirtualizingPanel_Static):
    pass

class CarouselPanel(microsoft_ui_xaml_controls.VirtualizingPanel, ImplementsIScrollSnapPointsInfo, metaclass=CarouselPanel_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    def get_irregular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Sequence[winrt.system.Single]: ...
    def get_regular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Tuple[winrt.system.Single, winrt.system.Single]: ...
    @typing.final
    def line_down(self) -> None: ...
    @typing.final
    def line_left(self) -> None: ...
    @typing.final
    def line_right(self) -> None: ...
    @typing.final
    def line_up(self) -> None: ...
    @typing.final
    def make_visible(self, visual: microsoft_ui_xaml.UIElement, rectangle: windows_foundation.Rect, /) -> windows_foundation.Rect: ...
    @typing.final
    def mouse_wheel_down(self) -> None: ...
    @typing.final
    def mouse_wheel_left(self) -> None: ...
    @typing.final
    def mouse_wheel_right(self) -> None: ...
    @typing.final
    def mouse_wheel_up(self) -> None: ...
    @typing.final
    def page_down(self) -> None: ...
    @typing.final
    def page_left(self) -> None: ...
    @typing.final
    def page_right(self) -> None: ...
    @typing.final
    def page_up(self) -> None: ...
    @typing.final
    def set_horizontal_offset(self, offset: winrt.system.Double, /) -> None: ...
    @typing.final
    def set_vertical_offset(self, offset: winrt.system.Double, /) -> None: ...
    @typing.final
    def add_horizontal_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_horizontal_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_vertical_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_vertical_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def scroll_owner(self) -> winrt.system.Object: ...
    @scroll_owner.setter
    @typing.final
    def scroll_owner(self, value: winrt.system.Object) -> None: ...
    @_property
    def can_vertically_scroll(self) -> bool: ...
    @can_vertically_scroll.setter
    @typing.final
    def can_vertically_scroll(self, value: bool) -> None: ...
    @_property
    def can_horizontally_scroll(self) -> bool: ...
    @can_horizontally_scroll.setter
    @typing.final
    def can_horizontally_scroll(self, value: bool) -> None: ...
    @_property
    @typing.final
    def extent_height(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def extent_width(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def horizontal_offset(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def vertical_offset(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def viewport_height(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def viewport_width(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def are_horizontal_snap_points_regular(self) -> bool: ...
    @_property
    @typing.final
    def are_vertical_snap_points_regular(self) -> bool: ...

class ColorSpectrum_Static(microsoft_ui_xaml_controls.Control_Static):
    @_property
    @typing.final
    def color_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def components_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def hsv_color_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def max_hue_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def max_saturation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def max_value_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def min_hue_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def min_saturation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def min_value_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def shape_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ColorSpectrum(microsoft_ui_xaml_controls.Control, metaclass=ColorSpectrum_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    def add_color_changed(self, handler: windows_foundation.TypedEventHandler[ColorSpectrum, microsoft_ui_xaml_controls.ColorChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_color_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def shape(self) -> microsoft_ui_xaml_controls.ColorSpectrumShape: ...
    @shape.setter
    @typing.final
    def shape(self, value: microsoft_ui_xaml_controls.ColorSpectrumShape) -> None: ...
    @_property
    def min_value(self) -> winrt.system.Int32: ...
    @min_value.setter
    @typing.final
    def min_value(self, value: winrt.system.Int32) -> None: ...
    @_property
    def min_saturation(self) -> winrt.system.Int32: ...
    @min_saturation.setter
    @typing.final
    def min_saturation(self, value: winrt.system.Int32) -> None: ...
    @_property
    def min_hue(self) -> winrt.system.Int32: ...
    @min_hue.setter
    @typing.final
    def min_hue(self, value: winrt.system.Int32) -> None: ...
    @_property
    def max_value(self) -> winrt.system.Int32: ...
    @max_value.setter
    @typing.final
    def max_value(self, value: winrt.system.Int32) -> None: ...
    @_property
    def max_saturation(self) -> winrt.system.Int32: ...
    @max_saturation.setter
    @typing.final
    def max_saturation(self, value: winrt.system.Int32) -> None: ...
    @_property
    def max_hue(self) -> winrt.system.Int32: ...
    @max_hue.setter
    @typing.final
    def max_hue(self, value: winrt.system.Int32) -> None: ...
    @_property
    def hsv_color(self) -> windows_foundation_numerics.Vector4: ...
    @hsv_color.setter
    @typing.final
    def hsv_color(self, value: windows_foundation_numerics.Vector4) -> None: ...
    @_property
    def components(self) -> microsoft_ui_xaml_controls.ColorSpectrumComponents: ...
    @components.setter
    @typing.final
    def components(self, value: microsoft_ui_xaml_controls.ColorSpectrumComponents) -> None: ...
    @_property
    def color(self) -> windows_ui.Color: ...
    @color.setter
    @typing.final
    def color(self, value: windows_ui.Color) -> None: ...

class ColumnMajorUniformToLargestGridLayout_Static(microsoft_ui_xaml_controls.NonVirtualizingLayout_Static):
    @_property
    @typing.final
    def column_spacing_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def max_columns_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def row_spacing_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ColumnMajorUniformToLargestGridLayout(microsoft_ui_xaml_controls.NonVirtualizingLayout, metaclass=ColumnMajorUniformToLargestGridLayout_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @_property
    def row_spacing(self) -> winrt.system.Double: ...
    @row_spacing.setter
    @typing.final
    def row_spacing(self, value: winrt.system.Double) -> None: ...
    @_property
    def max_columns(self) -> winrt.system.Int32: ...
    @max_columns.setter
    @typing.final
    def max_columns(self, value: winrt.system.Int32) -> None: ...
    @_property
    def column_spacing(self) -> winrt.system.Double: ...
    @column_spacing.setter
    @typing.final
    def column_spacing(self, value: winrt.system.Double) -> None: ...

@typing.final
class ComboBoxHelper_Static(type):
    def get_keep_interior_corners_square(cls, combo_box: microsoft_ui_xaml_controls.ComboBox, /) -> bool: ...
    def set_keep_interior_corners_square(cls, combo_box: microsoft_ui_xaml_controls.ComboBox, value: bool, /) -> None: ...
    @_property
    def keep_interior_corners_square_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class ComboBoxHelper(winrt.system.Object, metaclass=ComboBoxHelper_Static):
    pass

@typing.final
class ComboBoxTemplateSettings(microsoft_ui_xaml.DependencyObject):
    @_property
    def drop_down_closed_height(self) -> winrt.system.Double: ...
    @_property
    def drop_down_content_min_width(self) -> winrt.system.Double: ...
    @_property
    def drop_down_offset(self) -> winrt.system.Double: ...
    @_property
    def drop_down_opened_height(self) -> winrt.system.Double: ...
    @_property
    def selected_item_direction(self) -> AnimationDirection: ...

class CommandBarFlyoutCommandBar_Static(microsoft_ui_xaml_controls.CommandBar_Static):
    @_property
    @typing.final
    def system_backdrop_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class CommandBarFlyoutCommandBar(microsoft_ui_xaml_controls.CommandBar, metaclass=CommandBarFlyoutCommandBar_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @_property
    @typing.final
    def flyout_template_settings(self) -> CommandBarFlyoutCommandBarTemplateSettings: ...
    @_property
    def system_backdrop(self) -> microsoft_ui_xaml_media.SystemBackdrop: ...
    @system_backdrop.setter
    @typing.final
    def system_backdrop(self, value: microsoft_ui_xaml_media.SystemBackdrop) -> None: ...

@typing.final
class CommandBarFlyoutCommandBarAutomationProperties_Static(type):
    def get_control_type(cls, element: microsoft_ui_xaml.UIElement, /) -> microsoft_ui_xaml_automation_peers.AutomationControlType: ...
    def set_control_type(cls, element: microsoft_ui_xaml.UIElement, value: microsoft_ui_xaml_automation_peers.AutomationControlType, /) -> None: ...
    @_property
    def control_type_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class CommandBarFlyoutCommandBarAutomationProperties(winrt.system.Object, metaclass=CommandBarFlyoutCommandBarAutomationProperties_Static):
    pass

@typing.final
class CommandBarFlyoutCommandBarTemplateSettings(microsoft_ui_xaml.DependencyObject):
    @_property
    def close_animation_end_position(self) -> winrt.system.Double: ...
    @_property
    def content_clip_rect(self) -> windows_foundation.Rect: ...
    @_property
    def current_width(self) -> winrt.system.Double: ...
    @_property
    def expand_down_animation_end_position(self) -> winrt.system.Double: ...
    @_property
    def expand_down_animation_hold_position(self) -> winrt.system.Double: ...
    @_property
    def expand_down_animation_start_position(self) -> winrt.system.Double: ...
    @_property
    def expand_down_overflow_vertical_position(self) -> winrt.system.Double: ...
    @_property
    def expand_up_animation_end_position(self) -> winrt.system.Double: ...
    @_property
    def expand_up_animation_hold_position(self) -> winrt.system.Double: ...
    @_property
    def expand_up_animation_start_position(self) -> winrt.system.Double: ...
    @_property
    def expand_up_overflow_vertical_position(self) -> winrt.system.Double: ...
    @_property
    def expanded_width(self) -> winrt.system.Double: ...
    @_property
    def open_animation_end_position(self) -> winrt.system.Double: ...
    @_property
    def open_animation_start_position(self) -> winrt.system.Double: ...
    @_property
    def overflow_content_clip_rect(self) -> windows_foundation.Rect: ...
    @_property
    def width_expansion_animation_end_position(self) -> winrt.system.Double: ...
    @_property
    def width_expansion_animation_start_position(self) -> winrt.system.Double: ...
    @_property
    def width_expansion_delta(self) -> winrt.system.Double: ...
    @_property
    def width_expansion_more_button_animation_end_position(self) -> winrt.system.Double: ...
    @_property
    def width_expansion_more_button_animation_start_position(self) -> winrt.system.Double: ...

@typing.final
class CommandBarTemplateSettings(microsoft_ui_xaml.DependencyObject):
    @_property
    def content_height(self) -> winrt.system.Double: ...
    @_property
    def effective_overflow_button_visibility(self) -> microsoft_ui_xaml.Visibility: ...
    @_property
    def negative_overflow_content_height(self) -> winrt.system.Double: ...
    @_property
    def overflow_content_clip_rect(self) -> windows_foundation.Rect: ...
    @_property
    def overflow_content_compact_y_translation(self) -> winrt.system.Double: ...
    @_property
    def overflow_content_height(self) -> winrt.system.Double: ...
    @_property
    def overflow_content_hidden_y_translation(self) -> winrt.system.Double: ...
    @_property
    def overflow_content_horizontal_offset(self) -> winrt.system.Double: ...
    @_property
    def overflow_content_max_height(self) -> winrt.system.Double: ...
    @_property
    def overflow_content_max_width(self) -> winrt.system.Double: ...
    @_property
    def overflow_content_min_width(self) -> winrt.system.Double: ...
    @_property
    def overflow_content_minimal_y_translation(self) -> winrt.system.Double: ...

@typing.final
class CornerRadiusFilterConverter_Static(microsoft_ui_xaml.DependencyObject_Static):
    @_property
    def filter_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def scale_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class CornerRadiusFilterConverter(microsoft_ui_xaml.DependencyObject, microsoft_ui_xaml_data.ImplementsIValueConverter, metaclass=CornerRadiusFilterConverter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    def convert(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    def convert_back(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    @_property
    def scale(self) -> winrt.system.Double: ...
    @scale.setter
    def scale(self, value: winrt.system.Double) -> None: ...
    @_property
    def filter(self) -> CornerRadiusFilterKind: ...
    @filter.setter
    def filter(self, value: CornerRadiusFilterKind) -> None: ...

@typing.final
class CornerRadiusToThicknessConverter_Static(microsoft_ui_xaml.DependencyObject_Static):
    @_property
    def conversion_kind_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def multiplier_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class CornerRadiusToThicknessConverter(microsoft_ui_xaml.DependencyObject, microsoft_ui_xaml_data.ImplementsIValueConverter, metaclass=CornerRadiusToThicknessConverter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    def convert(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    def convert_back(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    @_property
    def multiplier(self) -> winrt.system.Double: ...
    @multiplier.setter
    def multiplier(self, value: winrt.system.Double) -> None: ...
    @_property
    def conversion_kind(self) -> CornerRadiusToThicknessConverterKind: ...
    @conversion_kind.setter
    def conversion_kind(self, value: CornerRadiusToThicknessConverterKind) -> None: ...

class DragCompletedEventArgs_Static(microsoft_ui_xaml.RoutedEventArgs_Static):
    pass

class DragCompletedEventArgs(microsoft_ui_xaml.RoutedEventArgs, metaclass=DragCompletedEventArgs_Static):
    def __new__(cls: typing.Type[Self], horizontal_change: winrt.system.Double, vertical_change: winrt.system.Double, canceled: bool) -> Self: ...
    @_property
    @typing.final
    def canceled(self) -> bool: ...
    @_property
    @typing.final
    def horizontal_change(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def vertical_change(self) -> winrt.system.Double: ...

class DragDeltaEventArgs_Static(microsoft_ui_xaml.RoutedEventArgs_Static):
    pass

class DragDeltaEventArgs(microsoft_ui_xaml.RoutedEventArgs, metaclass=DragDeltaEventArgs_Static):
    def __new__(cls: typing.Type[Self], horizontal_change: winrt.system.Double, vertical_change: winrt.system.Double) -> Self: ...
    @_property
    @typing.final
    def horizontal_change(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def vertical_change(self) -> winrt.system.Double: ...

class DragStartedEventArgs_Static(microsoft_ui_xaml.RoutedEventArgs_Static):
    pass

class DragStartedEventArgs(microsoft_ui_xaml.RoutedEventArgs, metaclass=DragStartedEventArgs_Static):
    def __new__(cls: typing.Type[Self], horizontal_offset: winrt.system.Double, vertical_offset: winrt.system.Double) -> Self: ...
    @_property
    @typing.final
    def horizontal_offset(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def vertical_offset(self) -> winrt.system.Double: ...

class FlyoutBase_Static(microsoft_ui_xaml.DependencyObject_Static):
    def get_attached_flyout(cls, element: microsoft_ui_xaml.FrameworkElement, /) -> FlyoutBase: ...
    def set_attached_flyout(cls, element: microsoft_ui_xaml.FrameworkElement, value: FlyoutBase, /) -> None: ...
    def show_attached_flyout(cls, flyout_owner: microsoft_ui_xaml.FrameworkElement, /) -> None: ...
    @_property
    @typing.final
    def allow_focus_on_interaction_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def allow_focus_when_disabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def are_open_close_animations_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def attached_flyout_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def element_sound_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def input_device_prefers_primary_commands_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def is_open_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def light_dismiss_overlay_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def overlay_input_pass_through_element_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def placement_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def should_constrain_to_root_bounds_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def show_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def target_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def system_backdrop_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class FlyoutBase(microsoft_ui_xaml.DependencyObject, metaclass=FlyoutBase_Static):
    def _create_presenter(self) -> microsoft_ui_xaml_controls.Control: ...
    @typing.final
    def hide(self) -> None: ...
    def _on_process_keyboard_accelerators(self, args: microsoft_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs, /) -> None: ...
    @typing.final
    def show_at(self, placement_target: microsoft_ui_xaml.FrameworkElement, /) -> None: ...
    @typing.final
    def show_at_with_options(self, placement_target: microsoft_ui_xaml.DependencyObject, show_options: FlyoutShowOptions, /) -> None: ...
    @typing.final
    def try_invoke_keyboard_accelerator(self, args: microsoft_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs, /) -> None: ...
    @typing.final
    def add_closed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_closing(self, handler: windows_foundation.TypedEventHandler[FlyoutBase, FlyoutBaseClosingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_closing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_opened(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_opening(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_opening(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def xaml_root(self) -> microsoft_ui_xaml.XamlRoot: ...
    @xaml_root.setter
    @typing.final
    def xaml_root(self, value: microsoft_ui_xaml.XamlRoot) -> None: ...
    @_property
    def show_mode(self) -> FlyoutShowMode: ...
    @show_mode.setter
    @typing.final
    def show_mode(self, value: FlyoutShowMode) -> None: ...
    @_property
    def should_constrain_to_root_bounds(self) -> bool: ...
    @should_constrain_to_root_bounds.setter
    @typing.final
    def should_constrain_to_root_bounds(self, value: bool) -> None: ...
    @_property
    def placement(self) -> FlyoutPlacementMode: ...
    @placement.setter
    @typing.final
    def placement(self, value: FlyoutPlacementMode) -> None: ...
    @_property
    def overlay_input_pass_through_element(self) -> microsoft_ui_xaml.DependencyObject: ...
    @overlay_input_pass_through_element.setter
    @typing.final
    def overlay_input_pass_through_element(self, value: microsoft_ui_xaml.DependencyObject) -> None: ...
    @_property
    def light_dismiss_overlay_mode(self) -> microsoft_ui_xaml_controls.LightDismissOverlayMode: ...
    @light_dismiss_overlay_mode.setter
    @typing.final
    def light_dismiss_overlay_mode(self, value: microsoft_ui_xaml_controls.LightDismissOverlayMode) -> None: ...
    @_property
    def element_sound_mode(self) -> microsoft_ui_xaml.ElementSoundMode: ...
    @element_sound_mode.setter
    @typing.final
    def element_sound_mode(self, value: microsoft_ui_xaml.ElementSoundMode) -> None: ...
    @_property
    def are_open_close_animations_enabled(self) -> bool: ...
    @are_open_close_animations_enabled.setter
    @typing.final
    def are_open_close_animations_enabled(self, value: bool) -> None: ...
    @_property
    def allow_focus_when_disabled(self) -> bool: ...
    @allow_focus_when_disabled.setter
    @typing.final
    def allow_focus_when_disabled(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    @typing.final
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    @typing.final
    def input_device_prefers_primary_commands(self) -> bool: ...
    @_property
    @typing.final
    def is_constrained_to_root_bounds(self) -> bool: ...
    @_property
    @typing.final
    def is_open(self) -> bool: ...
    @_property
    @typing.final
    def target(self) -> microsoft_ui_xaml.FrameworkElement: ...
    @_property
    def system_backdrop(self) -> microsoft_ui_xaml_media.SystemBackdrop: ...
    @system_backdrop.setter
    @typing.final
    def system_backdrop(self, value: microsoft_ui_xaml_media.SystemBackdrop) -> None: ...

@typing.final
class FlyoutBaseClosingEventArgs(winrt.system.Object):
    @_property
    def cancel(self) -> bool: ...
    @cancel.setter
    def cancel(self, value: bool) -> None: ...

class FlyoutShowOptions_Static(type):
    pass

class FlyoutShowOptions(winrt.system.Object, metaclass=FlyoutShowOptions_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @_property
    def show_mode(self) -> FlyoutShowMode: ...
    @show_mode.setter
    @typing.final
    def show_mode(self, value: FlyoutShowMode) -> None: ...
    @_property
    def position(self) -> typing.Optional[windows_foundation.Point]: ...
    @position.setter
    @typing.final
    def position(self, value: typing.Optional[windows_foundation.Point]) -> None: ...
    @_property
    def placement(self) -> FlyoutPlacementMode: ...
    @placement.setter
    @typing.final
    def placement(self, value: FlyoutPlacementMode) -> None: ...
    @_property
    def exclusion_rect(self) -> typing.Optional[windows_foundation.Rect]: ...
    @exclusion_rect.setter
    @typing.final
    def exclusion_rect(self, value: typing.Optional[windows_foundation.Rect]) -> None: ...

@typing.final
class GeneratorPositionHelper_Static(type):
    def from_index_and_offset(cls, index: winrt.system.Int32, offset: winrt.system.Int32, /) -> GeneratorPosition: ...

@typing.final
class GeneratorPositionHelper(winrt.system.Object, metaclass=GeneratorPositionHelper_Static):
    pass

class GridViewItemPresenter_Static(microsoft_ui_xaml_controls.ContentPresenter_Static):
    @_property
    @typing.final
    def check_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_hint_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_selecting_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def content_margin_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def disabled_opacity_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def drag_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def drag_foreground_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def drag_opacity_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def focus_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def grid_view_item_presenter_horizontal_content_alignment_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def grid_view_item_presenter_padding_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def grid_view_item_presenter_vertical_content_alignment_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def placeholder_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def pointer_over_background_margin_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def pointer_over_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def reorder_hint_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_border_thickness_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_foreground_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_pointer_over_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_pointer_over_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selection_check_mark_visual_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class GridViewItemPresenter(microsoft_ui_xaml_controls.ContentPresenter, metaclass=GridViewItemPresenter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @_property
    def selection_check_mark_visual_enabled(self) -> bool: ...
    @selection_check_mark_visual_enabled.setter
    @typing.final
    def selection_check_mark_visual_enabled(self, value: bool) -> None: ...
    @_property
    def selected_pointer_over_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @selected_pointer_over_border_brush.setter
    @typing.final
    def selected_pointer_over_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_pointer_over_background(self) -> microsoft_ui_xaml_media.Brush: ...
    @selected_pointer_over_background.setter
    @typing.final
    def selected_pointer_over_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_foreground(self) -> microsoft_ui_xaml_media.Brush: ...
    @selected_foreground.setter
    @typing.final
    def selected_foreground(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_border_thickness(self) -> microsoft_ui_xaml.Thickness: ...
    @selected_border_thickness.setter
    @typing.final
    def selected_border_thickness(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    @_property
    def selected_background(self) -> microsoft_ui_xaml_media.Brush: ...
    @selected_background.setter
    @typing.final
    def selected_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def reorder_hint_offset(self) -> winrt.system.Double: ...
    @reorder_hint_offset.setter
    @typing.final
    def reorder_hint_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def pointer_over_background_margin(self) -> microsoft_ui_xaml.Thickness: ...
    @pointer_over_background_margin.setter
    @typing.final
    def pointer_over_background_margin(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    @_property
    def pointer_over_background(self) -> microsoft_ui_xaml_media.Brush: ...
    @pointer_over_background.setter
    @typing.final
    def pointer_over_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def placeholder_background(self) -> microsoft_ui_xaml_media.Brush: ...
    @placeholder_background.setter
    @typing.final
    def placeholder_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def grid_view_item_presenter_vertical_content_alignment(self) -> microsoft_ui_xaml.VerticalAlignment: ...
    @grid_view_item_presenter_vertical_content_alignment.setter
    @typing.final
    def grid_view_item_presenter_vertical_content_alignment(self, value: microsoft_ui_xaml.VerticalAlignment) -> None: ...
    @_property
    def grid_view_item_presenter_padding(self) -> microsoft_ui_xaml.Thickness: ...
    @grid_view_item_presenter_padding.setter
    @typing.final
    def grid_view_item_presenter_padding(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    @_property
    def grid_view_item_presenter_horizontal_content_alignment(self) -> microsoft_ui_xaml.HorizontalAlignment: ...
    @grid_view_item_presenter_horizontal_content_alignment.setter
    @typing.final
    def grid_view_item_presenter_horizontal_content_alignment(self, value: microsoft_ui_xaml.HorizontalAlignment) -> None: ...
    @_property
    def focus_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @focus_border_brush.setter
    @typing.final
    def focus_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def drag_opacity(self) -> winrt.system.Double: ...
    @drag_opacity.setter
    @typing.final
    def drag_opacity(self, value: winrt.system.Double) -> None: ...
    @_property
    def drag_foreground(self) -> microsoft_ui_xaml_media.Brush: ...
    @drag_foreground.setter
    @typing.final
    def drag_foreground(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def drag_background(self) -> microsoft_ui_xaml_media.Brush: ...
    @drag_background.setter
    @typing.final
    def drag_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def disabled_opacity(self) -> winrt.system.Double: ...
    @disabled_opacity.setter
    @typing.final
    def disabled_opacity(self, value: winrt.system.Double) -> None: ...
    @_property
    def content_margin(self) -> microsoft_ui_xaml.Thickness: ...
    @content_margin.setter
    @typing.final
    def content_margin(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    @_property
    def check_selecting_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_selecting_brush.setter
    @typing.final
    def check_selecting_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_hint_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_hint_brush.setter
    @typing.final
    def check_hint_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_brush.setter
    @typing.final
    def check_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...

@typing.final
class GridViewItemTemplateSettings(microsoft_ui_xaml.DependencyObject):
    @_property
    def drag_items_count(self) -> winrt.system.Int32: ...

class InfoBarPanel_Static(microsoft_ui_xaml_controls.Panel_Static):
    def get_horizontal_orientation_margin(cls, object: microsoft_ui_xaml.DependencyObject, /) -> microsoft_ui_xaml.Thickness: ...
    def get_vertical_orientation_margin(cls, object: microsoft_ui_xaml.DependencyObject, /) -> microsoft_ui_xaml.Thickness: ...
    def set_horizontal_orientation_margin(cls, object: microsoft_ui_xaml.DependencyObject, value: microsoft_ui_xaml.Thickness, /) -> None: ...
    def set_vertical_orientation_margin(cls, object: microsoft_ui_xaml.DependencyObject, value: microsoft_ui_xaml.Thickness, /) -> None: ...
    @_property
    @typing.final
    def horizontal_orientation_margin_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def horizontal_orientation_padding_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def vertical_orientation_margin_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def vertical_orientation_padding_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class InfoBarPanel(microsoft_ui_xaml_controls.Panel, metaclass=InfoBarPanel_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @_property
    def vertical_orientation_padding(self) -> microsoft_ui_xaml.Thickness: ...
    @vertical_orientation_padding.setter
    @typing.final
    def vertical_orientation_padding(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    @_property
    def horizontal_orientation_padding(self) -> microsoft_ui_xaml.Thickness: ...
    @horizontal_orientation_padding.setter
    @typing.final
    def horizontal_orientation_padding(self, value: microsoft_ui_xaml.Thickness) -> None: ...

@typing.final
class ItemsChangedEventArgs(winrt.system.Object):
    @_property
    def action(self) -> winrt.system.Int32: ...
    @_property
    def item_count(self) -> winrt.system.Int32: ...
    @_property
    def item_ui_count(self) -> winrt.system.Int32: ...
    @_property
    def old_position(self) -> GeneratorPosition: ...
    @_property
    def position(self) -> GeneratorPosition: ...

@typing.final
class JumpListItemBackgroundConverter_Static(microsoft_ui_xaml.DependencyObject_Static):
    @_property
    def disabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class JumpListItemBackgroundConverter(microsoft_ui_xaml.DependencyObject, microsoft_ui_xaml_data.ImplementsIValueConverter, metaclass=JumpListItemBackgroundConverter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    def convert(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    def convert_back(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    @_property
    def enabled(self) -> microsoft_ui_xaml_media.Brush: ...
    @enabled.setter
    def enabled(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def disabled(self) -> microsoft_ui_xaml_media.Brush: ...
    @disabled.setter
    def disabled(self, value: microsoft_ui_xaml_media.Brush) -> None: ...

@typing.final
class JumpListItemForegroundConverter_Static(microsoft_ui_xaml.DependencyObject_Static):
    @_property
    def disabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class JumpListItemForegroundConverter(microsoft_ui_xaml.DependencyObject, microsoft_ui_xaml_data.ImplementsIValueConverter, metaclass=JumpListItemForegroundConverter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    def convert(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    def convert_back(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    @_property
    def enabled(self) -> microsoft_ui_xaml_media.Brush: ...
    @enabled.setter
    def enabled(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def disabled(self) -> microsoft_ui_xaml_media.Brush: ...
    @disabled.setter
    def disabled(self, value: microsoft_ui_xaml_media.Brush) -> None: ...

@typing.final
class LayoutInformation_Static(type):
    def get_available_size(cls, element: microsoft_ui_xaml.UIElement, /) -> windows_foundation.Size: ...
    def get_layout_exception_element(cls, dispatcher: winrt.system.Object, /) -> microsoft_ui_xaml.UIElement: ...
    def get_layout_slot(cls, element: microsoft_ui_xaml.FrameworkElement, /) -> windows_foundation.Rect: ...

@typing.final
class LayoutInformation(winrt.system.Object, metaclass=LayoutInformation_Static):
    pass

class ListViewItemPresenter_Static(microsoft_ui_xaml_controls.ContentPresenter_Static):
    @_property
    @typing.final
    def check_box_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_box_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_box_corner_radius_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_box_disabled_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_box_disabled_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_box_pointer_over_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_box_pointer_over_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_box_pressed_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_box_pressed_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_box_selected_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_box_selected_disabled_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_box_selected_pointer_over_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_box_selected_pressed_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_disabled_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_hint_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_pressed_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def check_selecting_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def content_margin_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def disabled_opacity_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def drag_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def drag_foreground_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def drag_opacity_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def focus_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def focus_secondary_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def list_view_item_presenter_horizontal_content_alignment_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def list_view_item_presenter_padding_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def list_view_item_presenter_vertical_content_alignment_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def placeholder_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def pointer_over_background_margin_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def pointer_over_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def pointer_over_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def pointer_over_foreground_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def pressed_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def reorder_hint_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def reveal_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def reveal_background_shows_above_content_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def reveal_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def reveal_border_thickness_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_border_thickness_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_disabled_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_disabled_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_foreground_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_inner_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_pointer_over_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_pointer_over_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_pressed_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_pressed_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selection_check_mark_visual_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selection_indicator_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selection_indicator_corner_radius_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selection_indicator_disabled_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selection_indicator_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selection_indicator_pointer_over_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selection_indicator_pressed_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selection_indicator_visual_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ListViewItemPresenter(microsoft_ui_xaml_controls.ContentPresenter, metaclass=ListViewItemPresenter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @_property
    def list_view_item_presenter_vertical_content_alignment(self) -> microsoft_ui_xaml.VerticalAlignment: ...
    @list_view_item_presenter_vertical_content_alignment.setter
    @typing.final
    def list_view_item_presenter_vertical_content_alignment(self, value: microsoft_ui_xaml.VerticalAlignment) -> None: ...
    @_property
    def list_view_item_presenter_padding(self) -> microsoft_ui_xaml.Thickness: ...
    @list_view_item_presenter_padding.setter
    @typing.final
    def list_view_item_presenter_padding(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    @_property
    def list_view_item_presenter_horizontal_content_alignment(self) -> microsoft_ui_xaml.HorizontalAlignment: ...
    @list_view_item_presenter_horizontal_content_alignment.setter
    @typing.final
    def list_view_item_presenter_horizontal_content_alignment(self, value: microsoft_ui_xaml.HorizontalAlignment) -> None: ...
    @_property
    def focus_secondary_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @focus_secondary_border_brush.setter
    @typing.final
    def focus_secondary_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def focus_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @focus_border_brush.setter
    @typing.final
    def focus_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def drag_opacity(self) -> winrt.system.Double: ...
    @drag_opacity.setter
    @typing.final
    def drag_opacity(self, value: winrt.system.Double) -> None: ...
    @_property
    def reveal_background(self) -> microsoft_ui_xaml_media.Brush: ...
    @reveal_background.setter
    @typing.final
    def reveal_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def drag_background(self) -> microsoft_ui_xaml_media.Brush: ...
    @drag_background.setter
    @typing.final
    def drag_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def disabled_opacity(self) -> winrt.system.Double: ...
    @disabled_opacity.setter
    @typing.final
    def disabled_opacity(self, value: winrt.system.Double) -> None: ...
    @_property
    def content_margin(self) -> microsoft_ui_xaml.Thickness: ...
    @content_margin.setter
    @typing.final
    def content_margin(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    @_property
    def check_selecting_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_selecting_brush.setter
    @typing.final
    def check_selecting_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_pressed_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_pressed_brush.setter
    @typing.final
    def check_pressed_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_mode(self) -> ListViewItemPresenterCheckMode: ...
    @check_mode.setter
    @typing.final
    def check_mode(self, value: ListViewItemPresenterCheckMode) -> None: ...
    @_property
    def check_hint_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_hint_brush.setter
    @typing.final
    def check_hint_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_box_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_box_border_brush.setter
    @typing.final
    def check_box_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_brush.setter
    @typing.final
    def check_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_box_selected_pressed_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_box_selected_pressed_brush.setter
    @typing.final
    def check_box_selected_pressed_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_box_selected_pointer_over_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_box_selected_pointer_over_brush.setter
    @typing.final
    def check_box_selected_pointer_over_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_box_selected_disabled_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_box_selected_disabled_brush.setter
    @typing.final
    def check_box_selected_disabled_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_box_selected_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_box_selected_brush.setter
    @typing.final
    def check_box_selected_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_box_pressed_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_box_pressed_brush.setter
    @typing.final
    def check_box_pressed_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selection_check_mark_visual_enabled(self) -> bool: ...
    @selection_check_mark_visual_enabled.setter
    @typing.final
    def selection_check_mark_visual_enabled(self, value: bool) -> None: ...
    @_property
    def check_box_pointer_over_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_box_pointer_over_brush.setter
    @typing.final
    def check_box_pointer_over_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_box_pointer_over_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_box_pointer_over_border_brush.setter
    @typing.final
    def check_box_pointer_over_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_box_disabled_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_box_disabled_brush.setter
    @typing.final
    def check_box_disabled_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_box_disabled_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_box_disabled_border_brush.setter
    @typing.final
    def check_box_disabled_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_box_corner_radius(self) -> microsoft_ui_xaml.CornerRadius: ...
    @check_box_corner_radius.setter
    @typing.final
    def check_box_corner_radius(self, value: microsoft_ui_xaml.CornerRadius) -> None: ...
    @_property
    def check_box_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_box_brush.setter
    @typing.final
    def check_box_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_disabled_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_disabled_brush.setter
    @typing.final
    def check_disabled_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def placeholder_background(self) -> microsoft_ui_xaml_media.Brush: ...
    @placeholder_background.setter
    @typing.final
    def placeholder_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_disabled_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @selected_disabled_border_brush.setter
    @typing.final
    def selected_disabled_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selection_indicator_pressed_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @selection_indicator_pressed_brush.setter
    @typing.final
    def selection_indicator_pressed_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selection_indicator_pointer_over_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @selection_indicator_pointer_over_brush.setter
    @typing.final
    def selection_indicator_pointer_over_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selection_indicator_mode(self) -> ListViewItemPresenterSelectionIndicatorMode: ...
    @selection_indicator_mode.setter
    @typing.final
    def selection_indicator_mode(self, value: ListViewItemPresenterSelectionIndicatorMode) -> None: ...
    @_property
    def selection_indicator_disabled_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @selection_indicator_disabled_brush.setter
    @typing.final
    def selection_indicator_disabled_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selection_indicator_corner_radius(self) -> microsoft_ui_xaml.CornerRadius: ...
    @selection_indicator_corner_radius.setter
    @typing.final
    def selection_indicator_corner_radius(self, value: microsoft_ui_xaml.CornerRadius) -> None: ...
    @_property
    def selection_indicator_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @selection_indicator_brush.setter
    @typing.final
    def selection_indicator_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def check_box_pressed_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @check_box_pressed_border_brush.setter
    @typing.final
    def check_box_pressed_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_pressed_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @selected_pressed_border_brush.setter
    @typing.final
    def selected_pressed_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_pressed_background(self) -> microsoft_ui_xaml_media.Brush: ...
    @selected_pressed_background.setter
    @typing.final
    def selected_pressed_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_pointer_over_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @selected_pointer_over_border_brush.setter
    @typing.final
    def selected_pointer_over_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_pointer_over_background(self) -> microsoft_ui_xaml_media.Brush: ...
    @selected_pointer_over_background.setter
    @typing.final
    def selected_pointer_over_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_inner_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @selected_inner_border_brush.setter
    @typing.final
    def selected_inner_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_foreground(self) -> microsoft_ui_xaml_media.Brush: ...
    @selected_foreground.setter
    @typing.final
    def selected_foreground(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selection_indicator_visual_enabled(self) -> bool: ...
    @selection_indicator_visual_enabled.setter
    @typing.final
    def selection_indicator_visual_enabled(self, value: bool) -> None: ...
    @_property
    def selected_disabled_background(self) -> microsoft_ui_xaml_media.Brush: ...
    @selected_disabled_background.setter
    @typing.final
    def selected_disabled_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_border_thickness(self) -> microsoft_ui_xaml.Thickness: ...
    @selected_border_thickness.setter
    @typing.final
    def selected_border_thickness(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    @_property
    def selected_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @selected_border_brush.setter
    @typing.final
    def selected_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def selected_background(self) -> microsoft_ui_xaml_media.Brush: ...
    @selected_background.setter
    @typing.final
    def selected_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def reveal_border_thickness(self) -> microsoft_ui_xaml.Thickness: ...
    @reveal_border_thickness.setter
    @typing.final
    def reveal_border_thickness(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    @_property
    def reveal_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @reveal_border_brush.setter
    @typing.final
    def reveal_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def reveal_background_shows_above_content(self) -> bool: ...
    @reveal_background_shows_above_content.setter
    @typing.final
    def reveal_background_shows_above_content(self, value: bool) -> None: ...
    @_property
    def drag_foreground(self) -> microsoft_ui_xaml_media.Brush: ...
    @drag_foreground.setter
    @typing.final
    def drag_foreground(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def reorder_hint_offset(self) -> winrt.system.Double: ...
    @reorder_hint_offset.setter
    @typing.final
    def reorder_hint_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def pressed_background(self) -> microsoft_ui_xaml_media.Brush: ...
    @pressed_background.setter
    @typing.final
    def pressed_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def pointer_over_foreground(self) -> microsoft_ui_xaml_media.Brush: ...
    @pointer_over_foreground.setter
    @typing.final
    def pointer_over_foreground(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def pointer_over_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    @pointer_over_border_brush.setter
    @typing.final
    def pointer_over_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def pointer_over_background_margin(self) -> microsoft_ui_xaml.Thickness: ...
    @pointer_over_background_margin.setter
    @typing.final
    def pointer_over_background_margin(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    @_property
    def pointer_over_background(self) -> microsoft_ui_xaml_media.Brush: ...
    @pointer_over_background.setter
    @typing.final
    def pointer_over_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...

@typing.final
class ListViewItemTemplateSettings(microsoft_ui_xaml.DependencyObject):
    @_property
    def drag_items_count(self) -> winrt.system.Int32: ...

@typing.final
class LoopingSelector_Static(microsoft_ui_xaml_controls.Control_Static):
    @_property
    def item_height_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def item_template_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def item_width_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def items_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def selected_index_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def selected_item_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def should_loop_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class LoopingSelector(microsoft_ui_xaml_controls.Control, metaclass=LoopingSelector_Static):
    def add_selection_changed(self, handler: microsoft_ui_xaml_controls.SelectionChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_selection_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def should_loop(self) -> bool: ...
    @should_loop.setter
    def should_loop(self, value: bool) -> None: ...
    @_property
    def selected_item(self) -> winrt.system.Object: ...
    @selected_item.setter
    def selected_item(self, value: winrt.system.Object) -> None: ...
    @_property
    def selected_index(self) -> winrt.system.Int32: ...
    @selected_index.setter
    def selected_index(self, value: winrt.system.Int32) -> None: ...
    @_property
    def items(self) -> typing.MutableSequence[winrt.system.Object]: ...
    @items.setter
    def items(self, value: typing.MutableSequence[winrt.system.Object]) -> None: ...
    @_property
    def item_width(self) -> winrt.system.Int32: ...
    @item_width.setter
    def item_width(self, value: winrt.system.Int32) -> None: ...
    @_property
    def item_template(self) -> microsoft_ui_xaml.DataTemplate: ...
    @item_template.setter
    def item_template(self, value: microsoft_ui_xaml.DataTemplate) -> None: ...
    @_property
    def item_height(self) -> winrt.system.Int32: ...
    @item_height.setter
    def item_height(self, value: winrt.system.Int32) -> None: ...

@typing.final
class LoopingSelectorItem(microsoft_ui_xaml_controls.ContentControl):
    pass

@typing.final
class LoopingSelectorPanel(microsoft_ui_xaml_controls.Canvas, ImplementsIScrollSnapPointsInfo):
    def get_irregular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Sequence[winrt.system.Single]: ...
    def get_regular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Tuple[winrt.system.Single, winrt.system.Single]: ...
    def add_horizontal_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_horizontal_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_vertical_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_vertical_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def are_horizontal_snap_points_regular(self) -> bool: ...
    @_property
    def are_vertical_snap_points_regular(self) -> bool: ...

@typing.final
class MenuFlyoutItemTemplateSettings(microsoft_ui_xaml.DependencyObject):
    @_property
    def keyboard_accelerator_text_min_width(self) -> winrt.system.Double: ...

@typing.final
class MenuFlyoutPresenterTemplateSettings(microsoft_ui_xaml.DependencyObject):
    @_property
    def flyout_content_min_width(self) -> winrt.system.Double: ...

class MonochromaticOverlayPresenter_Static(microsoft_ui_xaml_controls.Grid_Static):
    @_property
    @typing.final
    def replacement_color_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def source_element_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class MonochromaticOverlayPresenter(microsoft_ui_xaml_controls.Grid, metaclass=MonochromaticOverlayPresenter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @_property
    def source_element(self) -> microsoft_ui_xaml.UIElement: ...
    @source_element.setter
    @typing.final
    def source_element(self, value: microsoft_ui_xaml.UIElement) -> None: ...
    @_property
    def replacement_color(self) -> windows_ui.Color: ...
    @replacement_color.setter
    @typing.final
    def replacement_color(self, value: windows_ui.Color) -> None: ...

class NavigationViewItemPresenter_Static(microsoft_ui_xaml_controls.ContentControl_Static):
    @_property
    @typing.final
    def icon_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def template_settings_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def info_badge_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class NavigationViewItemPresenter(microsoft_ui_xaml_controls.ContentControl, metaclass=NavigationViewItemPresenter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @_property
    def icon(self) -> microsoft_ui_xaml_controls.IconElement: ...
    @icon.setter
    @typing.final
    def icon(self, value: microsoft_ui_xaml_controls.IconElement) -> None: ...
    @_property
    @typing.final
    def template_settings(self) -> NavigationViewItemPresenterTemplateSettings: ...
    @_property
    def info_badge(self) -> microsoft_ui_xaml_controls.InfoBadge: ...
    @info_badge.setter
    @typing.final
    def info_badge(self, value: microsoft_ui_xaml_controls.InfoBadge) -> None: ...

class NavigationViewItemPresenterTemplateSettings_Static(microsoft_ui_xaml.DependencyObject_Static):
    @_property
    @typing.final
    def icon_width_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def smaller_icon_width_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class NavigationViewItemPresenterTemplateSettings(microsoft_ui_xaml.DependencyObject, metaclass=NavigationViewItemPresenterTemplateSettings_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @_property
    @typing.final
    def icon_width(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def smaller_icon_width(self) -> winrt.system.Double: ...

class OrientedVirtualizingPanel_Static(microsoft_ui_xaml_controls.VirtualizingPanel_Static):
    pass

class OrientedVirtualizingPanel(microsoft_ui_xaml_controls.VirtualizingPanel, microsoft_ui_xaml_controls.ImplementsIInsertionPanel, ImplementsIScrollSnapPointsInfo, metaclass=OrientedVirtualizingPanel_Static):
    def get_insertion_indexes(self, position: windows_foundation.Point, /) -> typing.Tuple[winrt.system.Int32, winrt.system.Int32]: ...
    def get_irregular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Sequence[winrt.system.Single]: ...
    def get_regular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Tuple[winrt.system.Single, winrt.system.Single]: ...
    @typing.final
    def line_down(self) -> None: ...
    @typing.final
    def line_left(self) -> None: ...
    @typing.final
    def line_right(self) -> None: ...
    @typing.final
    def line_up(self) -> None: ...
    @typing.final
    def make_visible(self, visual: microsoft_ui_xaml.UIElement, rectangle: windows_foundation.Rect, /) -> windows_foundation.Rect: ...
    @typing.final
    def mouse_wheel_down(self) -> None: ...
    @typing.final
    def mouse_wheel_left(self) -> None: ...
    @typing.final
    def mouse_wheel_right(self) -> None: ...
    @typing.final
    def mouse_wheel_up(self) -> None: ...
    @typing.final
    def page_down(self) -> None: ...
    @typing.final
    def page_left(self) -> None: ...
    @typing.final
    def page_right(self) -> None: ...
    @typing.final
    def page_up(self) -> None: ...
    @typing.final
    def set_horizontal_offset(self, offset: winrt.system.Double, /) -> None: ...
    @typing.final
    def set_vertical_offset(self, offset: winrt.system.Double, /) -> None: ...
    @typing.final
    def add_horizontal_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_horizontal_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_vertical_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_vertical_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def scroll_owner(self) -> winrt.system.Object: ...
    @scroll_owner.setter
    @typing.final
    def scroll_owner(self, value: winrt.system.Object) -> None: ...
    @_property
    def can_vertically_scroll(self) -> bool: ...
    @can_vertically_scroll.setter
    @typing.final
    def can_vertically_scroll(self, value: bool) -> None: ...
    @_property
    def can_horizontally_scroll(self) -> bool: ...
    @can_horizontally_scroll.setter
    @typing.final
    def can_horizontally_scroll(self, value: bool) -> None: ...
    @_property
    @typing.final
    def extent_height(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def extent_width(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def horizontal_offset(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def vertical_offset(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def viewport_height(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def viewport_width(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def are_horizontal_snap_points_regular(self) -> bool: ...
    @_property
    @typing.final
    def are_vertical_snap_points_regular(self) -> bool: ...

class PickerFlyoutBase_Static(FlyoutBase_Static):
    def get_title(cls, element: microsoft_ui_xaml.DependencyObject, /) -> str: ...
    def set_title(cls, element: microsoft_ui_xaml.DependencyObject, value: str, /) -> None: ...
    @_property
    @typing.final
    def title_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class PickerFlyoutBase(FlyoutBase, metaclass=PickerFlyoutBase_Static):
    def _on_confirmed(self) -> None: ...
    def _should_show_confirmation_buttons(self) -> bool: ...

class PivotHeaderItem_Static(microsoft_ui_xaml_controls.ContentControl_Static):
    pass

class PivotHeaderItem(microsoft_ui_xaml_controls.ContentControl, metaclass=PivotHeaderItem_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class PivotHeaderPanel(microsoft_ui_xaml_controls.Canvas):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class PivotPanel(microsoft_ui_xaml_controls.Panel, ImplementsIScrollSnapPointsInfo):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    def get_irregular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Sequence[winrt.system.Single]: ...
    def get_regular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Tuple[winrt.system.Single, winrt.system.Single]: ...
    def add_horizontal_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_horizontal_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_vertical_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_vertical_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def are_horizontal_snap_points_regular(self) -> bool: ...
    @_property
    def are_vertical_snap_points_regular(self) -> bool: ...

@typing.final
class Popup_Static(microsoft_ui_xaml.FrameworkElement_Static):
    @_property
    def child_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def child_transitions_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def horizontal_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_light_dismiss_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def is_open_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def light_dismiss_overlay_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def should_constrain_to_root_bounds_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def vertical_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def desired_placement_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def placement_target_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def system_backdrop_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class Popup(microsoft_ui_xaml.FrameworkElement, metaclass=Popup_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    def add_closed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_opened(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_actual_placement_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_actual_placement_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def vertical_offset(self) -> winrt.system.Double: ...
    @vertical_offset.setter
    def vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def should_constrain_to_root_bounds(self) -> bool: ...
    @should_constrain_to_root_bounds.setter
    def should_constrain_to_root_bounds(self, value: bool) -> None: ...
    @_property
    def light_dismiss_overlay_mode(self) -> microsoft_ui_xaml_controls.LightDismissOverlayMode: ...
    @light_dismiss_overlay_mode.setter
    def light_dismiss_overlay_mode(self, value: microsoft_ui_xaml_controls.LightDismissOverlayMode) -> None: ...
    @_property
    def is_open(self) -> bool: ...
    @is_open.setter
    def is_open(self, value: bool) -> None: ...
    @_property
    def is_light_dismiss_enabled(self) -> bool: ...
    @is_light_dismiss_enabled.setter
    def is_light_dismiss_enabled(self, value: bool) -> None: ...
    @_property
    def horizontal_offset(self) -> winrt.system.Double: ...
    @horizontal_offset.setter
    def horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def child_transitions(self) -> microsoft_ui_xaml_media_animation.TransitionCollection: ...
    @child_transitions.setter
    def child_transitions(self, value: microsoft_ui_xaml_media_animation.TransitionCollection) -> None: ...
    @_property
    def child(self) -> microsoft_ui_xaml.UIElement: ...
    @child.setter
    def child(self, value: microsoft_ui_xaml.UIElement) -> None: ...
    @_property
    def is_constrained_to_root_bounds(self) -> bool: ...
    @_property
    def placement_target(self) -> microsoft_ui_xaml.FrameworkElement: ...
    @placement_target.setter
    def placement_target(self, value: microsoft_ui_xaml.FrameworkElement) -> None: ...
    @_property
    def desired_placement(self) -> PopupPlacementMode: ...
    @desired_placement.setter
    def desired_placement(self, value: PopupPlacementMode) -> None: ...
    @_property
    def actual_placement(self) -> PopupPlacementMode: ...
    @_property
    def system_backdrop(self) -> microsoft_ui_xaml_media.SystemBackdrop: ...
    @system_backdrop.setter
    def system_backdrop(self, value: microsoft_ui_xaml_media.SystemBackdrop) -> None: ...

class RangeBase_Static(microsoft_ui_xaml_controls.Control_Static):
    @_property
    @typing.final
    def large_change_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def maximum_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def minimum_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def small_change_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def value_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class RangeBase(microsoft_ui_xaml_controls.Control, metaclass=RangeBase_Static):
    def _on_maximum_changed(self, old_maximum: winrt.system.Double, new_maximum: winrt.system.Double, /) -> None: ...
    def _on_minimum_changed(self, old_minimum: winrt.system.Double, new_minimum: winrt.system.Double, /) -> None: ...
    def _on_value_changed(self, old_value: winrt.system.Double, new_value: winrt.system.Double, /) -> None: ...
    @typing.final
    def add_value_changed(self, handler: RangeBaseValueChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_value_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def value(self) -> winrt.system.Double: ...
    @value.setter
    @typing.final
    def value(self, value: winrt.system.Double) -> None: ...
    @_property
    def small_change(self) -> winrt.system.Double: ...
    @small_change.setter
    @typing.final
    def small_change(self, value: winrt.system.Double) -> None: ...
    @_property
    def minimum(self) -> winrt.system.Double: ...
    @minimum.setter
    @typing.final
    def minimum(self, value: winrt.system.Double) -> None: ...
    @_property
    def maximum(self) -> winrt.system.Double: ...
    @maximum.setter
    @typing.final
    def maximum(self, value: winrt.system.Double) -> None: ...
    @_property
    def large_change(self) -> winrt.system.Double: ...
    @large_change.setter
    @typing.final
    def large_change(self, value: winrt.system.Double) -> None: ...

@typing.final
class RangeBaseValueChangedEventArgs(microsoft_ui_xaml.RoutedEventArgs):
    @_property
    def new_value(self) -> winrt.system.Double: ...
    @_property
    def old_value(self) -> winrt.system.Double: ...

@typing.final
class RepeatButton_Static(ButtonBase_Static):
    @_property
    def delay_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def interval_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class RepeatButton(ButtonBase, metaclass=RepeatButton_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @_property
    def interval(self) -> winrt.system.Int32: ...
    @interval.setter
    def interval(self, value: winrt.system.Int32) -> None: ...
    @_property
    def delay(self) -> winrt.system.Int32: ...
    @delay.setter
    def delay(self, value: winrt.system.Int32) -> None: ...

class RepeatedScrollSnapPoint_Static(ScrollSnapPointBase_Static):
    pass

class RepeatedScrollSnapPoint(ScrollSnapPointBase, metaclass=RepeatedScrollSnapPoint_Static):
    def __new__(cls: typing.Type[Self], offset: winrt.system.Double, interval: winrt.system.Double, start: winrt.system.Double, end: winrt.system.Double, alignment: ScrollSnapPointsAlignment) -> Self: ...
    @_property
    @typing.final
    def end(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def interval(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def offset(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def start(self) -> winrt.system.Double: ...

class RepeatedZoomSnapPoint_Static(ZoomSnapPointBase_Static):
    pass

class RepeatedZoomSnapPoint(ZoomSnapPointBase, metaclass=RepeatedZoomSnapPoint_Static):
    def __new__(cls: typing.Type[Self], offset: winrt.system.Double, interval: winrt.system.Double, start: winrt.system.Double, end: winrt.system.Double) -> Self: ...
    @_property
    @typing.final
    def end(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def interval(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def offset(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def start(self) -> winrt.system.Double: ...

@typing.final
class ScrollBar_Static(RangeBase_Static):
    @_property
    def indicator_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def orientation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    def viewport_size_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class ScrollBar(RangeBase, metaclass=ScrollBar_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    def add_scroll(self, handler: ScrollEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_scroll(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def viewport_size(self) -> winrt.system.Double: ...
    @viewport_size.setter
    def viewport_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def orientation(self) -> microsoft_ui_xaml_controls.Orientation: ...
    @orientation.setter
    def orientation(self, value: microsoft_ui_xaml_controls.Orientation) -> None: ...
    @_property
    def indicator_mode(self) -> ScrollingIndicatorMode: ...
    @indicator_mode.setter
    def indicator_mode(self, value: ScrollingIndicatorMode) -> None: ...

@typing.final
class ScrollControllerAddScrollVelocityRequestedEventArgs(winrt.system.Object):
    def __new__(cls: typing.Type[Self], offset_velocity: winrt.system.Single, inertia_decay_rate: typing.Optional[winrt.system.Single]) -> Self: ...
    @_property
    def correlation_id(self) -> winrt.system.Int32: ...
    @correlation_id.setter
    def correlation_id(self, value: winrt.system.Int32) -> None: ...
    @_property
    def inertia_decay_rate(self) -> typing.Optional[winrt.system.Single]: ...
    @_property
    def offset_velocity(self) -> winrt.system.Single: ...

@typing.final
class ScrollControllerPanRequestedEventArgs(winrt.system.Object):
    def __new__(cls: typing.Type[Self], pointer_point: microsoft_ui_input.PointerPoint) -> Self: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...
    @_property
    def pointer_point(self) -> microsoft_ui_input.PointerPoint: ...

@typing.final
class ScrollControllerScrollByRequestedEventArgs(winrt.system.Object):
    def __new__(cls: typing.Type[Self], offset_delta: winrt.system.Double, options: microsoft_ui_xaml_controls.ScrollingScrollOptions) -> Self: ...
    @_property
    def correlation_id(self) -> winrt.system.Int32: ...
    @correlation_id.setter
    def correlation_id(self, value: winrt.system.Int32) -> None: ...
    @_property
    def offset_delta(self) -> winrt.system.Double: ...
    @_property
    def options(self) -> microsoft_ui_xaml_controls.ScrollingScrollOptions: ...

@typing.final
class ScrollControllerScrollToRequestedEventArgs(winrt.system.Object):
    def __new__(cls: typing.Type[Self], offset: winrt.system.Double, options: microsoft_ui_xaml_controls.ScrollingScrollOptions) -> Self: ...
    @_property
    def correlation_id(self) -> winrt.system.Int32: ...
    @correlation_id.setter
    def correlation_id(self, value: winrt.system.Int32) -> None: ...
    @_property
    def offset(self) -> winrt.system.Double: ...
    @_property
    def options(self) -> microsoft_ui_xaml_controls.ScrollingScrollOptions: ...

@typing.final
class ScrollEventArgs(microsoft_ui_xaml.RoutedEventArgs):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @_property
    def new_value(self) -> winrt.system.Double: ...
    @_property
    def scroll_event_type(self) -> ScrollEventType: ...

class ScrollPresenter_Static(microsoft_ui_xaml.FrameworkElement_Static):
    @_property
    @typing.final
    def background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def computed_horizontal_scroll_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def computed_vertical_scroll_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def content_orientation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def content_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def horizontal_anchor_ratio_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def horizontal_scroll_chain_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def horizontal_scroll_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def horizontal_scroll_rail_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def ignored_input_kinds_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def max_zoom_factor_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def min_zoom_factor_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def vertical_anchor_ratio_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def vertical_scroll_chain_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def vertical_scroll_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def vertical_scroll_rail_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def zoom_chain_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def zoom_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ScrollPresenter(microsoft_ui_xaml.FrameworkElement, microsoft_ui_xaml_controls.ImplementsIScrollAnchorProvider, metaclass=ScrollPresenter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    def add_scroll_velocity(self, offsets_velocity: windows_foundation_numerics.Vector2, inertia_decay_rate: typing.Optional[windows_foundation_numerics.Vector2], /) -> winrt.system.Int32: ...
    @typing.final
    def add_zoom_velocity(self, zoom_factor_velocity: winrt.system.Single, center_point: typing.Optional[windows_foundation_numerics.Vector2], inertia_decay_rate: typing.Optional[winrt.system.Single], /) -> winrt.system.Int32: ...
    def register_anchor_candidate(self, element: microsoft_ui_xaml.UIElement, /) -> None: ...
    @typing.final
    def scroll_by(self, horizontal_offset_delta: winrt.system.Double, vertical_offset_delta: winrt.system.Double, /) -> winrt.system.Int32: ...
    @typing.final
    def scroll_by_with_options(self, horizontal_offset_delta: winrt.system.Double, vertical_offset_delta: winrt.system.Double, options: microsoft_ui_xaml_controls.ScrollingScrollOptions, /) -> winrt.system.Int32: ...
    @typing.final
    def scroll_to(self, horizontal_offset: winrt.system.Double, vertical_offset: winrt.system.Double, /) -> winrt.system.Int32: ...
    @typing.final
    def scroll_to_with_options(self, horizontal_offset: winrt.system.Double, vertical_offset: winrt.system.Double, options: microsoft_ui_xaml_controls.ScrollingScrollOptions, /) -> winrt.system.Int32: ...
    def unregister_anchor_candidate(self, element: microsoft_ui_xaml.UIElement, /) -> None: ...
    @typing.final
    def zoom_by(self, zoom_factor_delta: winrt.system.Single, center_point: typing.Optional[windows_foundation_numerics.Vector2], /) -> winrt.system.Int32: ...
    @typing.final
    def zoom_by_with_options(self, zoom_factor_delta: winrt.system.Single, center_point: typing.Optional[windows_foundation_numerics.Vector2], options: microsoft_ui_xaml_controls.ScrollingZoomOptions, /) -> winrt.system.Int32: ...
    @typing.final
    def zoom_to(self, zoom_factor: winrt.system.Single, center_point: typing.Optional[windows_foundation_numerics.Vector2], /) -> winrt.system.Int32: ...
    @typing.final
    def zoom_to_with_options(self, zoom_factor: winrt.system.Single, center_point: typing.Optional[windows_foundation_numerics.Vector2], options: microsoft_ui_xaml_controls.ScrollingZoomOptions, /) -> winrt.system.Int32: ...
    @typing.final
    def add_anchor_requested(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, microsoft_ui_xaml_controls.ScrollingAnchorRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_anchor_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_bringing_into_view(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, microsoft_ui_xaml_controls.ScrollingBringingIntoViewEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_bringing_into_view(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_extent_changed(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_extent_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_scroll_animation_starting(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, microsoft_ui_xaml_controls.ScrollingScrollAnimationStartingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_scroll_animation_starting(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_scroll_completed(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, microsoft_ui_xaml_controls.ScrollingScrollCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_scroll_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_state_changed(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_state_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_view_changed(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_view_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_zoom_animation_starting(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, microsoft_ui_xaml_controls.ScrollingZoomAnimationStartingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_zoom_animation_starting(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_zoom_completed(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, microsoft_ui_xaml_controls.ScrollingZoomCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_zoom_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    @typing.final
    def current_anchor(self) -> microsoft_ui_xaml.UIElement: ...
    @_property
    def ignored_input_kinds(self) -> microsoft_ui_xaml_controls.ScrollingInputKinds: ...
    @ignored_input_kinds.setter
    @typing.final
    def ignored_input_kinds(self, value: microsoft_ui_xaml_controls.ScrollingInputKinds) -> None: ...
    @_property
    def horizontal_anchor_ratio(self) -> winrt.system.Double: ...
    @horizontal_anchor_ratio.setter
    @typing.final
    def horizontal_anchor_ratio(self, value: winrt.system.Double) -> None: ...
    @_property
    def max_zoom_factor(self) -> winrt.system.Double: ...
    @max_zoom_factor.setter
    @typing.final
    def max_zoom_factor(self, value: winrt.system.Double) -> None: ...
    @_property
    def horizontal_scroll_rail_mode(self) -> microsoft_ui_xaml_controls.ScrollingRailMode: ...
    @horizontal_scroll_rail_mode.setter
    @typing.final
    def horizontal_scroll_rail_mode(self, value: microsoft_ui_xaml_controls.ScrollingRailMode) -> None: ...
    @_property
    def horizontal_scroll_mode(self) -> microsoft_ui_xaml_controls.ScrollingScrollMode: ...
    @horizontal_scroll_mode.setter
    @typing.final
    def horizontal_scroll_mode(self, value: microsoft_ui_xaml_controls.ScrollingScrollMode) -> None: ...
    @_property
    def content_orientation(self) -> microsoft_ui_xaml_controls.ScrollingContentOrientation: ...
    @content_orientation.setter
    @typing.final
    def content_orientation(self, value: microsoft_ui_xaml_controls.ScrollingContentOrientation) -> None: ...
    @_property
    def content(self) -> microsoft_ui_xaml.UIElement: ...
    @content.setter
    @typing.final
    def content(self, value: microsoft_ui_xaml.UIElement) -> None: ...
    @_property
    def horizontal_scroll_controller(self) -> IScrollController: ...
    @horizontal_scroll_controller.setter
    @typing.final
    def horizontal_scroll_controller(self, value: ImplementsIScrollController) -> None: ...
    @_property
    def horizontal_scroll_chain_mode(self) -> microsoft_ui_xaml_controls.ScrollingChainMode: ...
    @horizontal_scroll_chain_mode.setter
    @typing.final
    def horizontal_scroll_chain_mode(self, value: microsoft_ui_xaml_controls.ScrollingChainMode) -> None: ...
    @_property
    def min_zoom_factor(self) -> winrt.system.Double: ...
    @min_zoom_factor.setter
    @typing.final
    def min_zoom_factor(self, value: winrt.system.Double) -> None: ...
    @_property
    def background(self) -> microsoft_ui_xaml_media.Brush: ...
    @background.setter
    @typing.final
    def background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    @_property
    def zoom_mode(self) -> microsoft_ui_xaml_controls.ScrollingZoomMode: ...
    @zoom_mode.setter
    @typing.final
    def zoom_mode(self, value: microsoft_ui_xaml_controls.ScrollingZoomMode) -> None: ...
    @_property
    def zoom_chain_mode(self) -> microsoft_ui_xaml_controls.ScrollingChainMode: ...
    @zoom_chain_mode.setter
    @typing.final
    def zoom_chain_mode(self, value: microsoft_ui_xaml_controls.ScrollingChainMode) -> None: ...
    @_property
    def vertical_scroll_rail_mode(self) -> microsoft_ui_xaml_controls.ScrollingRailMode: ...
    @vertical_scroll_rail_mode.setter
    @typing.final
    def vertical_scroll_rail_mode(self, value: microsoft_ui_xaml_controls.ScrollingRailMode) -> None: ...
    @_property
    def vertical_scroll_mode(self) -> microsoft_ui_xaml_controls.ScrollingScrollMode: ...
    @vertical_scroll_mode.setter
    @typing.final
    def vertical_scroll_mode(self, value: microsoft_ui_xaml_controls.ScrollingScrollMode) -> None: ...
    @_property
    def vertical_scroll_controller(self) -> IScrollController: ...
    @vertical_scroll_controller.setter
    @typing.final
    def vertical_scroll_controller(self, value: ImplementsIScrollController) -> None: ...
    @_property
    def vertical_scroll_chain_mode(self) -> microsoft_ui_xaml_controls.ScrollingChainMode: ...
    @vertical_scroll_chain_mode.setter
    @typing.final
    def vertical_scroll_chain_mode(self, value: microsoft_ui_xaml_controls.ScrollingChainMode) -> None: ...
    @_property
    def vertical_anchor_ratio(self) -> winrt.system.Double: ...
    @vertical_anchor_ratio.setter
    @typing.final
    def vertical_anchor_ratio(self, value: winrt.system.Double) -> None: ...
    @_property
    @typing.final
    def computed_horizontal_scroll_mode(self) -> microsoft_ui_xaml_controls.ScrollingScrollMode: ...
    @_property
    @typing.final
    def computed_vertical_scroll_mode(self) -> microsoft_ui_xaml_controls.ScrollingScrollMode: ...
    @_property
    @typing.final
    def expression_animation_sources(self) -> microsoft_ui_composition.CompositionPropertySet: ...
    @_property
    @typing.final
    def extent_height(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def extent_width(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def horizontal_offset(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def horizontal_snap_points(self) -> typing.MutableSequence[ScrollSnapPointBase]: ...
    @_property
    @typing.final
    def scrollable_height(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def scrollable_width(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def state(self) -> microsoft_ui_xaml_controls.ScrollingInteractionState: ...
    @_property
    @typing.final
    def vertical_offset(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def vertical_snap_points(self) -> typing.MutableSequence[ScrollSnapPointBase]: ...
    @_property
    @typing.final
    def viewport_height(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def viewport_width(self) -> winrt.system.Double: ...
    @_property
    @typing.final
    def zoom_factor(self) -> winrt.system.Single: ...
    @_property
    @typing.final
    def zoom_snap_points(self) -> typing.MutableSequence[ZoomSnapPointBase]: ...

class ScrollSnapPoint_Static(ScrollSnapPointBase_Static):
    pass

class ScrollSnapPoint(ScrollSnapPointBase, metaclass=ScrollSnapPoint_Static):
    def __new__(cls: typing.Type[Self], snap_point_value: winrt.system.Double, alignment: ScrollSnapPointsAlignment) -> Self: ...
    @_property
    @typing.final
    def value(self) -> winrt.system.Double: ...

class ScrollSnapPointBase_Static(SnapPointBase_Static):
    pass

class ScrollSnapPointBase(SnapPointBase, metaclass=ScrollSnapPointBase_Static):
    @_property
    @typing.final
    def alignment(self) -> ScrollSnapPointsAlignment: ...

class Selector_Static(microsoft_ui_xaml_controls.ItemsControl_Static):
    def get_is_selection_active(cls, element: microsoft_ui_xaml.DependencyObject, /) -> bool: ...
    @_property
    @typing.final
    def is_synchronized_with_current_item_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_index_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_item_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_value_path_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def selected_value_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class Selector(microsoft_ui_xaml_controls.ItemsControl, metaclass=Selector_Static):
    @typing.final
    def add_selection_changed(self, handler: microsoft_ui_xaml_controls.SelectionChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_selection_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def selected_value_path(self) -> str: ...
    @selected_value_path.setter
    @typing.final
    def selected_value_path(self, value: str) -> None: ...
    @_property
    def selected_value(self) -> winrt.system.Object: ...
    @selected_value.setter
    @typing.final
    def selected_value(self, value: winrt.system.Object) -> None: ...
    @_property
    def selected_item(self) -> winrt.system.Object: ...
    @selected_item.setter
    @typing.final
    def selected_item(self, value: winrt.system.Object) -> None: ...
    @_property
    def selected_index(self) -> winrt.system.Int32: ...
    @selected_index.setter
    @typing.final
    def selected_index(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_synchronized_with_current_item(self) -> typing.Optional[bool]: ...
    @is_synchronized_with_current_item.setter
    @typing.final
    def is_synchronized_with_current_item(self, value: typing.Optional[bool]) -> None: ...

class SelectorItem_Static(microsoft_ui_xaml_controls.ContentControl_Static):
    @_property
    @typing.final
    def is_selected_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class SelectorItem(microsoft_ui_xaml_controls.ContentControl, metaclass=SelectorItem_Static):
    @_property
    def is_selected(self) -> bool: ...
    @is_selected.setter
    @typing.final
    def is_selected(self, value: bool) -> None: ...

class SnapPointBase_Static(type):
    pass

class SnapPointBase(winrt.system.Object, metaclass=SnapPointBase_Static):
    pass

@typing.final
class SplitViewTemplateSettings(microsoft_ui_xaml.DependencyObject):
    @_property
    def compact_pane_grid_length(self) -> microsoft_ui_xaml.GridLength: ...
    @_property
    def negative_open_pane_length(self) -> winrt.system.Double: ...
    @_property
    def negative_open_pane_length_minus_compact_length(self) -> winrt.system.Double: ...
    @_property
    def open_pane_grid_length(self) -> microsoft_ui_xaml.GridLength: ...
    @_property
    def open_pane_length(self) -> winrt.system.Double: ...
    @_property
    def open_pane_length_minus_compact_length(self) -> winrt.system.Double: ...

@typing.final
class Thumb_Static(microsoft_ui_xaml_controls.Control_Static):
    @_property
    def is_dragging_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class Thumb(microsoft_ui_xaml_controls.Control, metaclass=Thumb_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    def cancel_drag(self) -> None: ...
    def add_drag_completed(self, handler: DragCompletedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drag_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_drag_delta(self, handler: DragDeltaEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drag_delta(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_drag_started(self, handler: DragStartedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drag_started(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def is_dragging(self) -> bool: ...

@typing.final
class TickBar_Static(microsoft_ui_xaml.FrameworkElement_Static):
    @_property
    def fill_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class TickBar(microsoft_ui_xaml.FrameworkElement, metaclass=TickBar_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @_property
    def fill(self) -> microsoft_ui_xaml_media.Brush: ...
    @fill.setter
    def fill(self, value: microsoft_ui_xaml_media.Brush) -> None: ...

class ToggleButton_Static(ButtonBase_Static):
    @_property
    @typing.final
    def is_checked_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    @_property
    @typing.final
    def is_three_state_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ToggleButton(ButtonBase, metaclass=ToggleButton_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    def _on_toggle(self) -> None: ...
    @typing.final
    def add_checked(self, handler: microsoft_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_checked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_indeterminate(self, handler: microsoft_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_indeterminate(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    def add_unchecked(self, handler: microsoft_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    def remove_unchecked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def is_three_state(self) -> bool: ...
    @is_three_state.setter
    @typing.final
    def is_three_state(self, value: bool) -> None: ...
    @_property
    def is_checked(self) -> typing.Optional[bool]: ...
    @is_checked.setter
    @typing.final
    def is_checked(self, value: typing.Optional[bool]) -> None: ...

@typing.final
class ToggleSwitchTemplateSettings(microsoft_ui_xaml.DependencyObject):
    @_property
    def curtain_current_to_off_offset(self) -> winrt.system.Double: ...
    @_property
    def curtain_current_to_on_offset(self) -> winrt.system.Double: ...
    @_property
    def curtain_off_to_on_offset(self) -> winrt.system.Double: ...
    @_property
    def curtain_on_to_off_offset(self) -> winrt.system.Double: ...
    @_property
    def knob_current_to_off_offset(self) -> winrt.system.Double: ...
    @_property
    def knob_current_to_on_offset(self) -> winrt.system.Double: ...
    @_property
    def knob_off_to_on_offset(self) -> winrt.system.Double: ...
    @_property
    def knob_on_to_off_offset(self) -> winrt.system.Double: ...

@typing.final
class ToolTipTemplateSettings(microsoft_ui_xaml.DependencyObject):
    @_property
    def from_horizontal_offset(self) -> winrt.system.Double: ...
    @_property
    def from_vertical_offset(self) -> winrt.system.Double: ...

class ZoomSnapPoint_Static(ZoomSnapPointBase_Static):
    pass

class ZoomSnapPoint(ZoomSnapPointBase, metaclass=ZoomSnapPoint_Static):
    def __new__(cls: typing.Type[Self], snap_point_value: winrt.system.Double) -> Self: ...
    @_property
    @typing.final
    def value(self) -> winrt.system.Double: ...

class ZoomSnapPointBase_Static(SnapPointBase_Static):
    pass

class ZoomSnapPointBase(SnapPointBase, metaclass=ZoomSnapPointBase_Static):
    pass

class ImplementsIScrollController():
    pass

@typing.final
class IScrollController(winrt.system.Object, ImplementsIScrollController):
    def get_scroll_animation(self, correlation_id: winrt.system.Int32, start_position: windows_foundation_numerics.Vector2, end_position: windows_foundation_numerics.Vector2, default_animation: microsoft_ui_composition.CompositionAnimation, /) -> microsoft_ui_composition.CompositionAnimation: ...
    def notify_requested_scroll_completed(self, correlation_id: winrt.system.Int32, /) -> None: ...
    def set_is_scrollable(self, is_scrollable: bool, /) -> None: ...
    def set_values(self, min_offset: winrt.system.Double, max_offset: winrt.system.Double, offset: winrt.system.Double, viewport_length: winrt.system.Double, /) -> None: ...
    def add_add_scroll_velocity_requested(self, handler: windows_foundation.TypedEventHandler[IScrollController, ScrollControllerAddScrollVelocityRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_add_scroll_velocity_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_can_scroll_changed(self, handler: windows_foundation.TypedEventHandler[IScrollController, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_can_scroll_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_is_scrolling_with_mouse_changed(self, handler: windows_foundation.TypedEventHandler[IScrollController, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_is_scrolling_with_mouse_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_scroll_by_requested(self, handler: windows_foundation.TypedEventHandler[IScrollController, ScrollControllerScrollByRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_scroll_by_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_scroll_to_requested(self, handler: windows_foundation.TypedEventHandler[IScrollController, ScrollControllerScrollToRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_scroll_to_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def can_scroll(self) -> bool: ...
    @_property
    def is_scrolling_with_mouse(self) -> bool: ...
    @_property
    def panning_info(self) -> IScrollControllerPanningInfo: ...

class ImplementsIScrollControllerPanningInfo():
    pass

@typing.final
class IScrollControllerPanningInfo(winrt.system.Object, ImplementsIScrollControllerPanningInfo):
    def set_panning_element_expression_animation_sources(self, property_set: microsoft_ui_composition.CompositionPropertySet, min_offset_property_name: str, max_offset_property_name: str, offset_property_name: str, multiplier_property_name: str, /) -> None: ...
    def add_changed(self, handler: windows_foundation.TypedEventHandler[IScrollControllerPanningInfo, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pan_requested(self, handler: windows_foundation.TypedEventHandler[IScrollControllerPanningInfo, ScrollControllerPanRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pan_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def is_rail_enabled(self) -> bool: ...
    @_property
    def pan_orientation(self) -> microsoft_ui_xaml_controls.Orientation: ...
    @_property
    def panning_element_ancestor(self) -> microsoft_ui_xaml.UIElement: ...

class ImplementsIScrollSnapPointsInfo():
    pass

@typing.final
class IScrollSnapPointsInfo(winrt.system.Object, ImplementsIScrollSnapPointsInfo):
    def get_irregular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Sequence[winrt.system.Single]: ...
    def get_regular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Tuple[winrt.system.Single, winrt.system.Single]: ...
    def add_horizontal_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_horizontal_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_vertical_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_vertical_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def are_horizontal_snap_points_regular(self) -> bool: ...
    @_property
    def are_vertical_snap_points_regular(self) -> bool: ...

