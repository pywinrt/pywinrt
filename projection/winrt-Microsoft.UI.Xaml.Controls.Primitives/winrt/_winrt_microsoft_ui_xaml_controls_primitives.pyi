# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.microsoft.ui.composition as microsoft_ui_composition
import winrt.microsoft.ui.input as microsoft_ui_input
import winrt.microsoft.ui.xaml as microsoft_ui_xaml
import winrt.microsoft.ui.xaml.automation.peers as microsoft_ui_xaml_automation_peers
import winrt.microsoft.ui.xaml.controls as microsoft_ui_xaml_controls
import winrt.microsoft.ui.xaml.data as microsoft_ui_xaml_data
import winrt.microsoft.ui.xaml.input as microsoft_ui_xaml_input
import winrt.microsoft.ui.xaml.media as microsoft_ui_xaml_media
import winrt.microsoft.ui.xaml.media.animation as microsoft_ui_xaml_media_animation
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.foundation.numerics as windows_foundation_numerics
import winrt.windows.ui as windows_ui
import winrt.windows.ui.xaml.interop as windows_ui_xaml_interop

from ._winrt_microsoft_ui_xaml_controls_primitives_2 import (
    ColorPickerSlider,
    TabViewListView,
)

from winrt.microsoft.ui.xaml.controls.primitives import AnimationDirection, ComponentResourceLocation, CornerRadiusFilterKind, CornerRadiusToThicknessConverterKind, EdgeTransitionLocation, FlyoutPlacementMode, FlyoutShowMode, GeneratorDirection, GroupHeaderPlacement, ListViewItemPresenterCheckMode, ListViewItemPresenterSelectionIndicatorMode, PlacementMode, PopupPlacementMode, ScrollEventType, ScrollSnapPointsAlignment, ScrollingIndicatorMode, SliderSnapsTo, SnapPointsAlignment, TickPlacement
from winrt.microsoft.ui.xaml.controls.primitives import DragCompletedEventHandler, DragDeltaEventHandler, DragStartedEventHandler, ItemsChangedEventHandler, RangeBaseValueChangedEventHandler, ScrollEventHandler

Self = typing.TypeVar('Self')

@typing.final
class GeneratorPosition:
    @_property
    def index(self) -> winrt.system.Int32: ...
    @_property
    def offset(self) -> winrt.system.Int32: ...
    def __new__(cls, index: winrt.system.Int32 = 0, offset: winrt.system.Int32 = 0) -> GeneratorPosition: ...

@typing.final
class AppBarButtonTemplateSettings(microsoft_ui_xaml.DependencyObject):
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.AppBarButtonTemplateSettings::get_KeyboardAcceleratorTextMinWidth()
    @_property
    def keyboard_accelerator_text_min_width(self) -> winrt.system.Double: ...

@typing.final
class AppBarTemplateSettings(microsoft_ui_xaml.DependencyObject):
    # Windows.Foundation.Rect Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings::get_ClipRect()
    @_property
    def clip_rect(self) -> windows_foundation.Rect: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings::get_CompactRootMargin()
    @_property
    def compact_root_margin(self) -> microsoft_ui_xaml.Thickness: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings::get_CompactVerticalDelta()
    @_property
    def compact_vertical_delta(self) -> winrt.system.Double: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings::get_HiddenRootMargin()
    @_property
    def hidden_root_margin(self) -> microsoft_ui_xaml.Thickness: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings::get_HiddenVerticalDelta()
    @_property
    def hidden_vertical_delta(self) -> winrt.system.Double: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings::get_MinimalRootMargin()
    @_property
    def minimal_root_margin(self) -> microsoft_ui_xaml.Thickness: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings::get_MinimalVerticalDelta()
    @_property
    def minimal_vertical_delta(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings::get_NegativeCompactVerticalDelta()
    @_property
    def negative_compact_vertical_delta(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings::get_NegativeHiddenVerticalDelta()
    @_property
    def negative_hidden_vertical_delta(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.AppBarTemplateSettings::get_NegativeMinimalVerticalDelta()
    @_property
    def negative_minimal_vertical_delta(self) -> winrt.system.Double: ...

@typing.final
class AppBarToggleButtonTemplateSettings(microsoft_ui_xaml.DependencyObject):
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.AppBarToggleButtonTemplateSettings::get_KeyboardAcceleratorTextMinWidth()
    @_property
    def keyboard_accelerator_text_min_width(self) -> winrt.system.Double: ...

@typing.final
class AutoSuggestBoxHelper_Static(winrt._winrt.IInspectable_Static):
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.AutoSuggestBoxHelper::GetKeepInteriorCornersSquare(Microsoft.UI.Xaml.Controls.AutoSuggestBox)
    def get_keep_interior_corners_square(cls, auto_suggest_box: microsoft_ui_xaml_controls.AutoSuggestBox, /) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.AutoSuggestBoxHelper::SetKeepInteriorCornersSquare(Microsoft.UI.Xaml.Controls.AutoSuggestBox,System.Boolean)
    def set_keep_interior_corners_square(cls, auto_suggest_box: microsoft_ui_xaml_controls.AutoSuggestBox, value: bool, /) -> None: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.AutoSuggestBoxHelper::get_KeepInteriorCornersSquareProperty()
    @_property
    def keep_interior_corners_square_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class AutoSuggestBoxHelper(winrt.system.Object, metaclass=AutoSuggestBoxHelper_Static):
    pass

class ButtonBase_Static(microsoft_ui_xaml_controls.ContentControl_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::get_ClickModeProperty()
    @_property
    @typing.final
    def click_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::get_CommandParameterProperty()
    @_property
    @typing.final
    def command_parameter_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::get_CommandProperty()
    @_property
    @typing.final
    def command_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::get_IsPointerOverProperty()
    @_property
    @typing.final
    def is_pointer_over_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::get_IsPressedProperty()
    @_property
    @typing.final
    def is_pressed_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ButtonBase(microsoft_ui_xaml_controls.ContentControl, metaclass=ButtonBase_Static):
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::add_Click(Microsoft.UI.Xaml.RoutedEventHandler)
    def add_click(self, handler: microsoft_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::remove_Click(Windows.Foundation.EventRegistrationToken)
    def remove_click(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::get_CommandParameter()
    @_property
    def command_parameter(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::put_CommandParameter(System.Object)
    @command_parameter.setter
    @typing.final
    def command_parameter(self, value: winrt.system.Object) -> None: ...
    # Microsoft.UI.Xaml.Input.ICommand Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::get_Command()
    @_property
    def command(self) -> microsoft_ui_xaml_input.ICommand: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::put_Command(Microsoft.UI.Xaml.Input.ICommand)
    @command.setter
    @typing.final
    def command(self, value: microsoft_ui_xaml_input.ICommand) -> None: ...
    # Microsoft.UI.Xaml.Controls.ClickMode Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::get_ClickMode()
    @_property
    def click_mode(self) -> microsoft_ui_xaml_controls.ClickMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::put_ClickMode(Microsoft.UI.Xaml.Controls.ClickMode)
    @click_mode.setter
    @typing.final
    def click_mode(self, value: microsoft_ui_xaml_controls.ClickMode) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::get_IsPointerOver()
    @_property
    @typing.final
    def is_pointer_over(self) -> bool: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.ButtonBase::get_IsPressed()
    @_property
    @typing.final
    def is_pressed(self) -> bool: ...

@typing.final
class CalendarPanel(microsoft_ui_xaml_controls.Panel):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class CalendarViewTemplateSettings(microsoft_ui_xaml.DependencyObject):
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_CenterX()
    @_property
    def center_x(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_CenterY()
    @_property
    def center_y(self) -> winrt.system.Double: ...
    # Windows.Foundation.Rect Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_ClipRect()
    @_property
    def clip_rect(self) -> windows_foundation.Rect: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_HasMoreContentAfter()
    @_property
    def has_more_content_after(self) -> bool: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_HasMoreContentBefore()
    @_property
    def has_more_content_before(self) -> bool: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_HasMoreViews()
    @_property
    def has_more_views(self) -> bool: ...
    # System.String Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_HeaderText()
    @_property
    def header_text(self) -> str: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_MinViewWidth()
    @_property
    def min_view_width(self) -> winrt.system.Double: ...
    # System.String Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_WeekDay1()
    @_property
    def week_day1(self) -> str: ...
    # System.String Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_WeekDay2()
    @_property
    def week_day2(self) -> str: ...
    # System.String Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_WeekDay3()
    @_property
    def week_day3(self) -> str: ...
    # System.String Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_WeekDay4()
    @_property
    def week_day4(self) -> str: ...
    # System.String Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_WeekDay5()
    @_property
    def week_day5(self) -> str: ...
    # System.String Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_WeekDay6()
    @_property
    def week_day6(self) -> str: ...
    # System.String Microsoft.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings::get_WeekDay7()
    @_property
    def week_day7(self) -> str: ...

class CarouselPanel_Static(microsoft_ui_xaml_controls.VirtualizingPanel_Static):
    pass

class CarouselPanel(microsoft_ui_xaml_controls.VirtualizingPanel, IScrollSnapPointsInfo, metaclass=CarouselPanel_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.Collections.IVectorView`1<System.Single> Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::GetIrregularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment)
    def get_irregular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Sequence[winrt.system.Single]: ...
    # System.Single Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::GetRegularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment,System.Single&)
    def get_regular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Tuple[winrt.system.Single, winrt.system.Single]: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::LineDown()
    def line_down(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::LineLeft()
    def line_left(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::LineRight()
    def line_right(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::LineUp()
    def line_up(self) -> None: ...
    @typing.final
    # Windows.Foundation.Rect Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::MakeVisible(Microsoft.UI.Xaml.UIElement,Windows.Foundation.Rect)
    def make_visible(self, visual: microsoft_ui_xaml.UIElement, rectangle: windows_foundation.Rect, /) -> windows_foundation.Rect: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::MouseWheelDown()
    def mouse_wheel_down(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::MouseWheelLeft()
    def mouse_wheel_left(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::MouseWheelRight()
    def mouse_wheel_right(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::MouseWheelUp()
    def mouse_wheel_up(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::PageDown()
    def page_down(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::PageLeft()
    def page_left(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::PageRight()
    def page_right(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::PageUp()
    def page_up(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::SetHorizontalOffset(System.Double)
    def set_horizontal_offset(self, offset: winrt.system.Double, /) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::SetVerticalOffset(System.Double)
    def set_vertical_offset(self, offset: winrt.system.Double, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::add_HorizontalSnapPointsChanged(Windows.Foundation.EventHandler`1<System.Object>)
    def add_horizontal_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::remove_HorizontalSnapPointsChanged(Windows.Foundation.EventRegistrationToken)
    def remove_horizontal_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::add_VerticalSnapPointsChanged(Windows.Foundation.EventHandler`1<System.Object>)
    def add_vertical_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::remove_VerticalSnapPointsChanged(Windows.Foundation.EventRegistrationToken)
    def remove_vertical_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::get_ScrollOwner()
    @_property
    def scroll_owner(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::put_ScrollOwner(System.Object)
    @scroll_owner.setter
    @typing.final
    def scroll_owner(self, value: winrt.system.Object) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::get_CanVerticallyScroll()
    @_property
    def can_vertically_scroll(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::put_CanVerticallyScroll(System.Boolean)
    @can_vertically_scroll.setter
    @typing.final
    def can_vertically_scroll(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::get_CanHorizontallyScroll()
    @_property
    def can_horizontally_scroll(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::put_CanHorizontallyScroll(System.Boolean)
    @can_horizontally_scroll.setter
    @typing.final
    def can_horizontally_scroll(self, value: bool) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::get_ExtentHeight()
    @_property
    @typing.final
    def extent_height(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::get_ExtentWidth()
    @_property
    @typing.final
    def extent_width(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::get_HorizontalOffset()
    @_property
    @typing.final
    def horizontal_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::get_VerticalOffset()
    @_property
    @typing.final
    def vertical_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::get_ViewportHeight()
    @_property
    @typing.final
    def viewport_height(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::get_ViewportWidth()
    @_property
    @typing.final
    def viewport_width(self) -> winrt.system.Double: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::get_AreHorizontalSnapPointsRegular()
    @_property
    @typing.final
    def are_horizontal_snap_points_regular(self) -> bool: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel::get_AreVerticalSnapPointsRegular()
    @_property
    @typing.final
    def are_vertical_snap_points_regular(self) -> bool: ...

class ColorSpectrum_Static(microsoft_ui_xaml_controls.Control_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_ColorProperty()
    @_property
    @typing.final
    def color_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_ComponentsProperty()
    @_property
    @typing.final
    def components_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_HsvColorProperty()
    @_property
    @typing.final
    def hsv_color_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_MaxHueProperty()
    @_property
    @typing.final
    def max_hue_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_MaxSaturationProperty()
    @_property
    @typing.final
    def max_saturation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_MaxValueProperty()
    @_property
    @typing.final
    def max_value_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_MinHueProperty()
    @_property
    @typing.final
    def min_hue_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_MinSaturationProperty()
    @_property
    @typing.final
    def min_saturation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_MinValueProperty()
    @_property
    @typing.final
    def min_value_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_ShapeProperty()
    @_property
    @typing.final
    def shape_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ColorSpectrum(microsoft_ui_xaml_controls.Control, metaclass=ColorSpectrum_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::add_ColorChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum,Microsoft.UI.Xaml.Controls.ColorChangedEventArgs>)
    def add_color_changed(self, handler: windows_foundation.TypedEventHandler[ColorSpectrum, microsoft_ui_xaml_controls.ColorChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::remove_ColorChanged(Windows.Foundation.EventRegistrationToken)
    def remove_color_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Microsoft.UI.Xaml.Controls.ColorSpectrumShape Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_Shape()
    @_property
    def shape(self) -> microsoft_ui_xaml_controls.ColorSpectrumShape: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::put_Shape(Microsoft.UI.Xaml.Controls.ColorSpectrumShape)
    @shape.setter
    @typing.final
    def shape(self, value: microsoft_ui_xaml_controls.ColorSpectrumShape) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_MinValue()
    @_property
    def min_value(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::put_MinValue(System.Int32)
    @min_value.setter
    @typing.final
    def min_value(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_MinSaturation()
    @_property
    def min_saturation(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::put_MinSaturation(System.Int32)
    @min_saturation.setter
    @typing.final
    def min_saturation(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_MinHue()
    @_property
    def min_hue(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::put_MinHue(System.Int32)
    @min_hue.setter
    @typing.final
    def min_hue(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_MaxValue()
    @_property
    def max_value(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::put_MaxValue(System.Int32)
    @max_value.setter
    @typing.final
    def max_value(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_MaxSaturation()
    @_property
    def max_saturation(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::put_MaxSaturation(System.Int32)
    @max_saturation.setter
    @typing.final
    def max_saturation(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_MaxHue()
    @_property
    def max_hue(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::put_MaxHue(System.Int32)
    @max_hue.setter
    @typing.final
    def max_hue(self, value: winrt.system.Int32) -> None: ...
    # Windows.Foundation.Numerics.Vector4 Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_HsvColor()
    @_property
    def hsv_color(self) -> windows_foundation_numerics.Vector4: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::put_HsvColor(Windows.Foundation.Numerics.Vector4)
    @hsv_color.setter
    @typing.final
    def hsv_color(self, value: windows_foundation_numerics.Vector4) -> None: ...
    # Microsoft.UI.Xaml.Controls.ColorSpectrumComponents Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_Components()
    @_property
    def components(self) -> microsoft_ui_xaml_controls.ColorSpectrumComponents: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::put_Components(Microsoft.UI.Xaml.Controls.ColorSpectrumComponents)
    @components.setter
    @typing.final
    def components(self, value: microsoft_ui_xaml_controls.ColorSpectrumComponents) -> None: ...
    # Windows.UI.Color Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::get_Color()
    @_property
    def color(self) -> windows_ui.Color: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum::put_Color(Windows.UI.Color)
    @color.setter
    @typing.final
    def color(self, value: windows_ui.Color) -> None: ...

class ColumnMajorUniformToLargestGridLayout_Static(microsoft_ui_xaml_controls.NonVirtualizingLayout_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout::get_ColumnSpacingProperty()
    @_property
    @typing.final
    def column_spacing_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout::get_MaxColumnsProperty()
    @_property
    @typing.final
    def max_columns_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout::get_RowSpacingProperty()
    @_property
    @typing.final
    def row_spacing_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ColumnMajorUniformToLargestGridLayout(microsoft_ui_xaml_controls.NonVirtualizingLayout, metaclass=ColumnMajorUniformToLargestGridLayout_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout::get_RowSpacing()
    @_property
    def row_spacing(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout::put_RowSpacing(System.Double)
    @row_spacing.setter
    @typing.final
    def row_spacing(self, value: winrt.system.Double) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout::get_MaxColumns()
    @_property
    def max_columns(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout::put_MaxColumns(System.Int32)
    @max_columns.setter
    @typing.final
    def max_columns(self, value: winrt.system.Int32) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout::get_ColumnSpacing()
    @_property
    def column_spacing(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout::put_ColumnSpacing(System.Double)
    @column_spacing.setter
    @typing.final
    def column_spacing(self, value: winrt.system.Double) -> None: ...

@typing.final
class ComboBoxHelper_Static(winrt._winrt.IInspectable_Static):
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.ComboBoxHelper::GetKeepInteriorCornersSquare(Microsoft.UI.Xaml.Controls.ComboBox)
    def get_keep_interior_corners_square(cls, combo_box: microsoft_ui_xaml_controls.ComboBox, /) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ComboBoxHelper::SetKeepInteriorCornersSquare(Microsoft.UI.Xaml.Controls.ComboBox,System.Boolean)
    def set_keep_interior_corners_square(cls, combo_box: microsoft_ui_xaml_controls.ComboBox, value: bool, /) -> None: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ComboBoxHelper::get_KeepInteriorCornersSquareProperty()
    @_property
    def keep_interior_corners_square_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class ComboBoxHelper(winrt.system.Object, metaclass=ComboBoxHelper_Static):
    pass

@typing.final
class ComboBoxTemplateSettings(microsoft_ui_xaml.DependencyObject):
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings::get_DropDownClosedHeight()
    @_property
    def drop_down_closed_height(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings::get_DropDownContentMinWidth()
    @_property
    def drop_down_content_min_width(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings::get_DropDownOffset()
    @_property
    def drop_down_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings::get_DropDownOpenedHeight()
    @_property
    def drop_down_opened_height(self) -> winrt.system.Double: ...
    # Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection Microsoft.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings::get_SelectedItemDirection()
    @_property
    def selected_item_direction(self) -> AnimationDirection: ...

class CommandBarFlyoutCommandBar_Static(microsoft_ui_xaml_controls.CommandBar_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar::get_SystemBackdropProperty()
    @_property
    @typing.final
    def system_backdrop_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class CommandBarFlyoutCommandBar(microsoft_ui_xaml_controls.CommandBar, metaclass=CommandBarFlyoutCommandBar_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar::get_FlyoutTemplateSettings()
    @_property
    @typing.final
    def flyout_template_settings(self) -> CommandBarFlyoutCommandBarTemplateSettings: ...
    # Microsoft.UI.Xaml.Media.SystemBackdrop Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar::get_SystemBackdrop()
    @_property
    def system_backdrop(self) -> microsoft_ui_xaml_media.SystemBackdrop: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar::put_SystemBackdrop(Microsoft.UI.Xaml.Media.SystemBackdrop)
    @system_backdrop.setter
    @typing.final
    def system_backdrop(self, value: microsoft_ui_xaml_media.SystemBackdrop) -> None: ...

@typing.final
class CommandBarFlyoutCommandBarAutomationProperties_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Xaml.Automation.Peers.AutomationControlType Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarAutomationProperties::GetControlType(Microsoft.UI.Xaml.UIElement)
    def get_control_type(cls, element: microsoft_ui_xaml.UIElement, /) -> microsoft_ui_xaml_automation_peers.AutomationControlType: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarAutomationProperties::SetControlType(Microsoft.UI.Xaml.UIElement,Microsoft.UI.Xaml.Automation.Peers.AutomationControlType)
    def set_control_type(cls, element: microsoft_ui_xaml.UIElement, value: microsoft_ui_xaml_automation_peers.AutomationControlType, /) -> None: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarAutomationProperties::get_ControlTypeProperty()
    @_property
    def control_type_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class CommandBarFlyoutCommandBarAutomationProperties(winrt.system.Object, metaclass=CommandBarFlyoutCommandBarAutomationProperties_Static):
    pass

@typing.final
class CommandBarFlyoutCommandBarTemplateSettings(microsoft_ui_xaml.DependencyObject):
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_CloseAnimationEndPosition()
    @_property
    def close_animation_end_position(self) -> winrt.system.Double: ...
    # Windows.Foundation.Rect Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_ContentClipRect()
    @_property
    def content_clip_rect(self) -> windows_foundation.Rect: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_CurrentWidth()
    @_property
    def current_width(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_ExpandDownAnimationEndPosition()
    @_property
    def expand_down_animation_end_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_ExpandDownAnimationHoldPosition()
    @_property
    def expand_down_animation_hold_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_ExpandDownAnimationStartPosition()
    @_property
    def expand_down_animation_start_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_ExpandDownOverflowVerticalPosition()
    @_property
    def expand_down_overflow_vertical_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_ExpandUpAnimationEndPosition()
    @_property
    def expand_up_animation_end_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_ExpandUpAnimationHoldPosition()
    @_property
    def expand_up_animation_hold_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_ExpandUpAnimationStartPosition()
    @_property
    def expand_up_animation_start_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_ExpandUpOverflowVerticalPosition()
    @_property
    def expand_up_overflow_vertical_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_ExpandedWidth()
    @_property
    def expanded_width(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_OpenAnimationEndPosition()
    @_property
    def open_animation_end_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_OpenAnimationStartPosition()
    @_property
    def open_animation_start_position(self) -> winrt.system.Double: ...
    # Windows.Foundation.Rect Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_OverflowContentClipRect()
    @_property
    def overflow_content_clip_rect(self) -> windows_foundation.Rect: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_WidthExpansionAnimationEndPosition()
    @_property
    def width_expansion_animation_end_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_WidthExpansionAnimationStartPosition()
    @_property
    def width_expansion_animation_start_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_WidthExpansionDelta()
    @_property
    def width_expansion_delta(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_WidthExpansionMoreButtonAnimationEndPosition()
    @_property
    def width_expansion_more_button_animation_end_position(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings::get_WidthExpansionMoreButtonAnimationStartPosition()
    @_property
    def width_expansion_more_button_animation_start_position(self) -> winrt.system.Double: ...

@typing.final
class CommandBarTemplateSettings(microsoft_ui_xaml.DependencyObject):
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings::get_ContentHeight()
    @_property
    def content_height(self) -> winrt.system.Double: ...
    # Microsoft.UI.Xaml.Visibility Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings::get_EffectiveOverflowButtonVisibility()
    @_property
    def effective_overflow_button_visibility(self) -> microsoft_ui_xaml.Visibility: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings::get_NegativeOverflowContentHeight()
    @_property
    def negative_overflow_content_height(self) -> winrt.system.Double: ...
    # Windows.Foundation.Rect Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings::get_OverflowContentClipRect()
    @_property
    def overflow_content_clip_rect(self) -> windows_foundation.Rect: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings::get_OverflowContentCompactYTranslation()
    @_property
    def overflow_content_compact_y_translation(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings::get_OverflowContentHeight()
    @_property
    def overflow_content_height(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings::get_OverflowContentHiddenYTranslation()
    @_property
    def overflow_content_hidden_y_translation(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings::get_OverflowContentHorizontalOffset()
    @_property
    def overflow_content_horizontal_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings::get_OverflowContentMaxHeight()
    @_property
    def overflow_content_max_height(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings::get_OverflowContentMaxWidth()
    @_property
    def overflow_content_max_width(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings::get_OverflowContentMinWidth()
    @_property
    def overflow_content_min_width(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CommandBarTemplateSettings::get_OverflowContentMinimalYTranslation()
    @_property
    def overflow_content_minimal_y_translation(self) -> winrt.system.Double: ...

@typing.final
class CornerRadiusFilterConverter_Static(microsoft_ui_xaml.DependencyObject_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter::get_FilterProperty()
    @_property
    def filter_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter::get_ScaleProperty()
    @_property
    def scale_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class CornerRadiusFilterConverter(microsoft_ui_xaml.DependencyObject, microsoft_ui_xaml_data.IValueConverter, metaclass=CornerRadiusFilterConverter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Object Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter::Convert(System.Object,Windows.UI.Xaml.Interop.TypeName,System.Object,System.String)
    def convert(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    # System.Object Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter::ConvertBack(System.Object,Windows.UI.Xaml.Interop.TypeName,System.Object,System.String)
    def convert_back(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter::get_Scale()
    @_property
    def scale(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter::put_Scale(System.Double)
    @scale.setter
    def scale(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterKind Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter::get_Filter()
    @_property
    def filter(self) -> CornerRadiusFilterKind: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter::put_Filter(Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterKind)
    @filter.setter
    def filter(self, value: CornerRadiusFilterKind) -> None: ...

@typing.final
class CornerRadiusToThicknessConverter_Static(microsoft_ui_xaml.DependencyObject_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter::get_ConversionKindProperty()
    @_property
    def conversion_kind_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter::get_MultiplierProperty()
    @_property
    def multiplier_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class CornerRadiusToThicknessConverter(microsoft_ui_xaml.DependencyObject, microsoft_ui_xaml_data.IValueConverter, metaclass=CornerRadiusToThicknessConverter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Object Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter::Convert(System.Object,Windows.UI.Xaml.Interop.TypeName,System.Object,System.String)
    def convert(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    # System.Object Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter::ConvertBack(System.Object,Windows.UI.Xaml.Interop.TypeName,System.Object,System.String)
    def convert_back(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter::get_Multiplier()
    @_property
    def multiplier(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter::put_Multiplier(System.Double)
    @multiplier.setter
    def multiplier(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverterKind Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter::get_ConversionKind()
    @_property
    def conversion_kind(self) -> CornerRadiusToThicknessConverterKind: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter::put_ConversionKind(Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverterKind)
    @conversion_kind.setter
    def conversion_kind(self, value: CornerRadiusToThicknessConverterKind) -> None: ...

class DragCompletedEventArgs_Static(microsoft_ui_xaml.RoutedEventArgs_Static):
    pass

class DragCompletedEventArgs(microsoft_ui_xaml.RoutedEventArgs, metaclass=DragCompletedEventArgs_Static):
    def __new__(cls: typing.Type[Self], horizontal_change: winrt.system.Double, vertical_change: winrt.system.Double, canceled: bool) -> Self: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs::get_Canceled()
    @_property
    @typing.final
    def canceled(self) -> bool: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs::get_HorizontalChange()
    @_property
    @typing.final
    def horizontal_change(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs::get_VerticalChange()
    @_property
    @typing.final
    def vertical_change(self) -> winrt.system.Double: ...

class DragDeltaEventArgs_Static(microsoft_ui_xaml.RoutedEventArgs_Static):
    pass

class DragDeltaEventArgs(microsoft_ui_xaml.RoutedEventArgs, metaclass=DragDeltaEventArgs_Static):
    def __new__(cls: typing.Type[Self], horizontal_change: winrt.system.Double, vertical_change: winrt.system.Double) -> Self: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventArgs::get_HorizontalChange()
    @_property
    @typing.final
    def horizontal_change(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventArgs::get_VerticalChange()
    @_property
    @typing.final
    def vertical_change(self) -> winrt.system.Double: ...

class DragStartedEventArgs_Static(microsoft_ui_xaml.RoutedEventArgs_Static):
    pass

class DragStartedEventArgs(microsoft_ui_xaml.RoutedEventArgs, metaclass=DragStartedEventArgs_Static):
    def __new__(cls: typing.Type[Self], horizontal_offset: winrt.system.Double, vertical_offset: winrt.system.Double) -> Self: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventArgs::get_HorizontalOffset()
    @_property
    @typing.final
    def horizontal_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventArgs::get_VerticalOffset()
    @_property
    @typing.final
    def vertical_offset(self) -> winrt.system.Double: ...

class FlyoutBase_Static(microsoft_ui_xaml.DependencyObject_Static):
    # Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::GetAttachedFlyout(Microsoft.UI.Xaml.FrameworkElement)
    def get_attached_flyout(cls, element: microsoft_ui_xaml.FrameworkElement, /) -> FlyoutBase: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::SetAttachedFlyout(Microsoft.UI.Xaml.FrameworkElement,Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase)
    def set_attached_flyout(cls, element: microsoft_ui_xaml.FrameworkElement, value: FlyoutBase, /) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::ShowAttachedFlyout(Microsoft.UI.Xaml.FrameworkElement)
    def show_attached_flyout(cls, flyout_owner: microsoft_ui_xaml.FrameworkElement, /) -> None: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_AllowFocusOnInteractionProperty()
    @_property
    @typing.final
    def allow_focus_on_interaction_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_AllowFocusWhenDisabledProperty()
    @_property
    @typing.final
    def allow_focus_when_disabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_AreOpenCloseAnimationsEnabledProperty()
    @_property
    @typing.final
    def are_open_close_animations_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_AttachedFlyoutProperty()
    @_property
    @typing.final
    def attached_flyout_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_ElementSoundModeProperty()
    @_property
    @typing.final
    def element_sound_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_InputDevicePrefersPrimaryCommandsProperty()
    @_property
    @typing.final
    def input_device_prefers_primary_commands_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_IsOpenProperty()
    @_property
    @typing.final
    def is_open_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_LightDismissOverlayModeProperty()
    @_property
    @typing.final
    def light_dismiss_overlay_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_OverlayInputPassThroughElementProperty()
    @_property
    @typing.final
    def overlay_input_pass_through_element_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_PlacementProperty()
    @_property
    @typing.final
    def placement_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_ShouldConstrainToRootBoundsProperty()
    @_property
    @typing.final
    def should_constrain_to_root_bounds_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_ShowModeProperty()
    @_property
    @typing.final
    def show_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_TargetProperty()
    @_property
    @typing.final
    def target_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_SystemBackdropProperty()
    @_property
    @typing.final
    def system_backdrop_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class FlyoutBase(microsoft_ui_xaml.DependencyObject, metaclass=FlyoutBase_Static):
    # Microsoft.UI.Xaml.Controls.Control Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::CreatePresenter()
    def _create_presenter(self) -> microsoft_ui_xaml_controls.Control: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::Hide()
    def hide(self) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::OnProcessKeyboardAccelerators(Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs)
    def _on_process_keyboard_accelerators(self, args: microsoft_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs, /) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::ShowAt(Microsoft.UI.Xaml.FrameworkElement)
    def show_at(self, placement_target: microsoft_ui_xaml.FrameworkElement, /) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::ShowAt(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions)
    def show_at_with_options(self, placement_target: microsoft_ui_xaml.DependencyObject, show_options: FlyoutShowOptions, /) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::TryInvokeKeyboardAccelerator(Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs)
    def try_invoke_keyboard_accelerator(self, args: microsoft_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::add_Closed(Windows.Foundation.EventHandler`1<System.Object>)
    def add_closed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::remove_Closed(Windows.Foundation.EventRegistrationToken)
    def remove_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::add_Closing(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase,Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs>)
    def add_closing(self, handler: windows_foundation.TypedEventHandler[FlyoutBase, FlyoutBaseClosingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::remove_Closing(Windows.Foundation.EventRegistrationToken)
    def remove_closing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::add_Opened(Windows.Foundation.EventHandler`1<System.Object>)
    def add_opened(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::remove_Opened(Windows.Foundation.EventRegistrationToken)
    def remove_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::add_Opening(Windows.Foundation.EventHandler`1<System.Object>)
    def add_opening(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::remove_Opening(Windows.Foundation.EventRegistrationToken)
    def remove_opening(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Microsoft.UI.Xaml.XamlRoot Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_XamlRoot()
    @_property
    def xaml_root(self) -> microsoft_ui_xaml.XamlRoot: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::put_XamlRoot(Microsoft.UI.Xaml.XamlRoot)
    @xaml_root.setter
    @typing.final
    def xaml_root(self, value: microsoft_ui_xaml.XamlRoot) -> None: ...
    # Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_ShowMode()
    @_property
    def show_mode(self) -> FlyoutShowMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::put_ShowMode(Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode)
    @show_mode.setter
    @typing.final
    def show_mode(self, value: FlyoutShowMode) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_ShouldConstrainToRootBounds()
    @_property
    def should_constrain_to_root_bounds(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::put_ShouldConstrainToRootBounds(System.Boolean)
    @should_constrain_to_root_bounds.setter
    @typing.final
    def should_constrain_to_root_bounds(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_Placement()
    @_property
    def placement(self) -> FlyoutPlacementMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::put_Placement(Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode)
    @placement.setter
    @typing.final
    def placement(self, value: FlyoutPlacementMode) -> None: ...
    # Microsoft.UI.Xaml.DependencyObject Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_OverlayInputPassThroughElement()
    @_property
    def overlay_input_pass_through_element(self) -> microsoft_ui_xaml.DependencyObject: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::put_OverlayInputPassThroughElement(Microsoft.UI.Xaml.DependencyObject)
    @overlay_input_pass_through_element.setter
    @typing.final
    def overlay_input_pass_through_element(self, value: microsoft_ui_xaml.DependencyObject) -> None: ...
    # Microsoft.UI.Xaml.Controls.LightDismissOverlayMode Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_LightDismissOverlayMode()
    @_property
    def light_dismiss_overlay_mode(self) -> microsoft_ui_xaml_controls.LightDismissOverlayMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::put_LightDismissOverlayMode(Microsoft.UI.Xaml.Controls.LightDismissOverlayMode)
    @light_dismiss_overlay_mode.setter
    @typing.final
    def light_dismiss_overlay_mode(self, value: microsoft_ui_xaml_controls.LightDismissOverlayMode) -> None: ...
    # Microsoft.UI.Xaml.ElementSoundMode Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_ElementSoundMode()
    @_property
    def element_sound_mode(self) -> microsoft_ui_xaml.ElementSoundMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::put_ElementSoundMode(Microsoft.UI.Xaml.ElementSoundMode)
    @element_sound_mode.setter
    @typing.final
    def element_sound_mode(self, value: microsoft_ui_xaml.ElementSoundMode) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_AreOpenCloseAnimationsEnabled()
    @_property
    def are_open_close_animations_enabled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::put_AreOpenCloseAnimationsEnabled(System.Boolean)
    @are_open_close_animations_enabled.setter
    @typing.final
    def are_open_close_animations_enabled(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_AllowFocusWhenDisabled()
    @_property
    def allow_focus_when_disabled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::put_AllowFocusWhenDisabled(System.Boolean)
    @allow_focus_when_disabled.setter
    @typing.final
    def allow_focus_when_disabled(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_AllowFocusOnInteraction()
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::put_AllowFocusOnInteraction(System.Boolean)
    @allow_focus_on_interaction.setter
    @typing.final
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_InputDevicePrefersPrimaryCommands()
    @_property
    @typing.final
    def input_device_prefers_primary_commands(self) -> bool: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_IsConstrainedToRootBounds()
    @_property
    @typing.final
    def is_constrained_to_root_bounds(self) -> bool: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_IsOpen()
    @_property
    @typing.final
    def is_open(self) -> bool: ...
    # Microsoft.UI.Xaml.FrameworkElement Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_Target()
    @_property
    @typing.final
    def target(self) -> microsoft_ui_xaml.FrameworkElement: ...
    # Microsoft.UI.Xaml.Media.SystemBackdrop Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::get_SystemBackdrop()
    @_property
    def system_backdrop(self) -> microsoft_ui_xaml_media.SystemBackdrop: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase::put_SystemBackdrop(Microsoft.UI.Xaml.Media.SystemBackdrop)
    @system_backdrop.setter
    @typing.final
    def system_backdrop(self, value: microsoft_ui_xaml_media.SystemBackdrop) -> None: ...

@typing.final
class FlyoutBaseClosingEventArgs(winrt.system.Object):
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs::get_Cancel()
    @_property
    def cancel(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs::put_Cancel(System.Boolean)
    @cancel.setter
    def cancel(self, value: bool) -> None: ...

class FlyoutShowOptions_Static(winrt._winrt.IInspectable_Static):
    pass

class FlyoutShowOptions(winrt.system.Object, metaclass=FlyoutShowOptions_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions::get_ShowMode()
    @_property
    def show_mode(self) -> FlyoutShowMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions::put_ShowMode(Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowMode)
    @show_mode.setter
    @typing.final
    def show_mode(self, value: FlyoutShowMode) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.Point> Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions::get_Position()
    @_property
    def position(self) -> typing.Optional[windows_foundation.Point]: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions::put_Position(Windows.Foundation.IReference`1<Windows.Foundation.Point>)
    @position.setter
    @typing.final
    def position(self, value: typing.Optional[windows_foundation.Point]) -> None: ...
    # Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions::get_Placement()
    @_property
    def placement(self) -> FlyoutPlacementMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions::put_Placement(Microsoft.UI.Xaml.Controls.Primitives.FlyoutPlacementMode)
    @placement.setter
    @typing.final
    def placement(self, value: FlyoutPlacementMode) -> None: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.Rect> Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions::get_ExclusionRect()
    @_property
    def exclusion_rect(self) -> typing.Optional[windows_foundation.Rect]: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions::put_ExclusionRect(Windows.Foundation.IReference`1<Windows.Foundation.Rect>)
    @exclusion_rect.setter
    @typing.final
    def exclusion_rect(self, value: typing.Optional[windows_foundation.Rect]) -> None: ...

@typing.final
class GeneratorPositionHelper_Static(winrt._winrt.IInspectable_Static):
    # Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition Microsoft.UI.Xaml.Controls.Primitives.GeneratorPositionHelper::FromIndexAndOffset(System.Int32,System.Int32)
    def from_index_and_offset(cls, index: winrt.system.Int32, offset: winrt.system.Int32, /) -> GeneratorPosition: ...

@typing.final
class GeneratorPositionHelper(winrt.system.Object, metaclass=GeneratorPositionHelper_Static):
    pass

class GridViewItemPresenter_Static(microsoft_ui_xaml_controls.ContentPresenter_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_CheckBrushProperty()
    @_property
    @typing.final
    def check_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_CheckHintBrushProperty()
    @_property
    @typing.final
    def check_hint_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_CheckSelectingBrushProperty()
    @_property
    @typing.final
    def check_selecting_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_ContentMarginProperty()
    @_property
    @typing.final
    def content_margin_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_DisabledOpacityProperty()
    @_property
    @typing.final
    def disabled_opacity_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_DragBackgroundProperty()
    @_property
    @typing.final
    def drag_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_DragForegroundProperty()
    @_property
    @typing.final
    def drag_foreground_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_DragOpacityProperty()
    @_property
    @typing.final
    def drag_opacity_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_FocusBorderBrushProperty()
    @_property
    @typing.final
    def focus_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_GridViewItemPresenterHorizontalContentAlignmentProperty()
    @_property
    @typing.final
    def grid_view_item_presenter_horizontal_content_alignment_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_GridViewItemPresenterPaddingProperty()
    @_property
    @typing.final
    def grid_view_item_presenter_padding_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_GridViewItemPresenterVerticalContentAlignmentProperty()
    @_property
    @typing.final
    def grid_view_item_presenter_vertical_content_alignment_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_PlaceholderBackgroundProperty()
    @_property
    @typing.final
    def placeholder_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_PointerOverBackgroundMarginProperty()
    @_property
    @typing.final
    def pointer_over_background_margin_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_PointerOverBackgroundProperty()
    @_property
    @typing.final
    def pointer_over_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_ReorderHintOffsetProperty()
    @_property
    @typing.final
    def reorder_hint_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_SelectedBackgroundProperty()
    @_property
    @typing.final
    def selected_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_SelectedBorderThicknessProperty()
    @_property
    @typing.final
    def selected_border_thickness_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_SelectedForegroundProperty()
    @_property
    @typing.final
    def selected_foreground_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_SelectedPointerOverBackgroundProperty()
    @_property
    @typing.final
    def selected_pointer_over_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_SelectedPointerOverBorderBrushProperty()
    @_property
    @typing.final
    def selected_pointer_over_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_SelectionCheckMarkVisualEnabledProperty()
    @_property
    @typing.final
    def selection_check_mark_visual_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class GridViewItemPresenter(microsoft_ui_xaml_controls.ContentPresenter, metaclass=GridViewItemPresenter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_SelectionCheckMarkVisualEnabled()
    @_property
    def selection_check_mark_visual_enabled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_SelectionCheckMarkVisualEnabled(System.Boolean)
    @selection_check_mark_visual_enabled.setter
    @typing.final
    def selection_check_mark_visual_enabled(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_SelectedPointerOverBorderBrush()
    @_property
    def selected_pointer_over_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_SelectedPointerOverBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @selected_pointer_over_border_brush.setter
    @typing.final
    def selected_pointer_over_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_SelectedPointerOverBackground()
    @_property
    def selected_pointer_over_background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_SelectedPointerOverBackground(Microsoft.UI.Xaml.Media.Brush)
    @selected_pointer_over_background.setter
    @typing.final
    def selected_pointer_over_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_SelectedForeground()
    @_property
    def selected_foreground(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_SelectedForeground(Microsoft.UI.Xaml.Media.Brush)
    @selected_foreground.setter
    @typing.final
    def selected_foreground(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_SelectedBorderThickness()
    @_property
    def selected_border_thickness(self) -> microsoft_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_SelectedBorderThickness(Microsoft.UI.Xaml.Thickness)
    @selected_border_thickness.setter
    @typing.final
    def selected_border_thickness(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_SelectedBackground()
    @_property
    def selected_background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_SelectedBackground(Microsoft.UI.Xaml.Media.Brush)
    @selected_background.setter
    @typing.final
    def selected_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_ReorderHintOffset()
    @_property
    def reorder_hint_offset(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_ReorderHintOffset(System.Double)
    @reorder_hint_offset.setter
    @typing.final
    def reorder_hint_offset(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_PointerOverBackgroundMargin()
    @_property
    def pointer_over_background_margin(self) -> microsoft_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_PointerOverBackgroundMargin(Microsoft.UI.Xaml.Thickness)
    @pointer_over_background_margin.setter
    @typing.final
    def pointer_over_background_margin(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_PointerOverBackground()
    @_property
    def pointer_over_background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_PointerOverBackground(Microsoft.UI.Xaml.Media.Brush)
    @pointer_over_background.setter
    @typing.final
    def pointer_over_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_PlaceholderBackground()
    @_property
    def placeholder_background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_PlaceholderBackground(Microsoft.UI.Xaml.Media.Brush)
    @placeholder_background.setter
    @typing.final
    def placeholder_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.VerticalAlignment Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_GridViewItemPresenterVerticalContentAlignment()
    @_property
    def grid_view_item_presenter_vertical_content_alignment(self) -> microsoft_ui_xaml.VerticalAlignment: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_GridViewItemPresenterVerticalContentAlignment(Microsoft.UI.Xaml.VerticalAlignment)
    @grid_view_item_presenter_vertical_content_alignment.setter
    @typing.final
    def grid_view_item_presenter_vertical_content_alignment(self, value: microsoft_ui_xaml.VerticalAlignment) -> None: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_GridViewItemPresenterPadding()
    @_property
    def grid_view_item_presenter_padding(self) -> microsoft_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_GridViewItemPresenterPadding(Microsoft.UI.Xaml.Thickness)
    @grid_view_item_presenter_padding.setter
    @typing.final
    def grid_view_item_presenter_padding(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    # Microsoft.UI.Xaml.HorizontalAlignment Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_GridViewItemPresenterHorizontalContentAlignment()
    @_property
    def grid_view_item_presenter_horizontal_content_alignment(self) -> microsoft_ui_xaml.HorizontalAlignment: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_GridViewItemPresenterHorizontalContentAlignment(Microsoft.UI.Xaml.HorizontalAlignment)
    @grid_view_item_presenter_horizontal_content_alignment.setter
    @typing.final
    def grid_view_item_presenter_horizontal_content_alignment(self, value: microsoft_ui_xaml.HorizontalAlignment) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_FocusBorderBrush()
    @_property
    def focus_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_FocusBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @focus_border_brush.setter
    @typing.final
    def focus_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_DragOpacity()
    @_property
    def drag_opacity(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_DragOpacity(System.Double)
    @drag_opacity.setter
    @typing.final
    def drag_opacity(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_DragForeground()
    @_property
    def drag_foreground(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_DragForeground(Microsoft.UI.Xaml.Media.Brush)
    @drag_foreground.setter
    @typing.final
    def drag_foreground(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_DragBackground()
    @_property
    def drag_background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_DragBackground(Microsoft.UI.Xaml.Media.Brush)
    @drag_background.setter
    @typing.final
    def drag_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_DisabledOpacity()
    @_property
    def disabled_opacity(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_DisabledOpacity(System.Double)
    @disabled_opacity.setter
    @typing.final
    def disabled_opacity(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_ContentMargin()
    @_property
    def content_margin(self) -> microsoft_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_ContentMargin(Microsoft.UI.Xaml.Thickness)
    @content_margin.setter
    @typing.final
    def content_margin(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_CheckSelectingBrush()
    @_property
    def check_selecting_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_CheckSelectingBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_selecting_brush.setter
    @typing.final
    def check_selecting_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_CheckHintBrush()
    @_property
    def check_hint_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_CheckHintBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_hint_brush.setter
    @typing.final
    def check_hint_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::get_CheckBrush()
    @_property
    def check_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter::put_CheckBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_brush.setter
    @typing.final
    def check_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...

@typing.final
class GridViewItemTemplateSettings(microsoft_ui_xaml.DependencyObject):
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings::get_DragItemsCount()
    @_property
    def drag_items_count(self) -> winrt.system.Int32: ...

class InfoBarPanel_Static(microsoft_ui_xaml_controls.Panel_Static):
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel::GetHorizontalOrientationMargin(Microsoft.UI.Xaml.DependencyObject)
    def get_horizontal_orientation_margin(cls, object: microsoft_ui_xaml.DependencyObject, /) -> microsoft_ui_xaml.Thickness: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel::GetVerticalOrientationMargin(Microsoft.UI.Xaml.DependencyObject)
    def get_vertical_orientation_margin(cls, object: microsoft_ui_xaml.DependencyObject, /) -> microsoft_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel::SetHorizontalOrientationMargin(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Thickness)
    def set_horizontal_orientation_margin(cls, object: microsoft_ui_xaml.DependencyObject, value: microsoft_ui_xaml.Thickness, /) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel::SetVerticalOrientationMargin(Microsoft.UI.Xaml.DependencyObject,Microsoft.UI.Xaml.Thickness)
    def set_vertical_orientation_margin(cls, object: microsoft_ui_xaml.DependencyObject, value: microsoft_ui_xaml.Thickness, /) -> None: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel::get_HorizontalOrientationMarginProperty()
    @_property
    @typing.final
    def horizontal_orientation_margin_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel::get_HorizontalOrientationPaddingProperty()
    @_property
    @typing.final
    def horizontal_orientation_padding_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel::get_VerticalOrientationMarginProperty()
    @_property
    @typing.final
    def vertical_orientation_margin_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel::get_VerticalOrientationPaddingProperty()
    @_property
    @typing.final
    def vertical_orientation_padding_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class InfoBarPanel(microsoft_ui_xaml_controls.Panel, metaclass=InfoBarPanel_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel::get_VerticalOrientationPadding()
    @_property
    def vertical_orientation_padding(self) -> microsoft_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel::put_VerticalOrientationPadding(Microsoft.UI.Xaml.Thickness)
    @vertical_orientation_padding.setter
    @typing.final
    def vertical_orientation_padding(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel::get_HorizontalOrientationPadding()
    @_property
    def horizontal_orientation_padding(self) -> microsoft_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel::put_HorizontalOrientationPadding(Microsoft.UI.Xaml.Thickness)
    @horizontal_orientation_padding.setter
    @typing.final
    def horizontal_orientation_padding(self, value: microsoft_ui_xaml.Thickness) -> None: ...

@typing.final
class ItemsChangedEventArgs(winrt.system.Object):
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs::get_Action()
    @_property
    def action(self) -> winrt.system.Int32: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs::get_ItemCount()
    @_property
    def item_count(self) -> winrt.system.Int32: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs::get_ItemUICount()
    @_property
    def item_ui_count(self) -> winrt.system.Int32: ...
    # Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs::get_OldPosition()
    @_property
    def old_position(self) -> GeneratorPosition: ...
    # Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs::get_Position()
    @_property
    def position(self) -> GeneratorPosition: ...

@typing.final
class JumpListItemBackgroundConverter_Static(microsoft_ui_xaml.DependencyObject_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter::get_DisabledProperty()
    @_property
    def disabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter::get_EnabledProperty()
    @_property
    def enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class JumpListItemBackgroundConverter(microsoft_ui_xaml.DependencyObject, microsoft_ui_xaml_data.IValueConverter, metaclass=JumpListItemBackgroundConverter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Object Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter::Convert(System.Object,Windows.UI.Xaml.Interop.TypeName,System.Object,System.String)
    def convert(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    # System.Object Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter::ConvertBack(System.Object,Windows.UI.Xaml.Interop.TypeName,System.Object,System.String)
    def convert_back(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter::get_Enabled()
    @_property
    def enabled(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter::put_Enabled(Microsoft.UI.Xaml.Media.Brush)
    @enabled.setter
    def enabled(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter::get_Disabled()
    @_property
    def disabled(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter::put_Disabled(Microsoft.UI.Xaml.Media.Brush)
    @disabled.setter
    def disabled(self, value: microsoft_ui_xaml_media.Brush) -> None: ...

@typing.final
class JumpListItemForegroundConverter_Static(microsoft_ui_xaml.DependencyObject_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter::get_DisabledProperty()
    @_property
    def disabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter::get_EnabledProperty()
    @_property
    def enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class JumpListItemForegroundConverter(microsoft_ui_xaml.DependencyObject, microsoft_ui_xaml_data.IValueConverter, metaclass=JumpListItemForegroundConverter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Object Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter::Convert(System.Object,Windows.UI.Xaml.Interop.TypeName,System.Object,System.String)
    def convert(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    # System.Object Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter::ConvertBack(System.Object,Windows.UI.Xaml.Interop.TypeName,System.Object,System.String)
    def convert_back(self, value: winrt.system.Object, target_type: windows_ui_xaml_interop.TypeName, parameter: winrt.system.Object, language: str, /) -> winrt.system.Object: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter::get_Enabled()
    @_property
    def enabled(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter::put_Enabled(Microsoft.UI.Xaml.Media.Brush)
    @enabled.setter
    def enabled(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter::get_Disabled()
    @_property
    def disabled(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter::put_Disabled(Microsoft.UI.Xaml.Media.Brush)
    @disabled.setter
    def disabled(self, value: microsoft_ui_xaml_media.Brush) -> None: ...

@typing.final
class LayoutInformation_Static(winrt._winrt.IInspectable_Static):
    # Windows.Foundation.Size Microsoft.UI.Xaml.Controls.Primitives.LayoutInformation::GetAvailableSize(Microsoft.UI.Xaml.UIElement)
    def get_available_size(cls, element: microsoft_ui_xaml.UIElement, /) -> windows_foundation.Size: ...
    # Microsoft.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.Primitives.LayoutInformation::GetLayoutExceptionElement(System.Object)
    def get_layout_exception_element(cls, dispatcher: winrt.system.Object, /) -> microsoft_ui_xaml.UIElement: ...
    # Windows.Foundation.Rect Microsoft.UI.Xaml.Controls.Primitives.LayoutInformation::GetLayoutSlot(Microsoft.UI.Xaml.FrameworkElement)
    def get_layout_slot(cls, element: microsoft_ui_xaml.FrameworkElement, /) -> windows_foundation.Rect: ...

@typing.final
class LayoutInformation(winrt.system.Object, metaclass=LayoutInformation_Static):
    pass

class ListViewItemPresenter_Static(microsoft_ui_xaml_controls.ContentPresenter_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxBorderBrushProperty()
    @_property
    @typing.final
    def check_box_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxBrushProperty()
    @_property
    @typing.final
    def check_box_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxCornerRadiusProperty()
    @_property
    @typing.final
    def check_box_corner_radius_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxDisabledBorderBrushProperty()
    @_property
    @typing.final
    def check_box_disabled_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxDisabledBrushProperty()
    @_property
    @typing.final
    def check_box_disabled_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxPointerOverBorderBrushProperty()
    @_property
    @typing.final
    def check_box_pointer_over_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxPointerOverBrushProperty()
    @_property
    @typing.final
    def check_box_pointer_over_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxPressedBorderBrushProperty()
    @_property
    @typing.final
    def check_box_pressed_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxPressedBrushProperty()
    @_property
    @typing.final
    def check_box_pressed_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxSelectedBrushProperty()
    @_property
    @typing.final
    def check_box_selected_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxSelectedDisabledBrushProperty()
    @_property
    @typing.final
    def check_box_selected_disabled_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxSelectedPointerOverBrushProperty()
    @_property
    @typing.final
    def check_box_selected_pointer_over_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxSelectedPressedBrushProperty()
    @_property
    @typing.final
    def check_box_selected_pressed_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBrushProperty()
    @_property
    @typing.final
    def check_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckDisabledBrushProperty()
    @_property
    @typing.final
    def check_disabled_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckHintBrushProperty()
    @_property
    @typing.final
    def check_hint_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckModeProperty()
    @_property
    @typing.final
    def check_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckPressedBrushProperty()
    @_property
    @typing.final
    def check_pressed_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckSelectingBrushProperty()
    @_property
    @typing.final
    def check_selecting_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_ContentMarginProperty()
    @_property
    @typing.final
    def content_margin_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_DisabledOpacityProperty()
    @_property
    @typing.final
    def disabled_opacity_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_DragBackgroundProperty()
    @_property
    @typing.final
    def drag_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_DragForegroundProperty()
    @_property
    @typing.final
    def drag_foreground_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_DragOpacityProperty()
    @_property
    @typing.final
    def drag_opacity_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_FocusBorderBrushProperty()
    @_property
    @typing.final
    def focus_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_FocusSecondaryBorderBrushProperty()
    @_property
    @typing.final
    def focus_secondary_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_ListViewItemPresenterHorizontalContentAlignmentProperty()
    @_property
    @typing.final
    def list_view_item_presenter_horizontal_content_alignment_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_ListViewItemPresenterPaddingProperty()
    @_property
    @typing.final
    def list_view_item_presenter_padding_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_ListViewItemPresenterVerticalContentAlignmentProperty()
    @_property
    @typing.final
    def list_view_item_presenter_vertical_content_alignment_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_PlaceholderBackgroundProperty()
    @_property
    @typing.final
    def placeholder_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_PointerOverBackgroundMarginProperty()
    @_property
    @typing.final
    def pointer_over_background_margin_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_PointerOverBackgroundProperty()
    @_property
    @typing.final
    def pointer_over_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_PointerOverBorderBrushProperty()
    @_property
    @typing.final
    def pointer_over_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_PointerOverForegroundProperty()
    @_property
    @typing.final
    def pointer_over_foreground_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_PressedBackgroundProperty()
    @_property
    @typing.final
    def pressed_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_ReorderHintOffsetProperty()
    @_property
    @typing.final
    def reorder_hint_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_RevealBackgroundProperty()
    @_property
    @typing.final
    def reveal_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_RevealBackgroundShowsAboveContentProperty()
    @_property
    @typing.final
    def reveal_background_shows_above_content_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_RevealBorderBrushProperty()
    @_property
    @typing.final
    def reveal_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_RevealBorderThicknessProperty()
    @_property
    @typing.final
    def reveal_border_thickness_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedBackgroundProperty()
    @_property
    @typing.final
    def selected_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedBorderBrushProperty()
    @_property
    @typing.final
    def selected_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedBorderThicknessProperty()
    @_property
    @typing.final
    def selected_border_thickness_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedDisabledBackgroundProperty()
    @_property
    @typing.final
    def selected_disabled_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedDisabledBorderBrushProperty()
    @_property
    @typing.final
    def selected_disabled_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedForegroundProperty()
    @_property
    @typing.final
    def selected_foreground_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedInnerBorderBrushProperty()
    @_property
    @typing.final
    def selected_inner_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedPointerOverBackgroundProperty()
    @_property
    @typing.final
    def selected_pointer_over_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedPointerOverBorderBrushProperty()
    @_property
    @typing.final
    def selected_pointer_over_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedPressedBackgroundProperty()
    @_property
    @typing.final
    def selected_pressed_background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedPressedBorderBrushProperty()
    @_property
    @typing.final
    def selected_pressed_border_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionCheckMarkVisualEnabledProperty()
    @_property
    @typing.final
    def selection_check_mark_visual_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionIndicatorBrushProperty()
    @_property
    @typing.final
    def selection_indicator_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionIndicatorCornerRadiusProperty()
    @_property
    @typing.final
    def selection_indicator_corner_radius_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionIndicatorDisabledBrushProperty()
    @_property
    @typing.final
    def selection_indicator_disabled_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionIndicatorModeProperty()
    @_property
    @typing.final
    def selection_indicator_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionIndicatorPointerOverBrushProperty()
    @_property
    @typing.final
    def selection_indicator_pointer_over_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionIndicatorPressedBrushProperty()
    @_property
    @typing.final
    def selection_indicator_pressed_brush_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionIndicatorVisualEnabledProperty()
    @_property
    @typing.final
    def selection_indicator_visual_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ListViewItemPresenter(microsoft_ui_xaml_controls.ContentPresenter, metaclass=ListViewItemPresenter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Microsoft.UI.Xaml.VerticalAlignment Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_ListViewItemPresenterVerticalContentAlignment()
    @_property
    def list_view_item_presenter_vertical_content_alignment(self) -> microsoft_ui_xaml.VerticalAlignment: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_ListViewItemPresenterVerticalContentAlignment(Microsoft.UI.Xaml.VerticalAlignment)
    @list_view_item_presenter_vertical_content_alignment.setter
    @typing.final
    def list_view_item_presenter_vertical_content_alignment(self, value: microsoft_ui_xaml.VerticalAlignment) -> None: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_ListViewItemPresenterPadding()
    @_property
    def list_view_item_presenter_padding(self) -> microsoft_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_ListViewItemPresenterPadding(Microsoft.UI.Xaml.Thickness)
    @list_view_item_presenter_padding.setter
    @typing.final
    def list_view_item_presenter_padding(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    # Microsoft.UI.Xaml.HorizontalAlignment Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_ListViewItemPresenterHorizontalContentAlignment()
    @_property
    def list_view_item_presenter_horizontal_content_alignment(self) -> microsoft_ui_xaml.HorizontalAlignment: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_ListViewItemPresenterHorizontalContentAlignment(Microsoft.UI.Xaml.HorizontalAlignment)
    @list_view_item_presenter_horizontal_content_alignment.setter
    @typing.final
    def list_view_item_presenter_horizontal_content_alignment(self, value: microsoft_ui_xaml.HorizontalAlignment) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_FocusSecondaryBorderBrush()
    @_property
    def focus_secondary_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_FocusSecondaryBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @focus_secondary_border_brush.setter
    @typing.final
    def focus_secondary_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_FocusBorderBrush()
    @_property
    def focus_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_FocusBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @focus_border_brush.setter
    @typing.final
    def focus_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_DragOpacity()
    @_property
    def drag_opacity(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_DragOpacity(System.Double)
    @drag_opacity.setter
    @typing.final
    def drag_opacity(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_RevealBackground()
    @_property
    def reveal_background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_RevealBackground(Microsoft.UI.Xaml.Media.Brush)
    @reveal_background.setter
    @typing.final
    def reveal_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_DragBackground()
    @_property
    def drag_background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_DragBackground(Microsoft.UI.Xaml.Media.Brush)
    @drag_background.setter
    @typing.final
    def drag_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_DisabledOpacity()
    @_property
    def disabled_opacity(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_DisabledOpacity(System.Double)
    @disabled_opacity.setter
    @typing.final
    def disabled_opacity(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_ContentMargin()
    @_property
    def content_margin(self) -> microsoft_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_ContentMargin(Microsoft.UI.Xaml.Thickness)
    @content_margin.setter
    @typing.final
    def content_margin(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckSelectingBrush()
    @_property
    def check_selecting_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckSelectingBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_selecting_brush.setter
    @typing.final
    def check_selecting_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckPressedBrush()
    @_property
    def check_pressed_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckPressedBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_pressed_brush.setter
    @typing.final
    def check_pressed_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterCheckMode Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckMode()
    @_property
    def check_mode(self) -> ListViewItemPresenterCheckMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckMode(Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterCheckMode)
    @check_mode.setter
    @typing.final
    def check_mode(self, value: ListViewItemPresenterCheckMode) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckHintBrush()
    @_property
    def check_hint_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckHintBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_hint_brush.setter
    @typing.final
    def check_hint_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxBorderBrush()
    @_property
    def check_box_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckBoxBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_box_border_brush.setter
    @typing.final
    def check_box_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBrush()
    @_property
    def check_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_brush.setter
    @typing.final
    def check_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxSelectedPressedBrush()
    @_property
    def check_box_selected_pressed_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckBoxSelectedPressedBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_box_selected_pressed_brush.setter
    @typing.final
    def check_box_selected_pressed_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxSelectedPointerOverBrush()
    @_property
    def check_box_selected_pointer_over_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckBoxSelectedPointerOverBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_box_selected_pointer_over_brush.setter
    @typing.final
    def check_box_selected_pointer_over_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxSelectedDisabledBrush()
    @_property
    def check_box_selected_disabled_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckBoxSelectedDisabledBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_box_selected_disabled_brush.setter
    @typing.final
    def check_box_selected_disabled_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxSelectedBrush()
    @_property
    def check_box_selected_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckBoxSelectedBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_box_selected_brush.setter
    @typing.final
    def check_box_selected_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxPressedBrush()
    @_property
    def check_box_pressed_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckBoxPressedBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_box_pressed_brush.setter
    @typing.final
    def check_box_pressed_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionCheckMarkVisualEnabled()
    @_property
    def selection_check_mark_visual_enabled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectionCheckMarkVisualEnabled(System.Boolean)
    @selection_check_mark_visual_enabled.setter
    @typing.final
    def selection_check_mark_visual_enabled(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxPointerOverBrush()
    @_property
    def check_box_pointer_over_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckBoxPointerOverBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_box_pointer_over_brush.setter
    @typing.final
    def check_box_pointer_over_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxPointerOverBorderBrush()
    @_property
    def check_box_pointer_over_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckBoxPointerOverBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_box_pointer_over_border_brush.setter
    @typing.final
    def check_box_pointer_over_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxDisabledBrush()
    @_property
    def check_box_disabled_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckBoxDisabledBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_box_disabled_brush.setter
    @typing.final
    def check_box_disabled_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxDisabledBorderBrush()
    @_property
    def check_box_disabled_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckBoxDisabledBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_box_disabled_border_brush.setter
    @typing.final
    def check_box_disabled_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.CornerRadius Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxCornerRadius()
    @_property
    def check_box_corner_radius(self) -> microsoft_ui_xaml.CornerRadius: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckBoxCornerRadius(Microsoft.UI.Xaml.CornerRadius)
    @check_box_corner_radius.setter
    @typing.final
    def check_box_corner_radius(self, value: microsoft_ui_xaml.CornerRadius) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxBrush()
    @_property
    def check_box_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckBoxBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_box_brush.setter
    @typing.final
    def check_box_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckDisabledBrush()
    @_property
    def check_disabled_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckDisabledBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_disabled_brush.setter
    @typing.final
    def check_disabled_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_PlaceholderBackground()
    @_property
    def placeholder_background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_PlaceholderBackground(Microsoft.UI.Xaml.Media.Brush)
    @placeholder_background.setter
    @typing.final
    def placeholder_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedDisabledBorderBrush()
    @_property
    def selected_disabled_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectedDisabledBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @selected_disabled_border_brush.setter
    @typing.final
    def selected_disabled_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionIndicatorPressedBrush()
    @_property
    def selection_indicator_pressed_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectionIndicatorPressedBrush(Microsoft.UI.Xaml.Media.Brush)
    @selection_indicator_pressed_brush.setter
    @typing.final
    def selection_indicator_pressed_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionIndicatorPointerOverBrush()
    @_property
    def selection_indicator_pointer_over_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectionIndicatorPointerOverBrush(Microsoft.UI.Xaml.Media.Brush)
    @selection_indicator_pointer_over_brush.setter
    @typing.final
    def selection_indicator_pointer_over_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterSelectionIndicatorMode Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionIndicatorMode()
    @_property
    def selection_indicator_mode(self) -> ListViewItemPresenterSelectionIndicatorMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectionIndicatorMode(Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterSelectionIndicatorMode)
    @selection_indicator_mode.setter
    @typing.final
    def selection_indicator_mode(self, value: ListViewItemPresenterSelectionIndicatorMode) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionIndicatorDisabledBrush()
    @_property
    def selection_indicator_disabled_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectionIndicatorDisabledBrush(Microsoft.UI.Xaml.Media.Brush)
    @selection_indicator_disabled_brush.setter
    @typing.final
    def selection_indicator_disabled_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.CornerRadius Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionIndicatorCornerRadius()
    @_property
    def selection_indicator_corner_radius(self) -> microsoft_ui_xaml.CornerRadius: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectionIndicatorCornerRadius(Microsoft.UI.Xaml.CornerRadius)
    @selection_indicator_corner_radius.setter
    @typing.final
    def selection_indicator_corner_radius(self, value: microsoft_ui_xaml.CornerRadius) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionIndicatorBrush()
    @_property
    def selection_indicator_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectionIndicatorBrush(Microsoft.UI.Xaml.Media.Brush)
    @selection_indicator_brush.setter
    @typing.final
    def selection_indicator_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_CheckBoxPressedBorderBrush()
    @_property
    def check_box_pressed_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_CheckBoxPressedBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @check_box_pressed_border_brush.setter
    @typing.final
    def check_box_pressed_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedPressedBorderBrush()
    @_property
    def selected_pressed_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectedPressedBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @selected_pressed_border_brush.setter
    @typing.final
    def selected_pressed_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedPressedBackground()
    @_property
    def selected_pressed_background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectedPressedBackground(Microsoft.UI.Xaml.Media.Brush)
    @selected_pressed_background.setter
    @typing.final
    def selected_pressed_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedPointerOverBorderBrush()
    @_property
    def selected_pointer_over_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectedPointerOverBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @selected_pointer_over_border_brush.setter
    @typing.final
    def selected_pointer_over_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedPointerOverBackground()
    @_property
    def selected_pointer_over_background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectedPointerOverBackground(Microsoft.UI.Xaml.Media.Brush)
    @selected_pointer_over_background.setter
    @typing.final
    def selected_pointer_over_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedInnerBorderBrush()
    @_property
    def selected_inner_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectedInnerBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @selected_inner_border_brush.setter
    @typing.final
    def selected_inner_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedForeground()
    @_property
    def selected_foreground(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectedForeground(Microsoft.UI.Xaml.Media.Brush)
    @selected_foreground.setter
    @typing.final
    def selected_foreground(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectionIndicatorVisualEnabled()
    @_property
    def selection_indicator_visual_enabled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectionIndicatorVisualEnabled(System.Boolean)
    @selection_indicator_visual_enabled.setter
    @typing.final
    def selection_indicator_visual_enabled(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedDisabledBackground()
    @_property
    def selected_disabled_background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectedDisabledBackground(Microsoft.UI.Xaml.Media.Brush)
    @selected_disabled_background.setter
    @typing.final
    def selected_disabled_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedBorderThickness()
    @_property
    def selected_border_thickness(self) -> microsoft_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectedBorderThickness(Microsoft.UI.Xaml.Thickness)
    @selected_border_thickness.setter
    @typing.final
    def selected_border_thickness(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedBorderBrush()
    @_property
    def selected_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectedBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @selected_border_brush.setter
    @typing.final
    def selected_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_SelectedBackground()
    @_property
    def selected_background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_SelectedBackground(Microsoft.UI.Xaml.Media.Brush)
    @selected_background.setter
    @typing.final
    def selected_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_RevealBorderThickness()
    @_property
    def reveal_border_thickness(self) -> microsoft_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_RevealBorderThickness(Microsoft.UI.Xaml.Thickness)
    @reveal_border_thickness.setter
    @typing.final
    def reveal_border_thickness(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_RevealBorderBrush()
    @_property
    def reveal_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_RevealBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @reveal_border_brush.setter
    @typing.final
    def reveal_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_RevealBackgroundShowsAboveContent()
    @_property
    def reveal_background_shows_above_content(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_RevealBackgroundShowsAboveContent(System.Boolean)
    @reveal_background_shows_above_content.setter
    @typing.final
    def reveal_background_shows_above_content(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_DragForeground()
    @_property
    def drag_foreground(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_DragForeground(Microsoft.UI.Xaml.Media.Brush)
    @drag_foreground.setter
    @typing.final
    def drag_foreground(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_ReorderHintOffset()
    @_property
    def reorder_hint_offset(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_ReorderHintOffset(System.Double)
    @reorder_hint_offset.setter
    @typing.final
    def reorder_hint_offset(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_PressedBackground()
    @_property
    def pressed_background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_PressedBackground(Microsoft.UI.Xaml.Media.Brush)
    @pressed_background.setter
    @typing.final
    def pressed_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_PointerOverForeground()
    @_property
    def pointer_over_foreground(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_PointerOverForeground(Microsoft.UI.Xaml.Media.Brush)
    @pointer_over_foreground.setter
    @typing.final
    def pointer_over_foreground(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_PointerOverBorderBrush()
    @_property
    def pointer_over_border_brush(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_PointerOverBorderBrush(Microsoft.UI.Xaml.Media.Brush)
    @pointer_over_border_brush.setter
    @typing.final
    def pointer_over_border_brush(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Thickness Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_PointerOverBackgroundMargin()
    @_property
    def pointer_over_background_margin(self) -> microsoft_ui_xaml.Thickness: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_PointerOverBackgroundMargin(Microsoft.UI.Xaml.Thickness)
    @pointer_over_background_margin.setter
    @typing.final
    def pointer_over_background_margin(self, value: microsoft_ui_xaml.Thickness) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::get_PointerOverBackground()
    @_property
    def pointer_over_background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter::put_PointerOverBackground(Microsoft.UI.Xaml.Media.Brush)
    @pointer_over_background.setter
    @typing.final
    def pointer_over_background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...

@typing.final
class ListViewItemTemplateSettings(microsoft_ui_xaml.DependencyObject):
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings::get_DragItemsCount()
    @_property
    def drag_items_count(self) -> winrt.system.Int32: ...

@typing.final
class LoopingSelector_Static(microsoft_ui_xaml_controls.Control_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::get_ItemHeightProperty()
    @_property
    def item_height_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::get_ItemTemplateProperty()
    @_property
    def item_template_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::get_ItemWidthProperty()
    @_property
    def item_width_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::get_ItemsProperty()
    @_property
    def items_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::get_SelectedIndexProperty()
    @_property
    def selected_index_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::get_SelectedItemProperty()
    @_property
    def selected_item_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::get_ShouldLoopProperty()
    @_property
    def should_loop_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class LoopingSelector(microsoft_ui_xaml_controls.Control, metaclass=LoopingSelector_Static):
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::add_SelectionChanged(Microsoft.UI.Xaml.Controls.SelectionChangedEventHandler)
    def add_selection_changed(self, handler: microsoft_ui_xaml_controls.SelectionChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::remove_SelectionChanged(Windows.Foundation.EventRegistrationToken)
    def remove_selection_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::get_ShouldLoop()
    @_property
    def should_loop(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::put_ShouldLoop(System.Boolean)
    @should_loop.setter
    def should_loop(self, value: bool) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::get_SelectedItem()
    @_property
    def selected_item(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::put_SelectedItem(System.Object)
    @selected_item.setter
    def selected_item(self, value: winrt.system.Object) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::get_SelectedIndex()
    @_property
    def selected_index(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::put_SelectedIndex(System.Int32)
    @selected_index.setter
    def selected_index(self, value: winrt.system.Int32) -> None: ...
    # Windows.Foundation.Collections.IVector`1<System.Object> Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::get_Items()
    @_property
    def items(self) -> typing.MutableSequence[winrt.system.Object]: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::put_Items(Windows.Foundation.Collections.IVector`1<System.Object>)
    @items.setter
    def items(self, value: typing.MutableSequence[winrt.system.Object]) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::get_ItemWidth()
    @_property
    def item_width(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::put_ItemWidth(System.Int32)
    @item_width.setter
    def item_width(self, value: winrt.system.Int32) -> None: ...
    # Microsoft.UI.Xaml.DataTemplate Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::get_ItemTemplate()
    @_property
    def item_template(self) -> microsoft_ui_xaml.DataTemplate: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::put_ItemTemplate(Microsoft.UI.Xaml.DataTemplate)
    @item_template.setter
    def item_template(self, value: microsoft_ui_xaml.DataTemplate) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::get_ItemHeight()
    @_property
    def item_height(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector::put_ItemHeight(System.Int32)
    @item_height.setter
    def item_height(self, value: winrt.system.Int32) -> None: ...

@typing.final
class LoopingSelectorItem(microsoft_ui_xaml_controls.ContentControl):
    pass

@typing.final
class LoopingSelectorPanel(microsoft_ui_xaml_controls.Canvas, IScrollSnapPointsInfo):
    # Windows.Foundation.Collections.IVectorView`1<System.Single> Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel::GetIrregularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment)
    def get_irregular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Sequence[winrt.system.Single]: ...
    # System.Single Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel::GetRegularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment,System.Single&)
    def get_regular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Tuple[winrt.system.Single, winrt.system.Single]: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel::add_HorizontalSnapPointsChanged(Windows.Foundation.EventHandler`1<System.Object>)
    def add_horizontal_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel::remove_HorizontalSnapPointsChanged(Windows.Foundation.EventRegistrationToken)
    def remove_horizontal_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel::add_VerticalSnapPointsChanged(Windows.Foundation.EventHandler`1<System.Object>)
    def add_vertical_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel::remove_VerticalSnapPointsChanged(Windows.Foundation.EventRegistrationToken)
    def remove_vertical_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel::get_AreHorizontalSnapPointsRegular()
    @_property
    def are_horizontal_snap_points_regular(self) -> bool: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.LoopingSelectorPanel::get_AreVerticalSnapPointsRegular()
    @_property
    def are_vertical_snap_points_regular(self) -> bool: ...

@typing.final
class MenuFlyoutItemTemplateSettings(microsoft_ui_xaml.DependencyObject):
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutItemTemplateSettings::get_KeyboardAcceleratorTextMinWidth()
    @_property
    def keyboard_accelerator_text_min_width(self) -> winrt.system.Double: ...

@typing.final
class MenuFlyoutPresenterTemplateSettings(microsoft_ui_xaml.DependencyObject):
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.MenuFlyoutPresenterTemplateSettings::get_FlyoutContentMinWidth()
    @_property
    def flyout_content_min_width(self) -> winrt.system.Double: ...

class MonochromaticOverlayPresenter_Static(microsoft_ui_xaml_controls.Grid_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter::get_ReplacementColorProperty()
    @_property
    @typing.final
    def replacement_color_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter::get_SourceElementProperty()
    @_property
    @typing.final
    def source_element_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class MonochromaticOverlayPresenter(microsoft_ui_xaml_controls.Grid, metaclass=MonochromaticOverlayPresenter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Microsoft.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter::get_SourceElement()
    @_property
    def source_element(self) -> microsoft_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter::put_SourceElement(Microsoft.UI.Xaml.UIElement)
    @source_element.setter
    @typing.final
    def source_element(self, value: microsoft_ui_xaml.UIElement) -> None: ...
    # Windows.UI.Color Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter::get_ReplacementColor()
    @_property
    def replacement_color(self) -> windows_ui.Color: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter::put_ReplacementColor(Windows.UI.Color)
    @replacement_color.setter
    @typing.final
    def replacement_color(self, value: windows_ui.Color) -> None: ...

class NavigationViewItemPresenter_Static(microsoft_ui_xaml_controls.ContentControl_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter::get_IconProperty()
    @_property
    @typing.final
    def icon_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter::get_TemplateSettingsProperty()
    @_property
    @typing.final
    def template_settings_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter::get_InfoBadgeProperty()
    @_property
    @typing.final
    def info_badge_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class NavigationViewItemPresenter(microsoft_ui_xaml_controls.ContentControl, metaclass=NavigationViewItemPresenter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Microsoft.UI.Xaml.Controls.IconElement Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter::get_Icon()
    @_property
    def icon(self) -> microsoft_ui_xaml_controls.IconElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter::put_Icon(Microsoft.UI.Xaml.Controls.IconElement)
    @icon.setter
    @typing.final
    def icon(self, value: microsoft_ui_xaml_controls.IconElement) -> None: ...
    # Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter::get_TemplateSettings()
    @_property
    @typing.final
    def template_settings(self) -> NavigationViewItemPresenterTemplateSettings: ...
    # Microsoft.UI.Xaml.Controls.InfoBadge Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter::get_InfoBadge()
    @_property
    def info_badge(self) -> microsoft_ui_xaml_controls.InfoBadge: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter::put_InfoBadge(Microsoft.UI.Xaml.Controls.InfoBadge)
    @info_badge.setter
    @typing.final
    def info_badge(self, value: microsoft_ui_xaml_controls.InfoBadge) -> None: ...

class NavigationViewItemPresenterTemplateSettings_Static(microsoft_ui_xaml.DependencyObject_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings::get_IconWidthProperty()
    @_property
    @typing.final
    def icon_width_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings::get_SmallerIconWidthProperty()
    @_property
    @typing.final
    def smaller_icon_width_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class NavigationViewItemPresenterTemplateSettings(microsoft_ui_xaml.DependencyObject, metaclass=NavigationViewItemPresenterTemplateSettings_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings::get_IconWidth()
    @_property
    @typing.final
    def icon_width(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings::get_SmallerIconWidth()
    @_property
    @typing.final
    def smaller_icon_width(self) -> winrt.system.Double: ...

class OrientedVirtualizingPanel_Static(microsoft_ui_xaml_controls.VirtualizingPanel_Static):
    pass

class OrientedVirtualizingPanel(microsoft_ui_xaml_controls.VirtualizingPanel, microsoft_ui_xaml_controls.IInsertionPanel, IScrollSnapPointsInfo, metaclass=OrientedVirtualizingPanel_Static):
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::GetInsertionIndexes(Windows.Foundation.Point,System.Int32&,System.Int32&)
    def get_insertion_indexes(self, position: windows_foundation.Point, /) -> typing.Tuple[winrt.system.Int32, winrt.system.Int32]: ...
    # Windows.Foundation.Collections.IVectorView`1<System.Single> Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::GetIrregularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment)
    def get_irregular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Sequence[winrt.system.Single]: ...
    # System.Single Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::GetRegularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment,System.Single&)
    def get_regular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Tuple[winrt.system.Single, winrt.system.Single]: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::LineDown()
    def line_down(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::LineLeft()
    def line_left(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::LineRight()
    def line_right(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::LineUp()
    def line_up(self) -> None: ...
    @typing.final
    # Windows.Foundation.Rect Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::MakeVisible(Microsoft.UI.Xaml.UIElement,Windows.Foundation.Rect)
    def make_visible(self, visual: microsoft_ui_xaml.UIElement, rectangle: windows_foundation.Rect, /) -> windows_foundation.Rect: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::MouseWheelDown()
    def mouse_wheel_down(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::MouseWheelLeft()
    def mouse_wheel_left(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::MouseWheelRight()
    def mouse_wheel_right(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::MouseWheelUp()
    def mouse_wheel_up(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::PageDown()
    def page_down(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::PageLeft()
    def page_left(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::PageRight()
    def page_right(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::PageUp()
    def page_up(self) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::SetHorizontalOffset(System.Double)
    def set_horizontal_offset(self, offset: winrt.system.Double, /) -> None: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::SetVerticalOffset(System.Double)
    def set_vertical_offset(self, offset: winrt.system.Double, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::add_HorizontalSnapPointsChanged(Windows.Foundation.EventHandler`1<System.Object>)
    def add_horizontal_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::remove_HorizontalSnapPointsChanged(Windows.Foundation.EventRegistrationToken)
    def remove_horizontal_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::add_VerticalSnapPointsChanged(Windows.Foundation.EventHandler`1<System.Object>)
    def add_vertical_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::remove_VerticalSnapPointsChanged(Windows.Foundation.EventRegistrationToken)
    def remove_vertical_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::get_ScrollOwner()
    @_property
    def scroll_owner(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::put_ScrollOwner(System.Object)
    @scroll_owner.setter
    @typing.final
    def scroll_owner(self, value: winrt.system.Object) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::get_CanVerticallyScroll()
    @_property
    def can_vertically_scroll(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::put_CanVerticallyScroll(System.Boolean)
    @can_vertically_scroll.setter
    @typing.final
    def can_vertically_scroll(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::get_CanHorizontallyScroll()
    @_property
    def can_horizontally_scroll(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::put_CanHorizontallyScroll(System.Boolean)
    @can_horizontally_scroll.setter
    @typing.final
    def can_horizontally_scroll(self, value: bool) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::get_ExtentHeight()
    @_property
    @typing.final
    def extent_height(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::get_ExtentWidth()
    @_property
    @typing.final
    def extent_width(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::get_HorizontalOffset()
    @_property
    @typing.final
    def horizontal_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::get_VerticalOffset()
    @_property
    @typing.final
    def vertical_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::get_ViewportHeight()
    @_property
    @typing.final
    def viewport_height(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::get_ViewportWidth()
    @_property
    @typing.final
    def viewport_width(self) -> winrt.system.Double: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::get_AreHorizontalSnapPointsRegular()
    @_property
    @typing.final
    def are_horizontal_snap_points_regular(self) -> bool: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel::get_AreVerticalSnapPointsRegular()
    @_property
    @typing.final
    def are_vertical_snap_points_regular(self) -> bool: ...

class PickerFlyoutBase_Static(FlyoutBase_Static):
    # System.String Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase::GetTitle(Microsoft.UI.Xaml.DependencyObject)
    def get_title(cls, element: microsoft_ui_xaml.DependencyObject, /) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase::SetTitle(Microsoft.UI.Xaml.DependencyObject,System.String)
    def set_title(cls, element: microsoft_ui_xaml.DependencyObject, value: str, /) -> None: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase::get_TitleProperty()
    @_property
    @typing.final
    def title_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class PickerFlyoutBase(FlyoutBase, metaclass=PickerFlyoutBase_Static):
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase::OnConfirmed()
    def _on_confirmed(self) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase::ShouldShowConfirmationButtons()
    def _should_show_confirmation_buttons(self) -> bool: ...

class PivotHeaderItem_Static(microsoft_ui_xaml_controls.ContentControl_Static):
    pass

class PivotHeaderItem(microsoft_ui_xaml_controls.ContentControl, metaclass=PivotHeaderItem_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class PivotHeaderPanel(microsoft_ui_xaml_controls.Canvas):
    def __new__(cls: typing.Type[Self]) -> Self: ...

@typing.final
class PivotPanel(microsoft_ui_xaml_controls.Panel, IScrollSnapPointsInfo):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.Collections.IVectorView`1<System.Single> Microsoft.UI.Xaml.Controls.Primitives.PivotPanel::GetIrregularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment)
    def get_irregular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Sequence[winrt.system.Single]: ...
    # System.Single Microsoft.UI.Xaml.Controls.Primitives.PivotPanel::GetRegularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment,System.Single&)
    def get_regular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Tuple[winrt.system.Single, winrt.system.Single]: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.PivotPanel::add_HorizontalSnapPointsChanged(Windows.Foundation.EventHandler`1<System.Object>)
    def add_horizontal_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.PivotPanel::remove_HorizontalSnapPointsChanged(Windows.Foundation.EventRegistrationToken)
    def remove_horizontal_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.PivotPanel::add_VerticalSnapPointsChanged(Windows.Foundation.EventHandler`1<System.Object>)
    def add_vertical_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.PivotPanel::remove_VerticalSnapPointsChanged(Windows.Foundation.EventRegistrationToken)
    def remove_vertical_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.PivotPanel::get_AreHorizontalSnapPointsRegular()
    @_property
    def are_horizontal_snap_points_regular(self) -> bool: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.PivotPanel::get_AreVerticalSnapPointsRegular()
    @_property
    def are_vertical_snap_points_regular(self) -> bool: ...

@typing.final
class Popup_Static(microsoft_ui_xaml.FrameworkElement_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Popup::get_ChildProperty()
    @_property
    def child_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Popup::get_ChildTransitionsProperty()
    @_property
    def child_transitions_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Popup::get_HorizontalOffsetProperty()
    @_property
    def horizontal_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Popup::get_IsLightDismissEnabledProperty()
    @_property
    def is_light_dismiss_enabled_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Popup::get_IsOpenProperty()
    @_property
    def is_open_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Popup::get_LightDismissOverlayModeProperty()
    @_property
    def light_dismiss_overlay_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Popup::get_ShouldConstrainToRootBoundsProperty()
    @_property
    def should_constrain_to_root_bounds_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Popup::get_VerticalOffsetProperty()
    @_property
    def vertical_offset_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Popup::get_DesiredPlacementProperty()
    @_property
    def desired_placement_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Popup::get_PlacementTargetProperty()
    @_property
    def placement_target_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Popup::get_SystemBackdropProperty()
    @_property
    def system_backdrop_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class Popup(microsoft_ui_xaml.FrameworkElement, metaclass=Popup_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.Popup::add_Closed(Windows.Foundation.EventHandler`1<System.Object>)
    def add_closed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Popup::remove_Closed(Windows.Foundation.EventRegistrationToken)
    def remove_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.Popup::add_Opened(Windows.Foundation.EventHandler`1<System.Object>)
    def add_opened(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Popup::remove_Opened(Windows.Foundation.EventRegistrationToken)
    def remove_opened(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.Popup::add_ActualPlacementChanged(Windows.Foundation.EventHandler`1<System.Object>)
    def add_actual_placement_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Popup::remove_ActualPlacementChanged(Windows.Foundation.EventRegistrationToken)
    def remove_actual_placement_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.Popup::get_VerticalOffset()
    @_property
    def vertical_offset(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Popup::put_VerticalOffset(System.Double)
    @vertical_offset.setter
    def vertical_offset(self, value: winrt.system.Double) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.Popup::get_ShouldConstrainToRootBounds()
    @_property
    def should_constrain_to_root_bounds(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Popup::put_ShouldConstrainToRootBounds(System.Boolean)
    @should_constrain_to_root_bounds.setter
    def should_constrain_to_root_bounds(self, value: bool) -> None: ...
    # Microsoft.UI.Xaml.Controls.LightDismissOverlayMode Microsoft.UI.Xaml.Controls.Primitives.Popup::get_LightDismissOverlayMode()
    @_property
    def light_dismiss_overlay_mode(self) -> microsoft_ui_xaml_controls.LightDismissOverlayMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Popup::put_LightDismissOverlayMode(Microsoft.UI.Xaml.Controls.LightDismissOverlayMode)
    @light_dismiss_overlay_mode.setter
    def light_dismiss_overlay_mode(self, value: microsoft_ui_xaml_controls.LightDismissOverlayMode) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.Popup::get_IsOpen()
    @_property
    def is_open(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Popup::put_IsOpen(System.Boolean)
    @is_open.setter
    def is_open(self, value: bool) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.Popup::get_IsLightDismissEnabled()
    @_property
    def is_light_dismiss_enabled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Popup::put_IsLightDismissEnabled(System.Boolean)
    @is_light_dismiss_enabled.setter
    def is_light_dismiss_enabled(self, value: bool) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.Popup::get_HorizontalOffset()
    @_property
    def horizontal_offset(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Popup::put_HorizontalOffset(System.Double)
    @horizontal_offset.setter
    def horizontal_offset(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Media.Animation.TransitionCollection Microsoft.UI.Xaml.Controls.Primitives.Popup::get_ChildTransitions()
    @_property
    def child_transitions(self) -> microsoft_ui_xaml_media_animation.TransitionCollection: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Popup::put_ChildTransitions(Microsoft.UI.Xaml.Media.Animation.TransitionCollection)
    @child_transitions.setter
    def child_transitions(self, value: microsoft_ui_xaml_media_animation.TransitionCollection) -> None: ...
    # Microsoft.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.Primitives.Popup::get_Child()
    @_property
    def child(self) -> microsoft_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Popup::put_Child(Microsoft.UI.Xaml.UIElement)
    @child.setter
    def child(self, value: microsoft_ui_xaml.UIElement) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.Popup::get_IsConstrainedToRootBounds()
    @_property
    def is_constrained_to_root_bounds(self) -> bool: ...
    # Microsoft.UI.Xaml.FrameworkElement Microsoft.UI.Xaml.Controls.Primitives.Popup::get_PlacementTarget()
    @_property
    def placement_target(self) -> microsoft_ui_xaml.FrameworkElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Popup::put_PlacementTarget(Microsoft.UI.Xaml.FrameworkElement)
    @placement_target.setter
    def placement_target(self, value: microsoft_ui_xaml.FrameworkElement) -> None: ...
    # Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode Microsoft.UI.Xaml.Controls.Primitives.Popup::get_DesiredPlacement()
    @_property
    def desired_placement(self) -> PopupPlacementMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Popup::put_DesiredPlacement(Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode)
    @desired_placement.setter
    def desired_placement(self, value: PopupPlacementMode) -> None: ...
    # Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode Microsoft.UI.Xaml.Controls.Primitives.Popup::get_ActualPlacement()
    @_property
    def actual_placement(self) -> PopupPlacementMode: ...
    # Microsoft.UI.Xaml.Media.SystemBackdrop Microsoft.UI.Xaml.Controls.Primitives.Popup::get_SystemBackdrop()
    @_property
    def system_backdrop(self) -> microsoft_ui_xaml_media.SystemBackdrop: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Popup::put_SystemBackdrop(Microsoft.UI.Xaml.Media.SystemBackdrop)
    @system_backdrop.setter
    def system_backdrop(self, value: microsoft_ui_xaml_media.SystemBackdrop) -> None: ...

class RangeBase_Static(microsoft_ui_xaml_controls.Control_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.RangeBase::get_LargeChangeProperty()
    @_property
    @typing.final
    def large_change_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.RangeBase::get_MaximumProperty()
    @_property
    @typing.final
    def maximum_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.RangeBase::get_MinimumProperty()
    @_property
    @typing.final
    def minimum_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.RangeBase::get_SmallChangeProperty()
    @_property
    @typing.final
    def small_change_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.RangeBase::get_ValueProperty()
    @_property
    @typing.final
    def value_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class RangeBase(microsoft_ui_xaml_controls.Control, metaclass=RangeBase_Static):
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.RangeBase::OnMaximumChanged(System.Double,System.Double)
    def _on_maximum_changed(self, old_maximum: winrt.system.Double, new_maximum: winrt.system.Double, /) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.RangeBase::OnMinimumChanged(System.Double,System.Double)
    def _on_minimum_changed(self, old_minimum: winrt.system.Double, new_minimum: winrt.system.Double, /) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.RangeBase::OnValueChanged(System.Double,System.Double)
    def _on_value_changed(self, old_value: winrt.system.Double, new_value: winrt.system.Double, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.RangeBase::add_ValueChanged(Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler)
    def add_value_changed(self, handler: RangeBaseValueChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.RangeBase::remove_ValueChanged(Windows.Foundation.EventRegistrationToken)
    def remove_value_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RangeBase::get_Value()
    @_property
    def value(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.RangeBase::put_Value(System.Double)
    @value.setter
    @typing.final
    def value(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RangeBase::get_SmallChange()
    @_property
    def small_change(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.RangeBase::put_SmallChange(System.Double)
    @small_change.setter
    @typing.final
    def small_change(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RangeBase::get_Minimum()
    @_property
    def minimum(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.RangeBase::put_Minimum(System.Double)
    @minimum.setter
    @typing.final
    def minimum(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RangeBase::get_Maximum()
    @_property
    def maximum(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.RangeBase::put_Maximum(System.Double)
    @maximum.setter
    @typing.final
    def maximum(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RangeBase::get_LargeChange()
    @_property
    def large_change(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.RangeBase::put_LargeChange(System.Double)
    @large_change.setter
    @typing.final
    def large_change(self, value: winrt.system.Double) -> None: ...

@typing.final
class RangeBaseValueChangedEventArgs(microsoft_ui_xaml.RoutedEventArgs):
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs::get_NewValue()
    @_property
    def new_value(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs::get_OldValue()
    @_property
    def old_value(self) -> winrt.system.Double: ...

@typing.final
class RepeatButton_Static(ButtonBase_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.RepeatButton::get_DelayProperty()
    @_property
    def delay_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.RepeatButton::get_IntervalProperty()
    @_property
    def interval_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class RepeatButton(ButtonBase, metaclass=RepeatButton_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.RepeatButton::get_Interval()
    @_property
    def interval(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.RepeatButton::put_Interval(System.Int32)
    @interval.setter
    def interval(self, value: winrt.system.Int32) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.RepeatButton::get_Delay()
    @_property
    def delay(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.RepeatButton::put_Delay(System.Int32)
    @delay.setter
    def delay(self, value: winrt.system.Int32) -> None: ...

class RepeatedScrollSnapPoint_Static(ScrollSnapPointBase_Static):
    pass

class RepeatedScrollSnapPoint(ScrollSnapPointBase, metaclass=RepeatedScrollSnapPoint_Static):
    def __new__(cls: typing.Type[Self], offset: winrt.system.Double, interval: winrt.system.Double, start: winrt.system.Double, end: winrt.system.Double, alignment: ScrollSnapPointsAlignment) -> Self: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint::get_End()
    @_property
    @typing.final
    def end(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint::get_Interval()
    @_property
    @typing.final
    def interval(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint::get_Offset()
    @_property
    @typing.final
    def offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint::get_Start()
    @_property
    @typing.final
    def start(self) -> winrt.system.Double: ...

class RepeatedZoomSnapPoint_Static(ZoomSnapPointBase_Static):
    pass

class RepeatedZoomSnapPoint(ZoomSnapPointBase, metaclass=RepeatedZoomSnapPoint_Static):
    def __new__(cls: typing.Type[Self], offset: winrt.system.Double, interval: winrt.system.Double, start: winrt.system.Double, end: winrt.system.Double) -> Self: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint::get_End()
    @_property
    @typing.final
    def end(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint::get_Interval()
    @_property
    @typing.final
    def interval(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint::get_Offset()
    @_property
    @typing.final
    def offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint::get_Start()
    @_property
    @typing.final
    def start(self) -> winrt.system.Double: ...

@typing.final
class ScrollBar_Static(RangeBase_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollBar::get_IndicatorModeProperty()
    @_property
    def indicator_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollBar::get_OrientationProperty()
    @_property
    def orientation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollBar::get_ViewportSizeProperty()
    @_property
    def viewport_size_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class ScrollBar(RangeBase, metaclass=ScrollBar_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ScrollBar::add_Scroll(Microsoft.UI.Xaml.Controls.Primitives.ScrollEventHandler)
    def add_scroll(self, handler: ScrollEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollBar::remove_Scroll(Windows.Foundation.EventRegistrationToken)
    def remove_scroll(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollBar::get_ViewportSize()
    @_property
    def viewport_size(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollBar::put_ViewportSize(System.Double)
    @viewport_size.setter
    def viewport_size(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Controls.Orientation Microsoft.UI.Xaml.Controls.Primitives.ScrollBar::get_Orientation()
    @_property
    def orientation(self) -> microsoft_ui_xaml_controls.Orientation: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollBar::put_Orientation(Microsoft.UI.Xaml.Controls.Orientation)
    @orientation.setter
    def orientation(self, value: microsoft_ui_xaml_controls.Orientation) -> None: ...
    # Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode Microsoft.UI.Xaml.Controls.Primitives.ScrollBar::get_IndicatorMode()
    @_property
    def indicator_mode(self) -> ScrollingIndicatorMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollBar::put_IndicatorMode(Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode)
    @indicator_mode.setter
    def indicator_mode(self, value: ScrollingIndicatorMode) -> None: ...

@typing.final
class ScrollControllerAddScrollVelocityRequestedEventArgs(winrt.system.Object):
    def __new__(cls: typing.Type[Self], offset_velocity: winrt.system.Single, inertia_decay_rate: typing.Optional[winrt.system.Single]) -> Self: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs::get_CorrelationId()
    @_property
    def correlation_id(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs::put_CorrelationId(System.Int32)
    @correlation_id.setter
    def correlation_id(self, value: winrt.system.Int32) -> None: ...
    # Windows.Foundation.IReference`1<System.Single> Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs::get_InertiaDecayRate()
    @_property
    def inertia_decay_rate(self) -> typing.Optional[winrt.system.Single]: ...
    # System.Single Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs::get_OffsetVelocity()
    @_property
    def offset_velocity(self) -> winrt.system.Single: ...

@typing.final
class ScrollControllerPanRequestedEventArgs(winrt.system.Object):
    def __new__(cls: typing.Type[Self], pointer_point: microsoft_ui_input.PointerPoint) -> Self: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerPanRequestedEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerPanRequestedEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...
    # Microsoft.UI.Input.PointerPoint Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerPanRequestedEventArgs::get_PointerPoint()
    @_property
    def pointer_point(self) -> microsoft_ui_input.PointerPoint: ...

@typing.final
class ScrollControllerScrollByRequestedEventArgs(winrt.system.Object):
    def __new__(cls: typing.Type[Self], offset_delta: winrt.system.Double, options: microsoft_ui_xaml_controls.ScrollingScrollOptions) -> Self: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs::get_CorrelationId()
    @_property
    def correlation_id(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs::put_CorrelationId(System.Int32)
    @correlation_id.setter
    def correlation_id(self, value: winrt.system.Int32) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs::get_OffsetDelta()
    @_property
    def offset_delta(self) -> winrt.system.Double: ...
    # Microsoft.UI.Xaml.Controls.ScrollingScrollOptions Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs::get_Options()
    @_property
    def options(self) -> microsoft_ui_xaml_controls.ScrollingScrollOptions: ...

@typing.final
class ScrollControllerScrollToRequestedEventArgs(winrt.system.Object):
    def __new__(cls: typing.Type[Self], offset: winrt.system.Double, options: microsoft_ui_xaml_controls.ScrollingScrollOptions) -> Self: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs::get_CorrelationId()
    @_property
    def correlation_id(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs::put_CorrelationId(System.Int32)
    @correlation_id.setter
    def correlation_id(self, value: winrt.system.Int32) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs::get_Offset()
    @_property
    def offset(self) -> winrt.system.Double: ...
    # Microsoft.UI.Xaml.Controls.ScrollingScrollOptions Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs::get_Options()
    @_property
    def options(self) -> microsoft_ui_xaml_controls.ScrollingScrollOptions: ...

@typing.final
class ScrollEventArgs(microsoft_ui_xaml.RoutedEventArgs):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs::get_NewValue()
    @_property
    def new_value(self) -> winrt.system.Double: ...
    # Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs::get_ScrollEventType()
    @_property
    def scroll_event_type(self) -> ScrollEventType: ...

class ScrollPresenter_Static(microsoft_ui_xaml.FrameworkElement_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_BackgroundProperty()
    @_property
    @typing.final
    def background_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ComputedHorizontalScrollModeProperty()
    @_property
    @typing.final
    def computed_horizontal_scroll_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ComputedVerticalScrollModeProperty()
    @_property
    @typing.final
    def computed_vertical_scroll_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ContentOrientationProperty()
    @_property
    @typing.final
    def content_orientation_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ContentProperty()
    @_property
    @typing.final
    def content_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_HorizontalAnchorRatioProperty()
    @_property
    @typing.final
    def horizontal_anchor_ratio_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_HorizontalScrollChainModeProperty()
    @_property
    @typing.final
    def horizontal_scroll_chain_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_HorizontalScrollModeProperty()
    @_property
    @typing.final
    def horizontal_scroll_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_HorizontalScrollRailModeProperty()
    @_property
    @typing.final
    def horizontal_scroll_rail_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_IgnoredInputKindsProperty()
    @_property
    @typing.final
    def ignored_input_kinds_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_MaxZoomFactorProperty()
    @_property
    @typing.final
    def max_zoom_factor_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_MinZoomFactorProperty()
    @_property
    @typing.final
    def min_zoom_factor_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_VerticalAnchorRatioProperty()
    @_property
    @typing.final
    def vertical_anchor_ratio_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_VerticalScrollChainModeProperty()
    @_property
    @typing.final
    def vertical_scroll_chain_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_VerticalScrollModeProperty()
    @_property
    @typing.final
    def vertical_scroll_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_VerticalScrollRailModeProperty()
    @_property
    @typing.final
    def vertical_scroll_rail_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ZoomChainModeProperty()
    @_property
    @typing.final
    def zoom_chain_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ZoomModeProperty()
    @_property
    @typing.final
    def zoom_mode_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ScrollPresenter(microsoft_ui_xaml.FrameworkElement, microsoft_ui_xaml_controls.IScrollAnchorProvider, metaclass=ScrollPresenter_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::AddScrollVelocity(Windows.Foundation.Numerics.Vector2,Windows.Foundation.IReference`1<Windows.Foundation.Numerics.Vector2>)
    def add_scroll_velocity(self, offsets_velocity: windows_foundation_numerics.Vector2, inertia_decay_rate: typing.Optional[windows_foundation_numerics.Vector2], /) -> winrt.system.Int32: ...
    @typing.final
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::AddZoomVelocity(System.Single,Windows.Foundation.IReference`1<Windows.Foundation.Numerics.Vector2>,Windows.Foundation.IReference`1<System.Single>)
    def add_zoom_velocity(self, zoom_factor_velocity: winrt.system.Single, center_point: typing.Optional[windows_foundation_numerics.Vector2], inertia_decay_rate: typing.Optional[winrt.system.Single], /) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::RegisterAnchorCandidate(Microsoft.UI.Xaml.UIElement)
    def register_anchor_candidate(self, element: microsoft_ui_xaml.UIElement, /) -> None: ...
    @typing.final
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::ScrollBy(System.Double,System.Double)
    def scroll_by(self, horizontal_offset_delta: winrt.system.Double, vertical_offset_delta: winrt.system.Double, /) -> winrt.system.Int32: ...
    @typing.final
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::ScrollBy(System.Double,System.Double,Microsoft.UI.Xaml.Controls.ScrollingScrollOptions)
    def scroll_by_with_options(self, horizontal_offset_delta: winrt.system.Double, vertical_offset_delta: winrt.system.Double, options: microsoft_ui_xaml_controls.ScrollingScrollOptions, /) -> winrt.system.Int32: ...
    @typing.final
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::ScrollTo(System.Double,System.Double)
    def scroll_to(self, horizontal_offset: winrt.system.Double, vertical_offset: winrt.system.Double, /) -> winrt.system.Int32: ...
    @typing.final
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::ScrollTo(System.Double,System.Double,Microsoft.UI.Xaml.Controls.ScrollingScrollOptions)
    def scroll_to_with_options(self, horizontal_offset: winrt.system.Double, vertical_offset: winrt.system.Double, options: microsoft_ui_xaml_controls.ScrollingScrollOptions, /) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::UnregisterAnchorCandidate(Microsoft.UI.Xaml.UIElement)
    def unregister_anchor_candidate(self, element: microsoft_ui_xaml.UIElement, /) -> None: ...
    @typing.final
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::ZoomBy(System.Single,Windows.Foundation.IReference`1<Windows.Foundation.Numerics.Vector2>)
    def zoom_by(self, zoom_factor_delta: winrt.system.Single, center_point: typing.Optional[windows_foundation_numerics.Vector2], /) -> winrt.system.Int32: ...
    @typing.final
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::ZoomBy(System.Single,Windows.Foundation.IReference`1<Windows.Foundation.Numerics.Vector2>,Microsoft.UI.Xaml.Controls.ScrollingZoomOptions)
    def zoom_by_with_options(self, zoom_factor_delta: winrt.system.Single, center_point: typing.Optional[windows_foundation_numerics.Vector2], options: microsoft_ui_xaml_controls.ScrollingZoomOptions, /) -> winrt.system.Int32: ...
    @typing.final
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::ZoomTo(System.Single,Windows.Foundation.IReference`1<Windows.Foundation.Numerics.Vector2>)
    def zoom_to(self, zoom_factor: winrt.system.Single, center_point: typing.Optional[windows_foundation_numerics.Vector2], /) -> winrt.system.Int32: ...
    @typing.final
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::ZoomTo(System.Single,Windows.Foundation.IReference`1<Windows.Foundation.Numerics.Vector2>,Microsoft.UI.Xaml.Controls.ScrollingZoomOptions)
    def zoom_to_with_options(self, zoom_factor: winrt.system.Single, center_point: typing.Optional[windows_foundation_numerics.Vector2], options: microsoft_ui_xaml_controls.ScrollingZoomOptions, /) -> winrt.system.Int32: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::add_AnchorRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter,Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs>)
    def add_anchor_requested(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, microsoft_ui_xaml_controls.ScrollingAnchorRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::remove_AnchorRequested(Windows.Foundation.EventRegistrationToken)
    def remove_anchor_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::add_BringingIntoView(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter,Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs>)
    def add_bringing_into_view(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, microsoft_ui_xaml_controls.ScrollingBringingIntoViewEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::remove_BringingIntoView(Windows.Foundation.EventRegistrationToken)
    def remove_bringing_into_view(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::add_ExtentChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter,System.Object>)
    def add_extent_changed(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::remove_ExtentChanged(Windows.Foundation.EventRegistrationToken)
    def remove_extent_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::add_ScrollAnimationStarting(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter,Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs>)
    def add_scroll_animation_starting(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, microsoft_ui_xaml_controls.ScrollingScrollAnimationStartingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::remove_ScrollAnimationStarting(Windows.Foundation.EventRegistrationToken)
    def remove_scroll_animation_starting(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::add_ScrollCompleted(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter,Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs>)
    def add_scroll_completed(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, microsoft_ui_xaml_controls.ScrollingScrollCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::remove_ScrollCompleted(Windows.Foundation.EventRegistrationToken)
    def remove_scroll_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::add_StateChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter,System.Object>)
    def add_state_changed(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::remove_StateChanged(Windows.Foundation.EventRegistrationToken)
    def remove_state_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::add_ViewChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter,System.Object>)
    def add_view_changed(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::remove_ViewChanged(Windows.Foundation.EventRegistrationToken)
    def remove_view_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::add_ZoomAnimationStarting(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter,Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs>)
    def add_zoom_animation_starting(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, microsoft_ui_xaml_controls.ScrollingZoomAnimationStartingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::remove_ZoomAnimationStarting(Windows.Foundation.EventRegistrationToken)
    def remove_zoom_animation_starting(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::add_ZoomCompleted(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter,Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs>)
    def add_zoom_completed(self, handler: windows_foundation.TypedEventHandler[ScrollPresenter, microsoft_ui_xaml_controls.ScrollingZoomCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::remove_ZoomCompleted(Windows.Foundation.EventRegistrationToken)
    def remove_zoom_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Microsoft.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_CurrentAnchor()
    @_property
    @typing.final
    def current_anchor(self) -> microsoft_ui_xaml.UIElement: ...
    # Microsoft.UI.Xaml.Controls.ScrollingInputKinds Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_IgnoredInputKinds()
    @_property
    def ignored_input_kinds(self) -> microsoft_ui_xaml_controls.ScrollingInputKinds: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_IgnoredInputKinds(Microsoft.UI.Xaml.Controls.ScrollingInputKinds)
    @ignored_input_kinds.setter
    @typing.final
    def ignored_input_kinds(self, value: microsoft_ui_xaml_controls.ScrollingInputKinds) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_HorizontalAnchorRatio()
    @_property
    def horizontal_anchor_ratio(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_HorizontalAnchorRatio(System.Double)
    @horizontal_anchor_ratio.setter
    @typing.final
    def horizontal_anchor_ratio(self, value: winrt.system.Double) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_MaxZoomFactor()
    @_property
    def max_zoom_factor(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_MaxZoomFactor(System.Double)
    @max_zoom_factor.setter
    @typing.final
    def max_zoom_factor(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Controls.ScrollingRailMode Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_HorizontalScrollRailMode()
    @_property
    def horizontal_scroll_rail_mode(self) -> microsoft_ui_xaml_controls.ScrollingRailMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_HorizontalScrollRailMode(Microsoft.UI.Xaml.Controls.ScrollingRailMode)
    @horizontal_scroll_rail_mode.setter
    @typing.final
    def horizontal_scroll_rail_mode(self, value: microsoft_ui_xaml_controls.ScrollingRailMode) -> None: ...
    # Microsoft.UI.Xaml.Controls.ScrollingScrollMode Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_HorizontalScrollMode()
    @_property
    def horizontal_scroll_mode(self) -> microsoft_ui_xaml_controls.ScrollingScrollMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_HorizontalScrollMode(Microsoft.UI.Xaml.Controls.ScrollingScrollMode)
    @horizontal_scroll_mode.setter
    @typing.final
    def horizontal_scroll_mode(self, value: microsoft_ui_xaml_controls.ScrollingScrollMode) -> None: ...
    # Microsoft.UI.Xaml.Controls.ScrollingContentOrientation Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ContentOrientation()
    @_property
    def content_orientation(self) -> microsoft_ui_xaml_controls.ScrollingContentOrientation: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_ContentOrientation(Microsoft.UI.Xaml.Controls.ScrollingContentOrientation)
    @content_orientation.setter
    @typing.final
    def content_orientation(self, value: microsoft_ui_xaml_controls.ScrollingContentOrientation) -> None: ...
    # Microsoft.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_Content()
    @_property
    def content(self) -> microsoft_ui_xaml.UIElement: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_Content(Microsoft.UI.Xaml.UIElement)
    @content.setter
    @typing.final
    def content(self, value: microsoft_ui_xaml.UIElement) -> None: ...
    # Microsoft.UI.Xaml.Controls.Primitives.IScrollController Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_HorizontalScrollController()
    @_property
    def horizontal_scroll_controller(self) -> IScrollController: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_HorizontalScrollController(Microsoft.UI.Xaml.Controls.Primitives.IScrollController)
    @horizontal_scroll_controller.setter
    @typing.final
    def horizontal_scroll_controller(self, value: IScrollController) -> None: ...
    # Microsoft.UI.Xaml.Controls.ScrollingChainMode Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_HorizontalScrollChainMode()
    @_property
    def horizontal_scroll_chain_mode(self) -> microsoft_ui_xaml_controls.ScrollingChainMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_HorizontalScrollChainMode(Microsoft.UI.Xaml.Controls.ScrollingChainMode)
    @horizontal_scroll_chain_mode.setter
    @typing.final
    def horizontal_scroll_chain_mode(self, value: microsoft_ui_xaml_controls.ScrollingChainMode) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_MinZoomFactor()
    @_property
    def min_zoom_factor(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_MinZoomFactor(System.Double)
    @min_zoom_factor.setter
    @typing.final
    def min_zoom_factor(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_Background()
    @_property
    def background(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_Background(Microsoft.UI.Xaml.Media.Brush)
    @background.setter
    @typing.final
    def background(self, value: microsoft_ui_xaml_media.Brush) -> None: ...
    # Microsoft.UI.Xaml.Controls.ScrollingZoomMode Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ZoomMode()
    @_property
    def zoom_mode(self) -> microsoft_ui_xaml_controls.ScrollingZoomMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_ZoomMode(Microsoft.UI.Xaml.Controls.ScrollingZoomMode)
    @zoom_mode.setter
    @typing.final
    def zoom_mode(self, value: microsoft_ui_xaml_controls.ScrollingZoomMode) -> None: ...
    # Microsoft.UI.Xaml.Controls.ScrollingChainMode Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ZoomChainMode()
    @_property
    def zoom_chain_mode(self) -> microsoft_ui_xaml_controls.ScrollingChainMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_ZoomChainMode(Microsoft.UI.Xaml.Controls.ScrollingChainMode)
    @zoom_chain_mode.setter
    @typing.final
    def zoom_chain_mode(self, value: microsoft_ui_xaml_controls.ScrollingChainMode) -> None: ...
    # Microsoft.UI.Xaml.Controls.ScrollingRailMode Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_VerticalScrollRailMode()
    @_property
    def vertical_scroll_rail_mode(self) -> microsoft_ui_xaml_controls.ScrollingRailMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_VerticalScrollRailMode(Microsoft.UI.Xaml.Controls.ScrollingRailMode)
    @vertical_scroll_rail_mode.setter
    @typing.final
    def vertical_scroll_rail_mode(self, value: microsoft_ui_xaml_controls.ScrollingRailMode) -> None: ...
    # Microsoft.UI.Xaml.Controls.ScrollingScrollMode Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_VerticalScrollMode()
    @_property
    def vertical_scroll_mode(self) -> microsoft_ui_xaml_controls.ScrollingScrollMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_VerticalScrollMode(Microsoft.UI.Xaml.Controls.ScrollingScrollMode)
    @vertical_scroll_mode.setter
    @typing.final
    def vertical_scroll_mode(self, value: microsoft_ui_xaml_controls.ScrollingScrollMode) -> None: ...
    # Microsoft.UI.Xaml.Controls.Primitives.IScrollController Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_VerticalScrollController()
    @_property
    def vertical_scroll_controller(self) -> IScrollController: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_VerticalScrollController(Microsoft.UI.Xaml.Controls.Primitives.IScrollController)
    @vertical_scroll_controller.setter
    @typing.final
    def vertical_scroll_controller(self, value: IScrollController) -> None: ...
    # Microsoft.UI.Xaml.Controls.ScrollingChainMode Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_VerticalScrollChainMode()
    @_property
    def vertical_scroll_chain_mode(self) -> microsoft_ui_xaml_controls.ScrollingChainMode: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_VerticalScrollChainMode(Microsoft.UI.Xaml.Controls.ScrollingChainMode)
    @vertical_scroll_chain_mode.setter
    @typing.final
    def vertical_scroll_chain_mode(self, value: microsoft_ui_xaml_controls.ScrollingChainMode) -> None: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_VerticalAnchorRatio()
    @_property
    def vertical_anchor_ratio(self) -> winrt.system.Double: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::put_VerticalAnchorRatio(System.Double)
    @vertical_anchor_ratio.setter
    @typing.final
    def vertical_anchor_ratio(self, value: winrt.system.Double) -> None: ...
    # Microsoft.UI.Xaml.Controls.ScrollingScrollMode Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ComputedHorizontalScrollMode()
    @_property
    @typing.final
    def computed_horizontal_scroll_mode(self) -> microsoft_ui_xaml_controls.ScrollingScrollMode: ...
    # Microsoft.UI.Xaml.Controls.ScrollingScrollMode Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ComputedVerticalScrollMode()
    @_property
    @typing.final
    def computed_vertical_scroll_mode(self) -> microsoft_ui_xaml_controls.ScrollingScrollMode: ...
    # Microsoft.UI.Composition.CompositionPropertySet Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ExpressionAnimationSources()
    @_property
    @typing.final
    def expression_animation_sources(self) -> microsoft_ui_composition.CompositionPropertySet: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ExtentHeight()
    @_property
    @typing.final
    def extent_height(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ExtentWidth()
    @_property
    @typing.final
    def extent_width(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_HorizontalOffset()
    @_property
    @typing.final
    def horizontal_offset(self) -> winrt.system.Double: ...
    # Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase> Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_HorizontalSnapPoints()
    @_property
    @typing.final
    def horizontal_snap_points(self) -> typing.MutableSequence[ScrollSnapPointBase]: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ScrollableHeight()
    @_property
    @typing.final
    def scrollable_height(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ScrollableWidth()
    @_property
    @typing.final
    def scrollable_width(self) -> winrt.system.Double: ...
    # Microsoft.UI.Xaml.Controls.ScrollingInteractionState Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_State()
    @_property
    @typing.final
    def state(self) -> microsoft_ui_xaml_controls.ScrollingInteractionState: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_VerticalOffset()
    @_property
    @typing.final
    def vertical_offset(self) -> winrt.system.Double: ...
    # Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase> Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_VerticalSnapPoints()
    @_property
    @typing.final
    def vertical_snap_points(self) -> typing.MutableSequence[ScrollSnapPointBase]: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ViewportHeight()
    @_property
    @typing.final
    def viewport_height(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ViewportWidth()
    @_property
    @typing.final
    def viewport_width(self) -> winrt.system.Double: ...
    # System.Single Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ZoomFactor()
    @_property
    @typing.final
    def zoom_factor(self) -> winrt.system.Single: ...
    # Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase> Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter::get_ZoomSnapPoints()
    @_property
    @typing.final
    def zoom_snap_points(self) -> typing.MutableSequence[ZoomSnapPointBase]: ...

class ScrollSnapPoint_Static(ScrollSnapPointBase_Static):
    pass

class ScrollSnapPoint(ScrollSnapPointBase, metaclass=ScrollSnapPoint_Static):
    def __new__(cls: typing.Type[Self], snap_point_value: winrt.system.Double, alignment: ScrollSnapPointsAlignment) -> Self: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPoint::get_Value()
    @_property
    @typing.final
    def value(self) -> winrt.system.Double: ...

class ScrollSnapPointBase_Static(SnapPointBase_Static):
    pass

class ScrollSnapPointBase(SnapPointBase, metaclass=ScrollSnapPointBase_Static):
    # Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointsAlignment Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase::get_Alignment()
    @_property
    @typing.final
    def alignment(self) -> ScrollSnapPointsAlignment: ...

class Selector_Static(microsoft_ui_xaml_controls.ItemsControl_Static):
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.Selector::GetIsSelectionActive(Microsoft.UI.Xaml.DependencyObject)
    def get_is_selection_active(cls, element: microsoft_ui_xaml.DependencyObject, /) -> bool: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Selector::get_IsSynchronizedWithCurrentItemProperty()
    @_property
    @typing.final
    def is_synchronized_with_current_item_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Selector::get_SelectedIndexProperty()
    @_property
    @typing.final
    def selected_index_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Selector::get_SelectedItemProperty()
    @_property
    @typing.final
    def selected_item_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Selector::get_SelectedValuePathProperty()
    @_property
    @typing.final
    def selected_value_path_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Selector::get_SelectedValueProperty()
    @_property
    @typing.final
    def selected_value_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class Selector(microsoft_ui_xaml_controls.ItemsControl, metaclass=Selector_Static):
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.Selector::add_SelectionChanged(Microsoft.UI.Xaml.Controls.SelectionChangedEventHandler)
    def add_selection_changed(self, handler: microsoft_ui_xaml_controls.SelectionChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Selector::remove_SelectionChanged(Windows.Foundation.EventRegistrationToken)
    def remove_selection_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.String Microsoft.UI.Xaml.Controls.Primitives.Selector::get_SelectedValuePath()
    @_property
    def selected_value_path(self) -> str: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Selector::put_SelectedValuePath(System.String)
    @selected_value_path.setter
    @typing.final
    def selected_value_path(self, value: str) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.Primitives.Selector::get_SelectedValue()
    @_property
    def selected_value(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Selector::put_SelectedValue(System.Object)
    @selected_value.setter
    @typing.final
    def selected_value(self, value: winrt.system.Object) -> None: ...
    # System.Object Microsoft.UI.Xaml.Controls.Primitives.Selector::get_SelectedItem()
    @_property
    def selected_item(self) -> winrt.system.Object: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Selector::put_SelectedItem(System.Object)
    @selected_item.setter
    @typing.final
    def selected_item(self, value: winrt.system.Object) -> None: ...
    # System.Int32 Microsoft.UI.Xaml.Controls.Primitives.Selector::get_SelectedIndex()
    @_property
    def selected_index(self) -> winrt.system.Int32: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Selector::put_SelectedIndex(System.Int32)
    @selected_index.setter
    @typing.final
    def selected_index(self, value: winrt.system.Int32) -> None: ...
    # Windows.Foundation.IReference`1<System.Boolean> Microsoft.UI.Xaml.Controls.Primitives.Selector::get_IsSynchronizedWithCurrentItem()
    @_property
    def is_synchronized_with_current_item(self) -> typing.Optional[bool]: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Selector::put_IsSynchronizedWithCurrentItem(Windows.Foundation.IReference`1<System.Boolean>)
    @is_synchronized_with_current_item.setter
    @typing.final
    def is_synchronized_with_current_item(self, value: typing.Optional[bool]) -> None: ...

class SelectorItem_Static(microsoft_ui_xaml_controls.ContentControl_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.SelectorItem::get_IsSelectedProperty()
    @_property
    @typing.final
    def is_selected_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class SelectorItem(microsoft_ui_xaml_controls.ContentControl, metaclass=SelectorItem_Static):
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.SelectorItem::get_IsSelected()
    @_property
    def is_selected(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.SelectorItem::put_IsSelected(System.Boolean)
    @is_selected.setter
    @typing.final
    def is_selected(self, value: bool) -> None: ...

class SnapPointBase_Static(winrt._winrt.IInspectable_Static):
    pass

class SnapPointBase(winrt.system.Object, metaclass=SnapPointBase_Static):
    pass

@typing.final
class SplitViewTemplateSettings(microsoft_ui_xaml.DependencyObject):
    # Microsoft.UI.Xaml.GridLength Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings::get_CompactPaneGridLength()
    @_property
    def compact_pane_grid_length(self) -> microsoft_ui_xaml.GridLength: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings::get_NegativeOpenPaneLength()
    @_property
    def negative_open_pane_length(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings::get_NegativeOpenPaneLengthMinusCompactLength()
    @_property
    def negative_open_pane_length_minus_compact_length(self) -> winrt.system.Double: ...
    # Microsoft.UI.Xaml.GridLength Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings::get_OpenPaneGridLength()
    @_property
    def open_pane_grid_length(self) -> microsoft_ui_xaml.GridLength: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings::get_OpenPaneLength()
    @_property
    def open_pane_length(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings::get_OpenPaneLengthMinusCompactLength()
    @_property
    def open_pane_length_minus_compact_length(self) -> winrt.system.Double: ...

@typing.final
class Thumb_Static(microsoft_ui_xaml_controls.Control_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.Thumb::get_IsDraggingProperty()
    @_property
    def is_dragging_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class Thumb(microsoft_ui_xaml_controls.Control, metaclass=Thumb_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Thumb::CancelDrag()
    def cancel_drag(self) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.Thumb::add_DragCompleted(Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventHandler)
    def add_drag_completed(self, handler: DragCompletedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Thumb::remove_DragCompleted(Windows.Foundation.EventRegistrationToken)
    def remove_drag_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.Thumb::add_DragDelta(Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventHandler)
    def add_drag_delta(self, handler: DragDeltaEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Thumb::remove_DragDelta(Windows.Foundation.EventRegistrationToken)
    def remove_drag_delta(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.Thumb::add_DragStarted(Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventHandler)
    def add_drag_started(self, handler: DragStartedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.Thumb::remove_DragStarted(Windows.Foundation.EventRegistrationToken)
    def remove_drag_started(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.Thumb::get_IsDragging()
    @_property
    def is_dragging(self) -> bool: ...

@typing.final
class TickBar_Static(microsoft_ui_xaml.FrameworkElement_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.TickBar::get_FillProperty()
    @_property
    def fill_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

@typing.final
class TickBar(microsoft_ui_xaml.FrameworkElement, metaclass=TickBar_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Microsoft.UI.Xaml.Media.Brush Microsoft.UI.Xaml.Controls.Primitives.TickBar::get_Fill()
    @_property
    def fill(self) -> microsoft_ui_xaml_media.Brush: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.TickBar::put_Fill(Microsoft.UI.Xaml.Media.Brush)
    @fill.setter
    def fill(self, value: microsoft_ui_xaml_media.Brush) -> None: ...

class ToggleButton_Static(ButtonBase_Static):
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ToggleButton::get_IsCheckedProperty()
    @_property
    @typing.final
    def is_checked_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...
    # Microsoft.UI.Xaml.DependencyProperty Microsoft.UI.Xaml.Controls.Primitives.ToggleButton::get_IsThreeStateProperty()
    @_property
    @typing.final
    def is_three_state_property(cls) -> microsoft_ui_xaml.DependencyProperty: ...

class ToggleButton(ButtonBase, metaclass=ToggleButton_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ToggleButton::OnToggle()
    def _on_toggle(self) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ToggleButton::add_Checked(Microsoft.UI.Xaml.RoutedEventHandler)
    def add_checked(self, handler: microsoft_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ToggleButton::remove_Checked(Windows.Foundation.EventRegistrationToken)
    def remove_checked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ToggleButton::add_Indeterminate(Microsoft.UI.Xaml.RoutedEventHandler)
    def add_indeterminate(self, handler: microsoft_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ToggleButton::remove_Indeterminate(Windows.Foundation.EventRegistrationToken)
    def remove_indeterminate(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.ToggleButton::add_Unchecked(Microsoft.UI.Xaml.RoutedEventHandler)
    def add_unchecked(self, handler: microsoft_ui_xaml.RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ToggleButton::remove_Unchecked(Windows.Foundation.EventRegistrationToken)
    def remove_unchecked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.ToggleButton::get_IsThreeState()
    @_property
    def is_three_state(self) -> bool: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ToggleButton::put_IsThreeState(System.Boolean)
    @is_three_state.setter
    @typing.final
    def is_three_state(self, value: bool) -> None: ...
    # Windows.Foundation.IReference`1<System.Boolean> Microsoft.UI.Xaml.Controls.Primitives.ToggleButton::get_IsChecked()
    @_property
    def is_checked(self) -> typing.Optional[bool]: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.ToggleButton::put_IsChecked(Windows.Foundation.IReference`1<System.Boolean>)
    @is_checked.setter
    @typing.final
    def is_checked(self, value: typing.Optional[bool]) -> None: ...

@typing.final
class ToggleSwitchTemplateSettings(microsoft_ui_xaml.DependencyObject):
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings::get_CurtainCurrentToOffOffset()
    @_property
    def curtain_current_to_off_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings::get_CurtainCurrentToOnOffset()
    @_property
    def curtain_current_to_on_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings::get_CurtainOffToOnOffset()
    @_property
    def curtain_off_to_on_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings::get_CurtainOnToOffOffset()
    @_property
    def curtain_on_to_off_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings::get_KnobCurrentToOffOffset()
    @_property
    def knob_current_to_off_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings::get_KnobCurrentToOnOffset()
    @_property
    def knob_current_to_on_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings::get_KnobOffToOnOffset()
    @_property
    def knob_off_to_on_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings::get_KnobOnToOffOffset()
    @_property
    def knob_on_to_off_offset(self) -> winrt.system.Double: ...

@typing.final
class ToolTipTemplateSettings(microsoft_ui_xaml.DependencyObject):
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings::get_FromHorizontalOffset()
    @_property
    def from_horizontal_offset(self) -> winrt.system.Double: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings::get_FromVerticalOffset()
    @_property
    def from_vertical_offset(self) -> winrt.system.Double: ...

class ZoomSnapPoint_Static(ZoomSnapPointBase_Static):
    pass

class ZoomSnapPoint(ZoomSnapPointBase, metaclass=ZoomSnapPoint_Static):
    def __new__(cls: typing.Type[Self], snap_point_value: winrt.system.Double) -> Self: ...
    # System.Double Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPoint::get_Value()
    @_property
    @typing.final
    def value(self) -> winrt.system.Double: ...

class ZoomSnapPointBase_Static(SnapPointBase_Static):
    pass

class ZoomSnapPointBase(SnapPointBase, metaclass=ZoomSnapPointBase_Static):
    pass

@typing.final
class _IScrollController: ...

class IScrollController(winrt._winrt.IInspectable):
    # Microsoft.UI.Composition.CompositionAnimation Microsoft.UI.Xaml.Controls.Primitives.IScrollController::GetScrollAnimation(System.Int32,Windows.Foundation.Numerics.Vector2,Windows.Foundation.Numerics.Vector2,Microsoft.UI.Composition.CompositionAnimation)
    @abstractmethod
    def get_scroll_animation(self, correlation_id: winrt.system.Int32, start_position: windows_foundation_numerics.Vector2, end_position: windows_foundation_numerics.Vector2, default_animation: microsoft_ui_composition.CompositionAnimation, /) -> microsoft_ui_composition.CompositionAnimation: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.IScrollController::NotifyRequestedScrollCompleted(System.Int32)
    @abstractmethod
    def notify_requested_scroll_completed(self, correlation_id: winrt.system.Int32, /) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.IScrollController::SetIsScrollable(System.Boolean)
    @abstractmethod
    def set_is_scrollable(self, is_scrollable: bool, /) -> None: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.IScrollController::SetValues(System.Double,System.Double,System.Double,System.Double)
    @abstractmethod
    def set_values(self, min_offset: winrt.system.Double, max_offset: winrt.system.Double, offset: winrt.system.Double, viewport_length: winrt.system.Double, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.IScrollController::add_AddScrollVelocityRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.IScrollController,Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs>)
    @abstractmethod
    def add_add_scroll_velocity_requested(self, handler: windows_foundation.TypedEventHandler[IScrollController, ScrollControllerAddScrollVelocityRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.IScrollController::remove_AddScrollVelocityRequested(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_add_scroll_velocity_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.IScrollController::add_CanScrollChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.IScrollController,System.Object>)
    @abstractmethod
    def add_can_scroll_changed(self, handler: windows_foundation.TypedEventHandler[IScrollController, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.IScrollController::remove_CanScrollChanged(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_can_scroll_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.IScrollController::add_IsScrollingWithMouseChanged(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.IScrollController,System.Object>)
    @abstractmethod
    def add_is_scrolling_with_mouse_changed(self, handler: windows_foundation.TypedEventHandler[IScrollController, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.IScrollController::remove_IsScrollingWithMouseChanged(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_is_scrolling_with_mouse_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.IScrollController::add_ScrollByRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.IScrollController,Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs>)
    @abstractmethod
    def add_scroll_by_requested(self, handler: windows_foundation.TypedEventHandler[IScrollController, ScrollControllerScrollByRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.IScrollController::remove_ScrollByRequested(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_scroll_by_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.IScrollController::add_ScrollToRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.IScrollController,Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs>)
    @abstractmethod
    def add_scroll_to_requested(self, handler: windows_foundation.TypedEventHandler[IScrollController, ScrollControllerScrollToRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.IScrollController::remove_ScrollToRequested(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_scroll_to_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.IScrollController::get_CanScroll()
    @_property
    @abstractmethod
    def can_scroll(self) -> bool: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.IScrollController::get_IsScrollingWithMouse()
    @_property
    @abstractmethod
    def is_scrolling_with_mouse(self) -> bool: ...
    # Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo Microsoft.UI.Xaml.Controls.Primitives.IScrollController::get_PanningInfo()
    @_property
    @abstractmethod
    def panning_info(self) -> IScrollControllerPanningInfo: ...

@typing.final
class _IScrollControllerPanningInfo: ...

class IScrollControllerPanningInfo(winrt._winrt.IInspectable):
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo::SetPanningElementExpressionAnimationSources(Microsoft.UI.Composition.CompositionPropertySet,System.String,System.String,System.String,System.String)
    @abstractmethod
    def set_panning_element_expression_animation_sources(self, property_set: microsoft_ui_composition.CompositionPropertySet, min_offset_property_name: str, max_offset_property_name: str, offset_property_name: str, multiplier_property_name: str, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo::add_Changed(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo,System.Object>)
    @abstractmethod
    def add_changed(self, handler: windows_foundation.TypedEventHandler[IScrollControllerPanningInfo, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo::remove_Changed(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo::add_PanRequested(Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo,Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerPanRequestedEventArgs>)
    @abstractmethod
    def add_pan_requested(self, handler: windows_foundation.TypedEventHandler[IScrollControllerPanningInfo, ScrollControllerPanRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo::remove_PanRequested(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_pan_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo::get_IsRailEnabled()
    @_property
    @abstractmethod
    def is_rail_enabled(self) -> bool: ...
    # Microsoft.UI.Xaml.Controls.Orientation Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo::get_PanOrientation()
    @_property
    @abstractmethod
    def pan_orientation(self) -> microsoft_ui_xaml_controls.Orientation: ...
    # Microsoft.UI.Xaml.UIElement Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerPanningInfo::get_PanningElementAncestor()
    @_property
    @abstractmethod
    def panning_element_ancestor(self) -> microsoft_ui_xaml.UIElement: ...

@typing.final
class _IScrollSnapPointsInfo: ...

class IScrollSnapPointsInfo(winrt._winrt.IInspectable):
    # Windows.Foundation.Collections.IVectorView`1<System.Single> Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo::GetIrregularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment)
    @abstractmethod
    def get_irregular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Sequence[winrt.system.Single]: ...
    # System.Single Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo::GetRegularSnapPoints(Microsoft.UI.Xaml.Controls.Orientation,Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment,System.Single&)
    @abstractmethod
    def get_regular_snap_points(self, orientation: microsoft_ui_xaml_controls.Orientation, alignment: SnapPointsAlignment, /) -> typing.Tuple[winrt.system.Single, winrt.system.Single]: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo::add_HorizontalSnapPointsChanged(Windows.Foundation.EventHandler`1<System.Object>)
    @abstractmethod
    def add_horizontal_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo::remove_HorizontalSnapPointsChanged(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_horizontal_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo::add_VerticalSnapPointsChanged(Windows.Foundation.EventHandler`1<System.Object>)
    @abstractmethod
    def add_vertical_snap_points_changed(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo::remove_VerticalSnapPointsChanged(Windows.Foundation.EventRegistrationToken)
    @abstractmethod
    def remove_vertical_snap_points_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo::get_AreHorizontalSnapPointsRegular()
    @_property
    @abstractmethod
    def are_horizontal_snap_points_regular(self) -> bool: ...
    # System.Boolean Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo::get_AreVerticalSnapPointsRegular()
    @_property
    @abstractmethod
    def are_vertical_snap_points_regular(self) -> bool: ...

