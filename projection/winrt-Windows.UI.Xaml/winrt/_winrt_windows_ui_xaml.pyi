# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.activation as windows_applicationmodel_activation
import winrt.windows.applicationmodel.core as windows_applicationmodel_core
import winrt.windows.applicationmodel.datatransfer as windows_applicationmodel_datatransfer
import winrt.windows.applicationmodel.datatransfer.dragdrop as windows_applicationmodel_datatransfer_dragdrop
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.foundation.numerics as windows_foundation_numerics
import winrt.windows.graphics.imaging as windows_graphics_imaging
import winrt.windows.ui as windows_ui
import winrt.windows.ui.composition as windows_ui_composition
import winrt.windows.ui.core as windows_ui_core
import winrt.windows.ui.input as windows_ui_input
import winrt.windows.ui.xaml.automation.peers as windows_ui_xaml_automation_peers
import winrt.windows.ui.xaml.controls as windows_ui_xaml_controls
import winrt.windows.ui.xaml.controls.primitives as windows_ui_xaml_controls_primitives
import winrt.windows.ui.xaml.data as windows_ui_xaml_data
import winrt.windows.ui.xaml.input as windows_ui_xaml_input
import winrt.windows.ui.xaml.interop as windows_ui_xaml_interop
import winrt.windows.ui.xaml.media as windows_ui_xaml_media
import winrt.windows.ui.xaml.media.animation as windows_ui_xaml_media_animation
import winrt.windows.ui.xaml.media.imaging as windows_ui_xaml_media_imaging
import winrt.windows.ui.xaml.media.media3d as windows_ui_xaml_media_media3d

from winrt.windows.ui.xaml import ApplicationHighContrastAdjustment, ApplicationRequiresPointerMode, ApplicationTheme, AutomationTextAttributesEnum, DurationType, ElementHighContrastAdjustment, ElementSoundKind, ElementSoundMode, ElementSoundPlayerState, ElementSpatialAudioMode, ElementTheme, FlowDirection, FocusState, FocusVisualKind, FontCapitals, FontEastAsianLanguage, FontEastAsianWidths, FontFraction, FontNumeralAlignment, FontNumeralStyle, FontVariants, GridUnitType, HorizontalAlignment, LineStackingStrategy, OpticalMarginAlignment, TextAlignment, TextLineBounds, TextReadingOrder, TextTrimming, TextWrapping, Vector3TransitionComponents, VerticalAlignment, Visibility
from winrt.windows.ui.xaml import ApplicationInitializationCallback, BindingFailedEventHandler, CreateDefaultValueCallback, DependencyPropertyChangedCallback, DependencyPropertyChangedEventHandler, DragEventHandler, EnteredBackgroundEventHandler, ExceptionRoutedEventHandler, LeavingBackgroundEventHandler, PropertyChangedCallback, RoutedEventHandler, SizeChangedEventHandler, SuspendingEventHandler, UnhandledExceptionEventHandler, VisualStateChangedEventHandler, WindowActivatedEventHandler, WindowClosedEventHandler, WindowSizeChangedEventHandler, WindowVisibilityChangedEventHandler

Self = typing.TypeVar('Self')

@typing.final
class CornerRadius:
    top_left: winrt.system.Double
    top_right: winrt.system.Double
    bottom_right: winrt.system.Double
    bottom_left: winrt.system.Double
    def __init__(self, top_left: winrt.system.Double = 0, top_right: winrt.system.Double = 0, bottom_right: winrt.system.Double = 0, bottom_left: winrt.system.Double = 0) -> None: ...

@typing.final
class Duration:
    time_span: datetime.timedelta
    type: DurationType
    def __init__(self, time_span: datetime.timedelta = datetime.timedelta(0), type: DurationType = DurationType(0)) -> None: ...

@typing.final
class GridLength:
    value: winrt.system.Double
    grid_unit_type: GridUnitType
    def __init__(self, value: winrt.system.Double = 0, grid_unit_type: GridUnitType = GridUnitType(0)) -> None: ...

@typing.final
class Thickness:
    left: winrt.system.Double
    top: winrt.system.Double
    right: winrt.system.Double
    bottom: winrt.system.Double
    def __init__(self, left: winrt.system.Double = 0, top: winrt.system.Double = 0, right: winrt.system.Double = 0, bottom: winrt.system.Double = 0) -> None: ...

class AdaptiveTrigger_Static(StateTriggerBase_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.AdaptiveTrigger::get_MinWindowHeightProperty()
    @_property
    @typing.final
    def min_window_height_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.AdaptiveTrigger::get_MinWindowWidthProperty()
    @_property
    @typing.final
    def min_window_width_property(cls) -> DependencyProperty: ...

class AdaptiveTrigger(StateTriggerBase, metaclass=AdaptiveTrigger_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Double Windows.UI.Xaml.AdaptiveTrigger::get_MinWindowWidth()
    @_property
    def min_window_width(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.AdaptiveTrigger::put_MinWindowWidth(System.Double)
    @min_window_width.setter
    @typing.final
    def min_window_width(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.AdaptiveTrigger::get_MinWindowHeight()
    @_property
    def min_window_height(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.AdaptiveTrigger::put_MinWindowHeight(System.Double)
    @min_window_height.setter
    @typing.final
    def min_window_height(self, value: winrt.system.Double) -> None: ...

class Application_Static(winrt._winrt.IInspectable_Static):
    # System.Void Windows.UI.Xaml.Application::LoadComponent(System.Object,Windows.Foundation.Uri)
    def load_component(cls, component: winrt.system.Object, resource_locator: windows_foundation.Uri, /) -> None: ...
    # System.Void Windows.UI.Xaml.Application::LoadComponent(System.Object,Windows.Foundation.Uri,Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation)
    def load_component_with_resource_location(cls, component: winrt.system.Object, resource_locator: windows_foundation.Uri, component_resource_location: windows_ui_xaml_controls_primitives.ComponentResourceLocation, /) -> None: ...
    # System.Void Windows.UI.Xaml.Application::Start(Windows.UI.Xaml.ApplicationInitializationCallback)
    def start(cls, callback: ApplicationInitializationCallback, /) -> None: ...
    # Windows.UI.Xaml.Application Windows.UI.Xaml.Application::get_Current()
    @_property
    @typing.final
    def current(cls) -> Application: ...

class Application(winrt.system.Object, metaclass=Application_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # System.Void Windows.UI.Xaml.Application::Exit()
    def exit(self) -> None: ...
    # System.Void Windows.UI.Xaml.Application::OnActivated(Windows.ApplicationModel.Activation.IActivatedEventArgs)
    def _on_activated(self, args: windows_applicationmodel_activation.IActivatedEventArgs, /) -> None: ...
    # System.Void Windows.UI.Xaml.Application::OnBackgroundActivated(Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs)
    def _on_background_activated(self, args: windows_applicationmodel_activation.BackgroundActivatedEventArgs, /) -> None: ...
    # System.Void Windows.UI.Xaml.Application::OnCachedFileUpdaterActivated(Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs)
    def _on_cached_file_updater_activated(self, args: windows_applicationmodel_activation.CachedFileUpdaterActivatedEventArgs, /) -> None: ...
    # System.Void Windows.UI.Xaml.Application::OnFileActivated(Windows.ApplicationModel.Activation.FileActivatedEventArgs)
    def _on_file_activated(self, args: windows_applicationmodel_activation.FileActivatedEventArgs, /) -> None: ...
    # System.Void Windows.UI.Xaml.Application::OnFileOpenPickerActivated(Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs)
    def _on_file_open_picker_activated(self, args: windows_applicationmodel_activation.FileOpenPickerActivatedEventArgs, /) -> None: ...
    # System.Void Windows.UI.Xaml.Application::OnFileSavePickerActivated(Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs)
    def _on_file_save_picker_activated(self, args: windows_applicationmodel_activation.FileSavePickerActivatedEventArgs, /) -> None: ...
    # System.Void Windows.UI.Xaml.Application::OnLaunched(Windows.ApplicationModel.Activation.LaunchActivatedEventArgs)
    def _on_launched(self, args: windows_applicationmodel_activation.LaunchActivatedEventArgs, /) -> None: ...
    # System.Void Windows.UI.Xaml.Application::OnSearchActivated(Windows.ApplicationModel.Activation.SearchActivatedEventArgs)
    def _on_search_activated(self, args: windows_applicationmodel_activation.SearchActivatedEventArgs, /) -> None: ...
    # System.Void Windows.UI.Xaml.Application::OnShareTargetActivated(Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs)
    def _on_share_target_activated(self, args: windows_applicationmodel_activation.ShareTargetActivatedEventArgs, /) -> None: ...
    # System.Void Windows.UI.Xaml.Application::OnWindowCreated(Windows.UI.Xaml.WindowCreatedEventArgs)
    def _on_window_created(self, args: WindowCreatedEventArgs, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Application::add_Resuming(Windows.Foundation.EventHandler`1<System.Object>)
    def add_resuming(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.Application::remove_Resuming(Windows.Foundation.EventRegistrationToken)
    def remove_resuming(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Application::add_Suspending(Windows.UI.Xaml.SuspendingEventHandler)
    def add_suspending(self, handler: SuspendingEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.Application::remove_Suspending(Windows.Foundation.EventRegistrationToken)
    def remove_suspending(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Application::add_UnhandledException(Windows.UI.Xaml.UnhandledExceptionEventHandler)
    def add_unhandled_exception(self, handler: UnhandledExceptionEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.Application::remove_UnhandledException(Windows.Foundation.EventRegistrationToken)
    def remove_unhandled_exception(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Application::add_EnteredBackground(Windows.UI.Xaml.EnteredBackgroundEventHandler)
    def add_entered_background(self, handler: EnteredBackgroundEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.Application::remove_EnteredBackground(Windows.Foundation.EventRegistrationToken)
    def remove_entered_background(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Application::add_LeavingBackground(Windows.UI.Xaml.LeavingBackgroundEventHandler)
    def add_leaving_background(self, handler: LeavingBackgroundEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.Application::remove_LeavingBackground(Windows.Foundation.EventRegistrationToken)
    def remove_leaving_background(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.UI.Xaml.ResourceDictionary Windows.UI.Xaml.Application::get_Resources()
    @_property
    def resources(self) -> ResourceDictionary: ...
    # System.Void Windows.UI.Xaml.Application::put_Resources(Windows.UI.Xaml.ResourceDictionary)
    @resources.setter
    @typing.final
    def resources(self, value: ResourceDictionary) -> None: ...
    # Windows.UI.Xaml.ApplicationTheme Windows.UI.Xaml.Application::get_RequestedTheme()
    @_property
    def requested_theme(self) -> ApplicationTheme: ...
    # System.Void Windows.UI.Xaml.Application::put_RequestedTheme(Windows.UI.Xaml.ApplicationTheme)
    @requested_theme.setter
    @typing.final
    def requested_theme(self, value: ApplicationTheme) -> None: ...
    # Windows.UI.Xaml.DebugSettings Windows.UI.Xaml.Application::get_DebugSettings()
    @_property
    @typing.final
    def debug_settings(self) -> DebugSettings: ...
    # Windows.UI.Xaml.ApplicationRequiresPointerMode Windows.UI.Xaml.Application::get_RequiresPointerMode()
    @_property
    def requires_pointer_mode(self) -> ApplicationRequiresPointerMode: ...
    # System.Void Windows.UI.Xaml.Application::put_RequiresPointerMode(Windows.UI.Xaml.ApplicationRequiresPointerMode)
    @requires_pointer_mode.setter
    @typing.final
    def requires_pointer_mode(self, value: ApplicationRequiresPointerMode) -> None: ...
    # Windows.UI.Xaml.FocusVisualKind Windows.UI.Xaml.Application::get_FocusVisualKind()
    @_property
    def focus_visual_kind(self) -> FocusVisualKind: ...
    # System.Void Windows.UI.Xaml.Application::put_FocusVisualKind(Windows.UI.Xaml.FocusVisualKind)
    @focus_visual_kind.setter
    @typing.final
    def focus_visual_kind(self, value: FocusVisualKind) -> None: ...
    # Windows.UI.Xaml.ApplicationHighContrastAdjustment Windows.UI.Xaml.Application::get_HighContrastAdjustment()
    @_property
    def high_contrast_adjustment(self) -> ApplicationHighContrastAdjustment: ...
    # System.Void Windows.UI.Xaml.Application::put_HighContrastAdjustment(Windows.UI.Xaml.ApplicationHighContrastAdjustment)
    @high_contrast_adjustment.setter
    @typing.final
    def high_contrast_adjustment(self, value: ApplicationHighContrastAdjustment) -> None: ...

@typing.final
class ApplicationInitializationCallbackParams(winrt.system.Object):
    pass

@typing.final
class BindingFailedEventArgs(winrt.system.Object):
    # System.String Windows.UI.Xaml.BindingFailedEventArgs::get_Message()
    @_property
    def message(self) -> str: ...

@typing.final
class BringIntoViewOptions(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.IReference`1<Windows.Foundation.Rect> Windows.UI.Xaml.BringIntoViewOptions::get_TargetRect()
    @_property
    def target_rect(self) -> typing.Optional[windows_foundation.Rect]: ...
    # System.Void Windows.UI.Xaml.BringIntoViewOptions::put_TargetRect(Windows.Foundation.IReference`1<Windows.Foundation.Rect>)
    @target_rect.setter
    def target_rect(self, value: typing.Optional[windows_foundation.Rect]) -> None: ...
    # System.Boolean Windows.UI.Xaml.BringIntoViewOptions::get_AnimationDesired()
    @_property
    def animation_desired(self) -> bool: ...
    # System.Void Windows.UI.Xaml.BringIntoViewOptions::put_AnimationDesired(System.Boolean)
    @animation_desired.setter
    def animation_desired(self, value: bool) -> None: ...
    # System.Double Windows.UI.Xaml.BringIntoViewOptions::get_VerticalOffset()
    @_property
    def vertical_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.BringIntoViewOptions::put_VerticalOffset(System.Double)
    @vertical_offset.setter
    def vertical_offset(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.BringIntoViewOptions::get_VerticalAlignmentRatio()
    @_property
    def vertical_alignment_ratio(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.BringIntoViewOptions::put_VerticalAlignmentRatio(System.Double)
    @vertical_alignment_ratio.setter
    def vertical_alignment_ratio(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.BringIntoViewOptions::get_HorizontalOffset()
    @_property
    def horizontal_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.BringIntoViewOptions::put_HorizontalOffset(System.Double)
    @horizontal_offset.setter
    def horizontal_offset(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.BringIntoViewOptions::get_HorizontalAlignmentRatio()
    @_property
    def horizontal_alignment_ratio(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.BringIntoViewOptions::put_HorizontalAlignmentRatio(System.Double)
    @horizontal_alignment_ratio.setter
    def horizontal_alignment_ratio(self, value: winrt.system.Double) -> None: ...

@typing.final
class BringIntoViewRequestedEventArgs(RoutedEventArgs):
    # System.Double Windows.UI.Xaml.BringIntoViewRequestedEventArgs::get_VerticalOffset()
    @_property
    def vertical_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.BringIntoViewRequestedEventArgs::put_VerticalOffset(System.Double)
    @vertical_offset.setter
    def vertical_offset(self, value: winrt.system.Double) -> None: ...
    # Windows.Foundation.Rect Windows.UI.Xaml.BringIntoViewRequestedEventArgs::get_TargetRect()
    @_property
    def target_rect(self) -> windows_foundation.Rect: ...
    # System.Void Windows.UI.Xaml.BringIntoViewRequestedEventArgs::put_TargetRect(Windows.Foundation.Rect)
    @target_rect.setter
    def target_rect(self, value: windows_foundation.Rect) -> None: ...
    # Windows.UI.Xaml.UIElement Windows.UI.Xaml.BringIntoViewRequestedEventArgs::get_TargetElement()
    @_property
    def target_element(self) -> UIElement: ...
    # System.Void Windows.UI.Xaml.BringIntoViewRequestedEventArgs::put_TargetElement(Windows.UI.Xaml.UIElement)
    @target_element.setter
    def target_element(self, value: UIElement) -> None: ...
    # System.Double Windows.UI.Xaml.BringIntoViewRequestedEventArgs::get_HorizontalOffset()
    @_property
    def horizontal_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.BringIntoViewRequestedEventArgs::put_HorizontalOffset(System.Double)
    @horizontal_offset.setter
    def horizontal_offset(self, value: winrt.system.Double) -> None: ...
    # System.Boolean Windows.UI.Xaml.BringIntoViewRequestedEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.BringIntoViewRequestedEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.BringIntoViewRequestedEventArgs::get_AnimationDesired()
    @_property
    def animation_desired(self) -> bool: ...
    # System.Void Windows.UI.Xaml.BringIntoViewRequestedEventArgs::put_AnimationDesired(System.Boolean)
    @animation_desired.setter
    def animation_desired(self, value: bool) -> None: ...
    # System.Double Windows.UI.Xaml.BringIntoViewRequestedEventArgs::get_HorizontalAlignmentRatio()
    @_property
    def horizontal_alignment_ratio(self) -> winrt.system.Double: ...
    # System.Double Windows.UI.Xaml.BringIntoViewRequestedEventArgs::get_VerticalAlignmentRatio()
    @_property
    def vertical_alignment_ratio(self) -> winrt.system.Double: ...

class BrushTransition_Static(winrt._winrt.IInspectable_Static):
    pass

class BrushTransition(winrt.system.Object, metaclass=BrushTransition_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.TimeSpan Windows.UI.Xaml.BrushTransition::get_Duration()
    @_property
    def duration(self) -> datetime.timedelta: ...
    # System.Void Windows.UI.Xaml.BrushTransition::put_Duration(Windows.Foundation.TimeSpan)
    @duration.setter
    @typing.final
    def duration(self, value: datetime.timedelta) -> None: ...

class ColorPaletteResources_Static(ResourceDictionary_Static):
    pass

class ColorPaletteResources(ResourceDictionary, metaclass=ColorPaletteResources_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ListMedium()
    @_property
    def list_medium(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ListMedium(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @list_medium.setter
    @typing.final
    def list_medium(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ListLow()
    @_property
    def list_low(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ListLow(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @list_low.setter
    @typing.final
    def list_low(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ErrorText()
    @_property
    def error_text(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ErrorText(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @error_text.setter
    @typing.final
    def error_text(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ChromeWhite()
    @_property
    def chrome_white(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ChromeWhite(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @chrome_white.setter
    @typing.final
    def chrome_white(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ChromeMediumLow()
    @_property
    def chrome_medium_low(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ChromeMediumLow(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @chrome_medium_low.setter
    @typing.final
    def chrome_medium_low(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ChromeMedium()
    @_property
    def chrome_medium(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ChromeMedium(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @chrome_medium.setter
    @typing.final
    def chrome_medium(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ChromeLow()
    @_property
    def chrome_low(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ChromeLow(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @chrome_low.setter
    @typing.final
    def chrome_low(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ChromeHigh()
    @_property
    def chrome_high(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ChromeHigh(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @chrome_high.setter
    @typing.final
    def chrome_high(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ChromeGray()
    @_property
    def chrome_gray(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ChromeGray(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @chrome_gray.setter
    @typing.final
    def chrome_gray(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ChromeDisabledLow()
    @_property
    def chrome_disabled_low(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ChromeDisabledLow(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @chrome_disabled_low.setter
    @typing.final
    def chrome_disabled_low(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ChromeDisabledHigh()
    @_property
    def chrome_disabled_high(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ChromeDisabledHigh(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @chrome_disabled_high.setter
    @typing.final
    def chrome_disabled_high(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ChromeBlackMediumLow()
    @_property
    def chrome_black_medium_low(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ChromeBlackMediumLow(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @chrome_black_medium_low.setter
    @typing.final
    def chrome_black_medium_low(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ChromeBlackMedium()
    @_property
    def chrome_black_medium(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ChromeBlackMedium(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @chrome_black_medium.setter
    @typing.final
    def chrome_black_medium(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ChromeBlackLow()
    @_property
    def chrome_black_low(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ChromeBlackLow(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @chrome_black_low.setter
    @typing.final
    def chrome_black_low(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ChromeBlackHigh()
    @_property
    def chrome_black_high(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ChromeBlackHigh(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @chrome_black_high.setter
    @typing.final
    def chrome_black_high(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_ChromeAltLow()
    @_property
    def chrome_alt_low(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_ChromeAltLow(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @chrome_alt_low.setter
    @typing.final
    def chrome_alt_low(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_BaseMediumLow()
    @_property
    def base_medium_low(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_BaseMediumLow(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @base_medium_low.setter
    @typing.final
    def base_medium_low(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_BaseMediumHigh()
    @_property
    def base_medium_high(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_BaseMediumHigh(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @base_medium_high.setter
    @typing.final
    def base_medium_high(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_BaseMedium()
    @_property
    def base_medium(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_BaseMedium(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @base_medium.setter
    @typing.final
    def base_medium(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_BaseLow()
    @_property
    def base_low(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_BaseLow(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @base_low.setter
    @typing.final
    def base_low(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_BaseHigh()
    @_property
    def base_high(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_BaseHigh(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @base_high.setter
    @typing.final
    def base_high(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_AltMediumLow()
    @_property
    def alt_medium_low(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_AltMediumLow(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @alt_medium_low.setter
    @typing.final
    def alt_medium_low(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_AltMediumHigh()
    @_property
    def alt_medium_high(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_AltMediumHigh(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @alt_medium_high.setter
    @typing.final
    def alt_medium_high(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_AltMedium()
    @_property
    def alt_medium(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_AltMedium(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @alt_medium.setter
    @typing.final
    def alt_medium(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_AltLow()
    @_property
    def alt_low(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_AltLow(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @alt_low.setter
    @typing.final
    def alt_low(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_AltHigh()
    @_property
    def alt_high(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_AltHigh(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @alt_high.setter
    @typing.final
    def alt_high(self, value: typing.Optional[windows_ui.Color]) -> None: ...
    # Windows.Foundation.IReference`1<Windows.UI.Color> Windows.UI.Xaml.ColorPaletteResources::get_Accent()
    @_property
    def accent(self) -> typing.Optional[windows_ui.Color]: ...
    # System.Void Windows.UI.Xaml.ColorPaletteResources::put_Accent(Windows.Foundation.IReference`1<Windows.UI.Color>)
    @accent.setter
    @typing.final
    def accent(self, value: typing.Optional[windows_ui.Color]) -> None: ...

@typing.final
class CornerRadiusHelper_Static(winrt._winrt.IInspectable_Static):
    # Windows.UI.Xaml.CornerRadius Windows.UI.Xaml.CornerRadiusHelper::FromRadii(System.Double,System.Double,System.Double,System.Double)
    def from_radii(cls, top_left: winrt.system.Double, top_right: winrt.system.Double, bottom_right: winrt.system.Double, bottom_left: winrt.system.Double, /) -> CornerRadius: ...
    # Windows.UI.Xaml.CornerRadius Windows.UI.Xaml.CornerRadiusHelper::FromUniformRadius(System.Double)
    def from_uniform_radius(cls, uniform_radius: winrt.system.Double, /) -> CornerRadius: ...

@typing.final
class CornerRadiusHelper(winrt.system.Object, metaclass=CornerRadiusHelper_Static):
    pass

@typing.final
class DataContextChangedEventArgs(winrt.system.Object):
    # System.Boolean Windows.UI.Xaml.DataContextChangedEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.DataContextChangedEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...
    # System.Object Windows.UI.Xaml.DataContextChangedEventArgs::get_NewValue()
    @_property
    def new_value(self) -> winrt.system.Object: ...

class DataTemplate_Static(FrameworkTemplate_Static):
    # Windows.UI.Xaml.IDataTemplateExtension Windows.UI.Xaml.DataTemplate::GetExtensionInstance(Windows.UI.Xaml.FrameworkElement)
    def get_extension_instance(cls, element: FrameworkElement, /) -> IDataTemplateExtension: ...
    # System.Void Windows.UI.Xaml.DataTemplate::SetExtensionInstance(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.IDataTemplateExtension)
    def set_extension_instance(cls, element: FrameworkElement, value: IDataTemplateExtension, /) -> None: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.DataTemplate::get_ExtensionInstanceProperty()
    @_property
    @typing.final
    def extension_instance_property(cls) -> DependencyProperty: ...

class DataTemplate(FrameworkTemplate, IElementFactory, metaclass=DataTemplate_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.UIElement Windows.UI.Xaml.DataTemplate::GetElement(Windows.UI.Xaml.ElementFactoryGetArgs)
    def get_element(self, args: ElementFactoryGetArgs, /) -> UIElement: ...
    @typing.final
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.DataTemplate::LoadContent()
    def load_content(self) -> DependencyObject: ...
    # System.Void Windows.UI.Xaml.DataTemplate::RecycleElement(Windows.UI.Xaml.ElementFactoryRecycleArgs)
    def recycle_element(self, args: ElementFactoryRecycleArgs, /) -> None: ...

class DataTemplateKey_Static(winrt._winrt.IInspectable_Static):
    pass

class DataTemplateKey(winrt.system.Object, metaclass=DataTemplateKey_Static):
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], data_type: winrt.system.Object) -> Self: ...
    # System.Object Windows.UI.Xaml.DataTemplateKey::get_DataType()
    @_property
    def data_type(self) -> winrt.system.Object: ...
    # System.Void Windows.UI.Xaml.DataTemplateKey::put_DataType(System.Object)
    @data_type.setter
    @typing.final
    def data_type(self, value: winrt.system.Object) -> None: ...

@typing.final
class DebugSettings(winrt.system.Object):
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.DebugSettings::add_BindingFailed(Windows.UI.Xaml.BindingFailedEventHandler)
    def add_binding_failed(self, handler: BindingFailedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.UI.Xaml.DebugSettings::remove_BindingFailed(Windows.Foundation.EventRegistrationToken)
    def remove_binding_failed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Boolean Windows.UI.Xaml.DebugSettings::get_IsOverdrawHeatMapEnabled()
    @_property
    def is_overdraw_heat_map_enabled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.DebugSettings::put_IsOverdrawHeatMapEnabled(System.Boolean)
    @is_overdraw_heat_map_enabled.setter
    def is_overdraw_heat_map_enabled(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.DebugSettings::get_IsBindingTracingEnabled()
    @_property
    def is_binding_tracing_enabled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.DebugSettings::put_IsBindingTracingEnabled(System.Boolean)
    @is_binding_tracing_enabled.setter
    def is_binding_tracing_enabled(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.DebugSettings::get_EnableFrameRateCounter()
    @_property
    def enable_frame_rate_counter(self) -> bool: ...
    # System.Void Windows.UI.Xaml.DebugSettings::put_EnableFrameRateCounter(System.Boolean)
    @enable_frame_rate_counter.setter
    def enable_frame_rate_counter(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.DebugSettings::get_EnableRedrawRegions()
    @_property
    def enable_redraw_regions(self) -> bool: ...
    # System.Void Windows.UI.Xaml.DebugSettings::put_EnableRedrawRegions(System.Boolean)
    @enable_redraw_regions.setter
    def enable_redraw_regions(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.DebugSettings::get_IsTextPerformanceVisualizationEnabled()
    @_property
    def is_text_performance_visualization_enabled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.DebugSettings::put_IsTextPerformanceVisualizationEnabled(System.Boolean)
    @is_text_performance_visualization_enabled.setter
    def is_text_performance_visualization_enabled(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.DebugSettings::get_FailFastOnErrors()
    @_property
    def fail_fast_on_errors(self) -> bool: ...
    # System.Void Windows.UI.Xaml.DebugSettings::put_FailFastOnErrors(System.Boolean)
    @fail_fast_on_errors.setter
    def fail_fast_on_errors(self, value: bool) -> None: ...

class DependencyObject_Static(winrt._winrt.IInspectable_Static):
    pass

class DependencyObject(winrt.system.Object, metaclass=DependencyObject_Static):
    @typing.final
    # System.Void Windows.UI.Xaml.DependencyObject::ClearValue(Windows.UI.Xaml.DependencyProperty)
    def clear_value(self, dp: DependencyProperty, /) -> None: ...
    @typing.final
    # System.Object Windows.UI.Xaml.DependencyObject::GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)
    def get_animation_base_value(self, dp: DependencyProperty, /) -> winrt.system.Object: ...
    @typing.final
    # System.Object Windows.UI.Xaml.DependencyObject::GetValue(Windows.UI.Xaml.DependencyProperty)
    def get_value(self, dp: DependencyProperty, /) -> winrt.system.Object: ...
    @typing.final
    # System.Object Windows.UI.Xaml.DependencyObject::ReadLocalValue(Windows.UI.Xaml.DependencyProperty)
    def read_local_value(self, dp: DependencyProperty, /) -> winrt.system.Object: ...
    @typing.final
    # System.Int64 Windows.UI.Xaml.DependencyObject::RegisterPropertyChangedCallback(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.DependencyPropertyChangedCallback)
    def register_property_changed_callback(self, dp: DependencyProperty, callback: DependencyPropertyChangedCallback, /) -> winrt.system.Int64: ...
    @typing.final
    # System.Void Windows.UI.Xaml.DependencyObject::SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)
    def set_value(self, dp: DependencyProperty, value: winrt.system.Object, /) -> None: ...
    @typing.final
    # System.Void Windows.UI.Xaml.DependencyObject::UnregisterPropertyChangedCallback(Windows.UI.Xaml.DependencyProperty,System.Int64)
    def unregister_property_changed_callback(self, dp: DependencyProperty, token: winrt.system.Int64, /) -> None: ...
    # Windows.UI.Core.CoreDispatcher Windows.UI.Xaml.DependencyObject::get_Dispatcher()
    @_property
    @typing.final
    def dispatcher(self) -> windows_ui_core.CoreDispatcher: ...

class DependencyObjectCollection_Static(DependencyObject_Static):
    pass

class DependencyObjectCollection(DependencyObject, windows_foundation_collections.IObservableVector[DependencyObject], winrt._winrt.MutableSequence[DependencyObject], metaclass=DependencyObjectCollection_Static):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[DependencyObject]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> DependencyObject: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[DependencyObject]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: DependencyObject) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[DependencyObject]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.DependencyObjectCollection::Append(Windows.UI.Xaml.DependencyObject)
    def append(self, value: DependencyObject, /) -> None: ...
    # System.Void Windows.UI.Xaml.DependencyObjectCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.DependencyObject> Windows.UI.Xaml.DependencyObjectCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[DependencyObject]: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.DependencyObjectCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> DependencyObject: ...
    # System.UInt32 Windows.UI.Xaml.DependencyObjectCollection::GetMany(System.UInt32,Windows.UI.Xaml.DependencyObject[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[DependencyObject], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.DependencyObject> Windows.UI.Xaml.DependencyObjectCollection::GetView()
    def get_view(self) -> typing.Sequence[DependencyObject]: ...
    # System.Boolean Windows.UI.Xaml.DependencyObjectCollection::IndexOf(Windows.UI.Xaml.DependencyObject,System.UInt32&)
    def index_of(self, value: DependencyObject, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.UI.Xaml.DependencyObjectCollection::InsertAt(System.UInt32,Windows.UI.Xaml.DependencyObject)
    def insert_at(self, index: winrt.system.UInt32, value: DependencyObject, /) -> None: ...
    # System.Void Windows.UI.Xaml.DependencyObjectCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.UI.Xaml.DependencyObjectCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.UI.Xaml.DependencyObjectCollection::ReplaceAll(Windows.UI.Xaml.DependencyObject[])
    def replace_all(self, items: typing.Union[winrt.system.Array[DependencyObject], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.UI.Xaml.DependencyObjectCollection::SetAt(System.UInt32,Windows.UI.Xaml.DependencyObject)
    def set_at(self, index: winrt.system.UInt32, value: DependencyObject, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.DependencyObjectCollection::add_VectorChanged(Windows.Foundation.Collections.VectorChangedEventHandler`1<Windows.UI.Xaml.DependencyObject>)
    def add_vector_changed(self, vhnd: windows_foundation_collections.VectorChangedEventHandler[DependencyObject], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.DependencyObjectCollection::remove_VectorChanged(Windows.Foundation.EventRegistrationToken)
    def remove_vector_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.UInt32 Windows.UI.Xaml.DependencyObjectCollection::get_Size()
    @_property
    @typing.final
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class DependencyProperty_Static(winrt._winrt.IInspectable_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.DependencyProperty::Register(System.String,Windows.UI.Xaml.Interop.TypeName,Windows.UI.Xaml.Interop.TypeName,Windows.UI.Xaml.PropertyMetadata)
    def register(cls, name: str, property_type: windows_ui_xaml_interop.TypeName, owner_type: windows_ui_xaml_interop.TypeName, type_metadata: PropertyMetadata, /) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.DependencyProperty::RegisterAttached(System.String,Windows.UI.Xaml.Interop.TypeName,Windows.UI.Xaml.Interop.TypeName,Windows.UI.Xaml.PropertyMetadata)
    def register_attached(cls, name: str, property_type: windows_ui_xaml_interop.TypeName, owner_type: windows_ui_xaml_interop.TypeName, default_metadata: PropertyMetadata, /) -> DependencyProperty: ...
    # System.Object Windows.UI.Xaml.DependencyProperty::get_UnsetValue()
    @_property
    def unset_value(cls) -> winrt.system.Object: ...

@typing.final
class DependencyProperty(winrt.system.Object, metaclass=DependencyProperty_Static):
    # Windows.UI.Xaml.PropertyMetadata Windows.UI.Xaml.DependencyProperty::GetMetadata(Windows.UI.Xaml.Interop.TypeName)
    def get_metadata(self, for_type: windows_ui_xaml_interop.TypeName, /) -> PropertyMetadata: ...

@typing.final
class DependencyPropertyChangedEventArgs(winrt.system.Object):
    # System.Object Windows.UI.Xaml.DependencyPropertyChangedEventArgs::get_NewValue()
    @_property
    def new_value(self) -> winrt.system.Object: ...
    # System.Object Windows.UI.Xaml.DependencyPropertyChangedEventArgs::get_OldValue()
    @_property
    def old_value(self) -> winrt.system.Object: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.DependencyPropertyChangedEventArgs::get_Property()
    @_property
    def property(self) -> DependencyProperty: ...

class DispatcherTimer_Static(winrt._winrt.IInspectable_Static):
    pass

class DispatcherTimer(winrt.system.Object, metaclass=DispatcherTimer_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    @typing.final
    # System.Void Windows.UI.Xaml.DispatcherTimer::Start()
    def start(self) -> None: ...
    @typing.final
    # System.Void Windows.UI.Xaml.DispatcherTimer::Stop()
    def stop(self) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.DispatcherTimer::add_Tick(Windows.Foundation.EventHandler`1<System.Object>)
    def add_tick(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.DispatcherTimer::remove_Tick(Windows.Foundation.EventRegistrationToken)
    def remove_tick(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.TimeSpan Windows.UI.Xaml.DispatcherTimer::get_Interval()
    @_property
    def interval(self) -> datetime.timedelta: ...
    # System.Void Windows.UI.Xaml.DispatcherTimer::put_Interval(Windows.Foundation.TimeSpan)
    @interval.setter
    @typing.final
    def interval(self, value: datetime.timedelta) -> None: ...
    # System.Boolean Windows.UI.Xaml.DispatcherTimer::get_IsEnabled()
    @_property
    @typing.final
    def is_enabled(self) -> bool: ...

@typing.final
class DragEventArgs(RoutedEventArgs):
    # Windows.UI.Xaml.DragOperationDeferral Windows.UI.Xaml.DragEventArgs::GetDeferral()
    def get_deferral(self) -> DragOperationDeferral: ...
    # Windows.Foundation.Point Windows.UI.Xaml.DragEventArgs::GetPosition(Windows.UI.Xaml.UIElement)
    def get_position(self, relative_to: UIElement, /) -> windows_foundation.Point: ...
    # System.Boolean Windows.UI.Xaml.DragEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.DragEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...
    # Windows.ApplicationModel.DataTransfer.DataPackage Windows.UI.Xaml.DragEventArgs::get_Data()
    @_property
    def data(self) -> windows_applicationmodel_datatransfer.DataPackage: ...
    # System.Void Windows.UI.Xaml.DragEventArgs::put_Data(Windows.ApplicationModel.DataTransfer.DataPackage)
    @data.setter
    def data(self, value: windows_applicationmodel_datatransfer.DataPackage) -> None: ...
    # Windows.ApplicationModel.DataTransfer.DataPackageOperation Windows.UI.Xaml.DragEventArgs::get_AcceptedOperation()
    @_property
    def accepted_operation(self) -> windows_applicationmodel_datatransfer.DataPackageOperation: ...
    # System.Void Windows.UI.Xaml.DragEventArgs::put_AcceptedOperation(Windows.ApplicationModel.DataTransfer.DataPackageOperation)
    @accepted_operation.setter
    def accepted_operation(self, value: windows_applicationmodel_datatransfer.DataPackageOperation) -> None: ...
    # Windows.ApplicationModel.DataTransfer.DataPackageView Windows.UI.Xaml.DragEventArgs::get_DataView()
    @_property
    def data_view(self) -> windows_applicationmodel_datatransfer.DataPackageView: ...
    # Windows.UI.Xaml.DragUIOverride Windows.UI.Xaml.DragEventArgs::get_DragUIOverride()
    @_property
    def drag_ui_override(self) -> DragUIOverride: ...
    # Windows.ApplicationModel.DataTransfer.DragDrop.DragDropModifiers Windows.UI.Xaml.DragEventArgs::get_Modifiers()
    @_property
    def modifiers(self) -> windows_applicationmodel_datatransfer_dragdrop.DragDropModifiers: ...
    # Windows.ApplicationModel.DataTransfer.DataPackageOperation Windows.UI.Xaml.DragEventArgs::get_AllowedOperations()
    @_property
    def allowed_operations(self) -> windows_applicationmodel_datatransfer.DataPackageOperation: ...

@typing.final
class DragOperationDeferral(winrt.system.Object):
    # System.Void Windows.UI.Xaml.DragOperationDeferral::Complete()
    def complete(self) -> None: ...

@typing.final
class DragStartingEventArgs(RoutedEventArgs):
    # Windows.UI.Xaml.DragOperationDeferral Windows.UI.Xaml.DragStartingEventArgs::GetDeferral()
    def get_deferral(self) -> DragOperationDeferral: ...
    # Windows.Foundation.Point Windows.UI.Xaml.DragStartingEventArgs::GetPosition(Windows.UI.Xaml.UIElement)
    def get_position(self, relative_to: UIElement, /) -> windows_foundation.Point: ...
    # System.Boolean Windows.UI.Xaml.DragStartingEventArgs::get_Cancel()
    @_property
    def cancel(self) -> bool: ...
    # System.Void Windows.UI.Xaml.DragStartingEventArgs::put_Cancel(System.Boolean)
    @cancel.setter
    def cancel(self, value: bool) -> None: ...
    # Windows.ApplicationModel.DataTransfer.DataPackage Windows.UI.Xaml.DragStartingEventArgs::get_Data()
    @_property
    def data(self) -> windows_applicationmodel_datatransfer.DataPackage: ...
    # Windows.UI.Xaml.DragUI Windows.UI.Xaml.DragStartingEventArgs::get_DragUI()
    @_property
    def drag_ui(self) -> DragUI: ...
    # Windows.ApplicationModel.DataTransfer.DataPackageOperation Windows.UI.Xaml.DragStartingEventArgs::get_AllowedOperations()
    @_property
    def allowed_operations(self) -> windows_applicationmodel_datatransfer.DataPackageOperation: ...
    # System.Void Windows.UI.Xaml.DragStartingEventArgs::put_AllowedOperations(Windows.ApplicationModel.DataTransfer.DataPackageOperation)
    @allowed_operations.setter
    def allowed_operations(self, value: windows_applicationmodel_datatransfer.DataPackageOperation) -> None: ...

@typing.final
class DragUI(winrt.system.Object):
    # System.Void Windows.UI.Xaml.DragUI::SetContentFromBitmapImage(Windows.UI.Xaml.Media.Imaging.BitmapImage)
    def set_content_from_bitmap_image(self, bitmap_image: windows_ui_xaml_media_imaging.BitmapImage, /) -> None: ...
    # System.Void Windows.UI.Xaml.DragUI::SetContentFromBitmapImage(Windows.UI.Xaml.Media.Imaging.BitmapImage,Windows.Foundation.Point)
    def set_content_from_bitmap_image_with_anchor_point(self, bitmap_image: windows_ui_xaml_media_imaging.BitmapImage, anchor_point: windows_foundation.Point, /) -> None: ...
    # System.Void Windows.UI.Xaml.DragUI::SetContentFromDataPackage()
    def set_content_from_data_package(self) -> None: ...
    # System.Void Windows.UI.Xaml.DragUI::SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap)
    def set_content_from_software_bitmap(self, software_bitmap: windows_graphics_imaging.SoftwareBitmap, /) -> None: ...
    # System.Void Windows.UI.Xaml.DragUI::SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap,Windows.Foundation.Point)
    def set_content_from_software_bitmap_with_anchor_point(self, software_bitmap: windows_graphics_imaging.SoftwareBitmap, anchor_point: windows_foundation.Point, /) -> None: ...

@typing.final
class DragUIOverride(winrt.system.Object):
    # System.Void Windows.UI.Xaml.DragUIOverride::Clear()
    def clear(self) -> None: ...
    # System.Void Windows.UI.Xaml.DragUIOverride::SetContentFromBitmapImage(Windows.UI.Xaml.Media.Imaging.BitmapImage)
    def set_content_from_bitmap_image(self, bitmap_image: windows_ui_xaml_media_imaging.BitmapImage, /) -> None: ...
    # System.Void Windows.UI.Xaml.DragUIOverride::SetContentFromBitmapImage(Windows.UI.Xaml.Media.Imaging.BitmapImage,Windows.Foundation.Point)
    def set_content_from_bitmap_image_with_anchor_point(self, bitmap_image: windows_ui_xaml_media_imaging.BitmapImage, anchor_point: windows_foundation.Point, /) -> None: ...
    # System.Void Windows.UI.Xaml.DragUIOverride::SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap)
    def set_content_from_software_bitmap(self, software_bitmap: windows_graphics_imaging.SoftwareBitmap, /) -> None: ...
    # System.Void Windows.UI.Xaml.DragUIOverride::SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap,Windows.Foundation.Point)
    def set_content_from_software_bitmap_with_anchor_point(self, software_bitmap: windows_graphics_imaging.SoftwareBitmap, anchor_point: windows_foundation.Point, /) -> None: ...
    # System.Boolean Windows.UI.Xaml.DragUIOverride::get_IsGlyphVisible()
    @_property
    def is_glyph_visible(self) -> bool: ...
    # System.Void Windows.UI.Xaml.DragUIOverride::put_IsGlyphVisible(System.Boolean)
    @is_glyph_visible.setter
    def is_glyph_visible(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.DragUIOverride::get_IsContentVisible()
    @_property
    def is_content_visible(self) -> bool: ...
    # System.Void Windows.UI.Xaml.DragUIOverride::put_IsContentVisible(System.Boolean)
    @is_content_visible.setter
    def is_content_visible(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.DragUIOverride::get_IsCaptionVisible()
    @_property
    def is_caption_visible(self) -> bool: ...
    # System.Void Windows.UI.Xaml.DragUIOverride::put_IsCaptionVisible(System.Boolean)
    @is_caption_visible.setter
    def is_caption_visible(self, value: bool) -> None: ...
    # System.String Windows.UI.Xaml.DragUIOverride::get_Caption()
    @_property
    def caption(self) -> str: ...
    # System.Void Windows.UI.Xaml.DragUIOverride::put_Caption(System.String)
    @caption.setter
    def caption(self, value: str) -> None: ...

@typing.final
class DropCompletedEventArgs(RoutedEventArgs):
    # Windows.ApplicationModel.DataTransfer.DataPackageOperation Windows.UI.Xaml.DropCompletedEventArgs::get_DropResult()
    @_property
    def drop_result(self) -> windows_applicationmodel_datatransfer.DataPackageOperation: ...

@typing.final
class DurationHelper_Static(winrt._winrt.IInspectable_Static):
    # Windows.UI.Xaml.Duration Windows.UI.Xaml.DurationHelper::Add(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
    def add(cls, target: Duration, duration: Duration, /) -> Duration: ...
    # System.Int32 Windows.UI.Xaml.DurationHelper::Compare(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
    def compare(cls, duration1: Duration, duration2: Duration, /) -> winrt.system.Int32: ...
    # System.Boolean Windows.UI.Xaml.DurationHelper::Equals(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
    def equals(cls, target: Duration, value: Duration, /) -> bool: ...
    # Windows.UI.Xaml.Duration Windows.UI.Xaml.DurationHelper::FromTimeSpan(Windows.Foundation.TimeSpan)
    def from_time_span(cls, time_span: datetime.timedelta, /) -> Duration: ...
    # System.Boolean Windows.UI.Xaml.DurationHelper::GetHasTimeSpan(Windows.UI.Xaml.Duration)
    def get_has_time_span(cls, target: Duration, /) -> bool: ...
    # Windows.UI.Xaml.Duration Windows.UI.Xaml.DurationHelper::Subtract(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
    def subtract(cls, target: Duration, duration: Duration, /) -> Duration: ...
    # Windows.UI.Xaml.Duration Windows.UI.Xaml.DurationHelper::get_Automatic()
    @_property
    def automatic(cls) -> Duration: ...
    # Windows.UI.Xaml.Duration Windows.UI.Xaml.DurationHelper::get_Forever()
    @_property
    def forever(cls) -> Duration: ...

@typing.final
class DurationHelper(winrt.system.Object, metaclass=DurationHelper_Static):
    pass

@typing.final
class EffectiveViewportChangedEventArgs(winrt.system.Object):
    # System.Double Windows.UI.Xaml.EffectiveViewportChangedEventArgs::get_BringIntoViewDistanceX()
    @_property
    def bring_into_view_distance_x(self) -> winrt.system.Double: ...
    # System.Double Windows.UI.Xaml.EffectiveViewportChangedEventArgs::get_BringIntoViewDistanceY()
    @_property
    def bring_into_view_distance_y(self) -> winrt.system.Double: ...
    # Windows.Foundation.Rect Windows.UI.Xaml.EffectiveViewportChangedEventArgs::get_EffectiveViewport()
    @_property
    def effective_viewport(self) -> windows_foundation.Rect: ...
    # Windows.Foundation.Rect Windows.UI.Xaml.EffectiveViewportChangedEventArgs::get_MaxViewport()
    @_property
    def max_viewport(self) -> windows_foundation.Rect: ...

class ElementFactoryGetArgs_Static(winrt._winrt.IInspectable_Static):
    pass

class ElementFactoryGetArgs(winrt.system.Object, metaclass=ElementFactoryGetArgs_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.UIElement Windows.UI.Xaml.ElementFactoryGetArgs::get_Parent()
    @_property
    def parent(self) -> UIElement: ...
    # System.Void Windows.UI.Xaml.ElementFactoryGetArgs::put_Parent(Windows.UI.Xaml.UIElement)
    @parent.setter
    @typing.final
    def parent(self, value: UIElement) -> None: ...
    # System.Object Windows.UI.Xaml.ElementFactoryGetArgs::get_Data()
    @_property
    def data(self) -> winrt.system.Object: ...
    # System.Void Windows.UI.Xaml.ElementFactoryGetArgs::put_Data(System.Object)
    @data.setter
    @typing.final
    def data(self, value: winrt.system.Object) -> None: ...

class ElementFactoryRecycleArgs_Static(winrt._winrt.IInspectable_Static):
    pass

class ElementFactoryRecycleArgs(winrt.system.Object, metaclass=ElementFactoryRecycleArgs_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.UIElement Windows.UI.Xaml.ElementFactoryRecycleArgs::get_Parent()
    @_property
    def parent(self) -> UIElement: ...
    # System.Void Windows.UI.Xaml.ElementFactoryRecycleArgs::put_Parent(Windows.UI.Xaml.UIElement)
    @parent.setter
    @typing.final
    def parent(self, value: UIElement) -> None: ...
    # Windows.UI.Xaml.UIElement Windows.UI.Xaml.ElementFactoryRecycleArgs::get_Element()
    @_property
    def element(self) -> UIElement: ...
    # System.Void Windows.UI.Xaml.ElementFactoryRecycleArgs::put_Element(Windows.UI.Xaml.UIElement)
    @element.setter
    @typing.final
    def element(self, value: UIElement) -> None: ...

@typing.final
class ElementSoundPlayer_Static(winrt._winrt.IInspectable_Static):
    # System.Void Windows.UI.Xaml.ElementSoundPlayer::Play(Windows.UI.Xaml.ElementSoundKind)
    def play(cls, sound: ElementSoundKind, /) -> None: ...
    # System.Double Windows.UI.Xaml.ElementSoundPlayer::get_Volume()
    @_property
    def volume(cls) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.ElementSoundPlayer::put_Volume(System.Double)
    @volume.setter
    def volume(cls, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.ElementSoundPlayerState Windows.UI.Xaml.ElementSoundPlayer::get_State()
    @_property
    def state(cls) -> ElementSoundPlayerState: ...
    # System.Void Windows.UI.Xaml.ElementSoundPlayer::put_State(Windows.UI.Xaml.ElementSoundPlayerState)
    @state.setter
    def state(cls, value: ElementSoundPlayerState) -> None: ...
    # Windows.UI.Xaml.ElementSpatialAudioMode Windows.UI.Xaml.ElementSoundPlayer::get_SpatialAudioMode()
    @_property
    def spatial_audio_mode(cls) -> ElementSpatialAudioMode: ...
    # System.Void Windows.UI.Xaml.ElementSoundPlayer::put_SpatialAudioMode(Windows.UI.Xaml.ElementSpatialAudioMode)
    @spatial_audio_mode.setter
    def spatial_audio_mode(cls, value: ElementSpatialAudioMode) -> None: ...

@typing.final
class ElementSoundPlayer(winrt.system.Object, metaclass=ElementSoundPlayer_Static):
    pass

@typing.final
class EventTrigger(TriggerBase):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.EventTrigger::get_RoutedEvent()
    @_property
    def routed_event(self) -> RoutedEvent: ...
    # System.Void Windows.UI.Xaml.EventTrigger::put_RoutedEvent(Windows.UI.Xaml.RoutedEvent)
    @routed_event.setter
    def routed_event(self, value: RoutedEvent) -> None: ...
    # Windows.UI.Xaml.TriggerActionCollection Windows.UI.Xaml.EventTrigger::get_Actions()
    @_property
    def actions(self) -> TriggerActionCollection: ...

class ExceptionRoutedEventArgs_Static(RoutedEventArgs_Static):
    pass

class ExceptionRoutedEventArgs(RoutedEventArgs, metaclass=ExceptionRoutedEventArgs_Static):
    # System.String Windows.UI.Xaml.ExceptionRoutedEventArgs::get_ErrorMessage()
    @_property
    @typing.final
    def error_message(self) -> str: ...

class FrameworkElement_Static(UIElement_Static):
    # System.Void Windows.UI.Xaml.FrameworkElement::DeferTree(Windows.UI.Xaml.DependencyObject)
    def defer_tree(cls, element: DependencyObject, /) -> None: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_ActualHeightProperty()
    @_property
    @typing.final
    def actual_height_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_ActualWidthProperty()
    @_property
    @typing.final
    def actual_width_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_DataContextProperty()
    @_property
    @typing.final
    def data_context_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_FlowDirectionProperty()
    @_property
    @typing.final
    def flow_direction_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_HeightProperty()
    @_property
    @typing.final
    def height_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_HorizontalAlignmentProperty()
    @_property
    @typing.final
    def horizontal_alignment_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_LanguageProperty()
    @_property
    @typing.final
    def language_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_MarginProperty()
    @_property
    @typing.final
    def margin_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_MaxHeightProperty()
    @_property
    @typing.final
    def max_height_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_MaxWidthProperty()
    @_property
    @typing.final
    def max_width_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_MinHeightProperty()
    @_property
    @typing.final
    def min_height_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_MinWidthProperty()
    @_property
    @typing.final
    def min_width_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_NameProperty()
    @_property
    @typing.final
    def name_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_StyleProperty()
    @_property
    @typing.final
    def style_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_TagProperty()
    @_property
    @typing.final
    def tag_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_VerticalAlignmentProperty()
    @_property
    @typing.final
    def vertical_alignment_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_WidthProperty()
    @_property
    @typing.final
    def width_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_RequestedThemeProperty()
    @_property
    @typing.final
    def requested_theme_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_AllowFocusOnInteractionProperty()
    @_property
    @typing.final
    def allow_focus_on_interaction_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_AllowFocusWhenDisabledProperty()
    @_property
    @typing.final
    def allow_focus_when_disabled_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_FocusVisualMarginProperty()
    @_property
    @typing.final
    def focus_visual_margin_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_FocusVisualPrimaryBrushProperty()
    @_property
    @typing.final
    def focus_visual_primary_brush_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_FocusVisualPrimaryThicknessProperty()
    @_property
    @typing.final
    def focus_visual_primary_thickness_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_FocusVisualSecondaryBrushProperty()
    @_property
    @typing.final
    def focus_visual_secondary_brush_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_FocusVisualSecondaryThicknessProperty()
    @_property
    @typing.final
    def focus_visual_secondary_thickness_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.FrameworkElement::get_ActualThemeProperty()
    @_property
    @typing.final
    def actual_theme_property(cls) -> DependencyProperty: ...

class FrameworkElement(UIElement, metaclass=FrameworkElement_Static):
    # Windows.Foundation.Size Windows.UI.Xaml.FrameworkElement::ArrangeOverride(Windows.Foundation.Size)
    def _arrange_override(self, final_size: windows_foundation.Size, /) -> windows_foundation.Size: ...
    @typing.final
    # System.Object Windows.UI.Xaml.FrameworkElement::FindName(System.String)
    def find_name(self, name: str, /) -> winrt.system.Object: ...
    @typing.final
    # Windows.UI.Xaml.Data.BindingExpression Windows.UI.Xaml.FrameworkElement::GetBindingExpression(Windows.UI.Xaml.DependencyProperty)
    def get_binding_expression(self, dp: DependencyProperty, /) -> windows_ui_xaml_data.BindingExpression: ...
    # System.Boolean Windows.UI.Xaml.FrameworkElement::GoToElementStateCore(System.String,System.Boolean)
    def _go_to_element_state_core(self, state_name: str, use_transitions: bool, /) -> bool: ...
    @typing.final
    # System.Void Windows.UI.Xaml.FrameworkElement::InvalidateViewport()
    def _invalidate_viewport(self) -> None: ...
    # Windows.Foundation.Size Windows.UI.Xaml.FrameworkElement::MeasureOverride(Windows.Foundation.Size)
    def _measure_override(self, available_size: windows_foundation.Size, /) -> windows_foundation.Size: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::OnApplyTemplate()
    def _on_apply_template(self) -> None: ...
    @typing.final
    # System.Void Windows.UI.Xaml.FrameworkElement::SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)
    def set_binding(self, dp: DependencyProperty, binding: windows_ui_xaml_data.BindingBase, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.FrameworkElement::add_LayoutUpdated(Windows.Foundation.EventHandler`1<System.Object>)
    def add_layout_updated(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.FrameworkElement::remove_LayoutUpdated(Windows.Foundation.EventRegistrationToken)
    def remove_layout_updated(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.FrameworkElement::add_Loaded(Windows.UI.Xaml.RoutedEventHandler)
    def add_loaded(self, handler: RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.FrameworkElement::remove_Loaded(Windows.Foundation.EventRegistrationToken)
    def remove_loaded(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.FrameworkElement::add_SizeChanged(Windows.UI.Xaml.SizeChangedEventHandler)
    def add_size_changed(self, handler: SizeChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.FrameworkElement::remove_SizeChanged(Windows.Foundation.EventRegistrationToken)
    def remove_size_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.FrameworkElement::add_Unloaded(Windows.UI.Xaml.RoutedEventHandler)
    def add_unloaded(self, handler: RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.FrameworkElement::remove_Unloaded(Windows.Foundation.EventRegistrationToken)
    def remove_unloaded(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.FrameworkElement::add_DataContextChanged(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.DataContextChangedEventArgs>)
    def add_data_context_changed(self, handler: windows_foundation.TypedEventHandler[FrameworkElement, DataContextChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.FrameworkElement::remove_DataContextChanged(Windows.Foundation.EventRegistrationToken)
    def remove_data_context_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.FrameworkElement::add_Loading(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.FrameworkElement,System.Object>)
    def add_loading(self, handler: windows_foundation.TypedEventHandler[FrameworkElement, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.FrameworkElement::remove_Loading(Windows.Foundation.EventRegistrationToken)
    def remove_loading(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.FrameworkElement::add_ActualThemeChanged(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.FrameworkElement,System.Object>)
    def add_actual_theme_changed(self, handler: windows_foundation.TypedEventHandler[FrameworkElement, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.FrameworkElement::remove_ActualThemeChanged(Windows.Foundation.EventRegistrationToken)
    def remove_actual_theme_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.FrameworkElement::add_EffectiveViewportChanged(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.EffectiveViewportChangedEventArgs>)
    def add_effective_viewport_changed(self, handler: windows_foundation.TypedEventHandler[FrameworkElement, EffectiveViewportChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.FrameworkElement::remove_EffectiveViewportChanged(Windows.Foundation.EventRegistrationToken)
    def remove_effective_viewport_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # System.Double Windows.UI.Xaml.FrameworkElement::get_Width()
    @_property
    def width(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_Width(System.Double)
    @width.setter
    @typing.final
    def width(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.VerticalAlignment Windows.UI.Xaml.FrameworkElement::get_VerticalAlignment()
    @_property
    def vertical_alignment(self) -> VerticalAlignment: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_VerticalAlignment(Windows.UI.Xaml.VerticalAlignment)
    @vertical_alignment.setter
    @typing.final
    def vertical_alignment(self, value: VerticalAlignment) -> None: ...
    # System.Object Windows.UI.Xaml.FrameworkElement::get_Tag()
    @_property
    def tag(self) -> winrt.system.Object: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_Tag(System.Object)
    @tag.setter
    @typing.final
    def tag(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.Style Windows.UI.Xaml.FrameworkElement::get_Style()
    @_property
    def style(self) -> Style: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_Style(Windows.UI.Xaml.Style)
    @style.setter
    @typing.final
    def style(self, value: Style) -> None: ...
    # Windows.UI.Xaml.ResourceDictionary Windows.UI.Xaml.FrameworkElement::get_Resources()
    @_property
    def resources(self) -> ResourceDictionary: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_Resources(Windows.UI.Xaml.ResourceDictionary)
    @resources.setter
    @typing.final
    def resources(self, value: ResourceDictionary) -> None: ...
    # System.String Windows.UI.Xaml.FrameworkElement::get_Name()
    @_property
    def name(self) -> str: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_Name(System.String)
    @name.setter
    @typing.final
    def name(self, value: str) -> None: ...
    # System.Double Windows.UI.Xaml.FrameworkElement::get_MinWidth()
    @_property
    def min_width(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_MinWidth(System.Double)
    @min_width.setter
    @typing.final
    def min_width(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.FrameworkElement::get_MinHeight()
    @_property
    def min_height(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_MinHeight(System.Double)
    @min_height.setter
    @typing.final
    def min_height(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.FrameworkElement::get_MaxWidth()
    @_property
    def max_width(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_MaxWidth(System.Double)
    @max_width.setter
    @typing.final
    def max_width(self, value: winrt.system.Double) -> None: ...
    # System.Double Windows.UI.Xaml.FrameworkElement::get_MaxHeight()
    @_property
    def max_height(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_MaxHeight(System.Double)
    @max_height.setter
    @typing.final
    def max_height(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Thickness Windows.UI.Xaml.FrameworkElement::get_Margin()
    @_property
    def margin(self) -> Thickness: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_Margin(Windows.UI.Xaml.Thickness)
    @margin.setter
    @typing.final
    def margin(self, value: Thickness) -> None: ...
    # System.String Windows.UI.Xaml.FrameworkElement::get_Language()
    @_property
    def language(self) -> str: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_Language(System.String)
    @language.setter
    @typing.final
    def language(self, value: str) -> None: ...
    # Windows.UI.Xaml.HorizontalAlignment Windows.UI.Xaml.FrameworkElement::get_HorizontalAlignment()
    @_property
    def horizontal_alignment(self) -> HorizontalAlignment: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_HorizontalAlignment(Windows.UI.Xaml.HorizontalAlignment)
    @horizontal_alignment.setter
    @typing.final
    def horizontal_alignment(self, value: HorizontalAlignment) -> None: ...
    # System.Double Windows.UI.Xaml.FrameworkElement::get_Height()
    @_property
    def height(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_Height(System.Double)
    @height.setter
    @typing.final
    def height(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.FlowDirection Windows.UI.Xaml.FrameworkElement::get_FlowDirection()
    @_property
    def flow_direction(self) -> FlowDirection: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_FlowDirection(Windows.UI.Xaml.FlowDirection)
    @flow_direction.setter
    @typing.final
    def flow_direction(self, value: FlowDirection) -> None: ...
    # System.Object Windows.UI.Xaml.FrameworkElement::get_DataContext()
    @_property
    def data_context(self) -> winrt.system.Object: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_DataContext(System.Object)
    @data_context.setter
    @typing.final
    def data_context(self, value: winrt.system.Object) -> None: ...
    # System.Double Windows.UI.Xaml.FrameworkElement::get_ActualHeight()
    @_property
    @typing.final
    def actual_height(self) -> winrt.system.Double: ...
    # System.Double Windows.UI.Xaml.FrameworkElement::get_ActualWidth()
    @_property
    @typing.final
    def actual_width(self) -> winrt.system.Double: ...
    # Windows.Foundation.Uri Windows.UI.Xaml.FrameworkElement::get_BaseUri()
    @_property
    @typing.final
    def base_uri(self) -> windows_foundation.Uri: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.FrameworkElement::get_Parent()
    @_property
    @typing.final
    def parent(self) -> DependencyObject: ...
    # Windows.UI.Xaml.TriggerCollection Windows.UI.Xaml.FrameworkElement::get_Triggers()
    @_property
    @typing.final
    def triggers(self) -> TriggerCollection: ...
    # Windows.UI.Xaml.ElementTheme Windows.UI.Xaml.FrameworkElement::get_RequestedTheme()
    @_property
    def requested_theme(self) -> ElementTheme: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_RequestedTheme(Windows.UI.Xaml.ElementTheme)
    @requested_theme.setter
    @typing.final
    def requested_theme(self, value: ElementTheme) -> None: ...
    # Windows.UI.Xaml.Thickness Windows.UI.Xaml.FrameworkElement::get_FocusVisualSecondaryThickness()
    @_property
    def focus_visual_secondary_thickness(self) -> Thickness: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_FocusVisualSecondaryThickness(Windows.UI.Xaml.Thickness)
    @focus_visual_secondary_thickness.setter
    @typing.final
    def focus_visual_secondary_thickness(self, value: Thickness) -> None: ...
    # Windows.UI.Xaml.Media.Brush Windows.UI.Xaml.FrameworkElement::get_FocusVisualSecondaryBrush()
    @_property
    def focus_visual_secondary_brush(self) -> windows_ui_xaml_media.Brush: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_FocusVisualSecondaryBrush(Windows.UI.Xaml.Media.Brush)
    @focus_visual_secondary_brush.setter
    @typing.final
    def focus_visual_secondary_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    # Windows.UI.Xaml.Thickness Windows.UI.Xaml.FrameworkElement::get_FocusVisualPrimaryThickness()
    @_property
    def focus_visual_primary_thickness(self) -> Thickness: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_FocusVisualPrimaryThickness(Windows.UI.Xaml.Thickness)
    @focus_visual_primary_thickness.setter
    @typing.final
    def focus_visual_primary_thickness(self, value: Thickness) -> None: ...
    # Windows.UI.Xaml.Media.Brush Windows.UI.Xaml.FrameworkElement::get_FocusVisualPrimaryBrush()
    @_property
    def focus_visual_primary_brush(self) -> windows_ui_xaml_media.Brush: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_FocusVisualPrimaryBrush(Windows.UI.Xaml.Media.Brush)
    @focus_visual_primary_brush.setter
    @typing.final
    def focus_visual_primary_brush(self, value: windows_ui_xaml_media.Brush) -> None: ...
    # Windows.UI.Xaml.Thickness Windows.UI.Xaml.FrameworkElement::get_FocusVisualMargin()
    @_property
    def focus_visual_margin(self) -> Thickness: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_FocusVisualMargin(Windows.UI.Xaml.Thickness)
    @focus_visual_margin.setter
    @typing.final
    def focus_visual_margin(self, value: Thickness) -> None: ...
    # System.Boolean Windows.UI.Xaml.FrameworkElement::get_AllowFocusWhenDisabled()
    @_property
    def allow_focus_when_disabled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_AllowFocusWhenDisabled(System.Boolean)
    @allow_focus_when_disabled.setter
    @typing.final
    def allow_focus_when_disabled(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.FrameworkElement::get_AllowFocusOnInteraction()
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    # System.Void Windows.UI.Xaml.FrameworkElement::put_AllowFocusOnInteraction(System.Boolean)
    @allow_focus_on_interaction.setter
    @typing.final
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    # Windows.UI.Xaml.ElementTheme Windows.UI.Xaml.FrameworkElement::get_ActualTheme()
    @_property
    @typing.final
    def actual_theme(self) -> ElementTheme: ...
    # System.Boolean Windows.UI.Xaml.FrameworkElement::get_IsLoaded()
    @_property
    @typing.final
    def is_loaded(self) -> bool: ...

class FrameworkTemplate_Static(DependencyObject_Static):
    pass

class FrameworkTemplate(DependencyObject, metaclass=FrameworkTemplate_Static):
    pass

@typing.final
class FrameworkView(winrt.system.Object, windows_applicationmodel_core.IFrameworkView):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.FrameworkView::Initialize(Windows.ApplicationModel.Core.CoreApplicationView)
    def initialize(self, application_view: windows_applicationmodel_core.CoreApplicationView, /) -> None: ...
    # System.Void Windows.UI.Xaml.FrameworkView::Load(System.String)
    def load(self, entry_point: str, /) -> None: ...
    # System.Void Windows.UI.Xaml.FrameworkView::Run()
    def run(self) -> None: ...
    # System.Void Windows.UI.Xaml.FrameworkView::SetWindow(Windows.UI.Core.CoreWindow)
    def set_window(self, window: windows_ui_core.CoreWindow, /) -> None: ...
    # System.Void Windows.UI.Xaml.FrameworkView::Uninitialize()
    def uninitialize(self) -> None: ...

@typing.final
class FrameworkViewSource(winrt.system.Object, windows_applicationmodel_core.IFrameworkViewSource):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.ApplicationModel.Core.IFrameworkView Windows.UI.Xaml.FrameworkViewSource::CreateView()
    def create_view(self) -> windows_applicationmodel_core.IFrameworkView: ...

@typing.final
class GridLengthHelper_Static(winrt._winrt.IInspectable_Static):
    # System.Boolean Windows.UI.Xaml.GridLengthHelper::Equals(Windows.UI.Xaml.GridLength,Windows.UI.Xaml.GridLength)
    def equals(cls, target: GridLength, value: GridLength, /) -> bool: ...
    # Windows.UI.Xaml.GridLength Windows.UI.Xaml.GridLengthHelper::FromPixels(System.Double)
    def from_pixels(cls, pixels: winrt.system.Double, /) -> GridLength: ...
    # Windows.UI.Xaml.GridLength Windows.UI.Xaml.GridLengthHelper::FromValueAndType(System.Double,Windows.UI.Xaml.GridUnitType)
    def from_value_and_type(cls, value: winrt.system.Double, type: GridUnitType, /) -> GridLength: ...
    # System.Boolean Windows.UI.Xaml.GridLengthHelper::GetIsAbsolute(Windows.UI.Xaml.GridLength)
    def get_is_absolute(cls, target: GridLength, /) -> bool: ...
    # System.Boolean Windows.UI.Xaml.GridLengthHelper::GetIsAuto(Windows.UI.Xaml.GridLength)
    def get_is_auto(cls, target: GridLength, /) -> bool: ...
    # System.Boolean Windows.UI.Xaml.GridLengthHelper::GetIsStar(Windows.UI.Xaml.GridLength)
    def get_is_star(cls, target: GridLength, /) -> bool: ...
    # Windows.UI.Xaml.GridLength Windows.UI.Xaml.GridLengthHelper::get_Auto()
    @_property
    def auto(cls) -> GridLength: ...

@typing.final
class GridLengthHelper(winrt.system.Object, metaclass=GridLengthHelper_Static):
    pass

@typing.final
class MediaFailedRoutedEventArgs(ExceptionRoutedEventArgs):
    # System.String Windows.UI.Xaml.MediaFailedRoutedEventArgs::get_ErrorTrace()
    @_property
    def error_trace(self) -> str: ...

@typing.final
class PointHelper_Static(winrt._winrt.IInspectable_Static):
    # Windows.Foundation.Point Windows.UI.Xaml.PointHelper::FromCoordinates(System.Single,System.Single)
    def from_coordinates(cls, x: winrt.system.Single, y: winrt.system.Single, /) -> windows_foundation.Point: ...

@typing.final
class PointHelper(winrt.system.Object, metaclass=PointHelper_Static):
    pass

class PropertyMetadata_Static(winrt._winrt.IInspectable_Static):
    # Windows.UI.Xaml.PropertyMetadata Windows.UI.Xaml.PropertyMetadata::Create(System.Object)
    def create_with_default_value(cls, default_value: winrt.system.Object, /) -> PropertyMetadata: ...
    # Windows.UI.Xaml.PropertyMetadata Windows.UI.Xaml.PropertyMetadata::Create(System.Object,Windows.UI.Xaml.PropertyChangedCallback)
    def create_with_default_value_and_callback(cls, default_value: winrt.system.Object, property_changed_callback: PropertyChangedCallback, /) -> PropertyMetadata: ...
    # Windows.UI.Xaml.PropertyMetadata Windows.UI.Xaml.PropertyMetadata::Create(Windows.UI.Xaml.CreateDefaultValueCallback)
    def create_with_factory(cls, create_default_value_callback: CreateDefaultValueCallback, /) -> PropertyMetadata: ...
    # Windows.UI.Xaml.PropertyMetadata Windows.UI.Xaml.PropertyMetadata::Create(Windows.UI.Xaml.CreateDefaultValueCallback,Windows.UI.Xaml.PropertyChangedCallback)
    def create_with_factory_and_callback(cls, create_default_value_callback: CreateDefaultValueCallback, property_changed_callback: PropertyChangedCallback, /) -> PropertyMetadata: ...

class PropertyMetadata(winrt.system.Object, metaclass=PropertyMetadata_Static):
    @typing.overload
    def __new__(cls: typing.Type[Self], default_value: winrt.system.Object) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], default_value: winrt.system.Object, property_changed_callback: PropertyChangedCallback) -> Self: ...
    # Windows.UI.Xaml.CreateDefaultValueCallback Windows.UI.Xaml.PropertyMetadata::get_CreateDefaultValueCallback()
    @_property
    @typing.final
    def create_default_value_callback(self) -> CreateDefaultValueCallback: ...
    # System.Object Windows.UI.Xaml.PropertyMetadata::get_DefaultValue()
    @_property
    @typing.final
    def default_value(self) -> winrt.system.Object: ...

@typing.final
class PropertyPath(DependencyObject):
    def __new__(cls: typing.Type[Self], path: str) -> Self: ...
    # System.String Windows.UI.Xaml.PropertyPath::get_Path()
    @_property
    def path(self) -> str: ...

@typing.final
class RectHelper_Static(winrt._winrt.IInspectable_Static):
    # System.Boolean Windows.UI.Xaml.RectHelper::Contains(Windows.Foundation.Rect,Windows.Foundation.Point)
    def contains(cls, target: windows_foundation.Rect, point: windows_foundation.Point, /) -> bool: ...
    # System.Boolean Windows.UI.Xaml.RectHelper::Equals(Windows.Foundation.Rect,Windows.Foundation.Rect)
    def equals(cls, target: windows_foundation.Rect, value: windows_foundation.Rect, /) -> bool: ...
    # Windows.Foundation.Rect Windows.UI.Xaml.RectHelper::FromCoordinatesAndDimensions(System.Single,System.Single,System.Single,System.Single)
    def from_coordinates_and_dimensions(cls, x: winrt.system.Single, y: winrt.system.Single, width: winrt.system.Single, height: winrt.system.Single, /) -> windows_foundation.Rect: ...
    # Windows.Foundation.Rect Windows.UI.Xaml.RectHelper::FromLocationAndSize(Windows.Foundation.Point,Windows.Foundation.Size)
    def from_location_and_size(cls, location: windows_foundation.Point, size: windows_foundation.Size, /) -> windows_foundation.Rect: ...
    # Windows.Foundation.Rect Windows.UI.Xaml.RectHelper::FromPoints(Windows.Foundation.Point,Windows.Foundation.Point)
    def from_points(cls, point1: windows_foundation.Point, point2: windows_foundation.Point, /) -> windows_foundation.Rect: ...
    # System.Single Windows.UI.Xaml.RectHelper::GetBottom(Windows.Foundation.Rect)
    def get_bottom(cls, target: windows_foundation.Rect, /) -> winrt.system.Single: ...
    # System.Boolean Windows.UI.Xaml.RectHelper::GetIsEmpty(Windows.Foundation.Rect)
    def get_is_empty(cls, target: windows_foundation.Rect, /) -> bool: ...
    # System.Single Windows.UI.Xaml.RectHelper::GetLeft(Windows.Foundation.Rect)
    def get_left(cls, target: windows_foundation.Rect, /) -> winrt.system.Single: ...
    # System.Single Windows.UI.Xaml.RectHelper::GetRight(Windows.Foundation.Rect)
    def get_right(cls, target: windows_foundation.Rect, /) -> winrt.system.Single: ...
    # System.Single Windows.UI.Xaml.RectHelper::GetTop(Windows.Foundation.Rect)
    def get_top(cls, target: windows_foundation.Rect, /) -> winrt.system.Single: ...
    # Windows.Foundation.Rect Windows.UI.Xaml.RectHelper::Intersect(Windows.Foundation.Rect,Windows.Foundation.Rect)
    def intersect(cls, target: windows_foundation.Rect, rect: windows_foundation.Rect, /) -> windows_foundation.Rect: ...
    # Windows.Foundation.Rect Windows.UI.Xaml.RectHelper::Union(Windows.Foundation.Rect,Windows.Foundation.Point)
    def union_with_point(cls, target: windows_foundation.Rect, point: windows_foundation.Point, /) -> windows_foundation.Rect: ...
    # Windows.Foundation.Rect Windows.UI.Xaml.RectHelper::Union(Windows.Foundation.Rect,Windows.Foundation.Rect)
    def union_with_rect(cls, target: windows_foundation.Rect, rect: windows_foundation.Rect, /) -> windows_foundation.Rect: ...
    # Windows.Foundation.Rect Windows.UI.Xaml.RectHelper::get_Empty()
    @_property
    def empty(cls) -> windows_foundation.Rect: ...

@typing.final
class RectHelper(winrt.system.Object, metaclass=RectHelper_Static):
    pass

class ResourceDictionary_Static(DependencyObject_Static):
    pass

class ResourceDictionary(DependencyObject, winrt._winrt.MutableMapping[winrt.system.Object, winrt.system.Object], metaclass=ResourceDictionary_Static):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[winrt.system.Object]: ...
    def __contains__(self, key: object) -> bool: ...
    def __getitem__(self, key: winrt.system.Object) -> winrt.system.Object: ...
    def __setitem__(self, key: winrt.system.Object, value: winrt.system.Object) -> None: ...
    def __delitem__(self, key: winrt.system.Object) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.ResourceDictionary::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<System.Object,System.Object>> Windows.UI.Xaml.ResourceDictionary::First()
    def first(self) -> windows_foundation_collections.IIterator[windows_foundation_collections.IKeyValuePair[winrt.system.Object, winrt.system.Object]]: ...
    # Windows.Foundation.Collections.IMapView`2<System.Object,System.Object> Windows.UI.Xaml.ResourceDictionary::GetView()
    def get_view(self) -> typing.Mapping[winrt.system.Object, winrt.system.Object]: ...
    # System.Boolean Windows.UI.Xaml.ResourceDictionary::HasKey(System.Object)
    def has_key(self, key: winrt.system.Object, /) -> bool: ...
    # System.Boolean Windows.UI.Xaml.ResourceDictionary::Insert(System.Object,System.Object)
    def insert(self, key: winrt.system.Object, value: winrt.system.Object, /) -> bool: ...
    # System.Object Windows.UI.Xaml.ResourceDictionary::Lookup(System.Object)
    def lookup(self, key: winrt.system.Object, /) -> winrt.system.Object: ...
    # System.Void Windows.UI.Xaml.ResourceDictionary::Remove(System.Object)
    def remove(self, key: winrt.system.Object, /) -> None: ...
    # System.UInt32 Windows.UI.Xaml.ResourceDictionary::get_Size()
    @_property
    @typing.final
    def size(self) -> winrt.system.UInt32: ...
    # Windows.Foundation.Uri Windows.UI.Xaml.ResourceDictionary::get_Source()
    @_property
    def source(self) -> windows_foundation.Uri: ...
    # System.Void Windows.UI.Xaml.ResourceDictionary::put_Source(Windows.Foundation.Uri)
    @source.setter
    @typing.final
    def source(self, value: windows_foundation.Uri) -> None: ...
    # Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.ResourceDictionary> Windows.UI.Xaml.ResourceDictionary::get_MergedDictionaries()
    @_property
    @typing.final
    def merged_dictionaries(self) -> typing.MutableSequence[ResourceDictionary]: ...
    # Windows.Foundation.Collections.IMap`2<System.Object,System.Object> Windows.UI.Xaml.ResourceDictionary::get_ThemeDictionaries()
    @_property
    @typing.final
    def theme_dictionaries(self) -> typing.MutableMapping[winrt.system.Object, winrt.system.Object]: ...

@typing.final
class RoutedEvent(winrt.system.Object):
    pass

class RoutedEventArgs_Static(winrt._winrt.IInspectable_Static):
    pass

class RoutedEventArgs(winrt.system.Object, metaclass=RoutedEventArgs_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Object Windows.UI.Xaml.RoutedEventArgs::get_OriginalSource()
    @_property
    @typing.final
    def original_source(self) -> winrt.system.Object: ...

class ScalarTransition_Static(winrt._winrt.IInspectable_Static):
    pass

class ScalarTransition(winrt.system.Object, metaclass=ScalarTransition_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.TimeSpan Windows.UI.Xaml.ScalarTransition::get_Duration()
    @_property
    def duration(self) -> datetime.timedelta: ...
    # System.Void Windows.UI.Xaml.ScalarTransition::put_Duration(Windows.Foundation.TimeSpan)
    @duration.setter
    @typing.final
    def duration(self, value: datetime.timedelta) -> None: ...

@typing.final
class Setter(SetterBase):
    @typing.overload
    def __new__(cls: typing.Type[Self], target_property: DependencyProperty, value: winrt.system.Object) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Object Windows.UI.Xaml.Setter::get_Value()
    @_property
    def value(self) -> winrt.system.Object: ...
    # System.Void Windows.UI.Xaml.Setter::put_Value(System.Object)
    @value.setter
    def value(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.Setter::get_Property()
    @_property
    def property(self) -> DependencyProperty: ...
    # System.Void Windows.UI.Xaml.Setter::put_Property(Windows.UI.Xaml.DependencyProperty)
    @property.setter
    def property(self, value: DependencyProperty) -> None: ...
    # Windows.UI.Xaml.TargetPropertyPath Windows.UI.Xaml.Setter::get_Target()
    @_property
    def target(self) -> TargetPropertyPath: ...
    # System.Void Windows.UI.Xaml.Setter::put_Target(Windows.UI.Xaml.TargetPropertyPath)
    @target.setter
    def target(self, value: TargetPropertyPath) -> None: ...

class SetterBase_Static(DependencyObject_Static):
    pass

class SetterBase(DependencyObject, metaclass=SetterBase_Static):
    # System.Boolean Windows.UI.Xaml.SetterBase::get_IsSealed()
    @_property
    @typing.final
    def is_sealed(self) -> bool: ...

@typing.final
class SetterBaseCollection(winrt.system.Object, winrt._winrt.MutableSequence[SetterBase]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[SetterBase]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> SetterBase: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[SetterBase]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: SetterBase) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[SetterBase]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.SetterBaseCollection::Append(Windows.UI.Xaml.SetterBase)
    def append(self, value: SetterBase, /) -> None: ...
    # System.Void Windows.UI.Xaml.SetterBaseCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.SetterBase> Windows.UI.Xaml.SetterBaseCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[SetterBase]: ...
    # Windows.UI.Xaml.SetterBase Windows.UI.Xaml.SetterBaseCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> SetterBase: ...
    # System.UInt32 Windows.UI.Xaml.SetterBaseCollection::GetMany(System.UInt32,Windows.UI.Xaml.SetterBase[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[SetterBase], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.SetterBase> Windows.UI.Xaml.SetterBaseCollection::GetView()
    def get_view(self) -> typing.Sequence[SetterBase]: ...
    # System.Boolean Windows.UI.Xaml.SetterBaseCollection::IndexOf(Windows.UI.Xaml.SetterBase,System.UInt32&)
    def index_of(self, value: SetterBase, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.UI.Xaml.SetterBaseCollection::InsertAt(System.UInt32,Windows.UI.Xaml.SetterBase)
    def insert_at(self, index: winrt.system.UInt32, value: SetterBase, /) -> None: ...
    # System.Void Windows.UI.Xaml.SetterBaseCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.UI.Xaml.SetterBaseCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.UI.Xaml.SetterBaseCollection::ReplaceAll(Windows.UI.Xaml.SetterBase[])
    def replace_all(self, items: typing.Union[winrt.system.Array[SetterBase], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.UI.Xaml.SetterBaseCollection::SetAt(System.UInt32,Windows.UI.Xaml.SetterBase)
    def set_at(self, index: winrt.system.UInt32, value: SetterBase, /) -> None: ...
    # System.UInt32 Windows.UI.Xaml.SetterBaseCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...
    # System.Boolean Windows.UI.Xaml.SetterBaseCollection::get_IsSealed()
    @_property
    def is_sealed(self) -> bool: ...

@typing.final
class SizeChangedEventArgs(RoutedEventArgs):
    # Windows.Foundation.Size Windows.UI.Xaml.SizeChangedEventArgs::get_NewSize()
    @_property
    def new_size(self) -> windows_foundation.Size: ...
    # Windows.Foundation.Size Windows.UI.Xaml.SizeChangedEventArgs::get_PreviousSize()
    @_property
    def previous_size(self) -> windows_foundation.Size: ...

@typing.final
class SizeHelper_Static(winrt._winrt.IInspectable_Static):
    # System.Boolean Windows.UI.Xaml.SizeHelper::Equals(Windows.Foundation.Size,Windows.Foundation.Size)
    def equals(cls, target: windows_foundation.Size, value: windows_foundation.Size, /) -> bool: ...
    # Windows.Foundation.Size Windows.UI.Xaml.SizeHelper::FromDimensions(System.Single,System.Single)
    def from_dimensions(cls, width: winrt.system.Single, height: winrt.system.Single, /) -> windows_foundation.Size: ...
    # System.Boolean Windows.UI.Xaml.SizeHelper::GetIsEmpty(Windows.Foundation.Size)
    def get_is_empty(cls, target: windows_foundation.Size, /) -> bool: ...
    # Windows.Foundation.Size Windows.UI.Xaml.SizeHelper::get_Empty()
    @_property
    def empty(cls) -> windows_foundation.Size: ...

@typing.final
class SizeHelper(winrt.system.Object, metaclass=SizeHelper_Static):
    pass

@typing.final
class StateTrigger_Static(StateTriggerBase_Static):
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.StateTrigger::get_IsActiveProperty()
    @_property
    def is_active_property(cls) -> DependencyProperty: ...

@typing.final
class StateTrigger(StateTriggerBase, metaclass=StateTrigger_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Windows.UI.Xaml.StateTrigger::get_IsActive()
    @_property
    def is_active(self) -> bool: ...
    # System.Void Windows.UI.Xaml.StateTrigger::put_IsActive(System.Boolean)
    @is_active.setter
    def is_active(self, value: bool) -> None: ...

class StateTriggerBase_Static(DependencyObject_Static):
    pass

class StateTriggerBase(DependencyObject, metaclass=StateTriggerBase_Static):
    @typing.final
    # System.Void Windows.UI.Xaml.StateTriggerBase::SetActive(System.Boolean)
    def _set_active(self, is_active: bool, /) -> None: ...

@typing.final
class Style(DependencyObject):
    @typing.overload
    def __new__(cls: typing.Type[Self], target_type: windows_ui_xaml_interop.TypeName) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.Style::Seal()
    def seal(self) -> None: ...
    # Windows.UI.Xaml.Interop.TypeName Windows.UI.Xaml.Style::get_TargetType()
    @_property
    def target_type(self) -> windows_ui_xaml_interop.TypeName: ...
    # System.Void Windows.UI.Xaml.Style::put_TargetType(Windows.UI.Xaml.Interop.TypeName)
    @target_type.setter
    def target_type(self, value: windows_ui_xaml_interop.TypeName) -> None: ...
    # Windows.UI.Xaml.Style Windows.UI.Xaml.Style::get_BasedOn()
    @_property
    def based_on(self) -> Style: ...
    # System.Void Windows.UI.Xaml.Style::put_BasedOn(Windows.UI.Xaml.Style)
    @based_on.setter
    def based_on(self, value: Style) -> None: ...
    # System.Boolean Windows.UI.Xaml.Style::get_IsSealed()
    @_property
    def is_sealed(self) -> bool: ...
    # Windows.UI.Xaml.SetterBaseCollection Windows.UI.Xaml.Style::get_Setters()
    @_property
    def setters(self) -> SetterBaseCollection: ...

@typing.final
class TargetPropertyPath(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], target_property: DependencyProperty) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Object Windows.UI.Xaml.TargetPropertyPath::get_Target()
    @_property
    def target(self) -> winrt.system.Object: ...
    # System.Void Windows.UI.Xaml.TargetPropertyPath::put_Target(System.Object)
    @target.setter
    def target(self, value: winrt.system.Object) -> None: ...
    # Windows.UI.Xaml.PropertyPath Windows.UI.Xaml.TargetPropertyPath::get_Path()
    @_property
    def path(self) -> PropertyPath: ...
    # System.Void Windows.UI.Xaml.TargetPropertyPath::put_Path(Windows.UI.Xaml.PropertyPath)
    @path.setter
    def path(self, value: PropertyPath) -> None: ...

@typing.final
class ThicknessHelper_Static(winrt._winrt.IInspectable_Static):
    # Windows.UI.Xaml.Thickness Windows.UI.Xaml.ThicknessHelper::FromLengths(System.Double,System.Double,System.Double,System.Double)
    def from_lengths(cls, left: winrt.system.Double, top: winrt.system.Double, right: winrt.system.Double, bottom: winrt.system.Double, /) -> Thickness: ...
    # Windows.UI.Xaml.Thickness Windows.UI.Xaml.ThicknessHelper::FromUniformLength(System.Double)
    def from_uniform_length(cls, uniform_length: winrt.system.Double, /) -> Thickness: ...

@typing.final
class ThicknessHelper(winrt.system.Object, metaclass=ThicknessHelper_Static):
    pass

class TriggerAction_Static(DependencyObject_Static):
    pass

class TriggerAction(DependencyObject, metaclass=TriggerAction_Static):
    pass

@typing.final
class TriggerActionCollection(winrt.system.Object, winrt._winrt.MutableSequence[TriggerAction]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[TriggerAction]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> TriggerAction: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[TriggerAction]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: TriggerAction) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[TriggerAction]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.TriggerActionCollection::Append(Windows.UI.Xaml.TriggerAction)
    def append(self, value: TriggerAction, /) -> None: ...
    # System.Void Windows.UI.Xaml.TriggerActionCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.TriggerAction> Windows.UI.Xaml.TriggerActionCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[TriggerAction]: ...
    # Windows.UI.Xaml.TriggerAction Windows.UI.Xaml.TriggerActionCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> TriggerAction: ...
    # System.UInt32 Windows.UI.Xaml.TriggerActionCollection::GetMany(System.UInt32,Windows.UI.Xaml.TriggerAction[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[TriggerAction], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.TriggerAction> Windows.UI.Xaml.TriggerActionCollection::GetView()
    def get_view(self) -> typing.Sequence[TriggerAction]: ...
    # System.Boolean Windows.UI.Xaml.TriggerActionCollection::IndexOf(Windows.UI.Xaml.TriggerAction,System.UInt32&)
    def index_of(self, value: TriggerAction, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.UI.Xaml.TriggerActionCollection::InsertAt(System.UInt32,Windows.UI.Xaml.TriggerAction)
    def insert_at(self, index: winrt.system.UInt32, value: TriggerAction, /) -> None: ...
    # System.Void Windows.UI.Xaml.TriggerActionCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.UI.Xaml.TriggerActionCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.UI.Xaml.TriggerActionCollection::ReplaceAll(Windows.UI.Xaml.TriggerAction[])
    def replace_all(self, items: typing.Union[winrt.system.Array[TriggerAction], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.UI.Xaml.TriggerActionCollection::SetAt(System.UInt32,Windows.UI.Xaml.TriggerAction)
    def set_at(self, index: winrt.system.UInt32, value: TriggerAction, /) -> None: ...
    # System.UInt32 Windows.UI.Xaml.TriggerActionCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

class TriggerBase_Static(DependencyObject_Static):
    pass

class TriggerBase(DependencyObject, metaclass=TriggerBase_Static):
    pass

@typing.final
class TriggerCollection(winrt.system.Object, winrt._winrt.MutableSequence[TriggerBase]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[TriggerBase]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> TriggerBase: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[TriggerBase]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: TriggerBase) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[TriggerBase]) -> None: ...
    # System.Void Windows.UI.Xaml.TriggerCollection::Append(Windows.UI.Xaml.TriggerBase)
    def append(self, value: TriggerBase, /) -> None: ...
    # System.Void Windows.UI.Xaml.TriggerCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.TriggerBase> Windows.UI.Xaml.TriggerCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[TriggerBase]: ...
    # Windows.UI.Xaml.TriggerBase Windows.UI.Xaml.TriggerCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> TriggerBase: ...
    # System.UInt32 Windows.UI.Xaml.TriggerCollection::GetMany(System.UInt32,Windows.UI.Xaml.TriggerBase[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[TriggerBase], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.TriggerBase> Windows.UI.Xaml.TriggerCollection::GetView()
    def get_view(self) -> typing.Sequence[TriggerBase]: ...
    # System.Boolean Windows.UI.Xaml.TriggerCollection::IndexOf(Windows.UI.Xaml.TriggerBase,System.UInt32&)
    def index_of(self, value: TriggerBase, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.UI.Xaml.TriggerCollection::InsertAt(System.UInt32,Windows.UI.Xaml.TriggerBase)
    def insert_at(self, index: winrt.system.UInt32, value: TriggerBase, /) -> None: ...
    # System.Void Windows.UI.Xaml.TriggerCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.UI.Xaml.TriggerCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.UI.Xaml.TriggerCollection::ReplaceAll(Windows.UI.Xaml.TriggerBase[])
    def replace_all(self, items: typing.Union[winrt.system.Array[TriggerBase], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.UI.Xaml.TriggerCollection::SetAt(System.UInt32,Windows.UI.Xaml.TriggerBase)
    def set_at(self, index: winrt.system.UInt32, value: TriggerBase, /) -> None: ...
    # System.UInt32 Windows.UI.Xaml.TriggerCollection::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

class UIElement_Static(DependencyObject_Static):
    # System.Void Windows.UI.Xaml.UIElement::RegisterAsScrollPort(Windows.UI.Xaml.UIElement)
    def register_as_scroll_port(cls, element: UIElement, /) -> None: ...
    # System.Boolean Windows.UI.Xaml.UIElement::TryStartDirectManipulation(Windows.UI.Xaml.Input.Pointer)
    def try_start_direct_manipulation(cls, value: windows_ui_xaml_input.Pointer, /) -> bool: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_HoldingEvent()
    @_property
    @typing.final
    def holding_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_IsDoubleTapEnabledProperty()
    @_property
    @typing.final
    def is_double_tap_enabled_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_IsHitTestVisibleProperty()
    @_property
    @typing.final
    def is_hit_test_visible_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_IsHoldingEnabledProperty()
    @_property
    @typing.final
    def is_holding_enabled_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_IsRightTapEnabledProperty()
    @_property
    @typing.final
    def is_right_tap_enabled_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_KeyDownEvent()
    @_property
    @typing.final
    def key_down_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_KeyUpEvent()
    @_property
    @typing.final
    def key_up_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_ManipulationCompletedEvent()
    @_property
    @typing.final
    def manipulation_completed_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_ManipulationDeltaEvent()
    @_property
    @typing.final
    def manipulation_delta_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_IsTapEnabledProperty()
    @_property
    @typing.final
    def is_tap_enabled_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_ManipulationInertiaStartingEvent()
    @_property
    @typing.final
    def manipulation_inertia_starting_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_ManipulationModeProperty()
    @_property
    @typing.final
    def manipulation_mode_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_ManipulationStartedEvent()
    @_property
    @typing.final
    def manipulation_started_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_ManipulationStartingEvent()
    @_property
    @typing.final
    def manipulation_starting_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_OpacityProperty()
    @_property
    @typing.final
    def opacity_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_PointerCanceledEvent()
    @_property
    @typing.final
    def pointer_canceled_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_PointerCaptureLostEvent()
    @_property
    @typing.final
    def pointer_capture_lost_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_PointerCapturesProperty()
    @_property
    @typing.final
    def pointer_captures_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_PointerEnteredEvent()
    @_property
    @typing.final
    def pointer_entered_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_PointerExitedEvent()
    @_property
    @typing.final
    def pointer_exited_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_PointerMovedEvent()
    @_property
    @typing.final
    def pointer_moved_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_PointerPressedEvent()
    @_property
    @typing.final
    def pointer_pressed_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_PointerWheelChangedEvent()
    @_property
    @typing.final
    def pointer_wheel_changed_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_ProjectionProperty()
    @_property
    @typing.final
    def projection_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_RenderTransformOriginProperty()
    @_property
    @typing.final
    def render_transform_origin_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_RenderTransformProperty()
    @_property
    @typing.final
    def render_transform_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_RightTappedEvent()
    @_property
    @typing.final
    def right_tapped_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_DragEnterEvent()
    @_property
    @typing.final
    def drag_enter_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_TappedEvent()
    @_property
    @typing.final
    def tapped_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_TransitionsProperty()
    @_property
    @typing.final
    def transitions_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_UseLayoutRoundingProperty()
    @_property
    @typing.final
    def use_layout_rounding_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_VisibilityProperty()
    @_property
    @typing.final
    def visibility_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_AllowDropProperty()
    @_property
    @typing.final
    def allow_drop_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_CacheModeProperty()
    @_property
    @typing.final
    def cache_mode_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_ClipProperty()
    @_property
    @typing.final
    def clip_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_DoubleTappedEvent()
    @_property
    @typing.final
    def double_tapped_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_PointerReleasedEvent()
    @_property
    @typing.final
    def pointer_released_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_DragLeaveEvent()
    @_property
    @typing.final
    def drag_leave_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_DragOverEvent()
    @_property
    @typing.final
    def drag_over_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_DropEvent()
    @_property
    @typing.final
    def drop_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_ShadowProperty()
    @_property
    @typing.final
    def shadow_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_CompositeModeProperty()
    @_property
    @typing.final
    def composite_mode_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_CanDragProperty()
    @_property
    @typing.final
    def can_drag_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_Transform3DProperty()
    @_property
    @typing.final
    def transform_3d_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_AccessKeyProperty()
    @_property
    @typing.final
    def access_key_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_AccessKeyScopeOwnerProperty()
    @_property
    @typing.final
    def access_key_scope_owner_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_ContextFlyoutProperty()
    @_property
    @typing.final
    def context_flyout_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_IsAccessKeyScopeProperty()
    @_property
    @typing.final
    def is_access_key_scope_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_ExitDisplayModeOnAccessKeyInvokedProperty()
    @_property
    @typing.final
    def exit_display_mode_on_access_key_invoked_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_HighContrastAdjustmentProperty()
    @_property
    @typing.final
    def high_contrast_adjustment_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_KeyTipHorizontalOffsetProperty()
    @_property
    @typing.final
    def key_tip_horizontal_offset_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_KeyTipPlacementModeProperty()
    @_property
    @typing.final
    def key_tip_placement_mode_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_KeyTipVerticalOffsetProperty()
    @_property
    @typing.final
    def key_tip_vertical_offset_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_LightsProperty()
    @_property
    @typing.final
    def lights_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_XYFocusDownNavigationStrategyProperty()
    @_property
    @typing.final
    def x_y_focus_down_navigation_strategy_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_XYFocusKeyboardNavigationProperty()
    @_property
    @typing.final
    def x_y_focus_keyboard_navigation_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_XYFocusLeftNavigationStrategyProperty()
    @_property
    @typing.final
    def x_y_focus_left_navigation_strategy_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_XYFocusRightNavigationStrategyProperty()
    @_property
    @typing.final
    def x_y_focus_right_navigation_strategy_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_XYFocusUpNavigationStrategyProperty()
    @_property
    @typing.final
    def x_y_focus_up_navigation_strategy_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_TabFocusNavigationProperty()
    @_property
    @typing.final
    def tab_focus_navigation_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_GettingFocusEvent()
    @_property
    @typing.final
    def getting_focus_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_LosingFocusEvent()
    @_property
    @typing.final
    def losing_focus_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_NoFocusCandidateFoundEvent()
    @_property
    @typing.final
    def no_focus_candidate_found_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_CharacterReceivedEvent()
    @_property
    @typing.final
    def character_received_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_PreviewKeyDownEvent()
    @_property
    @typing.final
    def preview_key_down_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_PreviewKeyUpEvent()
    @_property
    @typing.final
    def preview_key_up_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_BringIntoViewRequestedEvent()
    @_property
    @typing.final
    def bring_into_view_requested_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.RoutedEvent Windows.UI.Xaml.UIElement::get_ContextRequestedEvent()
    @_property
    @typing.final
    def context_requested_event(cls) -> RoutedEvent: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_KeyTipTargetProperty()
    @_property
    @typing.final
    def key_tip_target_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_KeyboardAcceleratorPlacementModeProperty()
    @_property
    @typing.final
    def keyboard_accelerator_placement_mode_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_KeyboardAcceleratorPlacementTargetProperty()
    @_property
    @typing.final
    def keyboard_accelerator_placement_target_property(cls) -> DependencyProperty: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.UIElement::get_CanBeScrollAnchorProperty()
    @_property
    @typing.final
    def can_be_scroll_anchor_property(cls) -> DependencyProperty: ...

class UIElement(DependencyObject, windows_ui_composition.IVisualElement, windows_ui_composition.IAnimationObject, metaclass=UIElement_Static):
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)
    def add_handler(self, routed_event: RoutedEvent, handler: winrt.system.Object, handled_events_too: bool, /) -> None: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::Arrange(Windows.Foundation.Rect)
    def arrange(self, final_rect: windows_foundation.Rect, /) -> None: ...
    @typing.final
    # System.Boolean Windows.UI.Xaml.UIElement::CancelDirectManipulations()
    def cancel_direct_manipulations(self) -> bool: ...
    @typing.final
    # System.Boolean Windows.UI.Xaml.UIElement::CapturePointer(Windows.UI.Xaml.Input.Pointer)
    def capture_pointer(self, value: windows_ui_xaml_input.Pointer, /) -> bool: ...
    # Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Point>> Windows.UI.Xaml.UIElement::FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)
    def _find_sub_elements_for_touch_targeting(self, point: windows_foundation.Point, bounding_rect: windows_foundation.Rect, /) -> typing.Iterable[typing.Iterable[windows_foundation.Point]]: ...
    # Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.DependencyObject> Windows.UI.Xaml.UIElement::GetChildrenInTabFocusOrder()
    def _get_children_in_tab_focus_order(self) -> typing.Iterable[DependencyObject]: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::InvalidateArrange()
    def invalidate_arrange(self) -> None: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::InvalidateMeasure()
    def invalidate_measure(self) -> None: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::Measure(Windows.Foundation.Size)
    def measure(self, available_size: windows_foundation.Size, /) -> None: ...
    # System.Void Windows.UI.Xaml.UIElement::OnBringIntoViewRequested(Windows.UI.Xaml.BringIntoViewRequestedEventArgs)
    def _on_bring_into_view_requested(self, e: BringIntoViewRequestedEventArgs, /) -> None: ...
    # Windows.UI.Xaml.Automation.Peers.AutomationPeer Windows.UI.Xaml.UIElement::OnCreateAutomationPeer()
    def _on_create_automation_peer(self) -> windows_ui_xaml_automation_peers.AutomationPeer: ...
    # System.Void Windows.UI.Xaml.UIElement::OnDisconnectVisualChildren()
    def _on_disconnect_visual_children(self) -> None: ...
    # System.Void Windows.UI.Xaml.UIElement::OnKeyboardAcceleratorInvoked(Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs)
    def _on_keyboard_accelerator_invoked(self, args: windows_ui_xaml_input.KeyboardAcceleratorInvokedEventArgs, /) -> None: ...
    # System.Void Windows.UI.Xaml.UIElement::OnProcessKeyboardAccelerators(Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs)
    def _on_process_keyboard_accelerators(self, args: windows_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs, /) -> None: ...
    # System.Void Windows.UI.Xaml.UIElement::PopulatePropertyInfo(System.String,Windows.UI.Composition.AnimationPropertyInfo)
    def populate_property_info(self, property_name: str, property_info: windows_ui_composition.AnimationPropertyInfo, /) -> None: ...
    # System.Void Windows.UI.Xaml.UIElement::PopulatePropertyInfoOverride(System.String,Windows.UI.Composition.AnimationPropertyInfo)
    def _populate_property_info_override(self, property_name: str, animation_property_info: windows_ui_composition.AnimationPropertyInfo, /) -> None: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)
    def release_pointer_capture(self, value: windows_ui_xaml_input.Pointer, /) -> None: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::ReleasePointerCaptures()
    def release_pointer_captures(self) -> None: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)
    def remove_handler(self, routed_event: RoutedEvent, handler: winrt.system.Object, /) -> None: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::StartAnimation(Windows.UI.Composition.ICompositionAnimationBase)
    def start_animation(self, animation: windows_ui_composition.ICompositionAnimationBase, /) -> None: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::StartBringIntoView()
    def start_bring_into_view(self) -> None: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::StartBringIntoView(Windows.UI.Xaml.BringIntoViewOptions)
    def start_bring_into_view_with_options(self, options: BringIntoViewOptions, /) -> None: ...
    @typing.final
    # Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.DataTransfer.DataPackageOperation> Windows.UI.Xaml.UIElement::StartDragAsync(Windows.UI.Input.PointerPoint)
    def start_drag_async(self, pointer_point: windows_ui_input.PointerPoint, /) -> windows_foundation.IAsyncOperation[windows_applicationmodel_datatransfer.DataPackageOperation]: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::StopAnimation(Windows.UI.Composition.ICompositionAnimationBase)
    def stop_animation(self, animation: windows_ui_composition.ICompositionAnimationBase, /) -> None: ...
    @typing.final
    # Windows.UI.Xaml.Media.GeneralTransform Windows.UI.Xaml.UIElement::TransformToVisual(Windows.UI.Xaml.UIElement)
    def transform_to_visual(self, visual: UIElement, /) -> windows_ui_xaml_media.GeneralTransform: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::TryInvokeKeyboardAccelerator(Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs)
    def try_invoke_keyboard_accelerator(self, args: windows_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs, /) -> None: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::UpdateLayout()
    def update_layout(self) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_DoubleTapped(Windows.UI.Xaml.Input.DoubleTappedEventHandler)
    def add_double_tapped(self, handler: windows_ui_xaml_input.DoubleTappedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_DoubleTapped(Windows.Foundation.EventRegistrationToken)
    def remove_double_tapped(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_DragEnter(Windows.UI.Xaml.DragEventHandler)
    def add_drag_enter(self, handler: DragEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_DragEnter(Windows.Foundation.EventRegistrationToken)
    def remove_drag_enter(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_DragLeave(Windows.UI.Xaml.DragEventHandler)
    def add_drag_leave(self, handler: DragEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_DragLeave(Windows.Foundation.EventRegistrationToken)
    def remove_drag_leave(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_DragOver(Windows.UI.Xaml.DragEventHandler)
    def add_drag_over(self, handler: DragEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_DragOver(Windows.Foundation.EventRegistrationToken)
    def remove_drag_over(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_Drop(Windows.UI.Xaml.DragEventHandler)
    def add_drop(self, handler: DragEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_Drop(Windows.Foundation.EventRegistrationToken)
    def remove_drop(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_GotFocus(Windows.UI.Xaml.RoutedEventHandler)
    def add_got_focus(self, handler: RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_GotFocus(Windows.Foundation.EventRegistrationToken)
    def remove_got_focus(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_Holding(Windows.UI.Xaml.Input.HoldingEventHandler)
    def add_holding(self, handler: windows_ui_xaml_input.HoldingEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_Holding(Windows.Foundation.EventRegistrationToken)
    def remove_holding(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_KeyDown(Windows.UI.Xaml.Input.KeyEventHandler)
    def add_key_down(self, handler: windows_ui_xaml_input.KeyEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_KeyDown(Windows.Foundation.EventRegistrationToken)
    def remove_key_down(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_KeyUp(Windows.UI.Xaml.Input.KeyEventHandler)
    def add_key_up(self, handler: windows_ui_xaml_input.KeyEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_KeyUp(Windows.Foundation.EventRegistrationToken)
    def remove_key_up(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_LostFocus(Windows.UI.Xaml.RoutedEventHandler)
    def add_lost_focus(self, handler: RoutedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_LostFocus(Windows.Foundation.EventRegistrationToken)
    def remove_lost_focus(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_ManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedEventHandler)
    def add_manipulation_completed(self, handler: windows_ui_xaml_input.ManipulationCompletedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_ManipulationCompleted(Windows.Foundation.EventRegistrationToken)
    def remove_manipulation_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_ManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaEventHandler)
    def add_manipulation_delta(self, handler: windows_ui_xaml_input.ManipulationDeltaEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_ManipulationDelta(Windows.Foundation.EventRegistrationToken)
    def remove_manipulation_delta(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_ManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler)
    def add_manipulation_inertia_starting(self, handler: windows_ui_xaml_input.ManipulationInertiaStartingEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_ManipulationInertiaStarting(Windows.Foundation.EventRegistrationToken)
    def remove_manipulation_inertia_starting(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_ManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedEventHandler)
    def add_manipulation_started(self, handler: windows_ui_xaml_input.ManipulationStartedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_ManipulationStarted(Windows.Foundation.EventRegistrationToken)
    def remove_manipulation_started(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_ManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingEventHandler)
    def add_manipulation_starting(self, handler: windows_ui_xaml_input.ManipulationStartingEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_ManipulationStarting(Windows.Foundation.EventRegistrationToken)
    def remove_manipulation_starting(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_PointerCanceled(Windows.UI.Xaml.Input.PointerEventHandler)
    def add_pointer_canceled(self, handler: windows_ui_xaml_input.PointerEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_PointerCanceled(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_canceled(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_PointerCaptureLost(Windows.UI.Xaml.Input.PointerEventHandler)
    def add_pointer_capture_lost(self, handler: windows_ui_xaml_input.PointerEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_PointerCaptureLost(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_capture_lost(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_PointerEntered(Windows.UI.Xaml.Input.PointerEventHandler)
    def add_pointer_entered(self, handler: windows_ui_xaml_input.PointerEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_PointerEntered(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_entered(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_PointerExited(Windows.UI.Xaml.Input.PointerEventHandler)
    def add_pointer_exited(self, handler: windows_ui_xaml_input.PointerEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_PointerExited(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_exited(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_PointerMoved(Windows.UI.Xaml.Input.PointerEventHandler)
    def add_pointer_moved(self, handler: windows_ui_xaml_input.PointerEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_PointerMoved(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_moved(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_PointerPressed(Windows.UI.Xaml.Input.PointerEventHandler)
    def add_pointer_pressed(self, handler: windows_ui_xaml_input.PointerEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_PointerPressed(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_pressed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_PointerReleased(Windows.UI.Xaml.Input.PointerEventHandler)
    def add_pointer_released(self, handler: windows_ui_xaml_input.PointerEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_PointerReleased(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_released(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_PointerWheelChanged(Windows.UI.Xaml.Input.PointerEventHandler)
    def add_pointer_wheel_changed(self, handler: windows_ui_xaml_input.PointerEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_PointerWheelChanged(Windows.Foundation.EventRegistrationToken)
    def remove_pointer_wheel_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_RightTapped(Windows.UI.Xaml.Input.RightTappedEventHandler)
    def add_right_tapped(self, handler: windows_ui_xaml_input.RightTappedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_RightTapped(Windows.Foundation.EventRegistrationToken)
    def remove_right_tapped(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_Tapped(Windows.UI.Xaml.Input.TappedEventHandler)
    def add_tapped(self, handler: windows_ui_xaml_input.TappedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_Tapped(Windows.Foundation.EventRegistrationToken)
    def remove_tapped(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_DragStarting(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DragStartingEventArgs>)
    def add_drag_starting(self, handler: windows_foundation.TypedEventHandler[UIElement, DragStartingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_DragStarting(Windows.Foundation.EventRegistrationToken)
    def remove_drag_starting(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_DropCompleted(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DropCompletedEventArgs>)
    def add_drop_completed(self, handler: windows_foundation.TypedEventHandler[UIElement, DropCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_DropCompleted(Windows.Foundation.EventRegistrationToken)
    def remove_drop_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_AccessKeyDisplayDismissed(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>)
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[UIElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_AccessKeyDisplayDismissed(Windows.Foundation.EventRegistrationToken)
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_AccessKeyDisplayRequested(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>)
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[UIElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_AccessKeyDisplayRequested(Windows.Foundation.EventRegistrationToken)
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_AccessKeyInvoked(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs>)
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[UIElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_AccessKeyInvoked(Windows.Foundation.EventRegistrationToken)
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_ContextCanceled(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.RoutedEventArgs>)
    def add_context_canceled(self, handler: windows_foundation.TypedEventHandler[UIElement, RoutedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_ContextCanceled(Windows.Foundation.EventRegistrationToken)
    def remove_context_canceled(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_ContextRequested(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.Input.ContextRequestedEventArgs>)
    def add_context_requested(self, handler: windows_foundation.TypedEventHandler[UIElement, windows_ui_xaml_input.ContextRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_ContextRequested(Windows.Foundation.EventRegistrationToken)
    def remove_context_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_GettingFocus(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.Input.GettingFocusEventArgs>)
    def add_getting_focus(self, handler: windows_foundation.TypedEventHandler[UIElement, windows_ui_xaml_input.GettingFocusEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_GettingFocus(Windows.Foundation.EventRegistrationToken)
    def remove_getting_focus(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_LosingFocus(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.Input.LosingFocusEventArgs>)
    def add_losing_focus(self, handler: windows_foundation.TypedEventHandler[UIElement, windows_ui_xaml_input.LosingFocusEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_LosingFocus(Windows.Foundation.EventRegistrationToken)
    def remove_losing_focus(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_NoFocusCandidateFound(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.Input.NoFocusCandidateFoundEventArgs>)
    def add_no_focus_candidate_found(self, handler: windows_foundation.TypedEventHandler[UIElement, windows_ui_xaml_input.NoFocusCandidateFoundEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_NoFocusCandidateFound(Windows.Foundation.EventRegistrationToken)
    def remove_no_focus_candidate_found(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_CharacterReceived(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs>)
    def add_character_received(self, handler: windows_foundation.TypedEventHandler[UIElement, windows_ui_xaml_input.CharacterReceivedRoutedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_CharacterReceived(Windows.Foundation.EventRegistrationToken)
    def remove_character_received(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_PreviewKeyDown(Windows.UI.Xaml.Input.KeyEventHandler)
    def add_preview_key_down(self, handler: windows_ui_xaml_input.KeyEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_PreviewKeyDown(Windows.Foundation.EventRegistrationToken)
    def remove_preview_key_down(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_PreviewKeyUp(Windows.UI.Xaml.Input.KeyEventHandler)
    def add_preview_key_up(self, handler: windows_ui_xaml_input.KeyEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_PreviewKeyUp(Windows.Foundation.EventRegistrationToken)
    def remove_preview_key_up(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_ProcessKeyboardAccelerators(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs>)
    def add_process_keyboard_accelerators(self, handler: windows_foundation.TypedEventHandler[UIElement, windows_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_ProcessKeyboardAccelerators(Windows.Foundation.EventRegistrationToken)
    def remove_process_keyboard_accelerators(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @typing.final
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.UIElement::add_BringIntoViewRequested(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.BringIntoViewRequestedEventArgs>)
    def add_bring_into_view_requested(self, handler: windows_foundation.TypedEventHandler[UIElement, BringIntoViewRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    @typing.final
    # System.Void Windows.UI.Xaml.UIElement::remove_BringIntoViewRequested(Windows.Foundation.EventRegistrationToken)
    def remove_bring_into_view_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.UI.Xaml.Media.Animation.TransitionCollection Windows.UI.Xaml.UIElement::get_Transitions()
    @_property
    def transitions(self) -> windows_ui_xaml_media_animation.TransitionCollection: ...
    # System.Void Windows.UI.Xaml.UIElement::put_Transitions(Windows.UI.Xaml.Media.Animation.TransitionCollection)
    @transitions.setter
    @typing.final
    def transitions(self, value: windows_ui_xaml_media_animation.TransitionCollection) -> None: ...
    # Windows.UI.Xaml.Media.Projection Windows.UI.Xaml.UIElement::get_Projection()
    @_property
    def projection(self) -> windows_ui_xaml_media.Projection: ...
    # System.Void Windows.UI.Xaml.UIElement::put_Projection(Windows.UI.Xaml.Media.Projection)
    @projection.setter
    @typing.final
    def projection(self, value: windows_ui_xaml_media.Projection) -> None: ...
    # Windows.Foundation.Point Windows.UI.Xaml.UIElement::get_RenderTransformOrigin()
    @_property
    def render_transform_origin(self) -> windows_foundation.Point: ...
    # System.Void Windows.UI.Xaml.UIElement::put_RenderTransformOrigin(Windows.Foundation.Point)
    @render_transform_origin.setter
    @typing.final
    def render_transform_origin(self, value: windows_foundation.Point) -> None: ...
    # System.Double Windows.UI.Xaml.UIElement::get_Opacity()
    @_property
    def opacity(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.UIElement::put_Opacity(System.Double)
    @opacity.setter
    @typing.final
    def opacity(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Input.ManipulationModes Windows.UI.Xaml.UIElement::get_ManipulationMode()
    @_property
    def manipulation_mode(self) -> windows_ui_xaml_input.ManipulationModes: ...
    # System.Void Windows.UI.Xaml.UIElement::put_ManipulationMode(Windows.UI.Xaml.Input.ManipulationModes)
    @manipulation_mode.setter
    @typing.final
    def manipulation_mode(self, value: windows_ui_xaml_input.ManipulationModes) -> None: ...
    # System.Boolean Windows.UI.Xaml.UIElement::get_IsTapEnabled()
    @_property
    def is_tap_enabled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.UIElement::put_IsTapEnabled(System.Boolean)
    @is_tap_enabled.setter
    @typing.final
    def is_tap_enabled(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.UIElement::get_IsRightTapEnabled()
    @_property
    def is_right_tap_enabled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.UIElement::put_IsRightTapEnabled(System.Boolean)
    @is_right_tap_enabled.setter
    @typing.final
    def is_right_tap_enabled(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.UIElement::get_IsHoldingEnabled()
    @_property
    def is_holding_enabled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.UIElement::put_IsHoldingEnabled(System.Boolean)
    @is_holding_enabled.setter
    @typing.final
    def is_holding_enabled(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.UIElement::get_IsHitTestVisible()
    @_property
    def is_hit_test_visible(self) -> bool: ...
    # System.Void Windows.UI.Xaml.UIElement::put_IsHitTestVisible(System.Boolean)
    @is_hit_test_visible.setter
    @typing.final
    def is_hit_test_visible(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.UIElement::get_IsDoubleTapEnabled()
    @_property
    def is_double_tap_enabled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.UIElement::put_IsDoubleTapEnabled(System.Boolean)
    @is_double_tap_enabled.setter
    @typing.final
    def is_double_tap_enabled(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.UIElement::get_AllowDrop()
    @_property
    def allow_drop(self) -> bool: ...
    # System.Void Windows.UI.Xaml.UIElement::put_AllowDrop(System.Boolean)
    @allow_drop.setter
    @typing.final
    def allow_drop(self, value: bool) -> None: ...
    # Windows.UI.Xaml.Media.RectangleGeometry Windows.UI.Xaml.UIElement::get_Clip()
    @_property
    def clip(self) -> windows_ui_xaml_media.RectangleGeometry: ...
    # System.Void Windows.UI.Xaml.UIElement::put_Clip(Windows.UI.Xaml.Media.RectangleGeometry)
    @clip.setter
    @typing.final
    def clip(self, value: windows_ui_xaml_media.RectangleGeometry) -> None: ...
    # Windows.UI.Xaml.Media.CacheMode Windows.UI.Xaml.UIElement::get_CacheMode()
    @_property
    def cache_mode(self) -> windows_ui_xaml_media.CacheMode: ...
    # System.Void Windows.UI.Xaml.UIElement::put_CacheMode(Windows.UI.Xaml.Media.CacheMode)
    @cache_mode.setter
    @typing.final
    def cache_mode(self, value: windows_ui_xaml_media.CacheMode) -> None: ...
    # System.Boolean Windows.UI.Xaml.UIElement::get_UseLayoutRounding()
    @_property
    def use_layout_rounding(self) -> bool: ...
    # System.Void Windows.UI.Xaml.UIElement::put_UseLayoutRounding(System.Boolean)
    @use_layout_rounding.setter
    @typing.final
    def use_layout_rounding(self, value: bool) -> None: ...
    # Windows.UI.Xaml.Media.Transform Windows.UI.Xaml.UIElement::get_RenderTransform()
    @_property
    def render_transform(self) -> windows_ui_xaml_media.Transform: ...
    # System.Void Windows.UI.Xaml.UIElement::put_RenderTransform(Windows.UI.Xaml.Media.Transform)
    @render_transform.setter
    @typing.final
    def render_transform(self, value: windows_ui_xaml_media.Transform) -> None: ...
    # Windows.UI.Xaml.Visibility Windows.UI.Xaml.UIElement::get_Visibility()
    @_property
    def visibility(self) -> Visibility: ...
    # System.Void Windows.UI.Xaml.UIElement::put_Visibility(Windows.UI.Xaml.Visibility)
    @visibility.setter
    @typing.final
    def visibility(self, value: Visibility) -> None: ...
    # Windows.Foundation.Size Windows.UI.Xaml.UIElement::get_DesiredSize()
    @_property
    @typing.final
    def desired_size(self) -> windows_foundation.Size: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Input.Pointer> Windows.UI.Xaml.UIElement::get_PointerCaptures()
    @_property
    @typing.final
    def pointer_captures(self) -> typing.Sequence[windows_ui_xaml_input.Pointer]: ...
    # Windows.Foundation.Size Windows.UI.Xaml.UIElement::get_RenderSize()
    @_property
    @typing.final
    def render_size(self) -> windows_foundation.Size: ...
    # Windows.UI.Xaml.XamlRoot Windows.UI.Xaml.UIElement::get_XamlRoot()
    @_property
    def xaml_root(self) -> XamlRoot: ...
    # System.Void Windows.UI.Xaml.UIElement::put_XamlRoot(Windows.UI.Xaml.XamlRoot)
    @xaml_root.setter
    @typing.final
    def xaml_root(self, value: XamlRoot) -> None: ...
    # Windows.UI.Xaml.Media.Shadow Windows.UI.Xaml.UIElement::get_Shadow()
    @_property
    def shadow(self) -> windows_ui_xaml_media.Shadow: ...
    # System.Void Windows.UI.Xaml.UIElement::put_Shadow(Windows.UI.Xaml.Media.Shadow)
    @shadow.setter
    @typing.final
    def shadow(self, value: windows_ui_xaml_media.Shadow) -> None: ...
    # Windows.Foundation.Numerics.Vector3 Windows.UI.Xaml.UIElement::get_ActualOffset()
    @_property
    @typing.final
    def actual_offset(self) -> windows_foundation_numerics.Vector3: ...
    # Windows.Foundation.Numerics.Vector2 Windows.UI.Xaml.UIElement::get_ActualSize()
    @_property
    @typing.final
    def actual_size(self) -> windows_foundation_numerics.Vector2: ...
    # Windows.UI.UIContext Windows.UI.Xaml.UIElement::get_UIContext()
    @_property
    @typing.final
    def ui_context(self) -> windows_ui.UIContext: ...
    # Windows.UI.Xaml.Media.ElementCompositeMode Windows.UI.Xaml.UIElement::get_CompositeMode()
    @_property
    def composite_mode(self) -> windows_ui_xaml_media.ElementCompositeMode: ...
    # System.Void Windows.UI.Xaml.UIElement::put_CompositeMode(Windows.UI.Xaml.Media.ElementCompositeMode)
    @composite_mode.setter
    @typing.final
    def composite_mode(self, value: windows_ui_xaml_media.ElementCompositeMode) -> None: ...
    # Windows.UI.Xaml.Media.Media3D.Transform3D Windows.UI.Xaml.UIElement::get_Transform3D()
    @_property
    def transform_3d(self) -> windows_ui_xaml_media_media3d.Transform3D: ...
    # System.Void Windows.UI.Xaml.UIElement::put_Transform3D(Windows.UI.Xaml.Media.Media3D.Transform3D)
    @transform_3d.setter
    @typing.final
    def transform_3d(self, value: windows_ui_xaml_media_media3d.Transform3D) -> None: ...
    # System.Boolean Windows.UI.Xaml.UIElement::get_CanDrag()
    @_property
    def can_drag(self) -> bool: ...
    # System.Void Windows.UI.Xaml.UIElement::put_CanDrag(System.Boolean)
    @can_drag.setter
    @typing.final
    def can_drag(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.UIElement::get_IsAccessKeyScope()
    @_property
    def is_access_key_scope(self) -> bool: ...
    # System.Void Windows.UI.Xaml.UIElement::put_IsAccessKeyScope(System.Boolean)
    @is_access_key_scope.setter
    @typing.final
    def is_access_key_scope(self, value: bool) -> None: ...
    # System.Boolean Windows.UI.Xaml.UIElement::get_ExitDisplayModeOnAccessKeyInvoked()
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    # System.Void Windows.UI.Xaml.UIElement::put_ExitDisplayModeOnAccessKeyInvoked(System.Boolean)
    @exit_display_mode_on_access_key_invoked.setter
    @typing.final
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    # Windows.UI.Xaml.Controls.Primitives.FlyoutBase Windows.UI.Xaml.UIElement::get_ContextFlyout()
    @_property
    def context_flyout(self) -> windows_ui_xaml_controls_primitives.FlyoutBase: ...
    # System.Void Windows.UI.Xaml.UIElement::put_ContextFlyout(Windows.UI.Xaml.Controls.Primitives.FlyoutBase)
    @context_flyout.setter
    @typing.final
    def context_flyout(self, value: windows_ui_xaml_controls_primitives.FlyoutBase) -> None: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.UIElement::get_AccessKeyScopeOwner()
    @_property
    def access_key_scope_owner(self) -> DependencyObject: ...
    # System.Void Windows.UI.Xaml.UIElement::put_AccessKeyScopeOwner(Windows.UI.Xaml.DependencyObject)
    @access_key_scope_owner.setter
    @typing.final
    def access_key_scope_owner(self, value: DependencyObject) -> None: ...
    # System.String Windows.UI.Xaml.UIElement::get_AccessKey()
    @_property
    def access_key(self) -> str: ...
    # System.Void Windows.UI.Xaml.UIElement::put_AccessKey(System.String)
    @access_key.setter
    @typing.final
    def access_key(self, value: str) -> None: ...
    # System.Double Windows.UI.Xaml.UIElement::get_KeyTipHorizontalOffset()
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.UIElement::put_KeyTipHorizontalOffset(System.Double)
    @key_tip_horizontal_offset.setter
    @typing.final
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.ElementHighContrastAdjustment Windows.UI.Xaml.UIElement::get_HighContrastAdjustment()
    @_property
    def high_contrast_adjustment(self) -> ElementHighContrastAdjustment: ...
    # System.Void Windows.UI.Xaml.UIElement::put_HighContrastAdjustment(Windows.UI.Xaml.ElementHighContrastAdjustment)
    @high_contrast_adjustment.setter
    @typing.final
    def high_contrast_adjustment(self, value: ElementHighContrastAdjustment) -> None: ...
    # Windows.UI.Xaml.Input.XYFocusNavigationStrategy Windows.UI.Xaml.UIElement::get_XYFocusRightNavigationStrategy()
    @_property
    def x_y_focus_right_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    # System.Void Windows.UI.Xaml.UIElement::put_XYFocusRightNavigationStrategy(Windows.UI.Xaml.Input.XYFocusNavigationStrategy)
    @x_y_focus_right_navigation_strategy.setter
    @typing.final
    def x_y_focus_right_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    # Windows.UI.Xaml.Input.XYFocusKeyboardNavigationMode Windows.UI.Xaml.UIElement::get_XYFocusKeyboardNavigation()
    @_property
    def x_y_focus_keyboard_navigation(self) -> windows_ui_xaml_input.XYFocusKeyboardNavigationMode: ...
    # System.Void Windows.UI.Xaml.UIElement::put_XYFocusKeyboardNavigation(Windows.UI.Xaml.Input.XYFocusKeyboardNavigationMode)
    @x_y_focus_keyboard_navigation.setter
    @typing.final
    def x_y_focus_keyboard_navigation(self, value: windows_ui_xaml_input.XYFocusKeyboardNavigationMode) -> None: ...
    # Windows.UI.Xaml.Input.XYFocusNavigationStrategy Windows.UI.Xaml.UIElement::get_XYFocusDownNavigationStrategy()
    @_property
    def x_y_focus_down_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    # System.Void Windows.UI.Xaml.UIElement::put_XYFocusDownNavigationStrategy(Windows.UI.Xaml.Input.XYFocusNavigationStrategy)
    @x_y_focus_down_navigation_strategy.setter
    @typing.final
    def x_y_focus_down_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    # Windows.UI.Xaml.Input.KeyboardNavigationMode Windows.UI.Xaml.UIElement::get_TabFocusNavigation()
    @_property
    def tab_focus_navigation(self) -> windows_ui_xaml_input.KeyboardNavigationMode: ...
    # System.Void Windows.UI.Xaml.UIElement::put_TabFocusNavigation(Windows.UI.Xaml.Input.KeyboardNavigationMode)
    @tab_focus_navigation.setter
    @typing.final
    def tab_focus_navigation(self, value: windows_ui_xaml_input.KeyboardNavigationMode) -> None: ...
    # System.Double Windows.UI.Xaml.UIElement::get_KeyTipVerticalOffset()
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    # System.Void Windows.UI.Xaml.UIElement::put_KeyTipVerticalOffset(System.Double)
    @key_tip_vertical_offset.setter
    @typing.final
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    # Windows.UI.Xaml.Input.XYFocusNavigationStrategy Windows.UI.Xaml.UIElement::get_XYFocusUpNavigationStrategy()
    @_property
    def x_y_focus_up_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    # System.Void Windows.UI.Xaml.UIElement::put_XYFocusUpNavigationStrategy(Windows.UI.Xaml.Input.XYFocusNavigationStrategy)
    @x_y_focus_up_navigation_strategy.setter
    @typing.final
    def x_y_focus_up_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    # Windows.UI.Xaml.Input.KeyTipPlacementMode Windows.UI.Xaml.UIElement::get_KeyTipPlacementMode()
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    # System.Void Windows.UI.Xaml.UIElement::put_KeyTipPlacementMode(Windows.UI.Xaml.Input.KeyTipPlacementMode)
    @key_tip_placement_mode.setter
    @typing.final
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    # Windows.UI.Xaml.Input.XYFocusNavigationStrategy Windows.UI.Xaml.UIElement::get_XYFocusLeftNavigationStrategy()
    @_property
    def x_y_focus_left_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    # System.Void Windows.UI.Xaml.UIElement::put_XYFocusLeftNavigationStrategy(Windows.UI.Xaml.Input.XYFocusNavigationStrategy)
    @x_y_focus_left_navigation_strategy.setter
    @typing.final
    def x_y_focus_left_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    # Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.XamlLight> Windows.UI.Xaml.UIElement::get_Lights()
    @_property
    @typing.final
    def lights(self) -> typing.MutableSequence[windows_ui_xaml_media.XamlLight]: ...
    # Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Input.KeyboardAccelerator> Windows.UI.Xaml.UIElement::get_KeyboardAccelerators()
    @_property
    @typing.final
    def keyboard_accelerators(self) -> typing.MutableSequence[windows_ui_xaml_input.KeyboardAccelerator]: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.UIElement::get_KeyboardAcceleratorPlacementTarget()
    @_property
    def keyboard_accelerator_placement_target(self) -> DependencyObject: ...
    # System.Void Windows.UI.Xaml.UIElement::put_KeyboardAcceleratorPlacementTarget(Windows.UI.Xaml.DependencyObject)
    @keyboard_accelerator_placement_target.setter
    @typing.final
    def keyboard_accelerator_placement_target(self, value: DependencyObject) -> None: ...
    # Windows.UI.Xaml.Input.KeyboardAcceleratorPlacementMode Windows.UI.Xaml.UIElement::get_KeyboardAcceleratorPlacementMode()
    @_property
    def keyboard_accelerator_placement_mode(self) -> windows_ui_xaml_input.KeyboardAcceleratorPlacementMode: ...
    # System.Void Windows.UI.Xaml.UIElement::put_KeyboardAcceleratorPlacementMode(Windows.UI.Xaml.Input.KeyboardAcceleratorPlacementMode)
    @keyboard_accelerator_placement_mode.setter
    @typing.final
    def keyboard_accelerator_placement_mode(self, value: windows_ui_xaml_input.KeyboardAcceleratorPlacementMode) -> None: ...
    # Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.UIElement::get_KeyTipTarget()
    @_property
    def key_tip_target(self) -> DependencyObject: ...
    # System.Void Windows.UI.Xaml.UIElement::put_KeyTipTarget(Windows.UI.Xaml.DependencyObject)
    @key_tip_target.setter
    @typing.final
    def key_tip_target(self, value: DependencyObject) -> None: ...
    # Windows.UI.Xaml.Vector3Transition Windows.UI.Xaml.UIElement::get_TranslationTransition()
    @_property
    def translation_transition(self) -> Vector3Transition: ...
    # System.Void Windows.UI.Xaml.UIElement::put_TranslationTransition(Windows.UI.Xaml.Vector3Transition)
    @translation_transition.setter
    @typing.final
    def translation_transition(self, value: Vector3Transition) -> None: ...
    # Windows.UI.Xaml.ScalarTransition Windows.UI.Xaml.UIElement::get_OpacityTransition()
    @_property
    def opacity_transition(self) -> ScalarTransition: ...
    # System.Void Windows.UI.Xaml.UIElement::put_OpacityTransition(Windows.UI.Xaml.ScalarTransition)
    @opacity_transition.setter
    @typing.final
    def opacity_transition(self, value: ScalarTransition) -> None: ...
    # Windows.Foundation.Numerics.Matrix4x4 Windows.UI.Xaml.UIElement::get_TransformMatrix()
    @_property
    def transform_matrix(self) -> windows_foundation_numerics.Matrix4x4: ...
    # System.Void Windows.UI.Xaml.UIElement::put_TransformMatrix(Windows.Foundation.Numerics.Matrix4x4)
    @transform_matrix.setter
    @typing.final
    def transform_matrix(self, value: windows_foundation_numerics.Matrix4x4) -> None: ...
    # Windows.UI.Xaml.Vector3Transition Windows.UI.Xaml.UIElement::get_ScaleTransition()
    @_property
    def scale_transition(self) -> Vector3Transition: ...
    # System.Void Windows.UI.Xaml.UIElement::put_ScaleTransition(Windows.UI.Xaml.Vector3Transition)
    @scale_transition.setter
    @typing.final
    def scale_transition(self, value: Vector3Transition) -> None: ...
    # Windows.Foundation.Numerics.Vector3 Windows.UI.Xaml.UIElement::get_Scale()
    @_property
    def scale(self) -> windows_foundation_numerics.Vector3: ...
    # System.Void Windows.UI.Xaml.UIElement::put_Scale(Windows.Foundation.Numerics.Vector3)
    @scale.setter
    @typing.final
    def scale(self, value: windows_foundation_numerics.Vector3) -> None: ...
    # Windows.UI.Xaml.ScalarTransition Windows.UI.Xaml.UIElement::get_RotationTransition()
    @_property
    def rotation_transition(self) -> ScalarTransition: ...
    # System.Void Windows.UI.Xaml.UIElement::put_RotationTransition(Windows.UI.Xaml.ScalarTransition)
    @rotation_transition.setter
    @typing.final
    def rotation_transition(self, value: ScalarTransition) -> None: ...
    # Windows.Foundation.Numerics.Vector3 Windows.UI.Xaml.UIElement::get_RotationAxis()
    @_property
    def rotation_axis(self) -> windows_foundation_numerics.Vector3: ...
    # System.Void Windows.UI.Xaml.UIElement::put_RotationAxis(Windows.Foundation.Numerics.Vector3)
    @rotation_axis.setter
    @typing.final
    def rotation_axis(self, value: windows_foundation_numerics.Vector3) -> None: ...
    # System.Single Windows.UI.Xaml.UIElement::get_Rotation()
    @_property
    def rotation(self) -> winrt.system.Single: ...
    # System.Void Windows.UI.Xaml.UIElement::put_Rotation(System.Single)
    @rotation.setter
    @typing.final
    def rotation(self, value: winrt.system.Single) -> None: ...
    # Windows.Foundation.Numerics.Vector3 Windows.UI.Xaml.UIElement::get_Translation()
    @_property
    def translation(self) -> windows_foundation_numerics.Vector3: ...
    # System.Void Windows.UI.Xaml.UIElement::put_Translation(Windows.Foundation.Numerics.Vector3)
    @translation.setter
    @typing.final
    def translation(self, value: windows_foundation_numerics.Vector3) -> None: ...
    # Windows.Foundation.Numerics.Vector3 Windows.UI.Xaml.UIElement::get_CenterPoint()
    @_property
    def center_point(self) -> windows_foundation_numerics.Vector3: ...
    # System.Void Windows.UI.Xaml.UIElement::put_CenterPoint(Windows.Foundation.Numerics.Vector3)
    @center_point.setter
    @typing.final
    def center_point(self, value: windows_foundation_numerics.Vector3) -> None: ...
    # System.Boolean Windows.UI.Xaml.UIElement::get_CanBeScrollAnchor()
    @_property
    def can_be_scroll_anchor(self) -> bool: ...
    # System.Void Windows.UI.Xaml.UIElement::put_CanBeScrollAnchor(System.Boolean)
    @can_be_scroll_anchor.setter
    @typing.final
    def can_be_scroll_anchor(self, value: bool) -> None: ...

class UIElementWeakCollection_Static(winrt._winrt.IInspectable_Static):
    pass

class UIElementWeakCollection(winrt.system.Object, winrt._winrt.MutableSequence[UIElement], metaclass=UIElementWeakCollection_Static):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[UIElement]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> UIElement: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[UIElement]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: UIElement) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[UIElement]) -> None: ...
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Void Windows.UI.Xaml.UIElementWeakCollection::Append(Windows.UI.Xaml.UIElement)
    def append(self, value: UIElement, /) -> None: ...
    # System.Void Windows.UI.Xaml.UIElementWeakCollection::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.UIElement> Windows.UI.Xaml.UIElementWeakCollection::First()
    def first(self) -> windows_foundation_collections.IIterator[UIElement]: ...
    # Windows.UI.Xaml.UIElement Windows.UI.Xaml.UIElementWeakCollection::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> UIElement: ...
    # System.UInt32 Windows.UI.Xaml.UIElementWeakCollection::GetMany(System.UInt32,Windows.UI.Xaml.UIElement[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[UIElement], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.UIElement> Windows.UI.Xaml.UIElementWeakCollection::GetView()
    def get_view(self) -> typing.Sequence[UIElement]: ...
    # System.Boolean Windows.UI.Xaml.UIElementWeakCollection::IndexOf(Windows.UI.Xaml.UIElement,System.UInt32&)
    def index_of(self, value: UIElement, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.Void Windows.UI.Xaml.UIElementWeakCollection::InsertAt(System.UInt32,Windows.UI.Xaml.UIElement)
    def insert_at(self, index: winrt.system.UInt32, value: UIElement, /) -> None: ...
    # System.Void Windows.UI.Xaml.UIElementWeakCollection::RemoveAt(System.UInt32)
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    # System.Void Windows.UI.Xaml.UIElementWeakCollection::RemoveAtEnd()
    def remove_at_end(self) -> None: ...
    # System.Void Windows.UI.Xaml.UIElementWeakCollection::ReplaceAll(Windows.UI.Xaml.UIElement[])
    def replace_all(self, items: typing.Union[winrt.system.Array[UIElement], winrt.system.ReadableBuffer], /) -> None: ...
    # System.Void Windows.UI.Xaml.UIElementWeakCollection::SetAt(System.UInt32,Windows.UI.Xaml.UIElement)
    def set_at(self, index: winrt.system.UInt32, value: UIElement, /) -> None: ...
    # System.UInt32 Windows.UI.Xaml.UIElementWeakCollection::get_Size()
    @_property
    @typing.final
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class UnhandledExceptionEventArgs(winrt.system.Object):
    # System.Boolean Windows.UI.Xaml.UnhandledExceptionEventArgs::get_Handled()
    @_property
    def handled(self) -> bool: ...
    # System.Void Windows.UI.Xaml.UnhandledExceptionEventArgs::put_Handled(System.Boolean)
    @handled.setter
    def handled(self, value: bool) -> None: ...
    # Windows.Foundation.HResult Windows.UI.Xaml.UnhandledExceptionEventArgs::get_Exception()
    @_property
    def exception(self) -> windows_foundation.HResult: ...
    # System.String Windows.UI.Xaml.UnhandledExceptionEventArgs::get_Message()
    @_property
    def message(self) -> str: ...

class Vector3Transition_Static(winrt._winrt.IInspectable_Static):
    pass

class Vector3Transition(winrt.system.Object, metaclass=Vector3Transition_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.TimeSpan Windows.UI.Xaml.Vector3Transition::get_Duration()
    @_property
    def duration(self) -> datetime.timedelta: ...
    # System.Void Windows.UI.Xaml.Vector3Transition::put_Duration(Windows.Foundation.TimeSpan)
    @duration.setter
    @typing.final
    def duration(self, value: datetime.timedelta) -> None: ...
    # Windows.UI.Xaml.Vector3TransitionComponents Windows.UI.Xaml.Vector3Transition::get_Components()
    @_property
    def components(self) -> Vector3TransitionComponents: ...
    # System.Void Windows.UI.Xaml.Vector3Transition::put_Components(Windows.UI.Xaml.Vector3TransitionComponents)
    @components.setter
    @typing.final
    def components(self, value: Vector3TransitionComponents) -> None: ...

@typing.final
class VisualState(DependencyObject):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.Media.Animation.Storyboard Windows.UI.Xaml.VisualState::get_Storyboard()
    @_property
    def storyboard(self) -> windows_ui_xaml_media_animation.Storyboard: ...
    # System.Void Windows.UI.Xaml.VisualState::put_Storyboard(Windows.UI.Xaml.Media.Animation.Storyboard)
    @storyboard.setter
    def storyboard(self, value: windows_ui_xaml_media_animation.Storyboard) -> None: ...
    # System.String Windows.UI.Xaml.VisualState::get_Name()
    @_property
    def name(self) -> str: ...
    # Windows.UI.Xaml.SetterBaseCollection Windows.UI.Xaml.VisualState::get_Setters()
    @_property
    def setters(self) -> SetterBaseCollection: ...
    # Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.StateTriggerBase> Windows.UI.Xaml.VisualState::get_StateTriggers()
    @_property
    def state_triggers(self) -> typing.MutableSequence[StateTriggerBase]: ...

@typing.final
class VisualStateChangedEventArgs(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.UI.Xaml.VisualState Windows.UI.Xaml.VisualStateChangedEventArgs::get_OldState()
    @_property
    def old_state(self) -> VisualState: ...
    # System.Void Windows.UI.Xaml.VisualStateChangedEventArgs::put_OldState(Windows.UI.Xaml.VisualState)
    @old_state.setter
    def old_state(self, value: VisualState) -> None: ...
    # Windows.UI.Xaml.VisualState Windows.UI.Xaml.VisualStateChangedEventArgs::get_NewState()
    @_property
    def new_state(self) -> VisualState: ...
    # System.Void Windows.UI.Xaml.VisualStateChangedEventArgs::put_NewState(Windows.UI.Xaml.VisualState)
    @new_state.setter
    def new_state(self, value: VisualState) -> None: ...
    # Windows.UI.Xaml.Controls.Control Windows.UI.Xaml.VisualStateChangedEventArgs::get_Control()
    @_property
    def control(self) -> windows_ui_xaml_controls.Control: ...
    # System.Void Windows.UI.Xaml.VisualStateChangedEventArgs::put_Control(Windows.UI.Xaml.Controls.Control)
    @control.setter
    def control(self, value: windows_ui_xaml_controls.Control) -> None: ...

@typing.final
class VisualStateGroup(DependencyObject):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.VisualStateGroup::add_CurrentStateChanged(Windows.UI.Xaml.VisualStateChangedEventHandler)
    def add_current_state_changed(self, handler: VisualStateChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.UI.Xaml.VisualStateGroup::remove_CurrentStateChanged(Windows.Foundation.EventRegistrationToken)
    def remove_current_state_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.VisualStateGroup::add_CurrentStateChanging(Windows.UI.Xaml.VisualStateChangedEventHandler)
    def add_current_state_changing(self, handler: VisualStateChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.UI.Xaml.VisualStateGroup::remove_CurrentStateChanging(Windows.Foundation.EventRegistrationToken)
    def remove_current_state_changing(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.UI.Xaml.VisualState Windows.UI.Xaml.VisualStateGroup::get_CurrentState()
    @_property
    def current_state(self) -> VisualState: ...
    # System.String Windows.UI.Xaml.VisualStateGroup::get_Name()
    @_property
    def name(self) -> str: ...
    # Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.VisualState> Windows.UI.Xaml.VisualStateGroup::get_States()
    @_property
    def states(self) -> typing.MutableSequence[VisualState]: ...
    # Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.VisualTransition> Windows.UI.Xaml.VisualStateGroup::get_Transitions()
    @_property
    def transitions(self) -> typing.MutableSequence[VisualTransition]: ...

class VisualStateManager_Static(DependencyObject_Static):
    # Windows.UI.Xaml.VisualStateManager Windows.UI.Xaml.VisualStateManager::GetCustomVisualStateManager(Windows.UI.Xaml.FrameworkElement)
    def get_custom_visual_state_manager(cls, obj: FrameworkElement, /) -> VisualStateManager: ...
    # Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.VisualStateGroup> Windows.UI.Xaml.VisualStateManager::GetVisualStateGroups(Windows.UI.Xaml.FrameworkElement)
    def get_visual_state_groups(cls, obj: FrameworkElement, /) -> typing.MutableSequence[VisualStateGroup]: ...
    # System.Boolean Windows.UI.Xaml.VisualStateManager::GoToState(Windows.UI.Xaml.Controls.Control,System.String,System.Boolean)
    def go_to_state(cls, control: windows_ui_xaml_controls.Control, state_name: str, use_transitions: bool, /) -> bool: ...
    # System.Void Windows.UI.Xaml.VisualStateManager::SetCustomVisualStateManager(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.VisualStateManager)
    def set_custom_visual_state_manager(cls, obj: FrameworkElement, value: VisualStateManager, /) -> None: ...
    # Windows.UI.Xaml.DependencyProperty Windows.UI.Xaml.VisualStateManager::get_CustomVisualStateManagerProperty()
    @_property
    @typing.final
    def custom_visual_state_manager_property(cls) -> DependencyProperty: ...

class VisualStateManager(DependencyObject, metaclass=VisualStateManager_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.Boolean Windows.UI.Xaml.VisualStateManager::GoToStateCore(Windows.UI.Xaml.Controls.Control,Windows.UI.Xaml.FrameworkElement,System.String,Windows.UI.Xaml.VisualStateGroup,Windows.UI.Xaml.VisualState,System.Boolean)
    def _go_to_state_core(self, control: windows_ui_xaml_controls.Control, template_root: FrameworkElement, state_name: str, group: VisualStateGroup, state: VisualState, use_transitions: bool, /) -> bool: ...
    @typing.final
    # System.Void Windows.UI.Xaml.VisualStateManager::RaiseCurrentStateChanged(Windows.UI.Xaml.VisualStateGroup,Windows.UI.Xaml.VisualState,Windows.UI.Xaml.VisualState,Windows.UI.Xaml.Controls.Control)
    def _raise_current_state_changed(self, state_group: VisualStateGroup, old_state: VisualState, new_state: VisualState, control: windows_ui_xaml_controls.Control, /) -> None: ...
    @typing.final
    # System.Void Windows.UI.Xaml.VisualStateManager::RaiseCurrentStateChanging(Windows.UI.Xaml.VisualStateGroup,Windows.UI.Xaml.VisualState,Windows.UI.Xaml.VisualState,Windows.UI.Xaml.Controls.Control)
    def _raise_current_state_changing(self, state_group: VisualStateGroup, old_state: VisualState, new_state: VisualState, control: windows_ui_xaml_controls.Control, /) -> None: ...

class VisualTransition_Static(DependencyObject_Static):
    pass

class VisualTransition(DependencyObject, metaclass=VisualTransition_Static):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.UI.Xaml.VisualTransition::get_To()
    @_property
    def to(self) -> str: ...
    # System.Void Windows.UI.Xaml.VisualTransition::put_To(System.String)
    @to.setter
    @typing.final
    def to(self, value: str) -> None: ...
    # Windows.UI.Xaml.Media.Animation.Storyboard Windows.UI.Xaml.VisualTransition::get_Storyboard()
    @_property
    def storyboard(self) -> windows_ui_xaml_media_animation.Storyboard: ...
    # System.Void Windows.UI.Xaml.VisualTransition::put_Storyboard(Windows.UI.Xaml.Media.Animation.Storyboard)
    @storyboard.setter
    @typing.final
    def storyboard(self, value: windows_ui_xaml_media_animation.Storyboard) -> None: ...
    # Windows.UI.Xaml.Media.Animation.EasingFunctionBase Windows.UI.Xaml.VisualTransition::get_GeneratedEasingFunction()
    @_property
    def generated_easing_function(self) -> windows_ui_xaml_media_animation.EasingFunctionBase: ...
    # System.Void Windows.UI.Xaml.VisualTransition::put_GeneratedEasingFunction(Windows.UI.Xaml.Media.Animation.EasingFunctionBase)
    @generated_easing_function.setter
    @typing.final
    def generated_easing_function(self, value: windows_ui_xaml_media_animation.EasingFunctionBase) -> None: ...
    # Windows.UI.Xaml.Duration Windows.UI.Xaml.VisualTransition::get_GeneratedDuration()
    @_property
    def generated_duration(self) -> Duration: ...
    # System.Void Windows.UI.Xaml.VisualTransition::put_GeneratedDuration(Windows.UI.Xaml.Duration)
    @generated_duration.setter
    @typing.final
    def generated_duration(self, value: Duration) -> None: ...
    # System.String Windows.UI.Xaml.VisualTransition::get_From()
    @_property
    def from_(self) -> str: ...
    # System.Void Windows.UI.Xaml.VisualTransition::put_From(System.String)
    @from_.setter
    @typing.final
    def from_(self, value: str) -> None: ...

@typing.final
class Window_Static(winrt._winrt.IInspectable_Static):
    # Windows.UI.Xaml.Window Windows.UI.Xaml.Window::get_Current()
    @_property
    def current(cls) -> Window: ...

@typing.final
class Window(winrt.system.Object, metaclass=Window_Static):
    # System.Void Windows.UI.Xaml.Window::Activate()
    def activate(self) -> None: ...
    # System.Void Windows.UI.Xaml.Window::Close()
    def close(self) -> None: ...
    # System.Void Windows.UI.Xaml.Window::SetTitleBar(Windows.UI.Xaml.UIElement)
    def set_title_bar(self, value: UIElement, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Window::add_Activated(Windows.UI.Xaml.WindowActivatedEventHandler)
    def add_activated(self, handler: WindowActivatedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.UI.Xaml.Window::remove_Activated(Windows.Foundation.EventRegistrationToken)
    def remove_activated(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Window::add_Closed(Windows.UI.Xaml.WindowClosedEventHandler)
    def add_closed(self, handler: WindowClosedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.UI.Xaml.Window::remove_Closed(Windows.Foundation.EventRegistrationToken)
    def remove_closed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Window::add_SizeChanged(Windows.UI.Xaml.WindowSizeChangedEventHandler)
    def add_size_changed(self, handler: WindowSizeChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.UI.Xaml.Window::remove_SizeChanged(Windows.Foundation.EventRegistrationToken)
    def remove_size_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.Window::add_VisibilityChanged(Windows.UI.Xaml.WindowVisibilityChangedEventHandler)
    def add_visibility_changed(self, handler: WindowVisibilityChangedEventHandler, /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.UI.Xaml.Window::remove_VisibilityChanged(Windows.Foundation.EventRegistrationToken)
    def remove_visibility_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.UI.Xaml.UIElement Windows.UI.Xaml.Window::get_Content()
    @_property
    def content(self) -> UIElement: ...
    # System.Void Windows.UI.Xaml.Window::put_Content(Windows.UI.Xaml.UIElement)
    @content.setter
    def content(self, value: UIElement) -> None: ...
    # Windows.Foundation.Rect Windows.UI.Xaml.Window::get_Bounds()
    @_property
    def bounds(self) -> windows_foundation.Rect: ...
    # Windows.UI.Core.CoreWindow Windows.UI.Xaml.Window::get_CoreWindow()
    @_property
    def core_window(self) -> windows_ui_core.CoreWindow: ...
    # Windows.UI.Core.CoreDispatcher Windows.UI.Xaml.Window::get_Dispatcher()
    @_property
    def dispatcher(self) -> windows_ui_core.CoreDispatcher: ...
    # System.Boolean Windows.UI.Xaml.Window::get_Visible()
    @_property
    def visible(self) -> bool: ...
    # Windows.UI.Composition.Compositor Windows.UI.Xaml.Window::get_Compositor()
    @_property
    def compositor(self) -> windows_ui_composition.Compositor: ...
    # Windows.UI.UIContext Windows.UI.Xaml.Window::get_UIContext()
    @_property
    def ui_context(self) -> windows_ui.UIContext: ...

@typing.final
class WindowCreatedEventArgs(winrt.system.Object):
    # Windows.UI.Xaml.Window Windows.UI.Xaml.WindowCreatedEventArgs::get_Window()
    @_property
    def window(self) -> Window: ...

@typing.final
class XamlRoot(winrt.system.Object):
    # Windows.Foundation.EventRegistrationToken Windows.UI.Xaml.XamlRoot::add_Changed(Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.XamlRoot,Windows.UI.Xaml.XamlRootChangedEventArgs>)
    def add_changed(self, handler: windows_foundation.TypedEventHandler[XamlRoot, XamlRootChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.UI.Xaml.XamlRoot::remove_Changed(Windows.Foundation.EventRegistrationToken)
    def remove_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.UI.Xaml.UIElement Windows.UI.Xaml.XamlRoot::get_Content()
    @_property
    def content(self) -> UIElement: ...
    # System.Boolean Windows.UI.Xaml.XamlRoot::get_IsHostVisible()
    @_property
    def is_host_visible(self) -> bool: ...
    # System.Double Windows.UI.Xaml.XamlRoot::get_RasterizationScale()
    @_property
    def rasterization_scale(self) -> winrt.system.Double: ...
    # Windows.Foundation.Size Windows.UI.Xaml.XamlRoot::get_Size()
    @_property
    def size(self) -> windows_foundation.Size: ...
    # Windows.UI.UIContext Windows.UI.Xaml.XamlRoot::get_UIContext()
    @_property
    def ui_context(self) -> windows_ui.UIContext: ...

@typing.final
class XamlRootChangedEventArgs(winrt.system.Object):
    pass

@typing.final
class _IDataTemplateExtension: ...

class IDataTemplateExtension(winrt._winrt.IInspectable):
    # System.Boolean Windows.UI.Xaml.IDataTemplateExtension::ProcessBinding(System.UInt32)
    @abstractmethod
    def process_binding(self, phase: winrt.system.UInt32, /) -> bool: ...
    # System.Int32 Windows.UI.Xaml.IDataTemplateExtension::ProcessBindings(Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)
    @abstractmethod
    def process_bindings(self, arg: windows_ui_xaml_controls.ContainerContentChangingEventArgs, /) -> winrt.system.Int32: ...
    # System.Void Windows.UI.Xaml.IDataTemplateExtension::ResetTemplate()
    @abstractmethod
    def reset_template(self) -> None: ...

@typing.final
class _IElementFactory: ...

class IElementFactory(winrt._winrt.IInspectable):
    # Windows.UI.Xaml.UIElement Windows.UI.Xaml.IElementFactory::GetElement(Windows.UI.Xaml.ElementFactoryGetArgs)
    @abstractmethod
    def get_element(self, args: ElementFactoryGetArgs, /) -> UIElement: ...
    # System.Void Windows.UI.Xaml.IElementFactory::RecycleElement(Windows.UI.Xaml.ElementFactoryRecycleArgs)
    @abstractmethod
    def recycle_element(self, args: ElementFactoryRecycleArgs, /) -> None: ...

