# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.system.diagnostics
import winrt.windows.web.http

from winrt.windows.web.http.diagnostics import HttpDiagnosticRequestInitiator

Self = typing.TypeVar('Self')

@typing.final
class HttpDiagnosticProvider_Static(type):
    def create_from_process_diagnostic_info(cls, process_diagnostic_info: typing.Optional[winrt.windows.system.diagnostics.ProcessDiagnosticInfo], /) -> typing.Optional[HttpDiagnosticProvider]: ...

@typing.final
class HttpDiagnosticProvider(winrt.system.Object, metaclass=HttpDiagnosticProvider_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HttpDiagnosticProvider: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def add_request_response_completed(self, handler: winrt.windows.foundation.TypedEventHandler[HttpDiagnosticProvider, HttpDiagnosticProviderRequestResponseCompletedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_request_response_completed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_request_sent(self, handler: winrt.windows.foundation.TypedEventHandler[HttpDiagnosticProvider, HttpDiagnosticProviderRequestSentEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_request_sent(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_response_received(self, handler: winrt.windows.foundation.TypedEventHandler[HttpDiagnosticProvider, HttpDiagnosticProviderResponseReceivedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_response_received(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...

@typing.final
class HttpDiagnosticProviderRequestResponseCompletedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HttpDiagnosticProviderRequestResponseCompletedEventArgs: ...
    @_property
    def activity_id(self) -> _uuid.UUID: ...
    @_property
    def initiator(self) -> HttpDiagnosticRequestInitiator: ...
    @_property
    def process_id(self) -> winrt.system.UInt32: ...
    @_property
    def requested_uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    @_property
    def source_locations(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[HttpDiagnosticSourceLocation]]: ...
    @_property
    def thread_id(self) -> winrt.system.UInt32: ...
    @_property
    def timestamps(self) -> typing.Optional[HttpDiagnosticProviderRequestResponseTimestamps]: ...

@typing.final
class HttpDiagnosticProviderRequestResponseTimestamps(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HttpDiagnosticProviderRequestResponseTimestamps: ...
    @_property
    def cache_checked_timestamp(self) -> typing.Optional[typing.Optional[datetime.datetime]]: ...
    @_property
    def connection_completed_timestamp(self) -> typing.Optional[typing.Optional[datetime.datetime]]: ...
    @_property
    def connection_initiated_timestamp(self) -> typing.Optional[typing.Optional[datetime.datetime]]: ...
    @_property
    def name_resolved_timestamp(self) -> typing.Optional[typing.Optional[datetime.datetime]]: ...
    @_property
    def request_completed_timestamp(self) -> typing.Optional[typing.Optional[datetime.datetime]]: ...
    @_property
    def request_sent_timestamp(self) -> typing.Optional[typing.Optional[datetime.datetime]]: ...
    @_property
    def response_completed_timestamp(self) -> typing.Optional[typing.Optional[datetime.datetime]]: ...
    @_property
    def response_received_timestamp(self) -> typing.Optional[typing.Optional[datetime.datetime]]: ...
    @_property
    def ssl_negotiated_timestamp(self) -> typing.Optional[typing.Optional[datetime.datetime]]: ...

@typing.final
class HttpDiagnosticProviderRequestSentEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HttpDiagnosticProviderRequestSentEventArgs: ...
    @_property
    def activity_id(self) -> _uuid.UUID: ...
    @_property
    def initiator(self) -> HttpDiagnosticRequestInitiator: ...
    @_property
    def message(self) -> typing.Optional[winrt.windows.web.http.HttpRequestMessage]: ...
    @_property
    def process_id(self) -> winrt.system.UInt32: ...
    @_property
    def source_locations(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[HttpDiagnosticSourceLocation]]: ...
    @_property
    def thread_id(self) -> winrt.system.UInt32: ...
    @_property
    def timestamp(self) -> datetime.datetime: ...

@typing.final
class HttpDiagnosticProviderResponseReceivedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HttpDiagnosticProviderResponseReceivedEventArgs: ...
    @_property
    def activity_id(self) -> _uuid.UUID: ...
    @_property
    def message(self) -> typing.Optional[winrt.windows.web.http.HttpResponseMessage]: ...
    @_property
    def timestamp(self) -> datetime.datetime: ...

@typing.final
class HttpDiagnosticSourceLocation(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HttpDiagnosticSourceLocation: ...
    @_property
    def column_number(self) -> winrt.system.UInt64: ...
    @_property
    def line_number(self) -> winrt.system.UInt64: ...
    @_property
    def source_uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...

