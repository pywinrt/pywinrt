# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.foundation.numerics as windows_foundation_numerics
import winrt.windows.perception as windows_perception
import winrt.windows.storage.streams as windows_storage_streams
import winrt.windows.system.remotesystems as windows_system_remotesystems

from winrt.windows.perception.spatial import SpatialAnchorExportPurpose, SpatialEntityWatcherStatus, SpatialLocatability, SpatialLookDirectionRange, SpatialMovementRange, SpatialPerceptionAccessStatus

Self = typing.TypeVar('Self')

@typing.final
class SpatialBoundingBox:
    center: windows_foundation_numerics.Vector3
    extents: windows_foundation_numerics.Vector3
    def __init__(self, center: windows_foundation_numerics.Vector3 = windows_foundation_numerics.Vector3(), extents: windows_foundation_numerics.Vector3 = windows_foundation_numerics.Vector3()) -> None: ...

@typing.final
class SpatialBoundingFrustum:
    near: windows_foundation_numerics.Plane
    far: windows_foundation_numerics.Plane
    right: windows_foundation_numerics.Plane
    left: windows_foundation_numerics.Plane
    top: windows_foundation_numerics.Plane
    bottom: windows_foundation_numerics.Plane
    def __init__(self, near: windows_foundation_numerics.Plane = windows_foundation_numerics.Plane(), far: windows_foundation_numerics.Plane = windows_foundation_numerics.Plane(), right: windows_foundation_numerics.Plane = windows_foundation_numerics.Plane(), left: windows_foundation_numerics.Plane = windows_foundation_numerics.Plane(), top: windows_foundation_numerics.Plane = windows_foundation_numerics.Plane(), bottom: windows_foundation_numerics.Plane = windows_foundation_numerics.Plane()) -> None: ...

@typing.final
class SpatialBoundingOrientedBox:
    center: windows_foundation_numerics.Vector3
    extents: windows_foundation_numerics.Vector3
    orientation: windows_foundation_numerics.Quaternion
    def __init__(self, center: windows_foundation_numerics.Vector3 = windows_foundation_numerics.Vector3(), extents: windows_foundation_numerics.Vector3 = windows_foundation_numerics.Vector3(), orientation: windows_foundation_numerics.Quaternion = windows_foundation_numerics.Quaternion()) -> None: ...

@typing.final
class SpatialBoundingSphere:
    center: windows_foundation_numerics.Vector3
    radius: winrt.system.Single
    def __init__(self, center: windows_foundation_numerics.Vector3 = windows_foundation_numerics.Vector3(), radius: winrt.system.Single = 0) -> None: ...

@typing.final
class SpatialRay:
    origin: windows_foundation_numerics.Vector3
    direction: windows_foundation_numerics.Vector3
    def __init__(self, origin: windows_foundation_numerics.Vector3 = windows_foundation_numerics.Vector3(), direction: windows_foundation_numerics.Vector3 = windows_foundation_numerics.Vector3()) -> None: ...

@typing.final
class SpatialAnchor_Static(type):
    # Windows.Perception.Spatial.SpatialAnchor Windows.Perception.Spatial.SpatialAnchor::TryCreateRelativeTo(Windows.Perception.Spatial.SpatialCoordinateSystem)
    def try_create_relative_to(cls, coordinate_system: SpatialCoordinateSystem, /) -> typing.Optional[SpatialAnchor]: ...
    # Windows.Perception.Spatial.SpatialAnchor Windows.Perception.Spatial.SpatialAnchor::TryCreateRelativeTo(Windows.Perception.Spatial.SpatialCoordinateSystem,Windows.Foundation.Numerics.Vector3,Windows.Foundation.Numerics.Quaternion)
    def try_create_with_position_and_orientation_relative_to(cls, coordinate_system: SpatialCoordinateSystem, position: windows_foundation_numerics.Vector3, orientation: windows_foundation_numerics.Quaternion, /) -> typing.Optional[SpatialAnchor]: ...
    # Windows.Perception.Spatial.SpatialAnchor Windows.Perception.Spatial.SpatialAnchor::TryCreateRelativeTo(Windows.Perception.Spatial.SpatialCoordinateSystem,Windows.Foundation.Numerics.Vector3)
    def try_create_with_position_relative_to(cls, coordinate_system: SpatialCoordinateSystem, position: windows_foundation_numerics.Vector3, /) -> typing.Optional[SpatialAnchor]: ...

@typing.final
class SpatialAnchor(winrt.system.Object, metaclass=SpatialAnchor_Static):
    # Windows.Foundation.EventRegistrationToken Windows.Perception.Spatial.SpatialAnchor::add_RawCoordinateSystemAdjusted(Windows.Foundation.TypedEventHandler`2<Windows.Perception.Spatial.SpatialAnchor,Windows.Perception.Spatial.SpatialAnchorRawCoordinateSystemAdjustedEventArgs>)
    def add_raw_coordinate_system_adjusted(self, handler: windows_foundation.TypedEventHandler[SpatialAnchor, SpatialAnchorRawCoordinateSystemAdjustedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Perception.Spatial.SpatialAnchor::remove_RawCoordinateSystemAdjusted(Windows.Foundation.EventRegistrationToken)
    def remove_raw_coordinate_system_adjusted(self, cookie: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Perception.Spatial.SpatialCoordinateSystem Windows.Perception.Spatial.SpatialAnchor::get_CoordinateSystem()
    @_property
    def coordinate_system(self) -> SpatialCoordinateSystem: ...
    # Windows.Perception.Spatial.SpatialCoordinateSystem Windows.Perception.Spatial.SpatialAnchor::get_RawCoordinateSystem()
    @_property
    def raw_coordinate_system(self) -> SpatialCoordinateSystem: ...
    # System.Boolean Windows.Perception.Spatial.SpatialAnchor::get_RemovedByUser()
    @_property
    def removed_by_user(self) -> bool: ...

@typing.final
class SpatialAnchorExportSufficiency(winrt.system.Object):
    # System.Boolean Windows.Perception.Spatial.SpatialAnchorExportSufficiency::get_IsMinimallySufficient()
    @_property
    def is_minimally_sufficient(self) -> bool: ...
    # System.Double Windows.Perception.Spatial.SpatialAnchorExportSufficiency::get_RecommendedSufficiencyLevel()
    @_property
    def recommended_sufficiency_level(self) -> winrt.system.Double: ...
    # System.Double Windows.Perception.Spatial.SpatialAnchorExportSufficiency::get_SufficiencyLevel()
    @_property
    def sufficiency_level(self) -> winrt.system.Double: ...

@typing.final
class SpatialAnchorExporter_Static(type):
    # Windows.Perception.Spatial.SpatialAnchorExporter Windows.Perception.Spatial.SpatialAnchorExporter::GetDefault()
    def get_default(cls) -> SpatialAnchorExporter: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Perception.Spatial.SpatialPerceptionAccessStatus> Windows.Perception.Spatial.SpatialAnchorExporter::RequestAccessAsync()
    def request_access_async(cls) -> windows_foundation.IAsyncOperation[SpatialPerceptionAccessStatus]: ...

@typing.final
class SpatialAnchorExporter(winrt.system.Object, metaclass=SpatialAnchorExporter_Static):
    # Windows.Foundation.IAsyncOperation`1<Windows.Perception.Spatial.SpatialAnchorExportSufficiency> Windows.Perception.Spatial.SpatialAnchorExporter::GetAnchorExportSufficiencyAsync(Windows.Perception.Spatial.SpatialAnchor,Windows.Perception.Spatial.SpatialAnchorExportPurpose)
    def get_anchor_export_sufficiency_async(self, anchor: SpatialAnchor, purpose: SpatialAnchorExportPurpose, /) -> windows_foundation.IAsyncOperation[SpatialAnchorExportSufficiency]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.Perception.Spatial.SpatialAnchorExporter::TryExportAnchorAsync(Windows.Perception.Spatial.SpatialAnchor,Windows.Perception.Spatial.SpatialAnchorExportPurpose,Windows.Storage.Streams.IOutputStream)
    def try_export_anchor_async(self, anchor: SpatialAnchor, purpose: SpatialAnchorExportPurpose, stream: windows_storage_streams.ImplementsIOutputStream, /) -> windows_foundation.IAsyncOperation[bool]: ...

@typing.final
class SpatialAnchorManager_Static(type):
    # Windows.Foundation.IAsyncOperation`1<Windows.Perception.Spatial.SpatialAnchorStore> Windows.Perception.Spatial.SpatialAnchorManager::RequestStoreAsync()
    def request_store_async(cls) -> windows_foundation.IAsyncOperation[SpatialAnchorStore]: ...

@typing.final
class SpatialAnchorManager(winrt.system.Object, metaclass=SpatialAnchorManager_Static):
    pass

@typing.final
class SpatialAnchorRawCoordinateSystemAdjustedEventArgs(winrt.system.Object):
    # Windows.Foundation.Numerics.Matrix4x4 Windows.Perception.Spatial.SpatialAnchorRawCoordinateSystemAdjustedEventArgs::get_OldRawCoordinateSystemToNewRawCoordinateSystemTransform()
    @_property
    def old_raw_coordinate_system_to_new_raw_coordinate_system_transform(self) -> windows_foundation_numerics.Matrix4x4: ...

@typing.final
class SpatialAnchorStore(winrt.system.Object):
    # System.Void Windows.Perception.Spatial.SpatialAnchorStore::Clear()
    def clear(self) -> None: ...
    # Windows.Foundation.Collections.IMapView`2<System.String,Windows.Perception.Spatial.SpatialAnchor> Windows.Perception.Spatial.SpatialAnchorStore::GetAllSavedAnchors()
    def get_all_saved_anchors(self) -> typing.Mapping[str, SpatialAnchor]: ...
    # System.Void Windows.Perception.Spatial.SpatialAnchorStore::Remove(System.String)
    def remove(self, id: str, /) -> None: ...
    # System.Boolean Windows.Perception.Spatial.SpatialAnchorStore::TrySave(System.String,Windows.Perception.Spatial.SpatialAnchor)
    def try_save(self, id: str, anchor: SpatialAnchor, /) -> bool: ...

@typing.final
class SpatialAnchorTransferManager_Static(type):
    # Windows.Foundation.IAsyncOperation`1<Windows.Perception.Spatial.SpatialPerceptionAccessStatus> Windows.Perception.Spatial.SpatialAnchorTransferManager::RequestAccessAsync()
    # @deprecated("Use SpatialEntityStore instead of SpatialAnchorTransferManager. For more info, see MSDN.")
    def request_access_async(cls) -> windows_foundation.IAsyncOperation[SpatialPerceptionAccessStatus]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.Perception.Spatial.SpatialAnchorTransferManager::TryExportAnchorsAsync(Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<System.String,Windows.Perception.Spatial.SpatialAnchor>>,Windows.Storage.Streams.IOutputStream)
    # @deprecated("Use SpatialEntityStore instead of SpatialAnchorTransferManager. For more info, see MSDN.")
    def try_export_anchors_async(cls, anchors: typing.Iterable[windows_foundation_collections.ImplementsIKeyValuePair[str, SpatialAnchor]], stream: windows_storage_streams.ImplementsIOutputStream, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IMapView`2<System.String,Windows.Perception.Spatial.SpatialAnchor>> Windows.Perception.Spatial.SpatialAnchorTransferManager::TryImportAnchorsAsync(Windows.Storage.Streams.IInputStream)
    # @deprecated("Use SpatialEntityStore instead of SpatialAnchorTransferManager. For more info, see MSDN.")
    def try_import_anchors_async(cls, stream: windows_storage_streams.ImplementsIInputStream, /) -> windows_foundation.IAsyncOperation[typing.Mapping[str, SpatialAnchor]]: ...

@typing.final
class SpatialAnchorTransferManager(winrt.system.Object, metaclass=SpatialAnchorTransferManager_Static):
    pass

@typing.final
class SpatialBoundingVolume_Static(type):
    # Windows.Perception.Spatial.SpatialBoundingVolume Windows.Perception.Spatial.SpatialBoundingVolume::FromBox(Windows.Perception.Spatial.SpatialCoordinateSystem,Windows.Perception.Spatial.SpatialBoundingBox)
    def from_box(cls, coordinate_system: SpatialCoordinateSystem, box: SpatialBoundingBox, /) -> SpatialBoundingVolume: ...
    # Windows.Perception.Spatial.SpatialBoundingVolume Windows.Perception.Spatial.SpatialBoundingVolume::FromFrustum(Windows.Perception.Spatial.SpatialCoordinateSystem,Windows.Perception.Spatial.SpatialBoundingFrustum)
    def from_frustum(cls, coordinate_system: SpatialCoordinateSystem, frustum: SpatialBoundingFrustum, /) -> SpatialBoundingVolume: ...
    # Windows.Perception.Spatial.SpatialBoundingVolume Windows.Perception.Spatial.SpatialBoundingVolume::FromOrientedBox(Windows.Perception.Spatial.SpatialCoordinateSystem,Windows.Perception.Spatial.SpatialBoundingOrientedBox)
    def from_oriented_box(cls, coordinate_system: SpatialCoordinateSystem, box: SpatialBoundingOrientedBox, /) -> SpatialBoundingVolume: ...
    # Windows.Perception.Spatial.SpatialBoundingVolume Windows.Perception.Spatial.SpatialBoundingVolume::FromSphere(Windows.Perception.Spatial.SpatialCoordinateSystem,Windows.Perception.Spatial.SpatialBoundingSphere)
    def from_sphere(cls, coordinate_system: SpatialCoordinateSystem, sphere: SpatialBoundingSphere, /) -> SpatialBoundingVolume: ...

@typing.final
class SpatialBoundingVolume(winrt.system.Object, metaclass=SpatialBoundingVolume_Static):
    pass

@typing.final
class SpatialCoordinateSystem(winrt.system.Object):
    # Windows.Foundation.IReference`1<Windows.Foundation.Numerics.Matrix4x4> Windows.Perception.Spatial.SpatialCoordinateSystem::TryGetTransformTo(Windows.Perception.Spatial.SpatialCoordinateSystem)
    def try_get_transform_to(self, target: SpatialCoordinateSystem, /) -> typing.Optional[windows_foundation_numerics.Matrix4x4]: ...

@typing.final
class SpatialEntity(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], spatial_anchor: SpatialAnchor) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], spatial_anchor: SpatialAnchor, property_set: windows_foundation_collections.ValueSet) -> Self: ...
    # Windows.Perception.Spatial.SpatialAnchor Windows.Perception.Spatial.SpatialEntity::get_Anchor()
    @_property
    def anchor(self) -> SpatialAnchor: ...
    # System.String Windows.Perception.Spatial.SpatialEntity::get_Id()
    @_property
    def id(self) -> str: ...
    # Windows.Foundation.Collections.ValueSet Windows.Perception.Spatial.SpatialEntity::get_Properties()
    @_property
    def properties(self) -> windows_foundation_collections.ValueSet: ...

@typing.final
class SpatialEntityAddedEventArgs(winrt.system.Object):
    # Windows.Perception.Spatial.SpatialEntity Windows.Perception.Spatial.SpatialEntityAddedEventArgs::get_Entity()
    @_property
    def entity(self) -> SpatialEntity: ...

@typing.final
class SpatialEntityRemovedEventArgs(winrt.system.Object):
    # Windows.Perception.Spatial.SpatialEntity Windows.Perception.Spatial.SpatialEntityRemovedEventArgs::get_Entity()
    @_property
    def entity(self) -> SpatialEntity: ...

@typing.final
class SpatialEntityStore_Static(type):
    # Windows.Perception.Spatial.SpatialEntityStore Windows.Perception.Spatial.SpatialEntityStore::TryGet(Windows.System.RemoteSystems.RemoteSystemSession)
    def try_get_for_remote_system_session(cls, session: windows_system_remotesystems.RemoteSystemSession, /) -> typing.Optional[SpatialEntityStore]: ...
    # System.Boolean Windows.Perception.Spatial.SpatialEntityStore::get_IsSupported()
    @_property
    def is_supported(cls) -> bool: ...

@typing.final
class SpatialEntityStore(winrt.system.Object, metaclass=SpatialEntityStore_Static):
    # Windows.Perception.Spatial.SpatialEntityWatcher Windows.Perception.Spatial.SpatialEntityStore::CreateEntityWatcher()
    def create_entity_watcher(self) -> SpatialEntityWatcher: ...
    # Windows.Foundation.IAsyncAction Windows.Perception.Spatial.SpatialEntityStore::RemoveAsync(Windows.Perception.Spatial.SpatialEntity)
    def remove_async(self, entity: SpatialEntity, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Perception.Spatial.SpatialEntityStore::SaveAsync(Windows.Perception.Spatial.SpatialEntity)
    def save_async(self, entity: SpatialEntity, /) -> windows_foundation.IAsyncAction: ...

@typing.final
class SpatialEntityUpdatedEventArgs(winrt.system.Object):
    # Windows.Perception.Spatial.SpatialEntity Windows.Perception.Spatial.SpatialEntityUpdatedEventArgs::get_Entity()
    @_property
    def entity(self) -> SpatialEntity: ...

@typing.final
class SpatialEntityWatcher(winrt.system.Object):
    # System.Void Windows.Perception.Spatial.SpatialEntityWatcher::Start()
    def start(self) -> None: ...
    # System.Void Windows.Perception.Spatial.SpatialEntityWatcher::Stop()
    def stop(self) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Perception.Spatial.SpatialEntityWatcher::add_Added(Windows.Foundation.TypedEventHandler`2<Windows.Perception.Spatial.SpatialEntityWatcher,Windows.Perception.Spatial.SpatialEntityAddedEventArgs>)
    def add_added(self, handler: windows_foundation.TypedEventHandler[SpatialEntityWatcher, SpatialEntityAddedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Perception.Spatial.SpatialEntityWatcher::remove_Added(Windows.Foundation.EventRegistrationToken)
    def remove_added(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Perception.Spatial.SpatialEntityWatcher::add_EnumerationCompleted(Windows.Foundation.TypedEventHandler`2<Windows.Perception.Spatial.SpatialEntityWatcher,System.Object>)
    def add_enumeration_completed(self, handler: windows_foundation.TypedEventHandler[SpatialEntityWatcher, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Perception.Spatial.SpatialEntityWatcher::remove_EnumerationCompleted(Windows.Foundation.EventRegistrationToken)
    def remove_enumeration_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Perception.Spatial.SpatialEntityWatcher::add_Removed(Windows.Foundation.TypedEventHandler`2<Windows.Perception.Spatial.SpatialEntityWatcher,Windows.Perception.Spatial.SpatialEntityRemovedEventArgs>)
    def add_removed(self, handler: windows_foundation.TypedEventHandler[SpatialEntityWatcher, SpatialEntityRemovedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Perception.Spatial.SpatialEntityWatcher::remove_Removed(Windows.Foundation.EventRegistrationToken)
    def remove_removed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Perception.Spatial.SpatialEntityWatcher::add_Updated(Windows.Foundation.TypedEventHandler`2<Windows.Perception.Spatial.SpatialEntityWatcher,Windows.Perception.Spatial.SpatialEntityUpdatedEventArgs>)
    def add_updated(self, handler: windows_foundation.TypedEventHandler[SpatialEntityWatcher, SpatialEntityUpdatedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Perception.Spatial.SpatialEntityWatcher::remove_Updated(Windows.Foundation.EventRegistrationToken)
    def remove_updated(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Perception.Spatial.SpatialEntityWatcherStatus Windows.Perception.Spatial.SpatialEntityWatcher::get_Status()
    @_property
    def status(self) -> SpatialEntityWatcherStatus: ...

@typing.final
class SpatialLocation(winrt.system.Object):
    # Windows.Foundation.Numerics.Quaternion Windows.Perception.Spatial.SpatialLocation::get_AbsoluteAngularAcceleration()
    @_property
    def absolute_angular_acceleration(self) -> windows_foundation_numerics.Quaternion: ...
    # Windows.Foundation.Numerics.Quaternion Windows.Perception.Spatial.SpatialLocation::get_AbsoluteAngularVelocity()
    @_property
    def absolute_angular_velocity(self) -> windows_foundation_numerics.Quaternion: ...
    # Windows.Foundation.Numerics.Vector3 Windows.Perception.Spatial.SpatialLocation::get_AbsoluteLinearAcceleration()
    @_property
    def absolute_linear_acceleration(self) -> windows_foundation_numerics.Vector3: ...
    # Windows.Foundation.Numerics.Vector3 Windows.Perception.Spatial.SpatialLocation::get_AbsoluteLinearVelocity()
    @_property
    def absolute_linear_velocity(self) -> windows_foundation_numerics.Vector3: ...
    # Windows.Foundation.Numerics.Quaternion Windows.Perception.Spatial.SpatialLocation::get_Orientation()
    @_property
    def orientation(self) -> windows_foundation_numerics.Quaternion: ...
    # Windows.Foundation.Numerics.Vector3 Windows.Perception.Spatial.SpatialLocation::get_Position()
    @_property
    def position(self) -> windows_foundation_numerics.Vector3: ...
    # Windows.Foundation.Numerics.Vector3 Windows.Perception.Spatial.SpatialLocation::get_AbsoluteAngularAccelerationAxisAngle()
    @_property
    def absolute_angular_acceleration_axis_angle(self) -> windows_foundation_numerics.Vector3: ...
    # Windows.Foundation.Numerics.Vector3 Windows.Perception.Spatial.SpatialLocation::get_AbsoluteAngularVelocityAxisAngle()
    @_property
    def absolute_angular_velocity_axis_angle(self) -> windows_foundation_numerics.Vector3: ...

@typing.final
class SpatialLocator_Static(type):
    # Windows.Perception.Spatial.SpatialLocator Windows.Perception.Spatial.SpatialLocator::GetDefault()
    def get_default(cls) -> SpatialLocator: ...

@typing.final
class SpatialLocator(winrt.system.Object, metaclass=SpatialLocator_Static):
    # Windows.Perception.Spatial.SpatialLocatorAttachedFrameOfReference Windows.Perception.Spatial.SpatialLocator::CreateAttachedFrameOfReferenceAtCurrentHeading()
    def create_attached_frame_of_reference_at_current_heading(self) -> SpatialLocatorAttachedFrameOfReference: ...
    # Windows.Perception.Spatial.SpatialLocatorAttachedFrameOfReference Windows.Perception.Spatial.SpatialLocator::CreateAttachedFrameOfReferenceAtCurrentHeading(Windows.Foundation.Numerics.Vector3)
    def create_attached_frame_of_reference_at_current_heading_with_position(self, relative_position: windows_foundation_numerics.Vector3, /) -> SpatialLocatorAttachedFrameOfReference: ...
    # Windows.Perception.Spatial.SpatialLocatorAttachedFrameOfReference Windows.Perception.Spatial.SpatialLocator::CreateAttachedFrameOfReferenceAtCurrentHeading(Windows.Foundation.Numerics.Vector3,Windows.Foundation.Numerics.Quaternion)
    def create_attached_frame_of_reference_at_current_heading_with_position_and_orientation(self, relative_position: windows_foundation_numerics.Vector3, relative_orientation: windows_foundation_numerics.Quaternion, /) -> SpatialLocatorAttachedFrameOfReference: ...
    # Windows.Perception.Spatial.SpatialLocatorAttachedFrameOfReference Windows.Perception.Spatial.SpatialLocator::CreateAttachedFrameOfReferenceAtCurrentHeading(Windows.Foundation.Numerics.Vector3,Windows.Foundation.Numerics.Quaternion,System.Double)
    def create_attached_frame_of_reference_at_current_heading_with_position_and_orientation_and_relative_heading(self, relative_position: windows_foundation_numerics.Vector3, relative_orientation: windows_foundation_numerics.Quaternion, relative_heading_in_radians: winrt.system.Double, /) -> SpatialLocatorAttachedFrameOfReference: ...
    # Windows.Perception.Spatial.SpatialStationaryFrameOfReference Windows.Perception.Spatial.SpatialLocator::CreateStationaryFrameOfReferenceAtCurrentLocation()
    def create_stationary_frame_of_reference_at_current_location(self) -> SpatialStationaryFrameOfReference: ...
    # Windows.Perception.Spatial.SpatialStationaryFrameOfReference Windows.Perception.Spatial.SpatialLocator::CreateStationaryFrameOfReferenceAtCurrentLocation(Windows.Foundation.Numerics.Vector3)
    def create_stationary_frame_of_reference_at_current_location_with_position(self, relative_position: windows_foundation_numerics.Vector3, /) -> SpatialStationaryFrameOfReference: ...
    # Windows.Perception.Spatial.SpatialStationaryFrameOfReference Windows.Perception.Spatial.SpatialLocator::CreateStationaryFrameOfReferenceAtCurrentLocation(Windows.Foundation.Numerics.Vector3,Windows.Foundation.Numerics.Quaternion)
    def create_stationary_frame_of_reference_at_current_location_with_position_and_orientation(self, relative_position: windows_foundation_numerics.Vector3, relative_orientation: windows_foundation_numerics.Quaternion, /) -> SpatialStationaryFrameOfReference: ...
    # Windows.Perception.Spatial.SpatialStationaryFrameOfReference Windows.Perception.Spatial.SpatialLocator::CreateStationaryFrameOfReferenceAtCurrentLocation(Windows.Foundation.Numerics.Vector3,Windows.Foundation.Numerics.Quaternion,System.Double)
    def create_stationary_frame_of_reference_at_current_location_with_position_and_orientation_and_relative_heading(self, relative_position: windows_foundation_numerics.Vector3, relative_orientation: windows_foundation_numerics.Quaternion, relative_heading_in_radians: winrt.system.Double, /) -> SpatialStationaryFrameOfReference: ...
    # Windows.Perception.Spatial.SpatialLocation Windows.Perception.Spatial.SpatialLocator::TryLocateAtTimestamp(Windows.Perception.PerceptionTimestamp,Windows.Perception.Spatial.SpatialCoordinateSystem)
    def try_locate_at_timestamp(self, timestamp: windows_perception.PerceptionTimestamp, coordinate_system: SpatialCoordinateSystem, /) -> typing.Optional[SpatialLocation]: ...
    # Windows.Foundation.EventRegistrationToken Windows.Perception.Spatial.SpatialLocator::add_LocatabilityChanged(Windows.Foundation.TypedEventHandler`2<Windows.Perception.Spatial.SpatialLocator,System.Object>)
    def add_locatability_changed(self, handler: windows_foundation.TypedEventHandler[SpatialLocator, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Perception.Spatial.SpatialLocator::remove_LocatabilityChanged(Windows.Foundation.EventRegistrationToken)
    def remove_locatability_changed(self, cookie: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Perception.Spatial.SpatialLocator::add_PositionalTrackingDeactivating(Windows.Foundation.TypedEventHandler`2<Windows.Perception.Spatial.SpatialLocator,Windows.Perception.Spatial.SpatialLocatorPositionalTrackingDeactivatingEventArgs>)
    def add_positional_tracking_deactivating(self, handler: windows_foundation.TypedEventHandler[SpatialLocator, SpatialLocatorPositionalTrackingDeactivatingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Perception.Spatial.SpatialLocator::remove_PositionalTrackingDeactivating(Windows.Foundation.EventRegistrationToken)
    def remove_positional_tracking_deactivating(self, cookie: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Perception.Spatial.SpatialLocatability Windows.Perception.Spatial.SpatialLocator::get_Locatability()
    @_property
    def locatability(self) -> SpatialLocatability: ...

@typing.final
class SpatialLocatorAttachedFrameOfReference(winrt.system.Object):
    # System.Void Windows.Perception.Spatial.SpatialLocatorAttachedFrameOfReference::AdjustHeading(System.Double)
    def adjust_heading(self, heading_offset_in_radians: winrt.system.Double, /) -> None: ...
    # Windows.Perception.Spatial.SpatialCoordinateSystem Windows.Perception.Spatial.SpatialLocatorAttachedFrameOfReference::GetStationaryCoordinateSystemAtTimestamp(Windows.Perception.PerceptionTimestamp)
    def get_stationary_coordinate_system_at_timestamp(self, timestamp: windows_perception.PerceptionTimestamp, /) -> SpatialCoordinateSystem: ...
    # Windows.Foundation.IReference`1<System.Double> Windows.Perception.Spatial.SpatialLocatorAttachedFrameOfReference::TryGetRelativeHeadingAtTimestamp(Windows.Perception.PerceptionTimestamp)
    def try_get_relative_heading_at_timestamp(self, timestamp: windows_perception.PerceptionTimestamp, /) -> typing.Optional[winrt.system.Double]: ...
    # Windows.Foundation.Numerics.Vector3 Windows.Perception.Spatial.SpatialLocatorAttachedFrameOfReference::get_RelativePosition()
    @_property
    def relative_position(self) -> windows_foundation_numerics.Vector3: ...
    # System.Void Windows.Perception.Spatial.SpatialLocatorAttachedFrameOfReference::put_RelativePosition(Windows.Foundation.Numerics.Vector3)
    @relative_position.setter
    def relative_position(self, value: windows_foundation_numerics.Vector3) -> None: ...
    # Windows.Foundation.Numerics.Quaternion Windows.Perception.Spatial.SpatialLocatorAttachedFrameOfReference::get_RelativeOrientation()
    @_property
    def relative_orientation(self) -> windows_foundation_numerics.Quaternion: ...
    # System.Void Windows.Perception.Spatial.SpatialLocatorAttachedFrameOfReference::put_RelativeOrientation(Windows.Foundation.Numerics.Quaternion)
    @relative_orientation.setter
    def relative_orientation(self, value: windows_foundation_numerics.Quaternion) -> None: ...

@typing.final
class SpatialLocatorPositionalTrackingDeactivatingEventArgs(winrt.system.Object):
    # System.Boolean Windows.Perception.Spatial.SpatialLocatorPositionalTrackingDeactivatingEventArgs::get_Canceled()
    @_property
    def canceled(self) -> bool: ...
    # System.Void Windows.Perception.Spatial.SpatialLocatorPositionalTrackingDeactivatingEventArgs::put_Canceled(System.Boolean)
    @canceled.setter
    def canceled(self, value: bool) -> None: ...

@typing.final
class SpatialStageFrameOfReference_Static(type):
    # Windows.Foundation.IAsyncOperation`1<Windows.Perception.Spatial.SpatialStageFrameOfReference> Windows.Perception.Spatial.SpatialStageFrameOfReference::RequestNewStageAsync()
    def request_new_stage_async(cls) -> windows_foundation.IAsyncOperation[SpatialStageFrameOfReference]: ...
    # Windows.Foundation.EventRegistrationToken Windows.Perception.Spatial.SpatialStageFrameOfReference::add_CurrentChanged(Windows.Foundation.EventHandler`1<System.Object>)
    def add_current_changed(cls, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Perception.Spatial.SpatialStageFrameOfReference::remove_CurrentChanged(Windows.Foundation.EventRegistrationToken)
    def remove_current_changed(cls, cookie: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Perception.Spatial.SpatialStageFrameOfReference Windows.Perception.Spatial.SpatialStageFrameOfReference::get_Current()
    @_property
    def current(cls) -> SpatialStageFrameOfReference: ...

@typing.final
class SpatialStageFrameOfReference(winrt.system.Object, metaclass=SpatialStageFrameOfReference_Static):
    # Windows.Perception.Spatial.SpatialCoordinateSystem Windows.Perception.Spatial.SpatialStageFrameOfReference::GetCoordinateSystemAtCurrentLocation(Windows.Perception.Spatial.SpatialLocator)
    def get_coordinate_system_at_current_location(self, locator: SpatialLocator, /) -> SpatialCoordinateSystem: ...
    # Windows.Foundation.Numerics.Vector3[] Windows.Perception.Spatial.SpatialStageFrameOfReference::TryGetMovementBounds(Windows.Perception.Spatial.SpatialCoordinateSystem)
    def try_get_movement_bounds(self, coordinate_system: SpatialCoordinateSystem, /) -> winrt.system.Array[windows_foundation_numerics.Vector3]: ...
    # Windows.Perception.Spatial.SpatialCoordinateSystem Windows.Perception.Spatial.SpatialStageFrameOfReference::get_CoordinateSystem()
    @_property
    def coordinate_system(self) -> SpatialCoordinateSystem: ...
    # Windows.Perception.Spatial.SpatialLookDirectionRange Windows.Perception.Spatial.SpatialStageFrameOfReference::get_LookDirectionRange()
    @_property
    def look_direction_range(self) -> SpatialLookDirectionRange: ...
    # Windows.Perception.Spatial.SpatialMovementRange Windows.Perception.Spatial.SpatialStageFrameOfReference::get_MovementRange()
    @_property
    def movement_range(self) -> SpatialMovementRange: ...

@typing.final
class SpatialStationaryFrameOfReference(winrt.system.Object):
    # Windows.Perception.Spatial.SpatialCoordinateSystem Windows.Perception.Spatial.SpatialStationaryFrameOfReference::get_CoordinateSystem()
    @_property
    def coordinate_system(self) -> SpatialCoordinateSystem: ...

