# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.system as windows_system

from winrt.windows.globalization import DayOfWeek, LanguageLayoutDirection

Self = typing.TypeVar('Self')

@typing.final
class ApplicationLanguages_Static(type):
    def get_languages_for_user(cls, user: windows_system.User, /) -> typing.Sequence[str]: ...
    @_property
    def primary_language_override(cls) -> str: ...
    @primary_language_override.setter
    def primary_language_override(cls, value: str) -> None: ...
    @_property
    def languages(cls) -> typing.Sequence[str]: ...
    @_property
    def manifest_languages(cls) -> typing.Sequence[str]: ...

@typing.final
class ApplicationLanguages(winrt.system.Object, metaclass=ApplicationLanguages_Static):
    pass

@typing.final
class Calendar(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Calendar: ...
    @typing.overload
    def __new__(cls: typing.Type[Calendar], languages: typing.Iterable[str], calendar: str, clock: str, time_zone_id: str) -> Calendar: ...
    @typing.overload
    def __new__(cls: typing.Type[Calendar], languages: typing.Iterable[str]) -> Calendar: ...
    @typing.overload
    def __new__(cls: typing.Type[Calendar], languages: typing.Iterable[str], calendar: str, clock: str) -> Calendar: ...
    @typing.overload
    def __new__(cls: typing.Type[Calendar]) -> Calendar: ...
    def add_days(self, days: winrt.system.Int32, /) -> None: ...
    def add_eras(self, eras: winrt.system.Int32, /) -> None: ...
    def add_hours(self, hours: winrt.system.Int32, /) -> None: ...
    def add_minutes(self, minutes: winrt.system.Int32, /) -> None: ...
    def add_months(self, months: winrt.system.Int32, /) -> None: ...
    def add_nanoseconds(self, nanoseconds: winrt.system.Int32, /) -> None: ...
    def add_periods(self, periods: winrt.system.Int32, /) -> None: ...
    def add_seconds(self, seconds: winrt.system.Int32, /) -> None: ...
    def add_weeks(self, weeks: winrt.system.Int32, /) -> None: ...
    def add_years(self, years: winrt.system.Int32, /) -> None: ...
    def change_calendar_system(self, value: str, /) -> None: ...
    def change_clock(self, value: str, /) -> None: ...
    def change_time_zone(self, time_zone_id: str, /) -> None: ...
    def clone(self) -> Calendar: ...
    def compare(self, other: Calendar, /) -> winrt.system.Int32: ...
    def compare_date_time(self, other: datetime.datetime, /) -> winrt.system.Int32: ...
    def copy_to(self, other: Calendar, /) -> None: ...
    def day_as_padded_string(self, min_digits: winrt.system.Int32, /) -> str: ...
    def day_as_string(self) -> str: ...
    def day_of_week_as_full_solo_string(self) -> str: ...
    def day_of_week_as_full_string(self) -> str: ...
    def day_of_week_as_solo_string(self, ideal_length: winrt.system.Int32, /) -> str: ...
    def day_of_week_as_string(self, ideal_length: winrt.system.Int32, /) -> str: ...
    def era_as_full_string(self) -> str: ...
    def era_as_string(self, ideal_length: winrt.system.Int32, /) -> str: ...
    def get_calendar_system(self) -> str: ...
    def get_clock(self) -> str: ...
    def get_date_time(self) -> datetime.datetime: ...
    def get_time_zone(self) -> str: ...
    def hour_as_padded_string(self, min_digits: winrt.system.Int32, /) -> str: ...
    def hour_as_string(self) -> str: ...
    def minute_as_padded_string(self, min_digits: winrt.system.Int32, /) -> str: ...
    def minute_as_string(self) -> str: ...
    def month_as_full_solo_string(self) -> str: ...
    def month_as_full_string(self) -> str: ...
    def month_as_numeric_string(self) -> str: ...
    def month_as_padded_numeric_string(self, min_digits: winrt.system.Int32, /) -> str: ...
    def month_as_solo_string(self, ideal_length: winrt.system.Int32, /) -> str: ...
    def month_as_string(self, ideal_length: winrt.system.Int32, /) -> str: ...
    def nanosecond_as_padded_string(self, min_digits: winrt.system.Int32, /) -> str: ...
    def nanosecond_as_string(self) -> str: ...
    def period_as_full_string(self) -> str: ...
    def period_as_string(self, ideal_length: winrt.system.Int32, /) -> str: ...
    def second_as_padded_string(self, min_digits: winrt.system.Int32, /) -> str: ...
    def second_as_string(self) -> str: ...
    def set_date_time(self, value: datetime.datetime, /) -> None: ...
    def set_to_max(self) -> None: ...
    def set_to_min(self) -> None: ...
    def set_to_now(self) -> None: ...
    def time_zone_as_full_string(self) -> str: ...
    def time_zone_as_string(self, ideal_length: winrt.system.Int32, /) -> str: ...
    def year_as_padded_string(self, min_digits: winrt.system.Int32, /) -> str: ...
    def year_as_string(self) -> str: ...
    def year_as_truncated_string(self, remaining_digits: winrt.system.Int32, /) -> str: ...
    @_property
    def year(self) -> winrt.system.Int32: ...
    @year.setter
    def year(self, value: winrt.system.Int32) -> None: ...
    @_property
    def second(self) -> winrt.system.Int32: ...
    @second.setter
    def second(self, value: winrt.system.Int32) -> None: ...
    @_property
    def period(self) -> winrt.system.Int32: ...
    @period.setter
    def period(self, value: winrt.system.Int32) -> None: ...
    @_property
    def nanosecond(self) -> winrt.system.Int32: ...
    @nanosecond.setter
    def nanosecond(self, value: winrt.system.Int32) -> None: ...
    @_property
    def month(self) -> winrt.system.Int32: ...
    @month.setter
    def month(self, value: winrt.system.Int32) -> None: ...
    @_property
    def minute(self) -> winrt.system.Int32: ...
    @minute.setter
    def minute(self, value: winrt.system.Int32) -> None: ...
    @_property
    def numeral_system(self) -> str: ...
    @numeral_system.setter
    def numeral_system(self, value: str) -> None: ...
    @_property
    def era(self) -> winrt.system.Int32: ...
    @era.setter
    def era(self, value: winrt.system.Int32) -> None: ...
    @_property
    def hour(self) -> winrt.system.Int32: ...
    @hour.setter
    def hour(self, value: winrt.system.Int32) -> None: ...
    @_property
    def day(self) -> winrt.system.Int32: ...
    @day.setter
    def day(self, value: winrt.system.Int32) -> None: ...
    @_property
    def first_second_in_this_minute(self) -> winrt.system.Int32: ...
    @_property
    def first_year_in_this_era(self) -> winrt.system.Int32: ...
    @_property
    def is_daylight_saving_time(self) -> bool: ...
    @_property
    def languages(self) -> typing.Sequence[str]: ...
    @_property
    def last_day_in_this_month(self) -> winrt.system.Int32: ...
    @_property
    def last_era(self) -> winrt.system.Int32: ...
    @_property
    def last_hour_in_this_period(self) -> winrt.system.Int32: ...
    @_property
    def last_minute_in_this_hour(self) -> winrt.system.Int32: ...
    @_property
    def last_month_in_this_year(self) -> winrt.system.Int32: ...
    @_property
    def last_second_in_this_minute(self) -> winrt.system.Int32: ...
    @_property
    def last_year_in_this_era(self) -> winrt.system.Int32: ...
    @_property
    def day_of_week(self) -> DayOfWeek: ...
    @_property
    def first_day_in_this_month(self) -> winrt.system.Int32: ...
    @_property
    def last_period_in_this_day(self) -> winrt.system.Int32: ...
    @_property
    def first_era(self) -> winrt.system.Int32: ...
    @_property
    def number_of_days_in_this_month(self) -> winrt.system.Int32: ...
    @_property
    def number_of_eras(self) -> winrt.system.Int32: ...
    @_property
    def number_of_hours_in_this_period(self) -> winrt.system.Int32: ...
    @_property
    def number_of_minutes_in_this_hour(self) -> winrt.system.Int32: ...
    @_property
    def first_hour_in_this_period(self) -> winrt.system.Int32: ...
    @_property
    def number_of_months_in_this_year(self) -> winrt.system.Int32: ...
    @_property
    def number_of_periods_in_this_day(self) -> winrt.system.Int32: ...
    @_property
    def number_of_seconds_in_this_minute(self) -> winrt.system.Int32: ...
    @_property
    def number_of_years_in_this_era(self) -> winrt.system.Int32: ...
    @_property
    def first_minute_in_this_hour(self) -> winrt.system.Int32: ...
    @_property
    def resolved_language(self) -> str: ...
    @_property
    def first_month_in_this_year(self) -> winrt.system.Int32: ...
    @_property
    def first_period_in_this_day(self) -> winrt.system.Int32: ...

@typing.final
class CalendarIdentifiers_Static(type):
    @_property
    def julian(cls) -> str: ...
    @_property
    def gregorian(cls) -> str: ...
    @_property
    def hebrew(cls) -> str: ...
    @_property
    def hijri(cls) -> str: ...
    @_property
    def japanese(cls) -> str: ...
    @_property
    def korean(cls) -> str: ...
    @_property
    def taiwan(cls) -> str: ...
    @_property
    def thai(cls) -> str: ...
    @_property
    def um_al_qura(cls) -> str: ...
    @_property
    def persian(cls) -> str: ...
    @_property
    def chinese_lunar(cls) -> str: ...
    @_property
    def vietnamese_lunar(cls) -> str: ...
    @_property
    def taiwan_lunar(cls) -> str: ...
    @_property
    def korean_lunar(cls) -> str: ...
    @_property
    def japanese_lunar(cls) -> str: ...

@typing.final
class CalendarIdentifiers(winrt.system.Object, metaclass=CalendarIdentifiers_Static):
    pass

@typing.final
class ClockIdentifiers_Static(type):
    @_property
    def twelve_hour(cls) -> str: ...
    @_property
    def twenty_four_hour(cls) -> str: ...

@typing.final
class ClockIdentifiers(winrt.system.Object, metaclass=ClockIdentifiers_Static):
    pass

@typing.final
class CurrencyAmount(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CurrencyAmount: ...
    def __new__(cls: typing.Type[CurrencyAmount], amount: str, currency: str) -> CurrencyAmount: ...
    @_property
    def amount(self) -> str: ...
    @_property
    def currency(self) -> str: ...

@typing.final
class CurrencyIdentifiers_Static(type):
    @_property
    def hnl(cls) -> str: ...
    @_property
    def aed(cls) -> str: ...
    @_property
    def afn(cls) -> str: ...
    @_property
    def all(cls) -> str: ...
    @_property
    def amd(cls) -> str: ...
    @_property
    def ang(cls) -> str: ...
    @_property
    def aoa(cls) -> str: ...
    @_property
    def ars(cls) -> str: ...
    @_property
    def aud(cls) -> str: ...
    @_property
    def awg(cls) -> str: ...
    @_property
    def azn(cls) -> str: ...
    @_property
    def bam(cls) -> str: ...
    @_property
    def bbd(cls) -> str: ...
    @_property
    def bdt(cls) -> str: ...
    @_property
    def bgn(cls) -> str: ...
    @_property
    def bhd(cls) -> str: ...
    @_property
    def bif(cls) -> str: ...
    @_property
    def bmd(cls) -> str: ...
    @_property
    def bnd(cls) -> str: ...
    @_property
    def bob(cls) -> str: ...
    @_property
    def brl(cls) -> str: ...
    @_property
    def bsd(cls) -> str: ...
    @_property
    def btn(cls) -> str: ...
    @_property
    def bwp(cls) -> str: ...
    @_property
    def byr(cls) -> str: ...
    @_property
    def bzd(cls) -> str: ...
    @_property
    def cad(cls) -> str: ...
    @_property
    def cdf(cls) -> str: ...
    @_property
    def chf(cls) -> str: ...
    @_property
    def clp(cls) -> str: ...
    @_property
    def cny(cls) -> str: ...
    @_property
    def cop(cls) -> str: ...
    @_property
    def crc(cls) -> str: ...
    @_property
    def cup(cls) -> str: ...
    @_property
    def cve(cls) -> str: ...
    @_property
    def czk(cls) -> str: ...
    @_property
    def djf(cls) -> str: ...
    @_property
    def dkk(cls) -> str: ...
    @_property
    def dop(cls) -> str: ...
    @_property
    def dzd(cls) -> str: ...
    @_property
    def egp(cls) -> str: ...
    @_property
    def ern(cls) -> str: ...
    @_property
    def etb(cls) -> str: ...
    @_property
    def eur(cls) -> str: ...
    @_property
    def fjd(cls) -> str: ...
    @_property
    def fkp(cls) -> str: ...
    @_property
    def gbp(cls) -> str: ...
    @_property
    def gel(cls) -> str: ...
    @_property
    def ghs(cls) -> str: ...
    @_property
    def gip(cls) -> str: ...
    @_property
    def gmd(cls) -> str: ...
    @_property
    def gnf(cls) -> str: ...
    @_property
    def gtq(cls) -> str: ...
    @_property
    def gyd(cls) -> str: ...
    @_property
    def hkd(cls) -> str: ...
    @_property
    def ron(cls) -> str: ...
    @_property
    def hrk(cls) -> str: ...
    @_property
    def htg(cls) -> str: ...
    @_property
    def huf(cls) -> str: ...
    @_property
    def idr(cls) -> str: ...
    @_property
    def ils(cls) -> str: ...
    @_property
    def inr(cls) -> str: ...
    @_property
    def iqd(cls) -> str: ...
    @_property
    def irr(cls) -> str: ...
    @_property
    def isk(cls) -> str: ...
    @_property
    def jmd(cls) -> str: ...
    @_property
    def jod(cls) -> str: ...
    @_property
    def jpy(cls) -> str: ...
    @_property
    def kes(cls) -> str: ...
    @_property
    def kgs(cls) -> str: ...
    @_property
    def khr(cls) -> str: ...
    @_property
    def kmf(cls) -> str: ...
    @_property
    def kpw(cls) -> str: ...
    @_property
    def krw(cls) -> str: ...
    @_property
    def kwd(cls) -> str: ...
    @_property
    def kyd(cls) -> str: ...
    @_property
    def kzt(cls) -> str: ...
    @_property
    def lak(cls) -> str: ...
    @_property
    def lbp(cls) -> str: ...
    @_property
    def lkr(cls) -> str: ...
    @_property
    def lrd(cls) -> str: ...
    @_property
    def lsl(cls) -> str: ...
    @_property
    def ltl(cls) -> str: ...
    @_property
    def lvl(cls) -> str: ...
    @_property
    def lyd(cls) -> str: ...
    @_property
    def mad(cls) -> str: ...
    @_property
    def mdl(cls) -> str: ...
    @_property
    def mga(cls) -> str: ...
    @_property
    def mkd(cls) -> str: ...
    @_property
    def mmk(cls) -> str: ...
    @_property
    def mnt(cls) -> str: ...
    @_property
    def mop(cls) -> str: ...
    @_property
    def mro(cls) -> str: ...
    @_property
    def mur(cls) -> str: ...
    @_property
    def mvr(cls) -> str: ...
    @_property
    def mwk(cls) -> str: ...
    @_property
    def mxn(cls) -> str: ...
    @_property
    def myr(cls) -> str: ...
    @_property
    def mzn(cls) -> str: ...
    @_property
    def nad(cls) -> str: ...
    @_property
    def ngn(cls) -> str: ...
    @_property
    def nio(cls) -> str: ...
    @_property
    def nok(cls) -> str: ...
    @_property
    def npr(cls) -> str: ...
    @_property
    def nzd(cls) -> str: ...
    @_property
    def omr(cls) -> str: ...
    @_property
    def pab(cls) -> str: ...
    @_property
    def pen(cls) -> str: ...
    @_property
    def pgk(cls) -> str: ...
    @_property
    def php(cls) -> str: ...
    @_property
    def pkr(cls) -> str: ...
    @_property
    def pln(cls) -> str: ...
    @_property
    def pyg(cls) -> str: ...
    @_property
    def qar(cls) -> str: ...
    @_property
    def rsd(cls) -> str: ...
    @_property
    def rub(cls) -> str: ...
    @_property
    def rwf(cls) -> str: ...
    @_property
    def sar(cls) -> str: ...
    @_property
    def sbd(cls) -> str: ...
    @_property
    def scr(cls) -> str: ...
    @_property
    def sdg(cls) -> str: ...
    @_property
    def sek(cls) -> str: ...
    @_property
    def sgd(cls) -> str: ...
    @_property
    def shp(cls) -> str: ...
    @_property
    def sll(cls) -> str: ...
    @_property
    def sos(cls) -> str: ...
    @_property
    def srd(cls) -> str: ...
    @_property
    def std(cls) -> str: ...
    @_property
    def syp(cls) -> str: ...
    @_property
    def szl(cls) -> str: ...
    @_property
    def thb(cls) -> str: ...
    @_property
    def tjs(cls) -> str: ...
    @_property
    def tmt(cls) -> str: ...
    @_property
    def tnd(cls) -> str: ...
    @_property
    def top(cls) -> str: ...
    @_property
    def try_(cls) -> str: ...
    @_property
    def ttd(cls) -> str: ...
    @_property
    def twd(cls) -> str: ...
    @_property
    def tzs(cls) -> str: ...
    @_property
    def uah(cls) -> str: ...
    @_property
    def ugx(cls) -> str: ...
    @_property
    def usd(cls) -> str: ...
    @_property
    def uyu(cls) -> str: ...
    @_property
    def uzs(cls) -> str: ...
    @_property
    def vef(cls) -> str: ...
    @_property
    def vnd(cls) -> str: ...
    @_property
    def vuv(cls) -> str: ...
    @_property
    def wst(cls) -> str: ...
    @_property
    def xaf(cls) -> str: ...
    @_property
    def xcd(cls) -> str: ...
    @_property
    def xof(cls) -> str: ...
    @_property
    def xpf(cls) -> str: ...
    @_property
    def xxx(cls) -> str: ...
    @_property
    def yer(cls) -> str: ...
    @_property
    def zar(cls) -> str: ...
    @_property
    def zmw(cls) -> str: ...
    @_property
    def zwl(cls) -> str: ...
    @_property
    def byn(cls) -> str: ...
    @_property
    def ssp(cls) -> str: ...
    @_property
    def stn(cls) -> str: ...
    @_property
    def ves(cls) -> str: ...
    @_property
    def mru(cls) -> str: ...

@typing.final
class CurrencyIdentifiers(winrt.system.Object, metaclass=CurrencyIdentifiers_Static):
    pass

@typing.final
class GeographicRegion_Static(type):
    def is_supported(cls, geographic_region_code: str, /) -> bool: ...

@typing.final
class GeographicRegion(winrt.system.Object, metaclass=GeographicRegion_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> GeographicRegion: ...
    @typing.overload
    def __new__(cls: typing.Type[GeographicRegion], geographic_region_code: str) -> GeographicRegion: ...
    @typing.overload
    def __new__(cls: typing.Type[GeographicRegion]) -> GeographicRegion: ...
    @_property
    def code(self) -> str: ...
    @_property
    def code_three_digit(self) -> str: ...
    @_property
    def code_three_letter(self) -> str: ...
    @_property
    def code_two_letter(self) -> str: ...
    @_property
    def currencies_in_use(self) -> typing.Sequence[str]: ...
    @_property
    def display_name(self) -> str: ...
    @_property
    def native_name(self) -> str: ...

@typing.final
class JapanesePhoneme(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> JapanesePhoneme: ...
    @_property
    def display_text(self) -> str: ...
    @_property
    def is_phrase_start(self) -> bool: ...
    @_property
    def yomi_text(self) -> str: ...

@typing.final
class JapanesePhoneticAnalyzer_Static(type):
    def get_words(cls, input: str, /) -> typing.Sequence[JapanesePhoneme]: ...
    def get_words_with_mono_ruby_option(cls, input: str, mono_ruby: bool, /) -> typing.Sequence[JapanesePhoneme]: ...

@typing.final
class JapanesePhoneticAnalyzer(winrt.system.Object, metaclass=JapanesePhoneticAnalyzer_Static):
    pass

@typing.final
class Language_Static(type):
    def get_mui_compatible_language_list_from_language_tags(cls, language_tags: typing.Iterable[str], /) -> typing.MutableSequence[str]: ...
    def is_well_formed(cls, language_tag: str, /) -> bool: ...
    def try_set_input_method_language_tag(cls, language_tag: str, /) -> bool: ...
    @_property
    def current_input_method_language_tag(cls) -> str: ...

@typing.final
class Language(winrt.system.Object, metaclass=Language_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Language: ...
    def __new__(cls: typing.Type[Language], language_tag: str) -> Language: ...
    def get_extension_subtags(self, singleton: str, /) -> typing.Sequence[str]: ...
    @_property
    def display_name(self) -> str: ...
    @_property
    def language_tag(self) -> str: ...
    @_property
    def native_name(self) -> str: ...
    @_property
    def script(self) -> str: ...
    @_property
    def layout_direction(self) -> LanguageLayoutDirection: ...
    @_property
    def abbreviated_name(self) -> str: ...

@typing.final
class NumeralSystemIdentifiers_Static(type):
    @_property
    def full_wide(cls) -> str: ...
    @_property
    def arab(cls) -> str: ...
    @_property
    def arab_ext(cls) -> str: ...
    @_property
    def bali(cls) -> str: ...
    @_property
    def beng(cls) -> str: ...
    @_property
    def cham(cls) -> str: ...
    @_property
    def deva(cls) -> str: ...
    @_property
    def mymr_shan(cls) -> str: ...
    @_property
    def gujr(cls) -> str: ...
    @_property
    def guru(cls) -> str: ...
    @_property
    def hani_dec(cls) -> str: ...
    @_property
    def java(cls) -> str: ...
    @_property
    def kali(cls) -> str: ...
    @_property
    def khmr(cls) -> str: ...
    @_property
    def knda(cls) -> str: ...
    @_property
    def lana(cls) -> str: ...
    @_property
    def lana_tham(cls) -> str: ...
    @_property
    def laoo(cls) -> str: ...
    @_property
    def latn(cls) -> str: ...
    @_property
    def lepc(cls) -> str: ...
    @_property
    def limb(cls) -> str: ...
    @_property
    def mlym(cls) -> str: ...
    @_property
    def mong(cls) -> str: ...
    @_property
    def mtei(cls) -> str: ...
    @_property
    def mymr(cls) -> str: ...
    @_property
    def nkoo(cls) -> str: ...
    @_property
    def olck(cls) -> str: ...
    @_property
    def orya(cls) -> str: ...
    @_property
    def saur(cls) -> str: ...
    @_property
    def sund(cls) -> str: ...
    @_property
    def talu(cls) -> str: ...
    @_property
    def taml_dec(cls) -> str: ...
    @_property
    def telu(cls) -> str: ...
    @_property
    def thai(cls) -> str: ...
    @_property
    def tibt(cls) -> str: ...
    @_property
    def vaii(cls) -> str: ...
    @_property
    def math_bold(cls) -> str: ...
    @_property
    def math_dbl(cls) -> str: ...
    @_property
    def math_mono(cls) -> str: ...
    @_property
    def math_sanb(cls) -> str: ...
    @_property
    def math_sans(cls) -> str: ...
    @_property
    def osma(cls) -> str: ...
    @_property
    def zmth_bold(cls) -> str: ...
    @_property
    def zmth_dbl(cls) -> str: ...
    @_property
    def zmth_mono(cls) -> str: ...
    @_property
    def zmth_sanb(cls) -> str: ...
    @_property
    def zmth_sans(cls) -> str: ...
    @_property
    def brah(cls) -> str: ...

@typing.final
class NumeralSystemIdentifiers(winrt.system.Object, metaclass=NumeralSystemIdentifiers_Static):
    pass

