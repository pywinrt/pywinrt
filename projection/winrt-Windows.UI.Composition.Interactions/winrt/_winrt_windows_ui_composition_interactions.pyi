# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.foundation.numerics as windows_foundation_numerics
import winrt.windows.ui.composition as windows_ui_composition
import winrt.windows.ui.input as windows_ui_input

from winrt.windows.ui.composition.interactions import InteractionBindingAxisModes, InteractionChainingMode, InteractionSourceMode, InteractionSourceRedirectionMode, InteractionTrackerClampingOption, InteractionTrackerPositionUpdateOption, VisualInteractionSourceRedirectionMode

Self = typing.TypeVar('Self')

@typing.final
class CompositionConditionalValue_Static(windows_ui_composition.CompositionObject_Static):
    def create(cls, compositor: windows_ui_composition.Compositor, /) -> CompositionConditionalValue: ...

@typing.final
class CompositionConditionalValue(windows_ui_composition.CompositionObject, metaclass=CompositionConditionalValue_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionConditionalValue: ...
    @_property
    def value(self) -> windows_ui_composition.ExpressionAnimation: ...
    @value.setter
    def value(self, value: windows_ui_composition.ExpressionAnimation) -> None: ...
    @_property
    def condition(self) -> windows_ui_composition.ExpressionAnimation: ...
    @condition.setter
    def condition(self, value: windows_ui_composition.ExpressionAnimation) -> None: ...

@typing.final
class CompositionInteractionSourceCollection(windows_ui_composition.CompositionObject):
    def __iter__(self) -> windows_foundation_collections.IIterator[ICompositionInteractionSource]: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CompositionInteractionSourceCollection: ...
    def add(self, value: ImplementsICompositionInteractionSource, /) -> None: ...
    def first(self) -> windows_foundation_collections.IIterator[ICompositionInteractionSource]: ...
    def remove(self, value: ImplementsICompositionInteractionSource, /) -> None: ...
    def remove_all(self) -> None: ...
    @_property
    def count(self) -> winrt.system.Int32: ...

@typing.final
class InteractionSourceConfiguration(windows_ui_composition.CompositionObject):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionSourceConfiguration: ...
    @_property
    def scale_source_mode(self) -> InteractionSourceRedirectionMode: ...
    @scale_source_mode.setter
    def scale_source_mode(self, value: InteractionSourceRedirectionMode) -> None: ...
    @_property
    def position_y_source_mode(self) -> InteractionSourceRedirectionMode: ...
    @position_y_source_mode.setter
    def position_y_source_mode(self, value: InteractionSourceRedirectionMode) -> None: ...
    @_property
    def position_x_source_mode(self) -> InteractionSourceRedirectionMode: ...
    @position_x_source_mode.setter
    def position_x_source_mode(self, value: InteractionSourceRedirectionMode) -> None: ...

@typing.final
class InteractionTracker_Static(windows_ui_composition.CompositionObject_Static):
    def create(cls, compositor: windows_ui_composition.Compositor, /) -> InteractionTracker: ...
    def create_with_owner(cls, compositor: windows_ui_composition.Compositor, owner: ImplementsIInteractionTrackerOwner, /) -> InteractionTracker: ...
    def get_binding_mode(cls, bound_tracker1: InteractionTracker, bound_tracker2: InteractionTracker, /) -> InteractionBindingAxisModes: ...
    def set_binding_mode(cls, bound_tracker1: InteractionTracker, bound_tracker2: InteractionTracker, axis_mode: InteractionBindingAxisModes, /) -> None: ...

@typing.final
class InteractionTracker(windows_ui_composition.CompositionObject, metaclass=InteractionTracker_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTracker: ...
    def adjust_position_x_if_greater_than_threshold(self, adjustment: winrt.system.Single, position_threshold: winrt.system.Single, /) -> None: ...
    def adjust_position_y_if_greater_than_threshold(self, adjustment: winrt.system.Single, position_threshold: winrt.system.Single, /) -> None: ...
    def configure_center_point_x_inertia_modifiers(self, conditional_values: typing.Iterable[CompositionConditionalValue], /) -> None: ...
    def configure_center_point_y_inertia_modifiers(self, conditional_values: typing.Iterable[CompositionConditionalValue], /) -> None: ...
    def configure_position_x_inertia_modifiers(self, modifiers: typing.Iterable[InteractionTrackerInertiaModifier], /) -> None: ...
    def configure_position_y_inertia_modifiers(self, modifiers: typing.Iterable[InteractionTrackerInertiaModifier], /) -> None: ...
    def configure_scale_inertia_modifiers(self, modifiers: typing.Iterable[InteractionTrackerInertiaModifier], /) -> None: ...
    def configure_vector2_position_inertia_modifiers(self, modifiers: typing.Iterable[InteractionTrackerVector2InertiaModifier], /) -> None: ...
    def try_update_position(self, value: windows_foundation_numerics.Vector3, /) -> winrt.system.Int32: ...
    def try_update_position_by(self, amount: windows_foundation_numerics.Vector3, /) -> winrt.system.Int32: ...
    def try_update_position_by_with_option(self, amount: windows_foundation_numerics.Vector3, option: InteractionTrackerClampingOption, /) -> winrt.system.Int32: ...
    def try_update_position_with_additional_velocity(self, velocity_in_pixels_per_second: windows_foundation_numerics.Vector3, /) -> winrt.system.Int32: ...
    def try_update_position_with_animation(self, animation: windows_ui_composition.CompositionAnimation, /) -> winrt.system.Int32: ...
    @typing.overload
    def try_update_position_with_option(self, value: windows_foundation_numerics.Vector3, option: InteractionTrackerClampingOption, /) -> winrt.system.Int32: ...
    @typing.overload
    def try_update_position_with_option(self, value: windows_foundation_numerics.Vector3, option: InteractionTrackerClampingOption, pos_update_option: InteractionTrackerPositionUpdateOption, /) -> winrt.system.Int32: ...
    def try_update_scale(self, value: winrt.system.Single, center_point: windows_foundation_numerics.Vector3, /) -> winrt.system.Int32: ...
    def try_update_scale_with_additional_velocity(self, velocity_in_percent_per_second: winrt.system.Single, center_point: windows_foundation_numerics.Vector3, /) -> winrt.system.Int32: ...
    def try_update_scale_with_animation(self, animation: windows_ui_composition.CompositionAnimation, center_point: windows_foundation_numerics.Vector3, /) -> winrt.system.Int32: ...
    @_property
    def scale_inertia_decay_rate(self) -> typing.Optional[winrt.system.Single]: ...
    @scale_inertia_decay_rate.setter
    def scale_inertia_decay_rate(self, value: typing.Optional[winrt.system.Single]) -> None: ...
    @_property
    def position_inertia_decay_rate(self) -> typing.Optional[windows_foundation_numerics.Vector3]: ...
    @position_inertia_decay_rate.setter
    def position_inertia_decay_rate(self, value: typing.Optional[windows_foundation_numerics.Vector3]) -> None: ...
    @_property
    def min_scale(self) -> winrt.system.Single: ...
    @min_scale.setter
    def min_scale(self, value: winrt.system.Single) -> None: ...
    @_property
    def min_position(self) -> windows_foundation_numerics.Vector3: ...
    @min_position.setter
    def min_position(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def max_scale(self) -> winrt.system.Single: ...
    @max_scale.setter
    def max_scale(self, value: winrt.system.Single) -> None: ...
    @_property
    def max_position(self) -> windows_foundation_numerics.Vector3: ...
    @max_position.setter
    def max_position(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def interaction_sources(self) -> CompositionInteractionSourceCollection: ...
    @_property
    def is_position_rounding_suggested(self) -> bool: ...
    @_property
    def natural_resting_position(self) -> windows_foundation_numerics.Vector3: ...
    @_property
    def natural_resting_scale(self) -> winrt.system.Single: ...
    @_property
    def owner(self) -> IInteractionTrackerOwner: ...
    @_property
    def position(self) -> windows_foundation_numerics.Vector3: ...
    @_property
    def position_velocity_in_pixels_per_second(self) -> windows_foundation_numerics.Vector3: ...
    @_property
    def scale(self) -> winrt.system.Single: ...
    @_property
    def scale_velocity_in_percent_per_second(self) -> winrt.system.Single: ...
    @_property
    def is_inertia_from_impulse(self) -> bool: ...

@typing.final
class InteractionTrackerCustomAnimationStateEnteredArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerCustomAnimationStateEnteredArgs: ...
    @_property
    def request_id(self) -> winrt.system.Int32: ...
    @_property
    def is_from_binding(self) -> bool: ...

@typing.final
class InteractionTrackerIdleStateEnteredArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerIdleStateEnteredArgs: ...
    @_property
    def request_id(self) -> winrt.system.Int32: ...
    @_property
    def is_from_binding(self) -> bool: ...

class InteractionTrackerInertiaModifier_Static(windows_ui_composition.CompositionObject_Static):
    pass

class InteractionTrackerInertiaModifier(windows_ui_composition.CompositionObject, metaclass=InteractionTrackerInertiaModifier_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerInertiaModifier: ...

@typing.final
class InteractionTrackerInertiaMotion_Static(InteractionTrackerInertiaModifier_Static):
    def create(cls, compositor: windows_ui_composition.Compositor, /) -> InteractionTrackerInertiaMotion: ...

@typing.final
class InteractionTrackerInertiaMotion(InteractionTrackerInertiaModifier, metaclass=InteractionTrackerInertiaMotion_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerInertiaMotion: ...
    @_property
    def motion(self) -> windows_ui_composition.ExpressionAnimation: ...
    @motion.setter
    def motion(self, value: windows_ui_composition.ExpressionAnimation) -> None: ...
    @_property
    def condition(self) -> windows_ui_composition.ExpressionAnimation: ...
    @condition.setter
    def condition(self, value: windows_ui_composition.ExpressionAnimation) -> None: ...

@typing.final
class InteractionTrackerInertiaNaturalMotion_Static(InteractionTrackerInertiaModifier_Static):
    def create(cls, compositor: windows_ui_composition.Compositor, /) -> InteractionTrackerInertiaNaturalMotion: ...

@typing.final
class InteractionTrackerInertiaNaturalMotion(InteractionTrackerInertiaModifier, metaclass=InteractionTrackerInertiaNaturalMotion_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerInertiaNaturalMotion: ...
    @_property
    def natural_motion(self) -> windows_ui_composition.ScalarNaturalMotionAnimation: ...
    @natural_motion.setter
    def natural_motion(self, value: windows_ui_composition.ScalarNaturalMotionAnimation) -> None: ...
    @_property
    def condition(self) -> windows_ui_composition.ExpressionAnimation: ...
    @condition.setter
    def condition(self, value: windows_ui_composition.ExpressionAnimation) -> None: ...

@typing.final
class InteractionTrackerInertiaRestingValue_Static(InteractionTrackerInertiaModifier_Static):
    def create(cls, compositor: windows_ui_composition.Compositor, /) -> InteractionTrackerInertiaRestingValue: ...

@typing.final
class InteractionTrackerInertiaRestingValue(InteractionTrackerInertiaModifier, metaclass=InteractionTrackerInertiaRestingValue_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerInertiaRestingValue: ...
    @_property
    def resting_value(self) -> windows_ui_composition.ExpressionAnimation: ...
    @resting_value.setter
    def resting_value(self, value: windows_ui_composition.ExpressionAnimation) -> None: ...
    @_property
    def condition(self) -> windows_ui_composition.ExpressionAnimation: ...
    @condition.setter
    def condition(self, value: windows_ui_composition.ExpressionAnimation) -> None: ...

@typing.final
class InteractionTrackerInertiaStateEnteredArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerInertiaStateEnteredArgs: ...
    @_property
    def modified_resting_position(self) -> typing.Optional[windows_foundation_numerics.Vector3]: ...
    @_property
    def modified_resting_scale(self) -> typing.Optional[winrt.system.Single]: ...
    @_property
    def natural_resting_position(self) -> windows_foundation_numerics.Vector3: ...
    @_property
    def natural_resting_scale(self) -> winrt.system.Single: ...
    @_property
    def position_velocity_in_pixels_per_second(self) -> windows_foundation_numerics.Vector3: ...
    @_property
    def request_id(self) -> winrt.system.Int32: ...
    @_property
    def scale_velocity_in_percent_per_second(self) -> winrt.system.Single: ...
    @_property
    def is_inertia_from_impulse(self) -> bool: ...
    @_property
    def is_from_binding(self) -> bool: ...

@typing.final
class InteractionTrackerInteractingStateEnteredArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerInteractingStateEnteredArgs: ...
    @_property
    def request_id(self) -> winrt.system.Int32: ...
    @_property
    def is_from_binding(self) -> bool: ...

@typing.final
class InteractionTrackerRequestIgnoredArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerRequestIgnoredArgs: ...
    @_property
    def request_id(self) -> winrt.system.Int32: ...

@typing.final
class InteractionTrackerValuesChangedArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerValuesChangedArgs: ...
    @_property
    def position(self) -> windows_foundation_numerics.Vector3: ...
    @_property
    def request_id(self) -> winrt.system.Int32: ...
    @_property
    def scale(self) -> winrt.system.Single: ...

class InteractionTrackerVector2InertiaModifier_Static(windows_ui_composition.CompositionObject_Static):
    pass

class InteractionTrackerVector2InertiaModifier(windows_ui_composition.CompositionObject, metaclass=InteractionTrackerVector2InertiaModifier_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerVector2InertiaModifier: ...

@typing.final
class InteractionTrackerVector2InertiaNaturalMotion_Static(InteractionTrackerVector2InertiaModifier_Static):
    def create(cls, compositor: windows_ui_composition.Compositor, /) -> InteractionTrackerVector2InertiaNaturalMotion: ...

@typing.final
class InteractionTrackerVector2InertiaNaturalMotion(InteractionTrackerVector2InertiaModifier, metaclass=InteractionTrackerVector2InertiaNaturalMotion_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InteractionTrackerVector2InertiaNaturalMotion: ...
    @_property
    def natural_motion(self) -> windows_ui_composition.Vector2NaturalMotionAnimation: ...
    @natural_motion.setter
    def natural_motion(self, value: windows_ui_composition.Vector2NaturalMotionAnimation) -> None: ...
    @_property
    def condition(self) -> windows_ui_composition.ExpressionAnimation: ...
    @condition.setter
    def condition(self, value: windows_ui_composition.ExpressionAnimation) -> None: ...

class VisualInteractionSource_Static(windows_ui_composition.CompositionObject_Static):
    def create(cls, source: windows_ui_composition.Visual, /) -> VisualInteractionSource: ...
    def create_from_ivisual_element(cls, source: windows_ui_composition.ImplementsIVisualElement, /) -> VisualInteractionSource: ...

class VisualInteractionSource(windows_ui_composition.CompositionObject, ImplementsICompositionInteractionSource, metaclass=VisualInteractionSource_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> VisualInteractionSource: ...
    def configure_center_point_x_modifiers(self, conditional_values: typing.Iterable[CompositionConditionalValue], /) -> None: ...
    def configure_center_point_y_modifiers(self, conditional_values: typing.Iterable[CompositionConditionalValue], /) -> None: ...
    def configure_delta_position_x_modifiers(self, conditional_values: typing.Iterable[CompositionConditionalValue], /) -> None: ...
    def configure_delta_position_y_modifiers(self, conditional_values: typing.Iterable[CompositionConditionalValue], /) -> None: ...
    def configure_delta_scale_modifiers(self, conditional_values: typing.Iterable[CompositionConditionalValue], /) -> None: ...
    def try_redirect_for_manipulation(self, pointer_point: windows_ui_input.PointerPoint, /) -> None: ...
    @_property
    def scale_source_mode(self) -> InteractionSourceMode: ...
    @scale_source_mode.setter
    def scale_source_mode(self, value: InteractionSourceMode) -> None: ...
    @_property
    def scale_chaining_mode(self) -> InteractionChainingMode: ...
    @scale_chaining_mode.setter
    def scale_chaining_mode(self, value: InteractionChainingMode) -> None: ...
    @_property
    def position_y_source_mode(self) -> InteractionSourceMode: ...
    @position_y_source_mode.setter
    def position_y_source_mode(self, value: InteractionSourceMode) -> None: ...
    @_property
    def position_y_chaining_mode(self) -> InteractionChainingMode: ...
    @position_y_chaining_mode.setter
    def position_y_chaining_mode(self, value: InteractionChainingMode) -> None: ...
    @_property
    def position_x_source_mode(self) -> InteractionSourceMode: ...
    @position_x_source_mode.setter
    def position_x_source_mode(self, value: InteractionSourceMode) -> None: ...
    @_property
    def position_x_chaining_mode(self) -> InteractionChainingMode: ...
    @position_x_chaining_mode.setter
    def position_x_chaining_mode(self, value: InteractionChainingMode) -> None: ...
    @_property
    def manipulation_redirection_mode(self) -> VisualInteractionSourceRedirectionMode: ...
    @manipulation_redirection_mode.setter
    def manipulation_redirection_mode(self, value: VisualInteractionSourceRedirectionMode) -> None: ...
    @_property
    def is_position_y_rails_enabled(self) -> bool: ...
    @is_position_y_rails_enabled.setter
    def is_position_y_rails_enabled(self, value: bool) -> None: ...
    @_property
    def is_position_x_rails_enabled(self) -> bool: ...
    @is_position_x_rails_enabled.setter
    def is_position_x_rails_enabled(self, value: bool) -> None: ...
    @_property
    def source(self) -> windows_ui_composition.Visual: ...
    @_property
    def delta_position(self) -> windows_foundation_numerics.Vector3: ...
    @_property
    def delta_scale(self) -> winrt.system.Single: ...
    @_property
    def position(self) -> windows_foundation_numerics.Vector3: ...
    @_property
    def position_velocity(self) -> windows_foundation_numerics.Vector3: ...
    @_property
    def scale(self) -> winrt.system.Single: ...
    @_property
    def scale_velocity(self) -> winrt.system.Single: ...
    @_property
    def pointer_wheel_config(self) -> InteractionSourceConfiguration: ...

class ImplementsICompositionInteractionSource():
    pass

class ICompositionInteractionSource(winrt.system.Object, ImplementsICompositionInteractionSource):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ICompositionInteractionSource: ...

class ImplementsIInteractionTrackerOwner():
    pass

class IInteractionTrackerOwner(winrt.system.Object, ImplementsIInteractionTrackerOwner):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> IInteractionTrackerOwner: ...
    def custom_animation_state_entered(self, sender: InteractionTracker, args: InteractionTrackerCustomAnimationStateEnteredArgs, /) -> None: ...
    def idle_state_entered(self, sender: InteractionTracker, args: InteractionTrackerIdleStateEnteredArgs, /) -> None: ...
    def inertia_state_entered(self, sender: InteractionTracker, args: InteractionTrackerInertiaStateEnteredArgs, /) -> None: ...
    def interacting_state_entered(self, sender: InteractionTracker, args: InteractionTrackerInteractingStateEnteredArgs, /) -> None: ...
    def request_ignored(self, sender: InteractionTracker, args: InteractionTrackerRequestIgnoredArgs, /) -> None: ...
    def values_changed(self, sender: InteractionTracker, args: InteractionTrackerValuesChangedArgs, /) -> None: ...

