# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.security.authentication.web as windows_security_authentication_web
import winrt.windows.security.authentication.web.core as windows_security_authentication_web_core
import winrt.windows.security.credentials as windows_security_credentials
import winrt.windows.security.cryptography.core as windows_security_cryptography_core
import winrt.windows.storage.streams as windows_storage_streams
import winrt.windows.system as windows_system
import winrt.windows.web.http as windows_web_http

from winrt.windows.security.authentication.web.provider import WebAccountClientViewType, WebAccountProviderOperationKind, WebAccountScope, WebAccountSelectionOptions

Self = typing.TypeVar('Self')

@typing.final
class WebAccountClientView(winrt.system.Object):
    @typing.overload
    def __new__(cls: typing.Type[Self], view_type: WebAccountClientViewType, application_callback_uri: windows_foundation.Uri) -> Self: ...
    @typing.overload
    def __new__(cls: typing.Type[Self], view_type: WebAccountClientViewType, application_callback_uri: windows_foundation.Uri, account_pairwise_id: str) -> Self: ...
    # System.String Windows.Security.Authentication.Web.Provider.WebAccountClientView::get_AccountPairwiseId()
    @_property
    def account_pairwise_id(self) -> str: ...
    # Windows.Foundation.Uri Windows.Security.Authentication.Web.Provider.WebAccountClientView::get_ApplicationCallbackUri()
    @_property
    def application_callback_uri(self) -> windows_foundation.Uri: ...
    # Windows.Security.Authentication.Web.Provider.WebAccountClientViewType Windows.Security.Authentication.Web.Provider.WebAccountClientView::get_Type()
    @_property
    def type(self) -> WebAccountClientViewType: ...

@typing.final
class WebAccountManager_Static(type):
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.WebAccount> Windows.Security.Authentication.Web.Provider.WebAccountManager::AddWebAccountAsync(System.String,System.String,Windows.Foundation.Collections.IMapView`2<System.String,System.String>)
    def add_web_account_async(cls, web_account_id: str, web_account_user_name: str, props: typing.Mapping[str, str], /) -> windows_foundation.IAsyncOperation[windows_security_credentials.WebAccount]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.WebAccount> Windows.Security.Authentication.Web.Provider.WebAccountManager::AddWebAccountForUserAsync(Windows.System.User,System.String,System.String,Windows.Foundation.Collections.IMapView`2<System.String,System.String>)
    def add_web_account_for_user_async(cls, user: windows_system.User, web_account_id: str, web_account_user_name: str, props: typing.Mapping[str, str], /) -> windows_foundation.IAsyncOperation[windows_security_credentials.WebAccount]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.WebAccount> Windows.Security.Authentication.Web.Provider.WebAccountManager::AddWebAccountAsync(System.String,System.String,Windows.Foundation.Collections.IMapView`2<System.String,System.String>,Windows.Security.Authentication.Web.Provider.WebAccountScope,System.String)
    def add_web_account_with_scope_and_map_async(cls, web_account_id: str, web_account_user_name: str, props: typing.Mapping[str, str], scope: WebAccountScope, per_user_web_account_id: str, /) -> windows_foundation.IAsyncOperation[windows_security_credentials.WebAccount]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.WebAccount> Windows.Security.Authentication.Web.Provider.WebAccountManager::AddWebAccountForUserAsync(Windows.System.User,System.String,System.String,Windows.Foundation.Collections.IMapView`2<System.String,System.String>,Windows.Security.Authentication.Web.Provider.WebAccountScope,System.String)
    def add_web_account_with_scope_and_map_for_user_async(cls, user: windows_system.User, web_account_id: str, web_account_user_name: str, props: typing.Mapping[str, str], scope: WebAccountScope, per_user_web_account_id: str, /) -> windows_foundation.IAsyncOperation[windows_security_credentials.WebAccount]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.WebAccount> Windows.Security.Authentication.Web.Provider.WebAccountManager::AddWebAccountAsync(System.String,System.String,Windows.Foundation.Collections.IMapView`2<System.String,System.String>,Windows.Security.Authentication.Web.Provider.WebAccountScope)
    def add_web_account_with_scope_async(cls, web_account_id: str, web_account_user_name: str, props: typing.Mapping[str, str], scope: WebAccountScope, /) -> windows_foundation.IAsyncOperation[windows_security_credentials.WebAccount]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.WebAccount> Windows.Security.Authentication.Web.Provider.WebAccountManager::AddWebAccountForUserAsync(Windows.System.User,System.String,System.String,Windows.Foundation.Collections.IMapView`2<System.String,System.String>,Windows.Security.Authentication.Web.Provider.WebAccountScope)
    def add_web_account_with_scope_for_user_async(cls, user: windows_system.User, web_account_id: str, web_account_user_name: str, props: typing.Mapping[str, str], scope: WebAccountScope, /) -> windows_foundation.IAsyncOperation[windows_security_credentials.WebAccount]: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Authentication.Web.Provider.WebAccountManager::ClearPerUserFromPerAppAccountAsync(Windows.Security.Credentials.WebAccount)
    def clear_per_user_from_per_app_account_async(cls, per_app_account: windows_security_credentials.WebAccount, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Authentication.Web.Provider.WebAccountManager::ClearViewAsync(Windows.Security.Credentials.WebAccount,Windows.Foundation.Uri)
    def clear_view_async(cls, web_account: windows_security_credentials.WebAccount, application_callback_uri: windows_foundation.Uri, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Authentication.Web.Provider.WebAccountManager::ClearWebAccountPictureAsync(Windows.Security.Credentials.WebAccount)
    def clear_web_account_picture_async(cls, web_account: windows_security_credentials.WebAccount, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Authentication.Web.Provider.WebAccountManager::DeleteWebAccountAsync(Windows.Security.Credentials.WebAccount)
    def delete_web_account_async(cls, web_account: windows_security_credentials.WebAccount, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Security.Credentials.WebAccount>> Windows.Security.Authentication.Web.Provider.WebAccountManager::FindAllProviderWebAccountsAsync()
    def find_all_provider_web_accounts_async(cls) -> windows_foundation.IAsyncOperation[typing.Sequence[windows_security_credentials.WebAccount]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Security.Credentials.WebAccount>> Windows.Security.Authentication.Web.Provider.WebAccountManager::FindAllProviderWebAccountsForUserAsync(Windows.System.User)
    def find_all_provider_web_accounts_for_user_async(cls, user: windows_system.User, /) -> windows_foundation.IAsyncOperation[typing.Sequence[windows_security_credentials.WebAccount]]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.WebAccount> Windows.Security.Authentication.Web.Provider.WebAccountManager::GetPerUserFromPerAppAccountAsync(Windows.Security.Credentials.WebAccount)
    def get_per_user_from_per_app_account_async(cls, per_app_account: windows_security_credentials.WebAccount, /) -> windows_foundation.IAsyncOperation[windows_security_credentials.WebAccount]: ...
    # Windows.Security.Authentication.Web.Provider.WebAccountScope Windows.Security.Authentication.Web.Provider.WebAccountManager::GetScope(Windows.Security.Credentials.WebAccount)
    def get_scope(cls, web_account: windows_security_credentials.WebAccount, /) -> WebAccountScope: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.Security.Authentication.Web.Provider.WebAccountClientView>> Windows.Security.Authentication.Web.Provider.WebAccountManager::GetViewsAsync(Windows.Security.Credentials.WebAccount)
    def get_views_async(cls, web_account: windows_security_credentials.WebAccount, /) -> windows_foundation.IAsyncOperation[typing.Sequence[WebAccountClientView]]: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Authentication.Web.Provider.WebAccountManager::InvalidateAppCacheForAccountAsync(Windows.Security.Credentials.WebAccount)
    def invalidate_app_cache_for_account_async(cls, web_account: windows_security_credentials.WebAccount, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Authentication.Web.Provider.WebAccountManager::InvalidateAppCacheForAllAccountsAsync()
    def invalidate_app_cache_for_all_accounts_async(cls) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Authentication.Web.Provider.WebAccountManager::PullCookiesAsync(System.String,System.String)
    def pull_cookies_async(cls, uri_string: str, caller_p_f_n: str, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Authentication.Web.Provider.WebAccountManager::PushCookiesAsync(Windows.Foundation.Uri,Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.HttpCookie>)
    def push_cookies_async(cls, uri: windows_foundation.Uri, cookies: typing.Sequence[windows_web_http.HttpCookie], /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Authentication.Web.Provider.WebAccountManager::SetPerAppToPerUserAccountAsync(Windows.Security.Credentials.WebAccount,System.String)
    def set_per_app_to_per_user_account_async(cls, per_app_account: windows_security_credentials.WebAccount, per_user_web_account_id: str, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Authentication.Web.Provider.WebAccountManager::SetScopeAsync(Windows.Security.Credentials.WebAccount,Windows.Security.Authentication.Web.Provider.WebAccountScope)
    def set_scope_async(cls, web_account: windows_security_credentials.WebAccount, scope: WebAccountScope, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Authentication.Web.Provider.WebAccountManager::SetViewAsync(Windows.Security.Credentials.WebAccount,Windows.Security.Authentication.Web.Provider.WebAccountClientView)
    def set_view_async(cls, web_account: windows_security_credentials.WebAccount, view: WebAccountClientView, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Authentication.Web.Provider.WebAccountManager::SetWebAccountPictureAsync(Windows.Security.Credentials.WebAccount,Windows.Storage.Streams.IRandomAccessStream)
    def set_web_account_picture_async(cls, web_account: windows_security_credentials.WebAccount, web_account_picture: windows_storage_streams.IRandomAccessStream, /) -> windows_foundation.IAsyncAction: ...
    # Windows.Foundation.IAsyncAction Windows.Security.Authentication.Web.Provider.WebAccountManager::UpdateWebAccountPropertiesAsync(Windows.Security.Credentials.WebAccount,System.String,Windows.Foundation.Collections.IMapView`2<System.String,System.String>)
    def update_web_account_properties_async(cls, web_account: windows_security_credentials.WebAccount, web_account_user_name: str, additional_properties: typing.Mapping[str, str], /) -> windows_foundation.IAsyncAction: ...

@typing.final
class WebAccountManager(winrt.system.Object, metaclass=WebAccountManager_Static):
    pass

@typing.final
class WebAccountProviderAddAccountOperation(winrt.system.Object, IWebAccountProviderOperation):
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderAddAccountOperation::ReportCompleted()
    def report_completed(self) -> None: ...
    # Windows.Security.Authentication.Web.Provider.WebAccountProviderOperationKind Windows.Security.Authentication.Web.Provider.WebAccountProviderAddAccountOperation::get_Kind()
    @_property
    def kind(self) -> WebAccountProviderOperationKind: ...

@typing.final
class WebAccountProviderDeleteAccountOperation(winrt.system.Object, IWebAccountProviderBaseReportOperation, IWebAccountProviderOperation):
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderDeleteAccountOperation::ReportCompleted()
    def report_completed(self) -> None: ...
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderDeleteAccountOperation::ReportError(Windows.Security.Authentication.Web.Core.WebProviderError)
    def report_error(self, value: windows_security_authentication_web_core.WebProviderError, /) -> None: ...
    # Windows.Security.Credentials.WebAccount Windows.Security.Authentication.Web.Provider.WebAccountProviderDeleteAccountOperation::get_WebAccount()
    @_property
    def web_account(self) -> windows_security_credentials.WebAccount: ...
    # Windows.Security.Authentication.Web.Provider.WebAccountProviderOperationKind Windows.Security.Authentication.Web.Provider.WebAccountProviderDeleteAccountOperation::get_Kind()
    @_property
    def kind(self) -> WebAccountProviderOperationKind: ...

@typing.final
class WebAccountProviderGetTokenSilentOperation(winrt.system.Object, IWebAccountProviderSilentReportOperation, IWebAccountProviderBaseReportOperation, IWebAccountProviderTokenOperation, IWebAccountProviderOperation):
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderGetTokenSilentOperation::ReportCompleted()
    def report_completed(self) -> None: ...
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderGetTokenSilentOperation::ReportError(Windows.Security.Authentication.Web.Core.WebProviderError)
    def report_error(self, value: windows_security_authentication_web_core.WebProviderError, /) -> None: ...
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderGetTokenSilentOperation::ReportUserInteractionRequired()
    def report_user_interaction_required(self) -> None: ...
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderGetTokenSilentOperation::ReportUserInteractionRequired(Windows.Security.Authentication.Web.Core.WebProviderError)
    def report_user_interaction_required_with_error(self, value: windows_security_authentication_web_core.WebProviderError, /) -> None: ...
    # Windows.Security.Authentication.Web.Provider.WebAccountProviderOperationKind Windows.Security.Authentication.Web.Provider.WebAccountProviderGetTokenSilentOperation::get_Kind()
    @_property
    def kind(self) -> WebAccountProviderOperationKind: ...
    # Windows.Foundation.DateTime Windows.Security.Authentication.Web.Provider.WebAccountProviderGetTokenSilentOperation::get_CacheExpirationTime()
    @_property
    def cache_expiration_time(self) -> datetime.datetime: ...
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderGetTokenSilentOperation::put_CacheExpirationTime(Windows.Foundation.DateTime)
    @cache_expiration_time.setter
    def cache_expiration_time(self, value: datetime.datetime) -> None: ...
    # Windows.Security.Authentication.Web.Provider.WebProviderTokenRequest Windows.Security.Authentication.Web.Provider.WebAccountProviderGetTokenSilentOperation::get_ProviderRequest()
    @_property
    def provider_request(self) -> WebProviderTokenRequest: ...
    # Windows.Foundation.Collections.IVector`1<Windows.Security.Authentication.Web.Provider.WebProviderTokenResponse> Windows.Security.Authentication.Web.Provider.WebAccountProviderGetTokenSilentOperation::get_ProviderResponses()
    @_property
    def provider_responses(self) -> typing.MutableSequence[WebProviderTokenResponse]: ...

@typing.final
class WebAccountProviderManageAccountOperation(winrt.system.Object, IWebAccountProviderOperation):
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderManageAccountOperation::ReportCompleted()
    def report_completed(self) -> None: ...
    # Windows.Security.Credentials.WebAccount Windows.Security.Authentication.Web.Provider.WebAccountProviderManageAccountOperation::get_WebAccount()
    @_property
    def web_account(self) -> windows_security_credentials.WebAccount: ...
    # Windows.Security.Authentication.Web.Provider.WebAccountProviderOperationKind Windows.Security.Authentication.Web.Provider.WebAccountProviderManageAccountOperation::get_Kind()
    @_property
    def kind(self) -> WebAccountProviderOperationKind: ...

@typing.final
class WebAccountProviderRequestTokenOperation(winrt.system.Object, IWebAccountProviderUIReportOperation, IWebAccountProviderBaseReportOperation, IWebAccountProviderTokenOperation, IWebAccountProviderOperation):
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderRequestTokenOperation::ReportCompleted()
    def report_completed(self) -> None: ...
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderRequestTokenOperation::ReportError(Windows.Security.Authentication.Web.Core.WebProviderError)
    def report_error(self, value: windows_security_authentication_web_core.WebProviderError, /) -> None: ...
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderRequestTokenOperation::ReportUserCanceled()
    def report_user_canceled(self) -> None: ...
    # Windows.Security.Authentication.Web.Provider.WebAccountProviderOperationKind Windows.Security.Authentication.Web.Provider.WebAccountProviderRequestTokenOperation::get_Kind()
    @_property
    def kind(self) -> WebAccountProviderOperationKind: ...
    # Windows.Foundation.DateTime Windows.Security.Authentication.Web.Provider.WebAccountProviderRequestTokenOperation::get_CacheExpirationTime()
    @_property
    def cache_expiration_time(self) -> datetime.datetime: ...
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderRequestTokenOperation::put_CacheExpirationTime(Windows.Foundation.DateTime)
    @cache_expiration_time.setter
    def cache_expiration_time(self, value: datetime.datetime) -> None: ...
    # Windows.Security.Authentication.Web.Provider.WebProviderTokenRequest Windows.Security.Authentication.Web.Provider.WebAccountProviderRequestTokenOperation::get_ProviderRequest()
    @_property
    def provider_request(self) -> WebProviderTokenRequest: ...
    # Windows.Foundation.Collections.IVector`1<Windows.Security.Authentication.Web.Provider.WebProviderTokenResponse> Windows.Security.Authentication.Web.Provider.WebAccountProviderRequestTokenOperation::get_ProviderResponses()
    @_property
    def provider_responses(self) -> typing.MutableSequence[WebProviderTokenResponse]: ...

@typing.final
class WebAccountProviderRetrieveCookiesOperation(winrt.system.Object, IWebAccountProviderBaseReportOperation, IWebAccountProviderOperation):
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderRetrieveCookiesOperation::ReportCompleted()
    def report_completed(self) -> None: ...
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderRetrieveCookiesOperation::ReportError(Windows.Security.Authentication.Web.Core.WebProviderError)
    def report_error(self, value: windows_security_authentication_web_core.WebProviderError, /) -> None: ...
    # Windows.Security.Authentication.Web.Provider.WebAccountProviderOperationKind Windows.Security.Authentication.Web.Provider.WebAccountProviderRetrieveCookiesOperation::get_Kind()
    @_property
    def kind(self) -> WebAccountProviderOperationKind: ...
    # Windows.Foundation.Uri Windows.Security.Authentication.Web.Provider.WebAccountProviderRetrieveCookiesOperation::get_Uri()
    @_property
    def uri(self) -> windows_foundation.Uri: ...
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderRetrieveCookiesOperation::put_Uri(Windows.Foundation.Uri)
    @uri.setter
    def uri(self, value: windows_foundation.Uri) -> None: ...
    # Windows.Foundation.Uri Windows.Security.Authentication.Web.Provider.WebAccountProviderRetrieveCookiesOperation::get_ApplicationCallbackUri()
    @_property
    def application_callback_uri(self) -> windows_foundation.Uri: ...
    # Windows.Foundation.Uri Windows.Security.Authentication.Web.Provider.WebAccountProviderRetrieveCookiesOperation::get_Context()
    @_property
    def context(self) -> windows_foundation.Uri: ...
    # Windows.Foundation.Collections.IVector`1<Windows.Web.Http.HttpCookie> Windows.Security.Authentication.Web.Provider.WebAccountProviderRetrieveCookiesOperation::get_Cookies()
    @_property
    def cookies(self) -> typing.MutableSequence[windows_web_http.HttpCookie]: ...

@typing.final
class WebAccountProviderSignOutAccountOperation(winrt.system.Object, IWebAccountProviderBaseReportOperation, IWebAccountProviderOperation):
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderSignOutAccountOperation::ReportCompleted()
    def report_completed(self) -> None: ...
    # System.Void Windows.Security.Authentication.Web.Provider.WebAccountProviderSignOutAccountOperation::ReportError(Windows.Security.Authentication.Web.Core.WebProviderError)
    def report_error(self, value: windows_security_authentication_web_core.WebProviderError, /) -> None: ...
    # Windows.Security.Authentication.Web.Provider.WebAccountProviderOperationKind Windows.Security.Authentication.Web.Provider.WebAccountProviderSignOutAccountOperation::get_Kind()
    @_property
    def kind(self) -> WebAccountProviderOperationKind: ...
    # Windows.Foundation.Uri Windows.Security.Authentication.Web.Provider.WebAccountProviderSignOutAccountOperation::get_ApplicationCallbackUri()
    @_property
    def application_callback_uri(self) -> windows_foundation.Uri: ...
    # System.String Windows.Security.Authentication.Web.Provider.WebAccountProviderSignOutAccountOperation::get_ClientId()
    @_property
    def client_id(self) -> str: ...
    # Windows.Security.Credentials.WebAccount Windows.Security.Authentication.Web.Provider.WebAccountProviderSignOutAccountOperation::get_WebAccount()
    @_property
    def web_account(self) -> windows_security_credentials.WebAccount: ...

@typing.final
class WebAccountProviderTriggerDetails(winrt.system.Object, IWebAccountProviderTokenObjects2, IWebAccountProviderTokenObjects):
    # Windows.Security.Authentication.Web.Provider.IWebAccountProviderOperation Windows.Security.Authentication.Web.Provider.WebAccountProviderTriggerDetails::get_Operation()
    @_property
    def operation(self) -> IWebAccountProviderOperation: ...
    # Windows.System.User Windows.Security.Authentication.Web.Provider.WebAccountProviderTriggerDetails::get_User()
    @_property
    def user(self) -> windows_system.User: ...

@typing.final
class WebProviderTokenRequest(winrt.system.Object):
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.Security.Authentication.Web.Provider.WebProviderTokenRequest::CheckApplicationForCapabilityAsync(System.String)
    def check_application_for_capability_async(self, capability_name: str, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Cryptography.Core.CryptographicKey> Windows.Security.Authentication.Web.Provider.WebProviderTokenRequest::GetApplicationTokenBindingKeyAsync(Windows.Security.Authentication.Web.TokenBindingKeyType,Windows.Foundation.Uri)
    def get_application_token_binding_key_async(self, key_type: windows_security_authentication_web.TokenBindingKeyType, target: windows_foundation.Uri, /) -> windows_foundation.IAsyncOperation[windows_security_cryptography_core.CryptographicKey]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.Streams.IBuffer> Windows.Security.Authentication.Web.Provider.WebProviderTokenRequest::GetApplicationTokenBindingKeyIdAsync(Windows.Security.Authentication.Web.TokenBindingKeyType,Windows.Foundation.Uri)
    def get_application_token_binding_key_id_async(self, key_type: windows_security_authentication_web.TokenBindingKeyType, target: windows_foundation.Uri, /) -> windows_foundation.IAsyncOperation[windows_storage_streams.IBuffer]: ...
    # Windows.Foundation.Uri Windows.Security.Authentication.Web.Provider.WebProviderTokenRequest::get_ApplicationCallbackUri()
    @_property
    def application_callback_uri(self) -> windows_foundation.Uri: ...
    # Windows.Security.Authentication.Web.Core.WebTokenRequest Windows.Security.Authentication.Web.Provider.WebProviderTokenRequest::get_ClientRequest()
    @_property
    def client_request(self) -> windows_security_authentication_web_core.WebTokenRequest: ...
    # Windows.Security.Authentication.Web.Provider.WebAccountSelectionOptions Windows.Security.Authentication.Web.Provider.WebProviderTokenRequest::get_WebAccountSelectionOptions()
    @_property
    def web_account_selection_options(self) -> WebAccountSelectionOptions: ...
    # Windows.Foundation.Collections.IVectorView`1<Windows.Security.Credentials.WebAccount> Windows.Security.Authentication.Web.Provider.WebProviderTokenRequest::get_WebAccounts()
    @_property
    def web_accounts(self) -> typing.Sequence[windows_security_credentials.WebAccount]: ...
    # System.String Windows.Security.Authentication.Web.Provider.WebProviderTokenRequest::get_ApplicationPackageFamilyName()
    @_property
    def application_package_family_name(self) -> str: ...
    # System.String Windows.Security.Authentication.Web.Provider.WebProviderTokenRequest::get_ApplicationProcessName()
    @_property
    def application_process_name(self) -> str: ...

@typing.final
class WebProviderTokenResponse(winrt.system.Object):
    def __new__(cls: typing.Type[Self], web_token_response: windows_security_authentication_web_core.WebTokenResponse) -> Self: ...
    # Windows.Security.Authentication.Web.Core.WebTokenResponse Windows.Security.Authentication.Web.Provider.WebProviderTokenResponse::get_ClientResponse()
    @_property
    def client_response(self) -> windows_security_authentication_web_core.WebTokenResponse: ...

@typing.final
class _IWebAccountProviderBaseReportOperation: ...

class IWebAccountProviderBaseReportOperation(winrt._winrt.IInspectable):
    # System.Void Windows.Security.Authentication.Web.Provider.IWebAccountProviderBaseReportOperation::ReportCompleted()
    @abstractmethod
    def report_completed(self) -> None: ...
    # System.Void Windows.Security.Authentication.Web.Provider.IWebAccountProviderBaseReportOperation::ReportError(Windows.Security.Authentication.Web.Core.WebProviderError)
    @abstractmethod
    def report_error(self, value: windows_security_authentication_web_core.WebProviderError, /) -> None: ...

@typing.final
class _IWebAccountProviderOperation: ...

class IWebAccountProviderOperation(winrt._winrt.IInspectable):
    # Windows.Security.Authentication.Web.Provider.WebAccountProviderOperationKind Windows.Security.Authentication.Web.Provider.IWebAccountProviderOperation::get_Kind()
    @_property
    @abstractmethod
    def kind(self) -> WebAccountProviderOperationKind: ...

@typing.final
class _IWebAccountProviderSilentReportOperation: ...

class IWebAccountProviderSilentReportOperation(IWebAccountProviderBaseReportOperation, winrt._winrt.IInspectable):
    # System.Void Windows.Security.Authentication.Web.Provider.IWebAccountProviderSilentReportOperation::ReportUserInteractionRequired()
    @abstractmethod
    def report_user_interaction_required(self) -> None: ...
    # System.Void Windows.Security.Authentication.Web.Provider.IWebAccountProviderSilentReportOperation::ReportUserInteractionRequired(Windows.Security.Authentication.Web.Core.WebProviderError)
    @abstractmethod
    def report_user_interaction_required_with_error(self, value: windows_security_authentication_web_core.WebProviderError, /) -> None: ...

@typing.final
class _IWebAccountProviderTokenObjects: ...

class IWebAccountProviderTokenObjects(winrt._winrt.IInspectable):
    # Windows.Security.Authentication.Web.Provider.IWebAccountProviderOperation Windows.Security.Authentication.Web.Provider.IWebAccountProviderTokenObjects::get_Operation()
    @_property
    @abstractmethod
    def operation(self) -> IWebAccountProviderOperation: ...

@typing.final
class _IWebAccountProviderTokenObjects2: ...

class IWebAccountProviderTokenObjects2(IWebAccountProviderTokenObjects, winrt._winrt.IInspectable):
    # Windows.System.User Windows.Security.Authentication.Web.Provider.IWebAccountProviderTokenObjects2::get_User()
    @_property
    @abstractmethod
    def user(self) -> windows_system.User: ...

@typing.final
class _IWebAccountProviderTokenOperation: ...

class IWebAccountProviderTokenOperation(IWebAccountProviderOperation, winrt._winrt.IInspectable):
    # Windows.Foundation.DateTime Windows.Security.Authentication.Web.Provider.IWebAccountProviderTokenOperation::get_CacheExpirationTime()
    @_property
    @abstractmethod
    def cache_expiration_time(self) -> datetime.datetime: ...
    # System.Void Windows.Security.Authentication.Web.Provider.IWebAccountProviderTokenOperation::put_CacheExpirationTime(Windows.Foundation.DateTime)
    @cache_expiration_time.setter
    @abstractmethod
    def cache_expiration_time(self, value: datetime.datetime) -> None: ...
    # Windows.Security.Authentication.Web.Provider.WebProviderTokenRequest Windows.Security.Authentication.Web.Provider.IWebAccountProviderTokenOperation::get_ProviderRequest()
    @_property
    @abstractmethod
    def provider_request(self) -> WebProviderTokenRequest: ...
    # Windows.Foundation.Collections.IVector`1<Windows.Security.Authentication.Web.Provider.WebProviderTokenResponse> Windows.Security.Authentication.Web.Provider.IWebAccountProviderTokenOperation::get_ProviderResponses()
    @_property
    @abstractmethod
    def provider_responses(self) -> typing.MutableSequence[WebProviderTokenResponse]: ...

@typing.final
class _IWebAccountProviderUIReportOperation: ...

class IWebAccountProviderUIReportOperation(IWebAccountProviderBaseReportOperation, winrt._winrt.IInspectable):
    # System.Void Windows.Security.Authentication.Web.Provider.IWebAccountProviderUIReportOperation::ReportUserCanceled()
    @abstractmethod
    def report_user_canceled(self) -> None: ...

