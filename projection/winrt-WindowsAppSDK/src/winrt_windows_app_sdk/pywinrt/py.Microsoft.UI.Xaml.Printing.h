// WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "0.0.0"), "Mismatched Py/WinRT headers.");
#include <winrt/Microsoft.UI.Xaml.h>
#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Graphics.Printing.h>

#include <winrt/Microsoft.UI.Xaml.Printing.h>

namespace py::proj::Microsoft::UI::Xaml::Printing
{
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Microsoft::UI::Xaml::Printing::PreviewPageCountType> = "i";


    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Printing::PreviewPageCountType>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.printing.PreviewPageCountType";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.printing";
        static constexpr const char* type_name = "PreviewPageCountType";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Printing::AddPagesEventArgs>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.printing.AddPagesEventArgs";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.printing";
        static constexpr const char* type_name = "AddPagesEventArgs";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Printing::GetPreviewPageEventArgs>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.printing.GetPreviewPageEventArgs";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.printing";
        static constexpr const char* type_name = "GetPreviewPageEventArgs";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Printing::PaginateEventArgs>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.printing.PaginateEventArgs";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.printing";
        static constexpr const char* type_name = "PaginateEventArgs";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Printing::PrintDocument>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.printing.PrintDocument";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.printing";
        static constexpr const char* type_name = "PrintDocument";
    };
}

#if __has_include("py.Microsoft.UI.Xaml.h")
#include "py.Microsoft.UI.Xaml.h"
#endif

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Graphics.Printing.h")
#include "py.Windows.Graphics.Printing.h"
#endif

namespace py::impl::Microsoft::UI::Xaml::Printing
{
    struct AddPagesEventHandler
    {
        static winrt::Microsoft::UI::Xaml::Printing::AddPagesEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](winrt::Windows::Foundation::IInspectable const& param0, winrt::Microsoft::UI::Xaml::Printing::AddPagesEventArgs const& param1)
            {
                auto gil = py::ensure_gil();

                try
                {
                    py::pyobj_handle py_param0{py::convert(param0)};
                    if (!py_param0)
                    {
                        throw python_exception();
                    }

                    py::pyobj_handle py_param1{py::convert(param1)};
                    if (!py_param1)
                    {
                        throw python_exception();
                    }

                    py::pyobj_handle args{PyTuple_Pack(2, py_param0.get(), py_param1.get())};
                    if (!args)
                    {
                        throw python_exception();
                    }

                    py::pyobj_handle return_value{PyObject_CallObject(delegate.callable(), args.get())};
                    if (!return_value)
                    {
                        throw python_exception();
                    }
                }
                catch (python_exception)
                {
                    py::write_unraisable_and_throw();
                }
            };
        };
    };

    struct GetPreviewPageEventHandler
    {
        static winrt::Microsoft::UI::Xaml::Printing::GetPreviewPageEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](winrt::Windows::Foundation::IInspectable const& param0, winrt::Microsoft::UI::Xaml::Printing::GetPreviewPageEventArgs const& param1)
            {
                auto gil = py::ensure_gil();

                try
                {
                    py::pyobj_handle py_param0{py::convert(param0)};
                    if (!py_param0)
                    {
                        throw python_exception();
                    }

                    py::pyobj_handle py_param1{py::convert(param1)};
                    if (!py_param1)
                    {
                        throw python_exception();
                    }

                    py::pyobj_handle args{PyTuple_Pack(2, py_param0.get(), py_param1.get())};
                    if (!args)
                    {
                        throw python_exception();
                    }

                    py::pyobj_handle return_value{PyObject_CallObject(delegate.callable(), args.get())};
                    if (!return_value)
                    {
                        throw python_exception();
                    }
                }
                catch (python_exception)
                {
                    py::write_unraisable_and_throw();
                }
            };
        };
    };

    struct PaginateEventHandler
    {
        static winrt::Microsoft::UI::Xaml::Printing::PaginateEventHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](winrt::Windows::Foundation::IInspectable const& param0, winrt::Microsoft::UI::Xaml::Printing::PaginateEventArgs const& param1)
            {
                auto gil = py::ensure_gil();

                try
                {
                    py::pyobj_handle py_param0{py::convert(param0)};
                    if (!py_param0)
                    {
                        throw python_exception();
                    }

                    py::pyobj_handle py_param1{py::convert(param1)};
                    if (!py_param1)
                    {
                        throw python_exception();
                    }

                    py::pyobj_handle args{PyTuple_Pack(2, py_param0.get(), py_param1.get())};
                    if (!args)
                    {
                        throw python_exception();
                    }

                    py::pyobj_handle return_value{PyObject_CallObject(delegate.callable(), args.get())};
                    if (!return_value)
                    {
                        throw python_exception();
                    }
                }
                catch (python_exception)
                {
                    py::write_unraisable_and_throw();
                }
            };
        };
    };
}

namespace py::wrapper::Microsoft::UI::Xaml::Printing
{
    using AddPagesEventArgs = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Printing::AddPagesEventArgs>;
    using GetPreviewPageEventArgs = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Printing::GetPreviewPageEventArgs>;
    using PaginateEventArgs = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Printing::PaginateEventArgs>;
    using PrintDocument = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Printing::PrintDocument>;
}

namespace py
{
    template <>
    struct delegate_python_type<winrt::Microsoft::UI::Xaml::Printing::AddPagesEventHandler>
    {
        using type = py::impl::Microsoft::UI::Xaml::Printing::AddPagesEventHandler;
    };

    template <>
    struct delegate_python_type<winrt::Microsoft::UI::Xaml::Printing::GetPreviewPageEventHandler>
    {
        using type = py::impl::Microsoft::UI::Xaml::Printing::GetPreviewPageEventHandler;
    };

    template <>
    struct delegate_python_type<winrt::Microsoft::UI::Xaml::Printing::PaginateEventHandler>
    {
        using type = py::impl::Microsoft::UI::Xaml::Printing::PaginateEventHandler;
    };

}
