// WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "0.0.0"), "Mismatched Py/WinRT headers.");
#include <winrt/Windows.Foundation.Numerics.h>
#include <winrt/Windows.Graphics.h>
#include <winrt/Windows.UI.h>
#include <winrt/Microsoft.UI.Composition.h>

#include <winrt/Microsoft.UI.Composition.Experimental.h>

namespace py::proj::Microsoft::UI::Composition::Experimental
{
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Microsoft::UI::Composition::Experimental::ExpExpressionNotificationProperty> = "i";


    template<>
    struct py_type<winrt::Microsoft::UI::Composition::Experimental::ExpExpressionNotificationProperty>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.ui.composition.experimental.ExpExpressionNotificationProperty";
        static constexpr const char* module_name = "winui3.microsoft.ui.composition.experimental";
        static constexpr const char* type_name = "ExpExpressionNotificationProperty";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Composition::Experimental::ExpCompositionVisualSurface>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.ui.composition.experimental.ExpCompositionVisualSurface";
        static constexpr const char* module_name = "winui3.microsoft.ui.composition.experimental";
        static constexpr const char* type_name = "ExpCompositionVisualSurface";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Composition::Experimental::IExpCompositionPropertyChanged>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.ui.composition.experimental._IExpCompositionPropertyChanged";
        static constexpr const char* module_name = "winui3.microsoft.ui.composition.experimental";
        static constexpr const char* type_name = "_IExpCompositionPropertyChanged";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Composition::Experimental::IExpCompositionPropertyChangedListener>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.ui.composition.experimental._IExpCompositionPropertyChangedListener";
        static constexpr const char* module_name = "winui3.microsoft.ui.composition.experimental";
        static constexpr const char* type_name = "_IExpCompositionPropertyChangedListener";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Composition::Experimental::IExpCompositor>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.ui.composition.experimental._IExpCompositor";
        static constexpr const char* module_name = "winui3.microsoft.ui.composition.experimental";
        static constexpr const char* type_name = "_IExpCompositor";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Composition::Experimental::IExpVisual>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.ui.composition.experimental._IExpVisual";
        static constexpr const char* module_name = "winui3.microsoft.ui.composition.experimental";
        static constexpr const char* type_name = "_IExpVisual";
    };
}

#if __has_include("py.Windows.Foundation.Numerics.h")
#include "py.Windows.Foundation.Numerics.h"
#endif

#if __has_include("py.Windows.Graphics.h")
#include "py.Windows.Graphics.h"
#endif

#if __has_include("py.Windows.UI.h")
#include "py.Windows.UI.h"
#endif

#if __has_include("py.Microsoft.UI.Composition.h")
#include "py.Microsoft.UI.Composition.h"
#endif

namespace py::impl::Microsoft::UI::Composition::Experimental
{
}

namespace py::wrapper::Microsoft::UI::Composition::Experimental
{
    using ExpCompositionVisualSurface = py::winrt_wrapper<winrt::Microsoft::UI::Composition::Experimental::ExpCompositionVisualSurface>;
    using IExpCompositionPropertyChanged = py::winrt_wrapper<winrt::Microsoft::UI::Composition::Experimental::IExpCompositionPropertyChanged>;
    using IExpCompositionPropertyChangedListener = py::winrt_wrapper<winrt::Microsoft::UI::Composition::Experimental::IExpCompositionPropertyChangedListener>;
    using IExpCompositor = py::winrt_wrapper<winrt::Microsoft::UI::Composition::Experimental::IExpCompositor>;
    using IExpVisual = py::winrt_wrapper<winrt::Microsoft::UI::Composition::Experimental::IExpVisual>;
}

namespace py
{
}
