// WARNING: Please don't edit this file. It was generated by Python/WinRT v3.2.1

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "3.2.1"), "Mismatched Py/WinRT headers.");
#include <winrt/Windows.Foundation.h>

#include <winrt/Microsoft.Windows.AI.h>

namespace py::proj::Microsoft::Windows::AI
{
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Microsoft::Windows::AI::AIFeatureReadyResultState> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Microsoft::Windows::AI::AIFeatureReadyState> = "i";


    template<>
    struct py_type<winrt::Microsoft::Windows::AI::AIFeatureReadyResultState>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.windows.ai.AIFeatureReadyResultState";
        static constexpr const char* module_name = "winui3.microsoft.windows.ai";
        static constexpr const char* type_name = "AIFeatureReadyResultState";
    };

    template<>
    struct py_type<winrt::Microsoft::Windows::AI::AIFeatureReadyState>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.windows.ai.AIFeatureReadyState";
        static constexpr const char* module_name = "winui3.microsoft.windows.ai";
        static constexpr const char* type_name = "AIFeatureReadyState";
    };

    template<>
    struct py_type<winrt::Microsoft::Windows::AI::AIFeatureReadyResult>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.windows.ai.AIFeatureReadyResult";
        static constexpr const char* module_name = "winui3.microsoft.windows.ai";
        static constexpr const char* type_name = "AIFeatureReadyResult";
    };
}

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

namespace py::impl::Microsoft::Windows::AI
{
}

namespace py::wrapper::Microsoft::Windows::AI
{
    using AIFeatureReadyResult = py::winrt_wrapper<winrt::Microsoft::Windows::AI::AIFeatureReadyResult>;
}

namespace py
{
}
