// WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "0.0.0"), "Mismatched Py/WinRT headers.");
#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.Storage.h>
#include <winrt/Microsoft.UI.h>

#include <winrt/Microsoft.Windows.Storage.Pickers.h>

namespace py::proj::Microsoft::Windows::Storage::Pickers
{
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Microsoft::Windows::Storage::Pickers::PickerLocationId> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Microsoft::Windows::Storage::Pickers::PickerViewMode> = "i";


    template<>
    struct py_type<winrt::Microsoft::Windows::Storage::Pickers::PickerLocationId>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.windows.storage.pickers.PickerLocationId";
        static constexpr const char* module_name = "winui3.microsoft.windows.storage.pickers";
        static constexpr const char* type_name = "PickerLocationId";
    };

    template<>
    struct py_type<winrt::Microsoft::Windows::Storage::Pickers::PickerViewMode>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.windows.storage.pickers.PickerViewMode";
        static constexpr const char* module_name = "winui3.microsoft.windows.storage.pickers";
        static constexpr const char* type_name = "PickerViewMode";
    };

    template<>
    struct py_type<winrt::Microsoft::Windows::Storage::Pickers::FileOpenPicker>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.windows.storage.pickers.FileOpenPicker";
        static constexpr const char* module_name = "winui3.microsoft.windows.storage.pickers";
        static constexpr const char* type_name = "FileOpenPicker";
    };

    template<>
    struct py_type<winrt::Microsoft::Windows::Storage::Pickers::FileSavePicker>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.windows.storage.pickers.FileSavePicker";
        static constexpr const char* module_name = "winui3.microsoft.windows.storage.pickers";
        static constexpr const char* type_name = "FileSavePicker";
    };

    template<>
    struct py_type<winrt::Microsoft::Windows::Storage::Pickers::FolderPicker>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.windows.storage.pickers.FolderPicker";
        static constexpr const char* module_name = "winui3.microsoft.windows.storage.pickers";
        static constexpr const char* type_name = "FolderPicker";
    };

    template<>
    struct py_type<winrt::Microsoft::Windows::Storage::Pickers::PickFileResult>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.windows.storage.pickers.PickFileResult";
        static constexpr const char* module_name = "winui3.microsoft.windows.storage.pickers";
        static constexpr const char* type_name = "PickFileResult";
    };

    template<>
    struct py_type<winrt::Microsoft::Windows::Storage::Pickers::PickFolderResult>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.windows.storage.pickers.PickFolderResult";
        static constexpr const char* module_name = "winui3.microsoft.windows.storage.pickers";
        static constexpr const char* type_name = "PickFolderResult";
    };
}

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Storage.h")
#include "py.Windows.Storage.h"
#endif

#if __has_include("py.Microsoft.UI.h")
#include "py.Microsoft.UI.h"
#endif

namespace py::impl::Microsoft::Windows::Storage::Pickers
{
}

namespace py::wrapper::Microsoft::Windows::Storage::Pickers
{
    using FileOpenPicker = py::winrt_wrapper<winrt::Microsoft::Windows::Storage::Pickers::FileOpenPicker>;
    using FileSavePicker = py::winrt_wrapper<winrt::Microsoft::Windows::Storage::Pickers::FileSavePicker>;
    using FolderPicker = py::winrt_wrapper<winrt::Microsoft::Windows::Storage::Pickers::FolderPicker>;
    using PickFileResult = py::winrt_wrapper<winrt::Microsoft::Windows::Storage::Pickers::PickFileResult>;
    using PickFolderResult = py::winrt_wrapper<winrt::Microsoft::Windows::Storage::Pickers::PickFolderResult>;
}

namespace py
{
}
