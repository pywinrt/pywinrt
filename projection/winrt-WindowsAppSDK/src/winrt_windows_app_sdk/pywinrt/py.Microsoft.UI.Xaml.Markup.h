// WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "0.0.0"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Microsoft.UI.Xaml.h")
#include "py.Microsoft.UI.Xaml.h"
#endif

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#if __has_include("py.Windows.UI.Xaml.Interop.h")
#include "py.Windows.UI.Xaml.Interop.h"
#endif

#include <winrt/Microsoft.UI.Xaml.h>
#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.Storage.Streams.h>
#include <winrt/Windows.UI.Xaml.Interop.h>

#include <winrt/Microsoft.UI.Xaml.Markup.h>

namespace py::proj::Microsoft::UI::Xaml::Markup
{
}

namespace py::impl::Microsoft::UI::Xaml::Markup
{
}

namespace py::wrapper::Microsoft::UI::Xaml::Markup
{
    using MarkupExtension = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::MarkupExtension>;
    using ProvideValueTargetProperty = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::ProvideValueTargetProperty>;
    using XamlBinaryWriter = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::XamlBinaryWriter>;
    using XamlBindingHelper = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::XamlBindingHelper>;
    using XamlMarkupHelper = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::XamlMarkupHelper>;
    using XamlReader = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::XamlReader>;
    using IComponentConnector = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::IComponentConnector>;
    using IDataTemplateComponent = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::IDataTemplateComponent>;
    using IProvideValueTarget = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::IProvideValueTarget>;
    using IRootObjectProvider = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::IRootObjectProvider>;
    using IUriContext = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::IUriContext>;
    using IXamlBindScopeDiagnostics = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::IXamlBindScopeDiagnostics>;
    using IXamlMember = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::IXamlMember>;
    using IXamlMetadataProvider = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::IXamlMetadataProvider>;
    using IXamlType = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::IXamlType>;
    using IXamlTypeResolver = py::winrt_wrapper<winrt::Microsoft::UI::Xaml::Markup::IXamlTypeResolver>;
    using XamlBinaryWriterErrorInformation = py::winrt_struct_wrapper<winrt::Microsoft::UI::Xaml::Markup::XamlBinaryWriterErrorInformation>;
    using XmlnsDefinition = py::winrt_struct_wrapper<winrt::Microsoft::UI::Xaml::Markup::XmlnsDefinition>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Microsoft::UI::Xaml::Markup::XamlBinaryWriterErrorInformation> = "T{I:input_stream_index:I:line_number:I:line_position:}";

    template<>
    inline constexpr const char* buffer_format<winrt::Microsoft::UI::Xaml::Markup::XmlnsDefinition> = "T{P:xml_namespace:P:namespace:}";


    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::MarkupExtension>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup.MarkupExtension";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "MarkupExtension";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::ProvideValueTargetProperty>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup.ProvideValueTargetProperty";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "ProvideValueTargetProperty";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::XamlBinaryWriter>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup.XamlBinaryWriter";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "XamlBinaryWriter";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::XamlBindingHelper>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup.XamlBindingHelper";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "XamlBindingHelper";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::XamlMarkupHelper>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup.XamlMarkupHelper";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "XamlMarkupHelper";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::XamlReader>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup.XamlReader";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "XamlReader";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::IComponentConnector>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup._IComponentConnector";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "_IComponentConnector";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::IDataTemplateComponent>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup._IDataTemplateComponent";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "_IDataTemplateComponent";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::IProvideValueTarget>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup._IProvideValueTarget";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "_IProvideValueTarget";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::IRootObjectProvider>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup._IRootObjectProvider";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "_IRootObjectProvider";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::IUriContext>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup._IUriContext";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "_IUriContext";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::IXamlBindScopeDiagnostics>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup._IXamlBindScopeDiagnostics";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "_IXamlBindScopeDiagnostics";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::IXamlMember>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup._IXamlMember";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "_IXamlMember";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::IXamlMetadataProvider>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup._IXamlMetadataProvider";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "_IXamlMetadataProvider";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::IXamlType>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup._IXamlType";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "_IXamlType";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::IXamlTypeResolver>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup._IXamlTypeResolver";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "_IXamlTypeResolver";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::XamlBinaryWriterErrorInformation>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup.XamlBinaryWriterErrorInformation";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "XamlBinaryWriterErrorInformation";
    };

    template<>
    struct py_type<winrt::Microsoft::UI::Xaml::Markup::XmlnsDefinition>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.ui.xaml.markup.XmlnsDefinition";
        static constexpr const char* module_name = "winrt.microsoft.ui.xaml.markup";
        static constexpr const char* type_name = "XmlnsDefinition";
    };
}
