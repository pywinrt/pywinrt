// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.0.0-beta.2"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.ApplicationModel.Core.h")
#include "py.Windows.ApplicationModel.Core.h"
#endif

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#include <winrt/Windows.ApplicationModel.Core.h>
#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>

#include <winrt/Microsoft.Windows.AppLifecycle.h>

namespace py::proj::Microsoft::Windows::AppLifecycle
{}

namespace py::impl::Microsoft::Windows::AppLifecycle
{}

namespace py::wrapper::Microsoft::Windows::AppLifecycle
{
    using ActivationRegistrationManager = py::winrt_wrapper<winrt::Microsoft::Windows::AppLifecycle::ActivationRegistrationManager>;
    using AppActivationArguments = py::winrt_wrapper<winrt::Microsoft::Windows::AppLifecycle::AppActivationArguments>;
    using AppInstance = py::winrt_wrapper<winrt::Microsoft::Windows::AppLifecycle::AppInstance>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Microsoft::Windows::AppLifecycle::ExtendedActivationKind> = "i";


    template<>
    struct py_type<winrt::Microsoft::Windows::AppLifecycle::ExtendedActivationKind>
    {
        static constexpr const char* module_name = "winrt.microsoft.windows.applifecycle";
        static constexpr const char* type_name = "ExtendedActivationKind";
    };

    template<>
    struct py_type<winrt::Microsoft::Windows::AppLifecycle::ActivationRegistrationManager>
    {
        static constexpr const char* module_name = "winrt.microsoft.windows.applifecycle";
        static constexpr const char* type_name = "ActivationRegistrationManager";
    };

    template<>
    struct py_type<winrt::Microsoft::Windows::AppLifecycle::AppActivationArguments>
    {
        static constexpr const char* module_name = "winrt.microsoft.windows.applifecycle";
        static constexpr const char* type_name = "AppActivationArguments";
    };

    template<>
    struct py_type<winrt::Microsoft::Windows::AppLifecycle::AppInstance>
    {
        static constexpr const char* module_name = "winrt.microsoft.windows.applifecycle";
        static constexpr const char* type_name = "AppInstance";
    };
}
