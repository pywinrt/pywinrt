// WARNING: Please don't edit this file. It was generated by Python/WinRT v2.3.0

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "2.3.0"), "Mismatched Py/WinRT headers.");

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Storage.h")
#include "py.Windows.Storage.h"
#endif

#if __has_include("py.Windows.System.h")
#include "py.Windows.System.h"
#endif

#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.Storage.h>
#include <winrt/Windows.System.h>

#include <winrt/Microsoft.Windows.Storage.h>

namespace py::proj::Microsoft::Windows::Storage
{
}

namespace py::impl::Microsoft::Windows::Storage
{
}

namespace py::wrapper::Microsoft::Windows::Storage
{
    using ApplicationData = py::winrt_wrapper<winrt::Microsoft::Windows::Storage::ApplicationData>;
    using ApplicationDataContainer = py::winrt_wrapper<winrt::Microsoft::Windows::Storage::ApplicationDataContainer>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Microsoft::Windows::Storage::ApplicationDataCreateDisposition> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Microsoft::Windows::Storage::ApplicationDataLocality> = "i";


    template<>
    struct py_type<winrt::Microsoft::Windows::Storage::ApplicationDataCreateDisposition>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.windows.storage.ApplicationDataCreateDisposition";
        static constexpr const char* module_name = "winrt.microsoft.windows.storage";
        static constexpr const char* type_name = "ApplicationDataCreateDisposition";
    };

    template<>
    struct py_type<winrt::Microsoft::Windows::Storage::ApplicationDataLocality>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.windows.storage.ApplicationDataLocality";
        static constexpr const char* module_name = "winrt.microsoft.windows.storage";
        static constexpr const char* type_name = "ApplicationDataLocality";
    };

    template<>
    struct py_type<winrt::Microsoft::Windows::Storage::ApplicationData>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.windows.storage.ApplicationData";
        static constexpr const char* module_name = "winrt.microsoft.windows.storage";
        static constexpr const char* type_name = "ApplicationData";
    };

    template<>
    struct py_type<winrt::Microsoft::Windows::Storage::ApplicationDataContainer>
    {
        static constexpr std::string_view qualified_name = "winrt.microsoft.windows.storage.ApplicationDataContainer";
        static constexpr const char* module_name = "winrt.microsoft.windows.storage";
        static constexpr const char* type_name = "ApplicationDataContainer";
    };
}
