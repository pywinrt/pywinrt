// WARNING: Please don't edit this file. It was generated by Python/WinRT v3.2.1

#pragma once

#include "pybase.h"
static_assert(winrt::check_version(PYWINRT_VERSION, "3.2.1"), "Mismatched Py/WinRT headers.");
#include <winrt/Windows.Graphics.Imaging.h>
#include <winrt/Windows.Storage.Streams.h>

#include <winrt/Microsoft.Graphics.Imaging.h>

namespace py::proj::Microsoft::Graphics::Imaging
{
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Microsoft::Graphics::Imaging::ImageBufferPixelFormat> = "i";


    template<>
    struct py_type<winrt::Microsoft::Graphics::Imaging::ImageBufferPixelFormat>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.graphics.imaging.ImageBufferPixelFormat";
        static constexpr const char* module_name = "winui3.microsoft.graphics.imaging";
        static constexpr const char* type_name = "ImageBufferPixelFormat";
    };

    template<>
    struct py_type<winrt::Microsoft::Graphics::Imaging::ImageBuffer>
    {
        static constexpr std::string_view qualified_name = "winui3.microsoft.graphics.imaging.ImageBuffer";
        static constexpr const char* module_name = "winui3.microsoft.graphics.imaging";
        static constexpr const char* type_name = "ImageBuffer";
    };
}

#if __has_include("py.Windows.Graphics.Imaging.h")
#include "py.Windows.Graphics.Imaging.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

namespace py::impl::Microsoft::Graphics::Imaging
{
}

namespace py::wrapper::Microsoft::Graphics::Imaging
{
    using ImageBuffer = py::winrt_wrapper<winrt::Microsoft::Graphics::Imaging::ImageBuffer>;
}

namespace py
{
}
