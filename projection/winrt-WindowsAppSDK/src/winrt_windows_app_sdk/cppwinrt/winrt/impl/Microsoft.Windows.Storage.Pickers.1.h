// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_Microsoft_Windows_Storage_Pickers_1_H
#define WINRT_Microsoft_Windows_Storage_Pickers_1_H
#include "winrt/impl/Microsoft.Windows.Storage.Pickers.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::Storage::Pickers
{
    struct WINRT_IMPL_EMPTY_BASES IFileOpenPicker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFileOpenPicker>
    {
        IFileOpenPicker(std::nullptr_t = nullptr) noexcept {}
        IFileOpenPicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFileOpenPickerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFileOpenPickerFactory>
    {
        IFileOpenPickerFactory(std::nullptr_t = nullptr) noexcept {}
        IFileOpenPickerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFileSavePicker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFileSavePicker>
    {
        IFileSavePicker(std::nullptr_t = nullptr) noexcept {}
        IFileSavePicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFileSavePickerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFileSavePickerFactory>
    {
        IFileSavePickerFactory(std::nullptr_t = nullptr) noexcept {}
        IFileSavePickerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFolderPicker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFolderPicker>
    {
        IFolderPicker(std::nullptr_t = nullptr) noexcept {}
        IFolderPicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFolderPickerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFolderPickerFactory>
    {
        IFolderPickerFactory(std::nullptr_t = nullptr) noexcept {}
        IFolderPickerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPickFileResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickFileResult>
    {
        IPickFileResult(std::nullptr_t = nullptr) noexcept {}
        IPickFileResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPickFolderResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickFolderResult>
    {
        IPickFolderResult(std::nullptr_t = nullptr) noexcept {}
        IPickFolderResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
