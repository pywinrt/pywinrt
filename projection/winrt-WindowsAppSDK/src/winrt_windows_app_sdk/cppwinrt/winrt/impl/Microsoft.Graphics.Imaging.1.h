// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_Microsoft_Graphics_Imaging_1_H
#define WINRT_Microsoft_Graphics_Imaging_1_H
#include "winrt/impl/Microsoft.Graphics.Imaging.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Graphics::Imaging
{
    struct WINRT_IMPL_EMPTY_BASES IImageBuffer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageBuffer>
    {
        IImageBuffer(std::nullptr_t = nullptr) noexcept {}
        IImageBuffer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageBufferStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageBufferStatics>
    {
        IImageBufferStatics(std::nullptr_t = nullptr) noexcept {}
        IImageBufferStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
