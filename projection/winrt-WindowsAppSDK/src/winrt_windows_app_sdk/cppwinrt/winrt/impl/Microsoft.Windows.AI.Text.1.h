// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_Microsoft_Windows_AI_Text_1_H
#define WINRT_Microsoft_Windows_AI_Text_1_H
#include "winrt/impl/Microsoft.Windows.AI.Text.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::AI::Text
{
    struct WINRT_IMPL_EMPTY_BASES ILanguageModel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILanguageModel>
    {
        ILanguageModel(std::nullptr_t = nullptr) noexcept {}
        ILanguageModel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILanguageModelContext :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILanguageModelContext>
    {
        ILanguageModelContext(std::nullptr_t = nullptr) noexcept {}
        ILanguageModelContext(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILanguageModelOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILanguageModelOptions>
    {
        ILanguageModelOptions(std::nullptr_t = nullptr) noexcept {}
        ILanguageModelOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILanguageModelResponseResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILanguageModelResponseResult>
    {
        ILanguageModelResponseResult(std::nullptr_t = nullptr) noexcept {}
        ILanguageModelResponseResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILanguageModelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILanguageModelStatics>
    {
        ILanguageModelStatics(std::nullptr_t = nullptr) noexcept {}
        ILanguageModelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextRewriter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextRewriter>
    {
        ITextRewriter(std::nullptr_t = nullptr) noexcept {}
        ITextRewriter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextRewriterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextRewriterFactory>
    {
        ITextRewriterFactory(std::nullptr_t = nullptr) noexcept {}
        ITextRewriterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextSummarizer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextSummarizer>
    {
        ITextSummarizer(std::nullptr_t = nullptr) noexcept {}
        ITextSummarizer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextSummarizerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextSummarizerFactory>
    {
        ITextSummarizerFactory(std::nullptr_t = nullptr) noexcept {}
        ITextSummarizerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextToTableConverter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextToTableConverter>
    {
        ITextToTableConverter(std::nullptr_t = nullptr) noexcept {}
        ITextToTableConverter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextToTableConverterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextToTableConverterFactory>
    {
        ITextToTableConverterFactory(std::nullptr_t = nullptr) noexcept {}
        ITextToTableConverterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextToTableResponseResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextToTableResponseResult>
    {
        ITextToTableResponseResult(std::nullptr_t = nullptr) noexcept {}
        ITextToTableResponseResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextToTableRow :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextToTableRow>
    {
        ITextToTableRow(std::nullptr_t = nullptr) noexcept {}
        ITextToTableRow(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
