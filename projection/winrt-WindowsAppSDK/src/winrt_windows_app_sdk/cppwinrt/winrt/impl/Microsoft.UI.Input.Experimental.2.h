// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_Microsoft_UI_Input_Experimental_2_H
#define WINRT_Microsoft_UI_Input_Experimental_2_H
#include "winrt/impl/Microsoft.UI.Input.1.h"
#include "winrt/impl/Windows.Foundation.1.h"
#include "winrt/impl/Microsoft.UI.Input.Experimental.1.h"
WINRT_EXPORT namespace winrt::Microsoft::UI::Input::Experimental
{
    struct WINRT_IMPL_EMPTY_BASES ExpInputSite : winrt::Microsoft::UI::Input::Experimental::IExpInputSite,
        impl::require<ExpInputSite, winrt::Windows::Foundation::IClosable>
    {
        ExpInputSite(std::nullptr_t) noexcept {}
        ExpInputSite(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Input::Experimental::IExpInputSite(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ExpPointerPoint : winrt::Microsoft::UI::Input::Experimental::IExpPointerPoint
    {
        ExpPointerPoint(std::nullptr_t) noexcept {}
        ExpPointerPoint(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Input::Experimental::IExpPointerPoint(ptr, take_ownership_from_abi) {}
        static auto GetCurrentPoint(uint32_t pointerId);
        static auto GetCurrentPointTransformed(uint32_t pointerId, winrt::Microsoft::UI::Input::IPointerPointTransform const& transform);
        static auto GetIntermediatePoints(uint32_t pointerId);
        static auto GetIntermediatePointsTransformed(uint32_t pointerId, winrt::Microsoft::UI::Input::IPointerPointTransform const& transform);
    };
}
#endif
