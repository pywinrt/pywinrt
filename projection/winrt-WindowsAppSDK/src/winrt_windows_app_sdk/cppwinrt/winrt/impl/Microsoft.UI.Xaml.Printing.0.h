// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.230706.1

#pragma once
#ifndef WINRT_Microsoft_UI_Xaml_Printing_0_H
#define WINRT_Microsoft_UI_Xaml_Printing_0_H
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml
{
    struct DependencyProperty;
    struct UIElement;
}
WINRT_EXPORT namespace winrt::Windows::Foundation
{
    struct EventRegistrationToken;
}
WINRT_EXPORT namespace winrt::Windows::Graphics::Printing
{
    struct IPrintDocumentSource;
    struct PrintTaskOptions;
}
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Printing
{
    enum class PreviewPageCountType : int32_t
    {
        Final = 0,
        Intermediate = 1,
    };
    struct IAddPagesEventArgs;
    struct IGetPreviewPageEventArgs;
    struct IPaginateEventArgs;
    struct IPrintDocument;
    struct IPrintDocumentFactory;
    struct IPrintDocumentStatics;
    struct AddPagesEventArgs;
    struct GetPreviewPageEventArgs;
    struct PaginateEventArgs;
    struct PrintDocument;
    struct AddPagesEventHandler;
    struct GetPreviewPageEventHandler;
    struct PaginateEventHandler;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::UI::Xaml::Printing::IAddPagesEventArgs>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Printing::IGetPreviewPageEventArgs>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Printing::IPaginateEventArgs>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Printing::IPrintDocument>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Printing::IPrintDocumentFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Printing::IPrintDocumentStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Printing::AddPagesEventArgs>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Printing::GetPreviewPageEventArgs>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Printing::PaginateEventArgs>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Printing::PrintDocument>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Printing::PreviewPageCountType>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Printing::AddPagesEventHandler>{ using type = delegate_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Printing::GetPreviewPageEventHandler>{ using type = delegate_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Printing::PaginateEventHandler>{ using type = delegate_category; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Printing::AddPagesEventArgs> = L"Microsoft.UI.Xaml.Printing.AddPagesEventArgs";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Printing::GetPreviewPageEventArgs> = L"Microsoft.UI.Xaml.Printing.GetPreviewPageEventArgs";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Printing::PaginateEventArgs> = L"Microsoft.UI.Xaml.Printing.PaginateEventArgs";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Printing::PrintDocument> = L"Microsoft.UI.Xaml.Printing.PrintDocument";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Printing::PreviewPageCountType> = L"Microsoft.UI.Xaml.Printing.PreviewPageCountType";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Printing::IAddPagesEventArgs> = L"Microsoft.UI.Xaml.Printing.IAddPagesEventArgs";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Printing::IGetPreviewPageEventArgs> = L"Microsoft.UI.Xaml.Printing.IGetPreviewPageEventArgs";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Printing::IPaginateEventArgs> = L"Microsoft.UI.Xaml.Printing.IPaginateEventArgs";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Printing::IPrintDocument> = L"Microsoft.UI.Xaml.Printing.IPrintDocument";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Printing::IPrintDocumentFactory> = L"Microsoft.UI.Xaml.Printing.IPrintDocumentFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Printing::IPrintDocumentStatics> = L"Microsoft.UI.Xaml.Printing.IPrintDocumentStatics";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Printing::AddPagesEventHandler> = L"Microsoft.UI.Xaml.Printing.AddPagesEventHandler";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Printing::GetPreviewPageEventHandler> = L"Microsoft.UI.Xaml.Printing.GetPreviewPageEventHandler";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Printing::PaginateEventHandler> = L"Microsoft.UI.Xaml.Printing.PaginateEventHandler";
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Printing::IAddPagesEventArgs>{ 0xA69F3CB3,0x6B74,0x5EE8,{ 0xB0,0x34,0x18,0x80,0x98,0xA9,0x8C,0x5D } }; // A69F3CB3-6B74-5EE8-B034-188098A98C5D
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Printing::IGetPreviewPageEventArgs>{ 0xA68FBE17,0xF577,0x597F,{ 0xB3,0xAB,0xB3,0x79,0x44,0x71,0x49,0xE6 } }; // A68FBE17-F577-597F-B3AB-B379447149E6
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Printing::IPaginateEventArgs>{ 0x6499C196,0x11A9,0x5EF8,{ 0x91,0xCB,0x52,0xFB,0x96,0x3B,0xF1,0x72 } }; // 6499C196-11A9-5EF8-91CB-52FB963BF172
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Printing::IPrintDocument>{ 0x1E40F1FC,0x5D33,0x5FE9,{ 0xBA,0x3E,0x95,0x4C,0x0D,0x16,0x15,0x24 } }; // 1E40F1FC-5D33-5FE9-BA3E-954C0D161524
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Printing::IPrintDocumentFactory>{ 0xC4C1BC12,0x84D1,0x539C,{ 0xB4,0x16,0xD7,0xE5,0x4C,0x45,0xAB,0x58 } }; // C4C1BC12-84D1-539C-B416-D7E54C45AB58
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Printing::IPrintDocumentStatics>{ 0x8975E4BC,0x8FC8,0x5E8F,{ 0xA5,0x5A,0xBF,0x71,0xB9,0xA8,0x27,0xB7 } }; // 8975E4BC-8FC8-5E8F-A55A-BF71B9A827B7
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Printing::AddPagesEventHandler>{ 0xED77566A,0xBD03,0x5118,{ 0xB7,0xC3,0xD9,0xCE,0xA6,0x43,0x07,0xDD } }; // ED77566A-BD03-5118-B7C3-D9CEA64307DD
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Printing::GetPreviewPageEventHandler>{ 0x1C801689,0xA018,0x5574,{ 0x91,0x09,0xBC,0xEF,0x62,0x17,0x6D,0xA2 } }; // 1C801689-A018-5574-9109-BCEF62176DA2
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Printing::PaginateEventHandler>{ 0xC291876C,0x343A,0x5B9B,{ 0xA3,0x6C,0x84,0x15,0xBA,0x4C,0xD9,0xDD } }; // C291876C-343A-5B9B-A36C-8415BA4CD9DD
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Printing::AddPagesEventArgs>{ using type = winrt::Microsoft::UI::Xaml::Printing::IAddPagesEventArgs; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Printing::GetPreviewPageEventArgs>{ using type = winrt::Microsoft::UI::Xaml::Printing::IGetPreviewPageEventArgs; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Printing::PaginateEventArgs>{ using type = winrt::Microsoft::UI::Xaml::Printing::IPaginateEventArgs; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Printing::PrintDocument>{ using type = winrt::Microsoft::UI::Xaml::Printing::IPrintDocument; };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Printing::IAddPagesEventArgs>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_PrintTaskOptions(void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Printing::IGetPreviewPageEventArgs>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_PageNumber(int32_t*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Printing::IPaginateEventArgs>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_PrintTaskOptions(void**) noexcept = 0;
            virtual int32_t __stdcall get_CurrentPreviewPageNumber(int32_t*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Printing::IPrintDocument>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_DocumentSource(void**) noexcept = 0;
            virtual int32_t __stdcall add_Paginate(void*, winrt::event_token*) noexcept = 0;
            virtual int32_t __stdcall remove_Paginate(winrt::event_token) noexcept = 0;
            virtual int32_t __stdcall add_GetPreviewPage(void*, winrt::event_token*) noexcept = 0;
            virtual int32_t __stdcall remove_GetPreviewPage(winrt::event_token) noexcept = 0;
            virtual int32_t __stdcall add_AddPages(void*, winrt::event_token*) noexcept = 0;
            virtual int32_t __stdcall remove_AddPages(winrt::event_token) noexcept = 0;
            virtual int32_t __stdcall AddPage(void*) noexcept = 0;
            virtual int32_t __stdcall AddPagesComplete() noexcept = 0;
            virtual int32_t __stdcall SetPreviewPageCount(int32_t, int32_t) noexcept = 0;
            virtual int32_t __stdcall SetPreviewPage(int32_t, void*) noexcept = 0;
            virtual int32_t __stdcall InvalidatePreview() noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Printing::IPrintDocumentFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Printing::IPrintDocumentStatics>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_DocumentSourceProperty(void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Printing::AddPagesEventHandler>
    {
        struct WINRT_IMPL_NOVTABLE type : unknown_abi
        {
            virtual int32_t __stdcall Invoke(void*, void*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Printing::GetPreviewPageEventHandler>
    {
        struct WINRT_IMPL_NOVTABLE type : unknown_abi
        {
            virtual int32_t __stdcall Invoke(void*, void*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Printing::PaginateEventHandler>
    {
        struct WINRT_IMPL_NOVTABLE type : unknown_abi
        {
            virtual int32_t __stdcall Invoke(void*, void*) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Printing_IAddPagesEventArgs
    {
        [[nodiscard]] auto PrintTaskOptions() const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Printing::IAddPagesEventArgs>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Printing_IAddPagesEventArgs<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Printing_IGetPreviewPageEventArgs
    {
        [[nodiscard]] auto PageNumber() const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Printing::IGetPreviewPageEventArgs>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Printing_IGetPreviewPageEventArgs<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Printing_IPaginateEventArgs
    {
        [[nodiscard]] auto PrintTaskOptions() const;
        [[nodiscard]] auto CurrentPreviewPageNumber() const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Printing::IPaginateEventArgs>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Printing_IPaginateEventArgs<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Printing_IPrintDocument
    {
        [[nodiscard]] auto DocumentSource() const;
        auto Paginate(winrt::Microsoft::UI::Xaml::Printing::PaginateEventHandler const& handler) const;
        using Paginate_revoker = impl::event_revoker<winrt::Microsoft::UI::Xaml::Printing::IPrintDocument, &impl::abi_t<winrt::Microsoft::UI::Xaml::Printing::IPrintDocument>::remove_Paginate>;
        [[nodiscard]] auto Paginate(auto_revoke_t, winrt::Microsoft::UI::Xaml::Printing::PaginateEventHandler const& handler) const;
        auto Paginate(winrt::event_token const& token) const noexcept;
        auto GetPreviewPage(winrt::Microsoft::UI::Xaml::Printing::GetPreviewPageEventHandler const& handler) const;
        using GetPreviewPage_revoker = impl::event_revoker<winrt::Microsoft::UI::Xaml::Printing::IPrintDocument, &impl::abi_t<winrt::Microsoft::UI::Xaml::Printing::IPrintDocument>::remove_GetPreviewPage>;
        [[nodiscard]] auto GetPreviewPage(auto_revoke_t, winrt::Microsoft::UI::Xaml::Printing::GetPreviewPageEventHandler const& handler) const;
        auto GetPreviewPage(winrt::event_token const& token) const noexcept;
        auto AddPages(winrt::Microsoft::UI::Xaml::Printing::AddPagesEventHandler const& handler) const;
        using AddPages_revoker = impl::event_revoker<winrt::Microsoft::UI::Xaml::Printing::IPrintDocument, &impl::abi_t<winrt::Microsoft::UI::Xaml::Printing::IPrintDocument>::remove_AddPages>;
        [[nodiscard]] auto AddPages(auto_revoke_t, winrt::Microsoft::UI::Xaml::Printing::AddPagesEventHandler const& handler) const;
        auto AddPages(winrt::event_token const& token) const noexcept;
        auto AddPage(winrt::Microsoft::UI::Xaml::UIElement const& pageVisual) const;
        auto AddPagesComplete() const;
        auto SetPreviewPageCount(int32_t count, winrt::Microsoft::UI::Xaml::Printing::PreviewPageCountType const& type) const;
        auto SetPreviewPage(int32_t pageNumber, winrt::Microsoft::UI::Xaml::UIElement const& pageVisual) const;
        auto InvalidatePreview() const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Printing::IPrintDocument>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Printing_IPrintDocument<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Printing_IPrintDocumentFactory
    {
        auto CreateInstance(winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Printing::IPrintDocumentFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Printing_IPrintDocumentFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Printing_IPrintDocumentStatics
    {
        [[nodiscard]] auto DocumentSourceProperty() const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Printing::IPrintDocumentStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Printing_IPrintDocumentStatics<D>;
    };
}
#endif
