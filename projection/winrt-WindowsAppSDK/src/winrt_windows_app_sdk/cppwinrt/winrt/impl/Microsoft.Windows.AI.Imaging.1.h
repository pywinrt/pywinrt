// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_Microsoft_Windows_AI_Imaging_1_H
#define WINRT_Microsoft_Windows_AI_Imaging_1_H
#include "winrt/impl/Microsoft.Windows.AI.Imaging.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::AI::Imaging
{
    struct WINRT_IMPL_EMPTY_BASES IImageDescriptionGenerator :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageDescriptionGenerator>
    {
        IImageDescriptionGenerator(std::nullptr_t = nullptr) noexcept {}
        IImageDescriptionGenerator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageDescriptionGeneratorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageDescriptionGeneratorStatics>
    {
        IImageDescriptionGeneratorStatics(std::nullptr_t = nullptr) noexcept {}
        IImageDescriptionGeneratorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageDescriptionResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageDescriptionResult>
    {
        IImageDescriptionResult(std::nullptr_t = nullptr) noexcept {}
        IImageDescriptionResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageObjectExtractor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageObjectExtractor>
    {
        IImageObjectExtractor(std::nullptr_t = nullptr) noexcept {}
        IImageObjectExtractor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageObjectExtractorHint :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageObjectExtractorHint>
    {
        IImageObjectExtractorHint(std::nullptr_t = nullptr) noexcept {}
        IImageObjectExtractorHint(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageObjectExtractorHintFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageObjectExtractorHintFactory>
    {
        IImageObjectExtractorHintFactory(std::nullptr_t = nullptr) noexcept {}
        IImageObjectExtractorHintFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageObjectExtractorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageObjectExtractorStatics>
    {
        IImageObjectExtractorStatics(std::nullptr_t = nullptr) noexcept {}
        IImageObjectExtractorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageScaler :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageScaler>
    {
        IImageScaler(std::nullptr_t = nullptr) noexcept {}
        IImageScaler(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageScalerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageScalerStatics>
    {
        IImageScalerStatics(std::nullptr_t = nullptr) noexcept {}
        IImageScalerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRecognizedLine :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRecognizedLine>
    {
        IRecognizedLine(std::nullptr_t = nullptr) noexcept {}
        IRecognizedLine(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRecognizedText :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRecognizedText>
    {
        IRecognizedText(std::nullptr_t = nullptr) noexcept {}
        IRecognizedText(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRecognizedWord :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRecognizedWord>
    {
        IRecognizedWord(std::nullptr_t = nullptr) noexcept {}
        IRecognizedWord(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextRecognizer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextRecognizer>
    {
        ITextRecognizer(std::nullptr_t = nullptr) noexcept {}
        ITextRecognizer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextRecognizerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextRecognizerStatics>
    {
        ITextRecognizerStatics(std::nullptr_t = nullptr) noexcept {}
        ITextRecognizerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
