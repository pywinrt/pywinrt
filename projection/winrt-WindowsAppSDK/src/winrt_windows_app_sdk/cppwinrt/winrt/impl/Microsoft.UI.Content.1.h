// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.230706.1

#pragma once
#ifndef WINRT_Microsoft_UI_Content_1_H
#define WINRT_Microsoft_UI_Content_1_H
#include "winrt/impl/Windows.Foundation.0.h"
#include "winrt/impl/Microsoft.UI.Content.0.h"
WINRT_EXPORT namespace winrt::Microsoft::UI::Content
{
    struct WINRT_IMPL_EMPTY_BASES IContentCoordinateConverter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentCoordinateConverter>
    {
        IContentCoordinateConverter(std::nullptr_t = nullptr) noexcept {}
        IContentCoordinateConverter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentCoordinateConverterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentCoordinateConverterFactory>
    {
        IContentCoordinateConverterFactory(std::nullptr_t = nullptr) noexcept {}
        IContentCoordinateConverterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentCoordinateConverterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentCoordinateConverterStatics>
    {
        IContentCoordinateConverterStatics(std::nullptr_t = nullptr) noexcept {}
        IContentCoordinateConverterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDeferral>
    {
        IContentDeferral(std::nullptr_t = nullptr) noexcept {}
        IContentDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentEnvironmentSettingChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentEnvironmentSettingChangedEventArgs>
    {
        IContentEnvironmentSettingChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentEnvironmentSettingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentEnvironmentStateChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentEnvironmentStateChangedEventArgs>
    {
        IContentEnvironmentStateChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentEnvironmentStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentIsland :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentIsland>
    {
        IContentIsland(std::nullptr_t = nullptr) noexcept {}
        IContentIsland(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentIslandAutomationProviderRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentIslandAutomationProviderRequestedEventArgs>
    {
        IContentIslandAutomationProviderRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentIslandAutomationProviderRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentIslandEnvironment :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentIslandEnvironment>
    {
        IContentIslandEnvironment(std::nullptr_t = nullptr) noexcept {}
        IContentIslandEnvironment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentIslandEnvironmentFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentIslandEnvironmentFactory>
    {
        IContentIslandEnvironmentFactory(std::nullptr_t = nullptr) noexcept {}
        IContentIslandEnvironmentFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentIslandFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentIslandFactory>
    {
        IContentIslandFactory(std::nullptr_t = nullptr) noexcept {}
        IContentIslandFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentIslandStateChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentIslandStateChangedEventArgs>
    {
        IContentIslandStateChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentIslandStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentIslandStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentIslandStatics>
    {
        IContentIslandStatics(std::nullptr_t = nullptr) noexcept {}
        IContentIslandStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentSite :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentSite>
    {
        IContentSite(std::nullptr_t = nullptr) noexcept {}
        IContentSite(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentSiteBridge :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentSiteBridge>,
        impl::require<winrt::Microsoft::UI::Content::IContentSiteBridge, winrt::Windows::Foundation::IClosable>
    {
        IContentSiteBridge(std::nullptr_t = nullptr) noexcept {}
        IContentSiteBridge(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentSiteEnvironment :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentSiteEnvironment>
    {
        IContentSiteEnvironment(std::nullptr_t = nullptr) noexcept {}
        IContentSiteEnvironment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentSiteEnvironmentFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentSiteEnvironmentFactory>
    {
        IContentSiteEnvironmentFactory(std::nullptr_t = nullptr) noexcept {}
        IContentSiteEnvironmentFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentSiteEnvironmentView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentSiteEnvironmentView>
    {
        IContentSiteEnvironmentView(std::nullptr_t = nullptr) noexcept {}
        IContentSiteEnvironmentView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentSiteEnvironmentViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentSiteEnvironmentViewFactory>
    {
        IContentSiteEnvironmentViewFactory(std::nullptr_t = nullptr) noexcept {}
        IContentSiteEnvironmentViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentSiteFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentSiteFactory>
    {
        IContentSiteFactory(std::nullptr_t = nullptr) noexcept {}
        IContentSiteFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentSiteRequestedStateChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentSiteRequestedStateChangedEventArgs>
    {
        IContentSiteRequestedStateChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentSiteRequestedStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentSiteView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentSiteView>
    {
        IContentSiteView(std::nullptr_t = nullptr) noexcept {}
        IContentSiteView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentSiteViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentSiteViewFactory>
    {
        IContentSiteViewFactory(std::nullptr_t = nullptr) noexcept {}
        IContentSiteViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDesktopChildSiteBridge :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDesktopChildSiteBridge>
    {
        IDesktopChildSiteBridge(std::nullptr_t = nullptr) noexcept {}
        IDesktopChildSiteBridge(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDesktopChildSiteBridgeStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDesktopChildSiteBridgeStatics>
    {
        IDesktopChildSiteBridgeStatics(std::nullptr_t = nullptr) noexcept {}
        IDesktopChildSiteBridgeStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDesktopSiteBridge :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDesktopSiteBridge>
    {
        IDesktopSiteBridge(std::nullptr_t = nullptr) noexcept {}
        IDesktopSiteBridge(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDesktopSiteBridgeFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDesktopSiteBridgeFactory>
    {
        IDesktopSiteBridgeFactory(std::nullptr_t = nullptr) noexcept {}
        IDesktopSiteBridgeFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDesktopSiteBridgeStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDesktopSiteBridgeStatics>
    {
        IDesktopSiteBridgeStatics(std::nullptr_t = nullptr) noexcept {}
        IDesktopSiteBridgeStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
