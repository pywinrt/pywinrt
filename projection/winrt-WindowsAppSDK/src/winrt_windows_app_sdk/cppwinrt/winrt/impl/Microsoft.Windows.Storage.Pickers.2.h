// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_Microsoft_Windows_Storage_Pickers_2_H
#define WINRT_Microsoft_Windows_Storage_Pickers_2_H
#include "winrt/impl/Microsoft.UI.1.h"
#include "winrt/impl/Microsoft.Windows.Storage.Pickers.1.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::Storage::Pickers
{
    struct WINRT_IMPL_EMPTY_BASES FileOpenPicker : winrt::Microsoft::Windows::Storage::Pickers::IFileOpenPicker
    {
        FileOpenPicker(std::nullptr_t) noexcept {}
        FileOpenPicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Storage::Pickers::IFileOpenPicker(ptr, take_ownership_from_abi) {}
        explicit FileOpenPicker(winrt::Microsoft::UI::WindowId const& windowId);
    };
    struct WINRT_IMPL_EMPTY_BASES FileSavePicker : winrt::Microsoft::Windows::Storage::Pickers::IFileSavePicker
    {
        FileSavePicker(std::nullptr_t) noexcept {}
        FileSavePicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Storage::Pickers::IFileSavePicker(ptr, take_ownership_from_abi) {}
        explicit FileSavePicker(winrt::Microsoft::UI::WindowId const& windowId);
    };
    struct WINRT_IMPL_EMPTY_BASES FolderPicker : winrt::Microsoft::Windows::Storage::Pickers::IFolderPicker
    {
        FolderPicker(std::nullptr_t) noexcept {}
        FolderPicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Storage::Pickers::IFolderPicker(ptr, take_ownership_from_abi) {}
        explicit FolderPicker(winrt::Microsoft::UI::WindowId const& windowId);
    };
    struct WINRT_IMPL_EMPTY_BASES PickFileResult : winrt::Microsoft::Windows::Storage::Pickers::IPickFileResult
    {
        PickFileResult(std::nullptr_t) noexcept {}
        PickFileResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Storage::Pickers::IPickFileResult(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES PickFolderResult : winrt::Microsoft::Windows::Storage::Pickers::IPickFolderResult
    {
        PickFolderResult(std::nullptr_t) noexcept {}
        PickFolderResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Storage::Pickers::IPickFolderResult(ptr, take_ownership_from_abi) {}
    };
}
#endif
