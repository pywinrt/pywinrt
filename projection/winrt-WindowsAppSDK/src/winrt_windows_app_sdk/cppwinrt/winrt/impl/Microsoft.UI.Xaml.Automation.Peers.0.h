// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.230706.1

#pragma once
#ifndef WINRT_Microsoft_UI_Xaml_Automation_Peers_0_H
#define WINRT_Microsoft_UI_Xaml_Automation_Peers_0_H
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml
{
    struct DependencyProperty;
    struct FrameworkElement;
    struct UIElement;
}
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Automation
{
    enum class AnnotationType : int32_t;
    struct AutomationProperty;
    enum class AutomationTextEditChangeType : int32_t;
}
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Automation::Provider
{
    struct IRawElementProviderSimple;
}
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Controls
{
    struct AnimatedVisualPlayer;
    struct AppBar;
    struct AppBarButton;
    struct AppBarToggleButton;
    struct AutoSuggestBox;
    struct BreadcrumbBarItem;
    struct Button;
    struct CalendarDatePicker;
    struct CheckBox;
    struct ComboBox;
    struct ComboBoxItem;
    struct DatePicker;
    struct DropDownButton;
    struct Expander;
    struct FlipView;
    struct FlipViewItem;
    struct FlyoutPresenter;
    struct GridView;
    struct GridViewHeaderItem;
    struct GridViewItem;
    struct GroupItem;
    struct Hub;
    struct HubSection;
    struct HyperlinkButton;
    struct Image;
    struct InfoBar;
    struct ItemContainer;
    struct ItemsControl;
    struct ItemsRepeater;
    struct ItemsView;
    struct ListBox;
    struct ListBoxItem;
    struct ListView;
    struct ListViewBase;
    struct ListViewBaseHeaderItem;
    struct ListViewHeaderItem;
    struct ListViewItem;
    struct MediaPlayerElement;
    struct MediaTransportControls;
    struct MenuBar;
    struct MenuBarItem;
    struct MenuFlyoutItem;
    struct MenuFlyoutPresenter;
    struct NavigationView;
    struct NavigationViewItem;
    struct NumberBox;
    struct PasswordBox;
    struct PersonPicture;
    struct PipsPager;
    struct Pivot;
    struct PivotItem;
    struct ProgressBar;
    struct ProgressRing;
    struct RadioButton;
    struct RadioButtons;
    struct RatingControl;
    struct RichEditBox;
    struct RichTextBlock;
    struct RichTextBlockOverflow;
    struct ScrollViewer;
    struct SemanticZoom;
    struct Slider;
    struct SplitButton;
    struct TabView;
    struct TabViewItem;
    struct TeachingTip;
    struct TextBlock;
    struct TextBox;
    struct TimePicker;
    struct ToggleMenuFlyoutItem;
    struct ToggleSplitButton;
    struct ToggleSwitch;
    struct TreeViewItem;
    struct TreeViewList;
    struct WebView2;
}
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Controls::Primitives
{
    struct ButtonBase;
    struct ColorPickerSlider;
    struct ColorSpectrum;
    struct RangeBase;
    struct RepeatButton;
    struct ScrollBar;
    struct Selector;
    struct Thumb;
    struct ToggleButton;
}
WINRT_EXPORT namespace winrt::Windows::Foundation
{
    struct Point;
    struct Rect;
}
WINRT_EXPORT namespace winrt::Windows::Foundation::Collections
{
    template <typename T> struct WINRT_IMPL_EMPTY_BASES IVectorView;
}
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Automation::Peers
{
    enum class AccessibilityView : int32_t
    {
        Raw = 0,
        Control = 1,
        Content = 2,
    };
    enum class AutomationControlType : int32_t
    {
        Button = 0,
        Calendar = 1,
        CheckBox = 2,
        ComboBox = 3,
        Edit = 4,
        Hyperlink = 5,
        Image = 6,
        ListItem = 7,
        List = 8,
        Menu = 9,
        MenuBar = 10,
        MenuItem = 11,
        ProgressBar = 12,
        RadioButton = 13,
        ScrollBar = 14,
        Slider = 15,
        Spinner = 16,
        StatusBar = 17,
        Tab = 18,
        TabItem = 19,
        Text = 20,
        ToolBar = 21,
        ToolTip = 22,
        Tree = 23,
        TreeItem = 24,
        Custom = 25,
        Group = 26,
        Thumb = 27,
        DataGrid = 28,
        DataItem = 29,
        Document = 30,
        SplitButton = 31,
        Window = 32,
        Pane = 33,
        Header = 34,
        HeaderItem = 35,
        Table = 36,
        TitleBar = 37,
        Separator = 38,
        SemanticZoom = 39,
        AppBar = 40,
        FlipView = 41,
    };
    enum class AutomationEvents : int32_t
    {
        ToolTipOpened = 0,
        ToolTipClosed = 1,
        MenuOpened = 2,
        MenuClosed = 3,
        AutomationFocusChanged = 4,
        InvokePatternOnInvoked = 5,
        SelectionItemPatternOnElementAddedToSelection = 6,
        SelectionItemPatternOnElementRemovedFromSelection = 7,
        SelectionItemPatternOnElementSelected = 8,
        SelectionPatternOnInvalidated = 9,
        TextPatternOnTextSelectionChanged = 10,
        TextPatternOnTextChanged = 11,
        AsyncContentLoaded = 12,
        PropertyChanged = 13,
        StructureChanged = 14,
        DragStart = 15,
        DragCancel = 16,
        DragComplete = 17,
        DragEnter = 18,
        DragLeave = 19,
        Dropped = 20,
        LiveRegionChanged = 21,
        InputReachedTarget = 22,
        InputReachedOtherElement = 23,
        InputDiscarded = 24,
        WindowClosed = 25,
        WindowOpened = 26,
        ConversionTargetChanged = 27,
        TextEditTextChanged = 28,
        LayoutInvalidated = 29,
    };
    enum class AutomationHeadingLevel : int32_t
    {
        None = 0,
        Level1 = 1,
        Level2 = 2,
        Level3 = 3,
        Level4 = 4,
        Level5 = 5,
        Level6 = 6,
        Level7 = 7,
        Level8 = 8,
        Level9 = 9,
    };
    enum class AutomationLandmarkType : int32_t
    {
        None = 0,
        Custom = 1,
        Form = 2,
        Main = 3,
        Navigation = 4,
        Search = 5,
    };
    enum class AutomationLiveSetting : int32_t
    {
        Off = 0,
        Polite = 1,
        Assertive = 2,
    };
    enum class AutomationNavigationDirection : int32_t
    {
        Parent = 0,
        NextSibling = 1,
        PreviousSibling = 2,
        FirstChild = 3,
        LastChild = 4,
    };
    enum class AutomationNotificationKind : int32_t
    {
        ItemAdded = 0,
        ItemRemoved = 1,
        ActionCompleted = 2,
        ActionAborted = 3,
        Other = 4,
    };
    enum class AutomationNotificationProcessing : int32_t
    {
        ImportantAll = 0,
        ImportantMostRecent = 1,
        All = 2,
        MostRecent = 3,
        CurrentThenMostRecent = 4,
    };
    enum class AutomationOrientation : int32_t
    {
        None = 0,
        Horizontal = 1,
        Vertical = 2,
    };
    enum class AutomationStructureChangeType : int32_t
    {
        ChildAdded = 0,
        ChildRemoved = 1,
        ChildrenInvalidated = 2,
        ChildrenBulkAdded = 3,
        ChildrenBulkRemoved = 4,
        ChildrenReordered = 5,
    };
    enum class PatternInterface : int32_t
    {
        Invoke = 0,
        Selection = 1,
        Value = 2,
        RangeValue = 3,
        Scroll = 4,
        ScrollItem = 5,
        ExpandCollapse = 6,
        Grid = 7,
        GridItem = 8,
        MultipleView = 9,
        Window = 10,
        SelectionItem = 11,
        Dock = 12,
        Table = 13,
        TableItem = 14,
        Toggle = 15,
        Transform = 16,
        Text = 17,
        ItemContainer = 18,
        VirtualizedItem = 19,
        Text2 = 20,
        TextChild = 21,
        TextRange = 22,
        Annotation = 23,
        Drag = 24,
        DropTarget = 25,
        ObjectModel = 26,
        Spreadsheet = 27,
        SpreadsheetItem = 28,
        Styles = 29,
        Transform2 = 30,
        SynchronizedInput = 31,
        TextEdit = 32,
        CustomNavigation = 33,
    };
    struct IAnimatedVisualPlayerAutomationPeer;
    struct IAnimatedVisualPlayerAutomationPeerFactory;
    struct IAppBarAutomationPeer;
    struct IAppBarAutomationPeerFactory;
    struct IAppBarButtonAutomationPeer;
    struct IAppBarButtonAutomationPeerFactory;
    struct IAppBarToggleButtonAutomationPeer;
    struct IAppBarToggleButtonAutomationPeerFactory;
    struct IAutoSuggestBoxAutomationPeer;
    struct IAutoSuggestBoxAutomationPeerFactory;
    struct IAutomationPeer;
    struct IAutomationPeerAnnotation;
    struct IAutomationPeerAnnotationFactory;
    struct IAutomationPeerAnnotationStatics;
    struct IAutomationPeerFactory;
    struct IAutomationPeerOverrides;
    struct IAutomationPeerProtected;
    struct IAutomationPeerStatics;
    struct IBreadcrumbBarItemAutomationPeer;
    struct IBreadcrumbBarItemAutomationPeerFactory;
    struct IButtonAutomationPeer;
    struct IButtonAutomationPeerFactory;
    struct IButtonBaseAutomationPeer;
    struct IButtonBaseAutomationPeerFactory;
    struct ICalendarDatePickerAutomationPeer;
    struct ICalendarDatePickerAutomationPeerFactory;
    struct ICheckBoxAutomationPeer;
    struct ICheckBoxAutomationPeerFactory;
    struct IColorPickerSliderAutomationPeer;
    struct IColorPickerSliderAutomationPeerFactory;
    struct IColorSpectrumAutomationPeer;
    struct IColorSpectrumAutomationPeerFactory;
    struct IComboBoxAutomationPeer;
    struct IComboBoxAutomationPeerFactory;
    struct IComboBoxItemAutomationPeer;
    struct IComboBoxItemAutomationPeerFactory;
    struct IComboBoxItemDataAutomationPeer;
    struct IComboBoxItemDataAutomationPeerFactory;
    struct IDatePickerAutomationPeer;
    struct IDatePickerAutomationPeerFactory;
    struct IDatePickerFlyoutPresenterAutomationPeer;
    struct IDropDownButtonAutomationPeer;
    struct IDropDownButtonAutomationPeerFactory;
    struct IExpanderAutomationPeer;
    struct IExpanderAutomationPeerFactory;
    struct IFlipViewAutomationPeer;
    struct IFlipViewAutomationPeerFactory;
    struct IFlipViewItemAutomationPeer;
    struct IFlipViewItemAutomationPeerFactory;
    struct IFlipViewItemDataAutomationPeer;
    struct IFlipViewItemDataAutomationPeerFactory;
    struct IFlyoutPresenterAutomationPeer;
    struct IFlyoutPresenterAutomationPeerFactory;
    struct IFrameworkElementAutomationPeer;
    struct IFrameworkElementAutomationPeerFactory;
    struct IFrameworkElementAutomationPeerStatics;
    struct IGridViewAutomationPeer;
    struct IGridViewAutomationPeerFactory;
    struct IGridViewHeaderItemAutomationPeer;
    struct IGridViewHeaderItemAutomationPeerFactory;
    struct IGridViewItemAutomationPeer;
    struct IGridViewItemAutomationPeerFactory;
    struct IGridViewItemDataAutomationPeer;
    struct IGridViewItemDataAutomationPeerFactory;
    struct IGroupItemAutomationPeer;
    struct IGroupItemAutomationPeerFactory;
    struct IHubAutomationPeer;
    struct IHubAutomationPeerFactory;
    struct IHubSectionAutomationPeer;
    struct IHubSectionAutomationPeerFactory;
    struct IHyperlinkButtonAutomationPeer;
    struct IHyperlinkButtonAutomationPeerFactory;
    struct IImageAutomationPeer;
    struct IImageAutomationPeerFactory;
    struct IInfoBarAutomationPeer;
    struct IInfoBarAutomationPeerFactory;
    struct IItemAutomationPeer;
    struct IItemAutomationPeerFactory;
    struct IItemContainerAutomationPeer;
    struct IItemContainerAutomationPeerFactory;
    struct IItemsControlAutomationPeer;
    struct IItemsControlAutomationPeerFactory;
    struct IItemsControlAutomationPeerOverrides;
    struct IItemsViewAutomationPeer;
    struct IItemsViewAutomationPeerFactory;
    struct IListBoxAutomationPeer;
    struct IListBoxAutomationPeerFactory;
    struct IListBoxItemAutomationPeer;
    struct IListBoxItemAutomationPeerFactory;
    struct IListBoxItemDataAutomationPeer;
    struct IListBoxItemDataAutomationPeerFactory;
    struct IListPickerFlyoutPresenterAutomationPeer;
    struct IListViewAutomationPeer;
    struct IListViewAutomationPeerFactory;
    struct IListViewBaseAutomationPeer;
    struct IListViewBaseAutomationPeerFactory;
    struct IListViewBaseHeaderItemAutomationPeer;
    struct IListViewBaseHeaderItemAutomationPeerFactory;
    struct IListViewHeaderItemAutomationPeer;
    struct IListViewHeaderItemAutomationPeerFactory;
    struct IListViewItemAutomationPeer;
    struct IListViewItemAutomationPeerFactory;
    struct IListViewItemDataAutomationPeer;
    struct IListViewItemDataAutomationPeerFactory;
    struct ILoopingSelectorAutomationPeer;
    struct ILoopingSelectorItemAutomationPeer;
    struct ILoopingSelectorItemDataAutomationPeer;
    struct IMediaPlayerElementAutomationPeer;
    struct IMediaPlayerElementAutomationPeerFactory;
    struct IMediaTransportControlsAutomationPeer;
    struct IMediaTransportControlsAutomationPeerFactory;
    struct IMenuBarAutomationPeer;
    struct IMenuBarAutomationPeerFactory;
    struct IMenuBarItemAutomationPeer;
    struct IMenuBarItemAutomationPeerFactory;
    struct IMenuFlyoutItemAutomationPeer;
    struct IMenuFlyoutItemAutomationPeerFactory;
    struct IMenuFlyoutPresenterAutomationPeer;
    struct IMenuFlyoutPresenterAutomationPeerFactory;
    struct INavigationViewAutomationPeer;
    struct INavigationViewAutomationPeerFactory;
    struct INavigationViewItemAutomationPeer;
    struct INavigationViewItemAutomationPeerFactory;
    struct INumberBoxAutomationPeer;
    struct INumberBoxAutomationPeerFactory;
    struct IPasswordBoxAutomationPeer;
    struct IPasswordBoxAutomationPeerFactory;
    struct IPersonPictureAutomationPeer;
    struct IPersonPictureAutomationPeerFactory;
    struct IPickerFlyoutPresenterAutomationPeer;
    struct IPipsPagerAutomationPeer;
    struct IPipsPagerAutomationPeerFactory;
    struct IPivotAutomationPeer;
    struct IPivotAutomationPeerFactory;
    struct IPivotItemAutomationPeer;
    struct IPivotItemAutomationPeerFactory;
    struct IPivotItemDataAutomationPeer;
    struct IPivotItemDataAutomationPeerFactory;
    struct IProgressBarAutomationPeer;
    struct IProgressBarAutomationPeerFactory;
    struct IProgressRingAutomationPeer;
    struct IProgressRingAutomationPeerFactory;
    struct IRadioButtonAutomationPeer;
    struct IRadioButtonAutomationPeerFactory;
    struct IRadioButtonsAutomationPeer;
    struct IRadioButtonsAutomationPeerFactory;
    struct IRangeBaseAutomationPeer;
    struct IRangeBaseAutomationPeerFactory;
    struct IRatingControlAutomationPeer;
    struct IRatingControlAutomationPeerFactory;
    struct IRepeatButtonAutomationPeer;
    struct IRepeatButtonAutomationPeerFactory;
    struct IRepeaterAutomationPeer;
    struct IRepeaterAutomationPeerFactory;
    struct IRichEditBoxAutomationPeer;
    struct IRichEditBoxAutomationPeerFactory;
    struct IRichTextBlockAutomationPeer;
    struct IRichTextBlockAutomationPeerFactory;
    struct IRichTextBlockOverflowAutomationPeer;
    struct IRichTextBlockOverflowAutomationPeerFactory;
    struct IScrollBarAutomationPeer;
    struct IScrollBarAutomationPeerFactory;
    struct IScrollViewerAutomationPeer;
    struct IScrollViewerAutomationPeerFactory;
    struct ISelectorAutomationPeer;
    struct ISelectorAutomationPeerFactory;
    struct ISelectorItemAutomationPeer;
    struct ISelectorItemAutomationPeerFactory;
    struct ISemanticZoomAutomationPeer;
    struct ISemanticZoomAutomationPeerFactory;
    struct ISliderAutomationPeer;
    struct ISliderAutomationPeerFactory;
    struct ISplitButtonAutomationPeer;
    struct ISplitButtonAutomationPeerFactory;
    struct ITabViewAutomationPeer;
    struct ITabViewAutomationPeerFactory;
    struct ITabViewItemAutomationPeer;
    struct ITabViewItemAutomationPeerFactory;
    struct ITeachingTipAutomationPeer;
    struct ITeachingTipAutomationPeerFactory;
    struct ITextBlockAutomationPeer;
    struct ITextBlockAutomationPeerFactory;
    struct ITextBoxAutomationPeer;
    struct ITextBoxAutomationPeerFactory;
    struct IThumbAutomationPeer;
    struct IThumbAutomationPeerFactory;
    struct ITimePickerAutomationPeer;
    struct ITimePickerAutomationPeerFactory;
    struct ITimePickerFlyoutPresenterAutomationPeer;
    struct IToggleButtonAutomationPeer;
    struct IToggleButtonAutomationPeerFactory;
    struct IToggleMenuFlyoutItemAutomationPeer;
    struct IToggleMenuFlyoutItemAutomationPeerFactory;
    struct IToggleSplitButtonAutomationPeer;
    struct IToggleSplitButtonAutomationPeerFactory;
    struct IToggleSwitchAutomationPeer;
    struct IToggleSwitchAutomationPeerFactory;
    struct ITreeViewItemAutomationPeer;
    struct ITreeViewItemAutomationPeerFactory;
    struct ITreeViewItemDataAutomationPeer;
    struct ITreeViewItemDataAutomationPeerFactory;
    struct ITreeViewListAutomationPeer;
    struct ITreeViewListAutomationPeerFactory;
    struct IWebView2AutomationPeer;
    struct IWebView2AutomationPeerFactory;
    struct AnimatedVisualPlayerAutomationPeer;
    struct AppBarAutomationPeer;
    struct AppBarButtonAutomationPeer;
    struct AppBarToggleButtonAutomationPeer;
    struct AutoSuggestBoxAutomationPeer;
    struct AutomationPeer;
    struct AutomationPeerAnnotation;
    struct BreadcrumbBarItemAutomationPeer;
    struct ButtonAutomationPeer;
    struct ButtonBaseAutomationPeer;
    struct CalendarDatePickerAutomationPeer;
    struct CheckBoxAutomationPeer;
    struct ColorPickerSliderAutomationPeer;
    struct ColorSpectrumAutomationPeer;
    struct ComboBoxAutomationPeer;
    struct ComboBoxItemAutomationPeer;
    struct ComboBoxItemDataAutomationPeer;
    struct DatePickerAutomationPeer;
    struct DatePickerFlyoutPresenterAutomationPeer;
    struct DropDownButtonAutomationPeer;
    struct ExpanderAutomationPeer;
    struct FlipViewAutomationPeer;
    struct FlipViewItemAutomationPeer;
    struct FlipViewItemDataAutomationPeer;
    struct FlyoutPresenterAutomationPeer;
    struct FrameworkElementAutomationPeer;
    struct GridViewAutomationPeer;
    struct GridViewHeaderItemAutomationPeer;
    struct GridViewItemAutomationPeer;
    struct GridViewItemDataAutomationPeer;
    struct GroupItemAutomationPeer;
    struct HubAutomationPeer;
    struct HubSectionAutomationPeer;
    struct HyperlinkButtonAutomationPeer;
    struct ImageAutomationPeer;
    struct InfoBarAutomationPeer;
    struct ItemAutomationPeer;
    struct ItemContainerAutomationPeer;
    struct ItemsControlAutomationPeer;
    struct ItemsViewAutomationPeer;
    struct ListBoxAutomationPeer;
    struct ListBoxItemAutomationPeer;
    struct ListBoxItemDataAutomationPeer;
    struct ListPickerFlyoutPresenterAutomationPeer;
    struct ListViewAutomationPeer;
    struct ListViewBaseAutomationPeer;
    struct ListViewBaseHeaderItemAutomationPeer;
    struct ListViewHeaderItemAutomationPeer;
    struct ListViewItemAutomationPeer;
    struct ListViewItemDataAutomationPeer;
    struct LoopingSelectorAutomationPeer;
    struct LoopingSelectorItemAutomationPeer;
    struct LoopingSelectorItemDataAutomationPeer;
    struct MediaPlayerElementAutomationPeer;
    struct MediaTransportControlsAutomationPeer;
    struct MenuBarAutomationPeer;
    struct MenuBarItemAutomationPeer;
    struct MenuFlyoutItemAutomationPeer;
    struct MenuFlyoutPresenterAutomationPeer;
    struct NavigationViewAutomationPeer;
    struct NavigationViewItemAutomationPeer;
    struct NumberBoxAutomationPeer;
    struct PasswordBoxAutomationPeer;
    struct PersonPictureAutomationPeer;
    struct PickerFlyoutPresenterAutomationPeer;
    struct PipsPagerAutomationPeer;
    struct PivotAutomationPeer;
    struct PivotItemAutomationPeer;
    struct PivotItemDataAutomationPeer;
    struct ProgressBarAutomationPeer;
    struct ProgressRingAutomationPeer;
    struct RadioButtonAutomationPeer;
    struct RadioButtonsAutomationPeer;
    struct RangeBaseAutomationPeer;
    struct RatingControlAutomationPeer;
    struct RepeatButtonAutomationPeer;
    struct RepeaterAutomationPeer;
    struct RichEditBoxAutomationPeer;
    struct RichTextBlockAutomationPeer;
    struct RichTextBlockOverflowAutomationPeer;
    struct ScrollBarAutomationPeer;
    struct ScrollViewerAutomationPeer;
    struct SelectorAutomationPeer;
    struct SelectorItemAutomationPeer;
    struct SemanticZoomAutomationPeer;
    struct SliderAutomationPeer;
    struct SplitButtonAutomationPeer;
    struct TabViewAutomationPeer;
    struct TabViewItemAutomationPeer;
    struct TeachingTipAutomationPeer;
    struct TextBlockAutomationPeer;
    struct TextBoxAutomationPeer;
    struct ThumbAutomationPeer;
    struct TimePickerAutomationPeer;
    struct TimePickerFlyoutPresenterAutomationPeer;
    struct ToggleButtonAutomationPeer;
    struct ToggleMenuFlyoutItemAutomationPeer;
    struct ToggleSplitButtonAutomationPeer;
    struct ToggleSwitchAutomationPeer;
    struct TreeViewItemAutomationPeer;
    struct TreeViewItemDataAutomationPeer;
    struct TreeViewListAutomationPeer;
    struct WebView2AutomationPeer;
    struct RawElementProviderRuntimeId;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotationFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotationStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerOverrides>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerProtected>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IBreadcrumbBarItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IBreadcrumbBarItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerFlyoutPresenterAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IExpanderAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IExpanderAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeerStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IInfoBarAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IInfoBarAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemContainerAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemContainerAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeerOverrides>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsViewAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsViewAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListPickerFlyoutPresenterAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorItemDataAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::INumberBoxAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::INumberBoxAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IPickerFlyoutPresenterAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IPipsPagerAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IPipsPagerAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressBarAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressBarAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressRingAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressRingAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerFlyoutPresenterAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemDataAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemDataAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IWebView2AutomationPeer>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::IWebView2AutomationPeerFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AnimatedVisualPlayerAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AppBarAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AppBarButtonAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AppBarToggleButtonAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AutoSuggestBoxAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::BreadcrumbBarItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ButtonAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ButtonBaseAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::CalendarDatePickerAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::CheckBoxAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ColorPickerSliderAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ColorSpectrumAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ComboBoxAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ComboBoxItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ComboBoxItemDataAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::DatePickerAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::DatePickerFlyoutPresenterAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::DropDownButtonAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ExpanderAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::FlipViewAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::FlipViewItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::FlipViewItemDataAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::FlyoutPresenterAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::FrameworkElementAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::GridViewAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::GridViewHeaderItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::GridViewItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::GridViewItemDataAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::GroupItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::HubAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::HubSectionAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::HyperlinkButtonAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ImageAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::InfoBarAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ItemContainerAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ItemsControlAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ItemsViewAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ListBoxAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ListBoxItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ListBoxItemDataAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ListPickerFlyoutPresenterAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewBaseAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewBaseHeaderItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewHeaderItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewItemDataAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::LoopingSelectorAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::LoopingSelectorItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::LoopingSelectorItemDataAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::MediaPlayerElementAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::MediaTransportControlsAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::MenuBarAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::MenuBarItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::MenuFlyoutItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::MenuFlyoutPresenterAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::NavigationViewAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::NavigationViewItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::NumberBoxAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::PasswordBoxAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::PersonPictureAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::PickerFlyoutPresenterAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::PipsPagerAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::PivotAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::PivotItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::PivotItemDataAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ProgressBarAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ProgressRingAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::RadioButtonAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::RadioButtonsAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::RangeBaseAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::RatingControlAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::RepeatButtonAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::RepeaterAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::RichEditBoxAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::RichTextBlockAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::RichTextBlockOverflowAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ScrollBarAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ScrollViewerAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::SelectorAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::SelectorItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::SemanticZoomAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::SliderAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::SplitButtonAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::TabViewAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::TabViewItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::TeachingTipAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::TextBlockAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::TextBoxAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ThumbAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::TimePickerAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::TimePickerFlyoutPresenterAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ToggleButtonAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ToggleMenuFlyoutItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ToggleSplitButtonAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::ToggleSwitchAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::TreeViewItemAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::TreeViewItemDataAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::TreeViewListAutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::WebView2AutomationPeer>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AccessibilityView>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationControlType>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationEvents>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationHeadingLevel>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationLandmarkType>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationLiveSetting>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationNavigationDirection>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationKind>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationProcessing>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationOrientation>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationStructureChangeType>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::PatternInterface>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::UI::Xaml::Automation::Peers::RawElementProviderRuntimeId>{ using type = struct_category<uint32_t, uint32_t>; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AnimatedVisualPlayerAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AppBarAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AppBarButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AppBarToggleButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AutoSuggestBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.AutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation> = L"Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::BreadcrumbBarItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ButtonBaseAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::CalendarDatePickerAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::CheckBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ColorPickerSliderAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ColorSpectrumAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ComboBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ComboBoxItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ComboBoxItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::DatePickerAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::DatePickerFlyoutPresenterAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::DropDownButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ExpanderAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::FlipViewAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::FlipViewItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::FlipViewItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::FlyoutPresenterAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::FrameworkElementAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::GridViewAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::GridViewHeaderItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::GridViewItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::GridViewItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::GroupItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::HubAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::HubSectionAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::HyperlinkButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ImageAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::InfoBarAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ItemContainerAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ItemContainerAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ItemsControlAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ItemsViewAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ItemsViewAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ListBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ListBoxItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ListBoxItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ListPickerFlyoutPresenterAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewBaseAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewBaseHeaderItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewHeaderItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::LoopingSelectorAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::LoopingSelectorItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::LoopingSelectorItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::MediaPlayerElementAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::MediaTransportControlsAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::MenuBarAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::MenuBarItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::MenuFlyoutItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::MenuFlyoutPresenterAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::NavigationViewAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::NavigationViewItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::NumberBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::PasswordBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::PersonPictureAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::PickerFlyoutPresenterAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::PipsPagerAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::PivotAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::PivotItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::PivotItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ProgressBarAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ProgressRingAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::RadioButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::RadioButtonsAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::RangeBaseAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::RatingControlAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::RepeatButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::RepeaterAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::RichEditBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::RichTextBlockAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::RichTextBlockOverflowAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ScrollBarAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ScrollViewerAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::SelectorAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::SelectorItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::SemanticZoomAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::SliderAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::SplitButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::TabViewAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::TabViewItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::TeachingTipAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::TextBlockAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::TextBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ThumbAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::TimePickerAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::TimePickerFlyoutPresenterAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ToggleButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ToggleMenuFlyoutItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ToggleSplitButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ToggleSwitchAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::TreeViewItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::TreeViewItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::TreeViewListAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::WebView2AutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AccessibilityView> = L"Microsoft.UI.Xaml.Automation.Peers.AccessibilityView";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationControlType> = L"Microsoft.UI.Xaml.Automation.Peers.AutomationControlType";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationEvents> = L"Microsoft.UI.Xaml.Automation.Peers.AutomationEvents";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationHeadingLevel> = L"Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationLandmarkType> = L"Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationLiveSetting> = L"Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationNavigationDirection> = L"Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationKind> = L"Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationProcessing> = L"Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationOrientation> = L"Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationStructureChangeType> = L"Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::PatternInterface> = L"Microsoft.UI.Xaml.Automation.Peers.PatternInterface";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::RawElementProviderRuntimeId> = L"Microsoft.UI.Xaml.Automation.Peers.RawElementProviderRuntimeId";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation> = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotationFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotationStatics> = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationStatics";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerOverrides> = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerProtected> = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerProtected";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerStatics> = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerStatics";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IBreadcrumbBarItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IBreadcrumbBarItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerFlyoutPresenterAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IDatePickerFlyoutPresenterAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IExpanderAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IExpanderAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeerStatics> = L"Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerStatics";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IInfoBarAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IInfoBarAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemContainerAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IItemContainerAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemContainerAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IItemContainerAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeerOverrides> = L"Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsViewAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IItemsViewAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsViewAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IItemsViewAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListPickerFlyoutPresenterAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IListPickerFlyoutPresenterAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::INumberBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::INumberBoxAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPickerFlyoutPresenterAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IPickerFlyoutPresenterAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPipsPagerAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPipsPagerAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressBarAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressBarAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressRingAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressRingAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerFlyoutPresenterAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ITimePickerFlyoutPresenterAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemDataAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemDataAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IWebView2AutomationPeer> = L"Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeer";
    template <> inline constexpr auto& name_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IWebView2AutomationPeerFactory> = L"Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeerFactory";
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeer>{ 0xF949EEB6,0xB3EA,0x58AD,{ 0xB6,0x2B,0xB7,0x25,0x5B,0xCC,0x04,0xDF } }; // F949EEB6-B3EA-58AD-B62B-B7255BCC04DF
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeerFactory>{ 0xD2A49198,0x80BB,0x51D6,{ 0xB4,0x95,0x3D,0xC5,0xAA,0xB5,0x95,0x89 } }; // D2A49198-80BB-51D6-B495-3DC5AAB59589
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeer>{ 0x883A52E2,0x1810,0x5F1A,{ 0xA9,0xFD,0x1D,0xB0,0xF9,0xC6,0x2B,0x02 } }; // 883A52E2-1810-5F1A-A9FD-1DB0F9C62B02
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeerFactory>{ 0x64F68CE4,0xAD2D,0x5C18,{ 0xAB,0xC0,0xD0,0x15,0x7C,0xC6,0x30,0x88 } }; // 64F68CE4-AD2D-5C18-ABC0-D0157CC63088
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeer>{ 0x439EFDB4,0x141B,0x5FFF,{ 0x87,0x23,0x03,0xE6,0xE6,0x9F,0x6B,0x36 } }; // 439EFDB4-141B-5FFF-8723-03E6E69F6B36
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeerFactory>{ 0x6F611433,0x7E50,0x5E2E,{ 0xB1,0x92,0xD6,0xA2,0x85,0x96,0x2C,0x74 } }; // 6F611433-7E50-5E2E-B192-D6A285962C74
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeer>{ 0x17D28EB5,0x4635,0x5E2D,{ 0xAF,0x01,0x8D,0xCD,0x23,0xA6,0x08,0xC4 } }; // 17D28EB5-4635-5E2D-AF01-8DCD23A608C4
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeerFactory>{ 0x3CB5EF43,0xAE92,0x5452,{ 0x92,0xE9,0xCD,0x0C,0xCC,0xA2,0x68,0x91 } }; // 3CB5EF43-AE92-5452-92E9-CD0CCCA26891
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeer>{ 0x695236FC,0x0021,0x5936,{ 0xBD,0xF9,0xED,0x59,0x91,0xDB,0x0D,0x52 } }; // 695236FC-0021-5936-BDF9-ED5991DB0D52
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeerFactory>{ 0xC30950C9,0xB682,0x56DF,{ 0x9C,0xB2,0xDE,0x67,0x86,0xFB,0x8F,0x90 } }; // C30950C9-B682-56DF-9CB2-DE6786FB8F90
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer>{ 0xE51D3E4E,0x34F0,0x568C,{ 0x99,0x9F,0x62,0x77,0xE2,0xAF,0xE6,0xD7 } }; // E51D3E4E-34F0-568C-999F-6277E2AFE6D7
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation>{ 0x2738B92A,0x2528,0x5B63,{ 0x97,0x3D,0xD2,0x9E,0xB0,0x59,0x36,0x47 } }; // 2738B92A-2528-5B63-973D-D29EB0593647
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotationFactory>{ 0x25A1A202,0xBD68,0x5D41,{ 0xA3,0x11,0xF8,0x4A,0xF9,0xC8,0xC4,0x40 } }; // 25A1A202-BD68-5D41-A311-F84AF9C8C440
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotationStatics>{ 0xC46105D7,0x8CA3,0x50E3,{ 0xA1,0xBC,0xB6,0xBB,0x2F,0x9C,0xE1,0xCD } }; // C46105D7-8CA3-50E3-A1BC-B6BB2F9CE1CD
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerFactory>{ 0xA1AF86A0,0x6EC6,0x5BE2,{ 0x85,0x8F,0x72,0x80,0x8B,0xE6,0xFD,0xDD } }; // A1AF86A0-6EC6-5BE2-858F-72808BE6FDDD
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerOverrides>{ 0x44F8F6DF,0x1B60,0x512D,{ 0xA2,0x95,0xDD,0x8C,0x27,0x6C,0x46,0x18 } }; // 44F8F6DF-1B60-512D-A295-DD8C276C4618
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerProtected>{ 0x9663B2C3,0x8C1F,0x56D4,{ 0xAB,0xD9,0x26,0x80,0x82,0xA9,0xE8,0xBC } }; // 9663B2C3-8C1F-56D4-ABD9-268082A9E8BC
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerStatics>{ 0x90B157FF,0x18D5,0x5623,{ 0x85,0x0C,0x61,0x2C,0xEA,0xE5,0x76,0xBD } }; // 90B157FF-18D5-5623-850C-612CEAE576BD
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IBreadcrumbBarItemAutomationPeer>{ 0x48E81612,0x7DE0,0x5065,{ 0xB8,0x81,0x04,0xEB,0xFF,0xF9,0x04,0x97 } }; // 48E81612-7DE0-5065-B881-04EBFFF90497
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IBreadcrumbBarItemAutomationPeerFactory>{ 0xDFB02146,0x405F,0x52ED,{ 0xA8,0x73,0x0E,0xD4,0x94,0x28,0x50,0xBE } }; // DFB02146-405F-52ED-A873-0ED4942850BE
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeer>{ 0xA3A2E96B,0x8A2D,0x50BF,{ 0x9B,0x3D,0xDF,0xBC,0x46,0x53,0xF5,0xA6 } }; // A3A2E96B-8A2D-50BF-9B3D-DFBC4653F5A6
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeerFactory>{ 0x1C2F87B7,0xFBC1,0x56B0,{ 0xA6,0x54,0x55,0x0D,0x61,0xC4,0x23,0xD1 } }; // 1C2F87B7-FBC1-56B0-A654-550D61C423D1
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeer>{ 0x7A88A2D8,0xF8DD,0x5526,{ 0x8A,0x40,0xE2,0xE3,0x88,0x81,0x93,0xBF } }; // 7A88A2D8-F8DD-5526-8A40-E2E3888193BF
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeerFactory>{ 0xD6E707BB,0x7299,0x5F7A,{ 0x9C,0x03,0x7F,0xA1,0x0F,0x93,0x97,0x71 } }; // D6E707BB-7299-5F7A-9C03-7FA10F939771
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeer>{ 0x246D63E3,0x812F,0x5F28,{ 0x8D,0x18,0xAF,0x79,0x40,0x9A,0x4F,0x95 } }; // 246D63E3-812F-5F28-8D18-AF79409A4F95
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeerFactory>{ 0x6D272C12,0x68A3,0x586E,{ 0x87,0x9B,0x57,0x1E,0x60,0x68,0x03,0xB4 } }; // 6D272C12-68A3-586E-879B-571E606803B4
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeer>{ 0x9B449814,0x2C1A,0x5BDC,{ 0x95,0x24,0x1D,0xF9,0x1C,0x06,0xE9,0x92 } }; // 9B449814-2C1A-5BDC-9524-1DF91C06E992
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeerFactory>{ 0x0F5B9E3C,0x6DE5,0x588E,{ 0x83,0x5F,0x32,0x28,0xBE,0x93,0x0F,0xEA } }; // 0F5B9E3C-6DE5-588E-835F-3228BE930FEA
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer>{ 0x793D35D4,0x4152,0x50FA,{ 0xB5,0xF4,0xF6,0xC0,0x45,0xC1,0x33,0x9D } }; // 793D35D4-4152-50FA-B5F4-F6C045C1339D
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory>{ 0xE5F9093F,0x5E2C,0x5148,{ 0xB5,0xD1,0x1C,0xDA,0x4E,0xB8,0x69,0x13 } }; // E5F9093F-5E2C-5148-B5D1-1CDA4EB86913
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer>{ 0x005AC3D1,0xB031,0x58AB,{ 0x91,0x8D,0x03,0x0F,0xAB,0xAE,0xAF,0x87 } }; // 005AC3D1-B031-58AB-918D-030FABAEAF87
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory>{ 0xCFCCAE7E,0xFE0F,0x5C9C,{ 0x9D,0x1A,0x69,0xE2,0x0E,0x02,0x32,0xCF } }; // CFCCAE7E-FE0F-5C9C-9D1A-69E20E0232CF
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeer>{ 0x459D2245,0x1FD2,0x5DDA,{ 0x82,0x2C,0xBE,0xD1,0x3D,0xF6,0x77,0x6B } }; // 459D2245-1FD2-5DDA-822C-BED13DF6776B
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeerFactory>{ 0xD094829F,0x2A6F,0x5B1F,{ 0xA0,0xCE,0x0F,0x68,0x2C,0xC5,0x6C,0x0F } }; // D094829F-2A6F-5B1F-A0CE-0F682CC56C0F
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeer>{ 0x3D4195BC,0xB579,0x5CDA,{ 0xB5,0x6F,0x1E,0x73,0x99,0xE1,0x41,0x22 } }; // 3D4195BC-B579-5CDA-B56F-1E7399E14122
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeerFactory>{ 0xEAD9D22D,0x112B,0x550E,{ 0x8C,0xAC,0x76,0x06,0x14,0xF9,0x79,0xAA } }; // EAD9D22D-112B-550E-8CAC-760614F979AA
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeer>{ 0x65B69B50,0xCBC3,0x5AE7,{ 0xBF,0x9C,0x27,0x94,0xFE,0x56,0xC6,0xB3 } }; // 65B69B50-CBC3-5AE7-BF9C-2794FE56C6B3
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeerFactory>{ 0x66778718,0x8757,0x56D5,{ 0xBD,0x3A,0xF2,0xFF,0x40,0xE8,0x3A,0x78 } }; // 66778718-8757-56D5-BD3A-F2FF40E83A78
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeer>{ 0xF3D7C3E5,0xC817,0x58A5,{ 0xBB,0x47,0xD9,0xEB,0x22,0x8F,0x3B,0xA0 } }; // F3D7C3E5-C817-58A5-BB47-D9EB228F3BA0
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeerFactory>{ 0x480F7825,0xB4A7,0x5C56,{ 0x9F,0x8A,0xFE,0xD8,0x4B,0x93,0x48,0xAE } }; // 480F7825-B4A7-5C56-9F8A-FED84B9348AE
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerFlyoutPresenterAutomationPeer>{ 0x600B7162,0x0529,0x5FD1,{ 0xB6,0xE4,0x41,0xDC,0x37,0xED,0xA5,0x13 } }; // 600B7162-0529-5FD1-B6E4-41DC37EDA513
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeer>{ 0x7DC37DEC,0x0A0A,0x5C98,{ 0x8A,0x6F,0x9E,0x47,0xDB,0xAB,0x2F,0x82 } }; // 7DC37DEC-0A0A-5C98-8A6F-9E47DBAB2F82
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeerFactory>{ 0x68C4BFFA,0x1685,0x5936,{ 0xB2,0x19,0x51,0x7E,0x87,0xFD,0x59,0x1F } }; // 68C4BFFA-1685-5936-B219-517E87FD591F
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IExpanderAutomationPeer>{ 0xF7527408,0xCC89,0x5B65,{ 0xBB,0xDE,0xEA,0xE6,0xD6,0x6D,0xC3,0xE5 } }; // F7527408-CC89-5B65-BBDE-EAE6D66DC3E5
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IExpanderAutomationPeerFactory>{ 0x2024523B,0x4A40,0x5976,{ 0xAA,0xAB,0x0F,0x05,0x66,0x4F,0x74,0x94 } }; // 2024523B-4A40-5976-AAAB-0F05664F7494
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeer>{ 0x9F2901EA,0x23CB,0x5CAC,{ 0x87,0xD4,0x7F,0xA9,0xC7,0xFF,0xBC,0x60 } }; // 9F2901EA-23CB-5CAC-87D4-7FA9C7FFBC60
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeerFactory>{ 0xE73C7F75,0xED47,0x522A,{ 0x8A,0x27,0x45,0xFE,0xDA,0x10,0x31,0xF0 } }; // E73C7F75-ED47-522A-8A27-45FEDA1031F0
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeer>{ 0x3569B1BB,0x7601,0x56DE,{ 0x81,0x2A,0x17,0x14,0x55,0xD8,0xAD,0x32 } }; // 3569B1BB-7601-56DE-812A-171455D8AD32
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeerFactory>{ 0xAA3B880F,0x62CB,0x5878,{ 0x8F,0x0B,0x7B,0x35,0x48,0xC6,0x50,0x80 } }; // AA3B880F-62CB-5878-8F0B-7B3548C65080
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeer>{ 0x3BB31A93,0xE737,0x501D,{ 0xB9,0xA6,0xA1,0x14,0x61,0xC9,0xBC,0xF5 } }; // 3BB31A93-E737-501D-B9A6-A11461C9BCF5
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeerFactory>{ 0x6F892ACE,0x4467,0x587C,{ 0x95,0x3C,0xC1,0xC1,0x3B,0x63,0x2E,0x5F } }; // 6F892ACE-4467-587C-953C-C1C13B632E5F
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeer>{ 0xE589B818,0x4A64,0x58C5,{ 0x9C,0x0B,0x5C,0xEA,0x0F,0x86,0x7E,0x9B } }; // E589B818-4A64-58C5-9C0B-5CEA0F867E9B
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeerFactory>{ 0xE529E586,0x7AA3,0x50A6,{ 0xB1,0x7E,0x67,0x8B,0x54,0xFE,0xE1,0x27 } }; // E529E586-7AA3-50A6-B17E-678B54FEE127
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeer>{ 0x7DAB4F24,0x605C,0x51CB,{ 0x87,0xDB,0x3E,0xED,0x1B,0x9F,0xB3,0x7B } }; // 7DAB4F24-605C-51CB-87DB-3EED1B9FB37B
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeerFactory>{ 0x1682C3F8,0x238D,0x5C7E,{ 0xA5,0xA5,0x08,0xCC,0x3C,0x10,0xAC,0x7C } }; // 1682C3F8-238D-5C7E-A5A5-08CC3C10AC7C
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeerStatics>{ 0x081F6FBE,0x6500,0x528A,{ 0xA5,0x06,0xF5,0xA4,0xD4,0x1D,0xDF,0x6C } }; // 081F6FBE-6500-528A-A506-F5A4D41DDF6C
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeer>{ 0x7870992F,0x3328,0x53C2,{ 0xB4,0x12,0x29,0x14,0x43,0x89,0x75,0xB4 } }; // 7870992F-3328-53C2-B412-2914438975B4
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeerFactory>{ 0x71B829E1,0x7D57,0x580B,{ 0xB1,0xA6,0xD7,0x80,0xED,0x99,0x22,0x48 } }; // 71B829E1-7D57-580B-B1A6-D780ED992248
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeer>{ 0xC38AF4B0,0x2757,0x569B,{ 0xBD,0xC7,0xA5,0xB7,0xB7,0x4F,0xFD,0xBA } }; // C38AF4B0-2757-569B-BDC7-A5B7B74FFDBA
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeerFactory>{ 0x6161999A,0xE042,0x5D9B,{ 0xAA,0x38,0x9F,0xE1,0x29,0x6B,0xFB,0x01 } }; // 6161999A-E042-5D9B-AA38-9FE1296BFB01
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeer>{ 0xDE249C2E,0x5419,0x5798,{ 0xB6,0x25,0xCD,0x2C,0x05,0x30,0x75,0x72 } }; // DE249C2E-5419-5798-B625-CD2C05307572
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeerFactory>{ 0x04735951,0x0F91,0x53F5,{ 0x98,0x4B,0x75,0xBF,0x0E,0xD4,0x15,0x40 } }; // 04735951-0F91-53F5-984B-75BF0ED41540
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeer>{ 0x0372C2A0,0x5094,0x5811,{ 0x96,0xBA,0x0D,0xBE,0x77,0x18,0x74,0x35 } }; // 0372C2A0-5094-5811-96BA-0DBE77187435
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeerFactory>{ 0x44137B3E,0xC6F3,0x53CE,{ 0x91,0x5D,0xFC,0x8E,0x60,0xCC,0xEE,0x74 } }; // 44137B3E-C6F3-53CE-915D-FC8E60CCEE74
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeer>{ 0x2FF50701,0x4164,0x511D,{ 0xBB,0x23,0xD2,0x1E,0xB8,0x8D,0x5E,0xB9 } }; // 2FF50701-4164-511D-BB23-D21EB88D5EB9
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeerFactory>{ 0xCDB10ED9,0xD1D3,0x5FAA,{ 0x87,0x72,0x70,0x01,0x4D,0xA6,0x66,0xB3 } }; // CDB10ED9-D1D3-5FAA-8772-70014DA666B3
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeer>{ 0x8FA20CB6,0x42C1,0x531E,{ 0xB5,0x4F,0xFC,0xAF,0x33,0xC9,0x43,0xA9 } }; // 8FA20CB6-42C1-531E-B54F-FCAF33C943A9
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeerFactory>{ 0xC1B1F1CF,0x3926,0x56C9,{ 0xB6,0x90,0x53,0x0C,0x8B,0xC7,0x88,0x06 } }; // C1B1F1CF-3926-56C9-B690-530C8BC78806
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeer>{ 0x174E94AB,0xC033,0x534A,{ 0x89,0x5C,0xEA,0xAF,0x1D,0xCC,0x43,0x52 } }; // 174E94AB-C033-534A-895C-EAAF1DCC4352
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeerFactory>{ 0xDC56CF08,0x2031,0x56B6,{ 0x9A,0xD5,0x7F,0x8D,0x74,0x75,0xD3,0x5D } }; // DC56CF08-2031-56B6-9AD5-7F8D7475D35D
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeer>{ 0x6A770AB2,0x02D0,0x59BA,{ 0xA2,0x8E,0x3D,0xFB,0xA1,0xF1,0x0D,0xD8 } }; // 6A770AB2-02D0-59BA-A28E-3DFBA1F10DD8
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeerFactory>{ 0x2476E661,0xABCE,0x5D35,{ 0xB3,0x8B,0x6C,0xEE,0x2C,0x41,0x48,0xF4 } }; // 2476E661-ABCE-5D35-B38B-6CEE2C4148F4
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeer>{ 0x1F6EB184,0x8765,0x5455,{ 0xBD,0x1D,0x93,0xC2,0x51,0xC1,0x7F,0x9B } }; // 1F6EB184-8765-5455-BD1D-93C251C17F9B
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeerFactory>{ 0x1B26001B,0x49A6,0x5FF4,{ 0xB1,0xB1,0x2D,0x50,0x4D,0x2E,0xF1,0x33 } }; // 1B26001B-49A6-5FF4-B1B1-2D504D2EF133
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IInfoBarAutomationPeer>{ 0xAA2C40EB,0xDF80,0x5050,{ 0x92,0xC5,0x5F,0xDA,0x5A,0xBF,0xDE,0xF2 } }; // AA2C40EB-DF80-5050-92C5-5FDA5ABFDEF2
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IInfoBarAutomationPeerFactory>{ 0x5FD3E590,0x68B9,0x5C9C,{ 0xA5,0x72,0x0B,0xC1,0x01,0x67,0xCE,0x46 } }; // 5FD3E590-68B9-5C9C-A572-0BC10167CE46
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeer>{ 0xBE8A71BB,0x3E36,0x54D2,{ 0x92,0x0E,0x60,0x72,0x2F,0x1C,0x62,0xFF } }; // BE8A71BB-3E36-54D2-920E-60722F1C62FF
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeerFactory>{ 0xFFE08885,0x14AC,0x5859,{ 0xB0,0x31,0x5F,0x3A,0x4C,0x50,0x4E,0x6D } }; // FFE08885-14AC-5859-B031-5F3A4C504E6D
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemContainerAutomationPeer>{ 0xF915A1FB,0x754E,0x58C7,{ 0xAD,0x2A,0xB9,0x95,0x28,0x70,0x17,0x93 } }; // F915A1FB-754E-58C7-AD2A-B99528701793
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemContainerAutomationPeerFactory>{ 0x4600CFB3,0x72E1,0x5181,{ 0x95,0xEC,0x65,0x3F,0x30,0xB0,0x1C,0x78 } }; // 4600CFB3-72E1-5181-95EC-653F30B01C78
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer>{ 0x0AE7BB7E,0x1407,0x5947,{ 0x98,0x5F,0x9D,0x54,0x2F,0x43,0x3A,0xB1 } }; // 0AE7BB7E-1407-5947-985F-9D542F433AB1
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeerFactory>{ 0x9DE524CC,0x5E66,0x51A0,{ 0xA7,0xE0,0xA1,0x74,0x2D,0x28,0x33,0x4B } }; // 9DE524CC-5E66-51A0-A7E0-A1742D28334B
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeerOverrides>{ 0xD751B35B,0x236E,0x5859,{ 0xA8,0x34,0x52,0xFA,0x36,0x9C,0xD3,0xBD } }; // D751B35B-236E-5859-A834-52FA369CD3BD
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsViewAutomationPeer>{ 0xD456AD6D,0x18D5,0x51AE,{ 0xA4,0x4E,0x95,0x67,0x1F,0x84,0x81,0x84 } }; // D456AD6D-18D5-51AE-A44E-95671F848184
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsViewAutomationPeerFactory>{ 0x8FD329C7,0xEA9C,0x56A3,{ 0xA7,0x9E,0xBF,0xFF,0x5C,0xA7,0x43,0x23 } }; // 8FD329C7-EA9C-56A3-A79E-BFFF5CA74323
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeer>{ 0x2BC1CA3F,0x3617,0x53A8,{ 0x94,0xB9,0xBE,0xC9,0x1D,0x57,0x35,0x25 } }; // 2BC1CA3F-3617-53A8-94B9-BEC91D573525
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeerFactory>{ 0x004AAF6F,0xA12C,0x5FA4,{ 0xA1,0xF7,0xE3,0xB0,0xFB,0xE4,0x5D,0xDD } }; // 004AAF6F-A12C-5FA4-A1F7-E3B0FBE45DDD
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeer>{ 0x19A8C4B4,0xE63A,0x5B2E,{ 0x8E,0x2F,0xC8,0x34,0xE6,0xA0,0x82,0x04 } }; // 19A8C4B4-E63A-5B2E-8E2F-C834E6A08204
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeerFactory>{ 0x936E36EF,0x0FAE,0x58A2,{ 0x8F,0xB2,0x31,0x39,0x99,0x79,0x32,0x63 } }; // 936E36EF-0FAE-58A2-8FB2-313999793263
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeer>{ 0x2B81660F,0x46DC,0x5765,{ 0xB1,0x0A,0x22,0x69,0xD1,0x2E,0xBA,0x42 } }; // 2B81660F-46DC-5765-B10A-2269D12EBA42
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeerFactory>{ 0x2CE97068,0x5280,0x5BEC,{ 0x8B,0xA5,0x78,0x5C,0x58,0x98,0x6D,0xCF } }; // 2CE97068-5280-5BEC-8BA5-785C58986DCF
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListPickerFlyoutPresenterAutomationPeer>{ 0x16574767,0xE8CA,0x551A,{ 0xA9,0xE9,0xE5,0x39,0x4D,0xE3,0x34,0x69 } }; // 16574767-E8CA-551A-A9E9-E5394DE33469
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeer>{ 0x8F2A3373,0xE305,0x55F3,{ 0x92,0x3E,0xD9,0xEE,0xE8,0xD1,0xA6,0xEE } }; // 8F2A3373-E305-55F3-923E-D9EEE8D1A6EE
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeerFactory>{ 0x3C6D8FC2,0x57EA,0x584E,{ 0x9A,0x89,0x50,0x4C,0x65,0x25,0x1D,0x0F } }; // 3C6D8FC2-57EA-584E-9A89-504C65251D0F
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeer>{ 0xAD9A395C,0x5A96,0x5331,{ 0x96,0x36,0xEE,0x4C,0x53,0x18,0x49,0x86 } }; // AD9A395C-5A96-5331-9636-EE4C53184986
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeerFactory>{ 0x361ED030,0x7C93,0x5967,{ 0x97,0xCB,0x4A,0x96,0x93,0xE3,0x40,0x50 } }; // 361ED030-7C93-5967-97CB-4A9693E34050
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeer>{ 0x623314D2,0xC7F1,0x5003,{ 0x95,0x60,0x07,0xD4,0x20,0xA3,0x3A,0x2A } }; // 623314D2-C7F1-5003-9560-07D420A33A2A
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeerFactory>{ 0xE6041212,0x904B,0x5D22,{ 0xB8,0x56,0xD3,0xEF,0x53,0xD1,0x6A,0xA6 } }; // E6041212-904B-5D22-B856-D3EF53D16AA6
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeer>{ 0x0293EACA,0xF7DE,0x5A0D,{ 0x9B,0xEB,0x79,0xDC,0x1A,0xC4,0xA7,0xDE } }; // 0293EACA-F7DE-5A0D-9BEB-79DC1AC4A7DE
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeerFactory>{ 0xF7B3480B,0xBFFF,0x5C1C,{ 0xB9,0xD5,0x8E,0xEE,0x54,0x4A,0xEB,0xF8 } }; // F7B3480B-BFFF-5C1C-B9D5-8EEE544AEBF8
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeer>{ 0xDE487F2C,0x5A61,0x599E,{ 0xB9,0xFF,0x0F,0xD7,0x67,0x5D,0x7A,0xF3 } }; // DE487F2C-5A61-599E-B9FF-0FD7675D7AF3
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeerFactory>{ 0xD6625BA7,0x1AE3,0x58B1,{ 0xAF,0x12,0xE5,0xCD,0x5A,0xFC,0x17,0xFF } }; // D6625BA7-1AE3-58B1-AF12-E5CD5AFC17FF
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeer>{ 0x88BB28D3,0x45ED,0x5415,{ 0x82,0x5F,0xDD,0x2D,0xA5,0x36,0xC9,0x68 } }; // 88BB28D3-45ED-5415-825F-DD2DA536C968
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeerFactory>{ 0x9B22E7EA,0x6F7A,0x5C05,{ 0x80,0x72,0x5B,0xDD,0xF5,0x4F,0x9B,0xDA } }; // 9B22E7EA-6F7A-5C05-8072-5BDDF54F9BDA
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorAutomationPeer>{ 0x00B612F4,0x8FAF,0x5C0C,{ 0x92,0xE4,0x43,0x96,0xE0,0xF7,0xB8,0xD8 } }; // 00B612F4-8FAF-5C0C-92E4-4396E0F7B8D8
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorItemAutomationPeer>{ 0x9C108861,0x895F,0x5E92,{ 0x84,0xC1,0xFF,0x12,0x07,0x2E,0x7E,0xC0 } }; // 9C108861-895F-5E92-84C1-FF12072E7EC0
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorItemDataAutomationPeer>{ 0x1F8362EB,0xA069,0x5121,{ 0xA5,0x6B,0x61,0x93,0x65,0xB4,0x51,0x5C } }; // 1F8362EB-A069-5121-A56B-619365B4515C
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeer>{ 0xF68B8CA2,0x4428,0x5C35,{ 0xB6,0xA8,0x1B,0x2E,0xA0,0x62,0xC2,0x2C } }; // F68B8CA2-4428-5C35-B6A8-1B2EA062C22C
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeerFactory>{ 0x2AE1AA11,0x7A7C,0x5580,{ 0xA7,0xD7,0xF7,0x59,0x78,0x59,0xBD,0xC2 } }; // 2AE1AA11-7A7C-5580-A7D7-F7597859BDC2
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeer>{ 0xDA850D4E,0x8715,0x5AE7,{ 0x81,0xA9,0xAB,0xD1,0x0D,0x17,0xC1,0xED } }; // DA850D4E-8715-5AE7-81A9-ABD10D17C1ED
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeerFactory>{ 0x77F281E1,0xCB51,0x5360,{ 0xB7,0x4E,0x6F,0xE4,0xF8,0xEE,0x50,0x28 } }; // 77F281E1-CB51-5360-B74E-6FE4F8EE5028
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer>{ 0xAE96E710,0xB9D3,0x59DD,{ 0x97,0x3E,0x1B,0xBC,0x86,0xCF,0x0A,0xFC } }; // AE96E710-B9D3-59DD-973E-1BBC86CF0AFC
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory>{ 0xD3E1CA3F,0x1702,0x5BD3,{ 0x8A,0xDB,0xE6,0xF6,0xCB,0x9E,0x75,0x31 } }; // D3E1CA3F-1702-5BD3-8ADB-E6F6CB9E7531
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer>{ 0x2DA890CD,0x0AAE,0x53B9,{ 0x8C,0x12,0x81,0x00,0x3F,0x60,0xED,0x14 } }; // 2DA890CD-0AAE-53B9-8C12-81003F60ED14
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory>{ 0x603B63C4,0xA626,0x50E6,{ 0x9C,0x1A,0x64,0x96,0x99,0xCA,0x7A,0xD6 } }; // 603B63C4-A626-50E6-9C1A-649699CA7AD6
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeer>{ 0xFDB57952,0x2A4F,0x5ED4,{ 0x8A,0xDA,0x32,0x0D,0xEF,0x75,0xEA,0x71 } }; // FDB57952-2A4F-5ED4-8ADA-320DEF75EA71
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeerFactory>{ 0xFE125E46,0x7C1C,0x5A7C,{ 0x98,0xE0,0xC7,0xAA,0x3A,0x00,0xA6,0xCD } }; // FE125E46-7C1C-5A7C-98E0-C7AA3A00A6CD
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeer>{ 0x74D3FF77,0x1E92,0x5F96,{ 0x99,0xA1,0x69,0x7D,0x74,0x28,0x3B,0xA7 } }; // 74D3FF77-1E92-5F96-99A1-697D74283BA7
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeerFactory>{ 0xBEADFDFC,0x1035,0x5FFD,{ 0xBA,0xE6,0x03,0xF7,0x54,0xB0,0x5D,0xCC } }; // BEADFDFC-1035-5FFD-BAE6-03F754B05DCC
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewAutomationPeer>{ 0x72013EAE,0xB015,0x550D,{ 0xBA,0x8D,0xA0,0x51,0x12,0xB6,0x27,0x31 } }; // 72013EAE-B015-550D-BA8D-A05112B62731
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewAutomationPeerFactory>{ 0x75075B03,0xA2F7,0x5869,{ 0xB2,0x3C,0x63,0xCB,0xE5,0xAC,0xC4,0x3A } }; // 75075B03-A2F7-5869-B23C-63CBE5ACC43A
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer>{ 0xC7924C7A,0x739F,0x5251,{ 0x9B,0x86,0xDF,0x64,0x86,0xEB,0x08,0xA7 } }; // C7924C7A-739F-5251-9B86-DF6486EB08A7
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory>{ 0x890516D0,0x5A62,0x528B,{ 0x88,0x73,0x4F,0x71,0x40,0xB4,0x04,0x89 } }; // 890516D0-5A62-528B-8873-4F7140B40489
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::INumberBoxAutomationPeer>{ 0x235BEFEB,0x6C98,0x5D35,{ 0xA2,0xE7,0x00,0x1E,0xAE,0x34,0x25,0x09 } }; // 235BEFEB-6C98-5D35-A2E7-001EAE342509
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::INumberBoxAutomationPeerFactory>{ 0x659719AC,0x4405,0x58F4,{ 0xBD,0xE2,0xEF,0x61,0xDF,0xE6,0x4C,0x21 } }; // 659719AC-4405-58F4-BDE2-EF61DFE64C21
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeer>{ 0x49B18DBA,0xFA3B,0x5106,{ 0xA1,0xE8,0x1A,0xAA,0x3D,0x24,0xD5,0xE1 } }; // 49B18DBA-FA3B-5106-A1E8-1AAA3D24D5E1
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeerFactory>{ 0x7B0D5CBA,0xC5B3,0x553E,{ 0x98,0x9A,0xA1,0x0E,0xE0,0x41,0x44,0xAF } }; // 7B0D5CBA-C5B3-553E-989A-A10EE04144AF
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer>{ 0x2E71779B,0xACA4,0x52C2,{ 0x8A,0x25,0xBC,0x5F,0x1E,0xE3,0xB0,0xAE } }; // 2E71779B-ACA4-52C2-8A25-BC5F1EE3B0AE
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory>{ 0xBD1709E5,0x1940,0x56FC,{ 0xB5,0xC3,0x85,0xE4,0x57,0x09,0x51,0xCC } }; // BD1709E5-1940-56FC-B5C3-85E4570951CC
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPickerFlyoutPresenterAutomationPeer>{ 0xB29F6D28,0x154B,0x5C1D,{ 0xA5,0xE8,0x98,0x60,0x4B,0xB5,0xCD,0xF6 } }; // B29F6D28-154B-5C1D-A5E8-98604BB5CDF6
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPipsPagerAutomationPeer>{ 0x93DE1BC2,0xCF84,0x5B5F,{ 0x91,0xBE,0xA7,0xC7,0x81,0xB2,0x02,0x1A } }; // 93DE1BC2-CF84-5B5F-91BE-A7C781B2021A
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPipsPagerAutomationPeerFactory>{ 0xFB5248EF,0xE835,0x5997,{ 0xBC,0x36,0xD4,0xE5,0xDB,0x4A,0x1B,0x5A } }; // FB5248EF-E835-5997-BC36-D4E5DB4A1B5A
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeer>{ 0x84225540,0xA6A3,0x5E65,{ 0xA3,0xDC,0xB3,0x1B,0x81,0xAB,0x14,0xC1 } }; // 84225540-A6A3-5E65-A3DC-B31B81AB14C1
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeerFactory>{ 0xB1DD0229,0xC14C,0x5AC0,{ 0x83,0x31,0xBE,0x24,0xFA,0x20,0x07,0xF0 } }; // B1DD0229-C14C-5AC0-8331-BE24FA2007F0
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemAutomationPeer>{ 0xBFE7FB7B,0x2D88,0x56E4,{ 0xB5,0x0F,0x0A,0x40,0xDE,0x6F,0x52,0xA1 } }; // BFE7FB7B-2D88-56E4-B50F-0A40DE6F52A1
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemAutomationPeerFactory>{ 0x14966EE7,0xAFAF,0x5FCC,{ 0x93,0x46,0xF0,0xE7,0x19,0x2C,0x22,0x0A } }; // 14966EE7-AFAF-5FCC-9346-F0E7192C220A
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeer>{ 0x6758EBEE,0xB3E0,0x5FEB,{ 0xAA,0xBA,0xB7,0xF6,0xC5,0x9F,0xE4,0x9F } }; // 6758EBEE-B3E0-5FEB-AABA-B7F6C59FE49F
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeerFactory>{ 0x26D7A6E9,0xCE6B,0x5690,{ 0x90,0x24,0x75,0xCE,0x57,0x70,0xB0,0xD6 } }; // 26D7A6E9-CE6B-5690-9024-75CE5770B0D6
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressBarAutomationPeer>{ 0x8565EAD9,0xB877,0x52C7,{ 0xA1,0x47,0x6F,0xE1,0xFE,0xE7,0x67,0xAF } }; // 8565EAD9-B877-52C7-A147-6FE1FEE767AF
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressBarAutomationPeerFactory>{ 0xCEA28C0D,0xC4B3,0x5D18,{ 0xAE,0xF6,0x95,0x80,0x31,0x39,0x58,0x78 } }; // CEA28C0D-C4B3-5D18-AEF6-958031395878
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressRingAutomationPeer>{ 0x3B6952DA,0x9E44,0x52B0,{ 0x91,0xDF,0x39,0xDA,0x9D,0xC1,0xD8,0xB0 } }; // 3B6952DA-9E44-52B0-91DF-39DA9DC1D8B0
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressRingAutomationPeerFactory>{ 0x650F375C,0x3B29,0x5376,{ 0xA7,0xF7,0xC7,0x80,0x82,0xB8,0x2D,0x13 } }; // 650F375C-3B29-5376-A7F7-C78082B82D13
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeer>{ 0xCCE147B7,0x574A,0x53B6,{ 0xA5,0xB2,0xCA,0x26,0x22,0xA7,0x9B,0x2C } }; // CCE147B7-574A-53B6-A5B2-CA2622A79B2C
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeerFactory>{ 0xCA07C7EE,0x502A,0x509E,{ 0xBC,0x44,0x68,0x2E,0x68,0x28,0xD1,0xF8 } }; // CA07C7EE-502A-509E-BC44-682E6828D1F8
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsAutomationPeer>{ 0xFFF86275,0x0CDD,0x54DB,{ 0x9D,0x88,0x9C,0x0E,0x5F,0x9B,0xCB,0x4D } }; // FFF86275-0CDD-54DB-9D88-9C0E5F9BCB4D
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsAutomationPeerFactory>{ 0xF13521D0,0x056E,0x598C,{ 0xAD,0x23,0xA7,0x15,0x00,0x49,0xD8,0x0A } }; // F13521D0-056E-598C-AD23-A7150049D80A
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeer>{ 0xB5D50512,0x70A9,0x5B27,{ 0x82,0xFE,0x16,0xF6,0xBA,0x67,0xBA,0xC5 } }; // B5D50512-70A9-5B27-82FE-16F6BA67BAC5
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeerFactory>{ 0x8C8F25E9,0x5194,0x54A9,{ 0xB7,0x87,0xCE,0x02,0x93,0xFD,0x67,0x21 } }; // 8C8F25E9-5194-54A9-B787-CE0293FD6721
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer>{ 0x55493EC4,0x926B,0x595A,{ 0x97,0xA3,0xA7,0xFA,0x60,0x41,0x88,0xA4 } }; // 55493EC4-926B-595A-97A3-A7FA604188A4
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory>{ 0xF87DACB6,0xE87E,0x59B3,{ 0x8A,0x40,0x33,0x1E,0xA7,0xAA,0x74,0x7D } }; // F87DACB6-E87E-59B3-8A40-331EA7AA747D
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeer>{ 0xE42A7CC2,0xACE8,0x56EB,{ 0x99,0x67,0x9B,0x7F,0xD1,0x57,0xC3,0x7F } }; // E42A7CC2-ACE8-56EB-9967-9B7FD157C37F
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeerFactory>{ 0x0FAD55A4,0x1C62,0x595E,{ 0xA1,0x89,0xBB,0x43,0xA2,0x19,0xC6,0x99 } }; // 0FAD55A4-1C62-595E-A189-BB43A219C699
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeer>{ 0x03F2C315,0xFB55,0x54B2,{ 0x9A,0xAD,0x97,0x23,0xAA,0xF5,0xE2,0xCF } }; // 03F2C315-FB55-54B2-9AAD-9723AAF5E2CF
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeerFactory>{ 0x04526BC7,0xFA3E,0x55FE,{ 0xA3,0x14,0x98,0x6E,0x2F,0x19,0x6A,0x2F } }; // 04526BC7-FA3E-55FE-A314-986E2F196A2F
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeer>{ 0x193A43F1,0x129D,0x57E1,{ 0xBC,0xF9,0xBA,0x96,0x6B,0xCA,0xDA,0xCB } }; // 193A43F1-129D-57E1-BCF9-BA966BCADACB
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeerFactory>{ 0x84F0D84F,0x54CA,0x58F2,{ 0xAC,0x50,0xD3,0x79,0xAA,0xB7,0x54,0x63 } }; // 84F0D84F-54CA-58F2-AC50-D379AAB75463
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeer>{ 0x7080FF80,0xB3B8,0x5D3C,{ 0x89,0xB5,0xD9,0x89,0xD5,0x61,0x19,0x2F } }; // 7080FF80-B3B8-5D3C-89B5-D989D561192F
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeerFactory>{ 0xF8A4485B,0x2895,0x5886,{ 0x8F,0xF6,0x49,0x7E,0x4F,0x1A,0x6E,0x3D } }; // F8A4485B-2895-5886-8FF6-497E4F1A6E3D
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeer>{ 0xD0BF83C0,0x8CFB,0x5770,{ 0xB2,0x6C,0x07,0x06,0xE5,0x1A,0x9A,0x3B } }; // D0BF83C0-8CFB-5770-B26C-0706E51A9A3B
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeerFactory>{ 0x3E7B3CED,0xBD1F,0x5851,{ 0x97,0xA4,0x1C,0x31,0x8F,0x60,0xD6,0x41 } }; // 3E7B3CED-BD1F-5851-97A4-1C318F60D641
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeer>{ 0x028A26C4,0x05F7,0x58B2,{ 0xA8,0x1E,0xA7,0xAC,0x03,0x2F,0x75,0x6F } }; // 028A26C4-05F7-58B2-A81E-A7AC032F756F
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeerFactory>{ 0xFC67A9CC,0xE914,0x532A,{ 0x87,0x17,0x0B,0x38,0x3E,0x21,0x57,0xF3 } }; // FC67A9CC-E914-532A-8717-0B383E2157F3
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeer>{ 0x25394BAD,0x6CA2,0x5E04,{ 0x95,0xFA,0x95,0x41,0x2C,0x1F,0x80,0xAC } }; // 25394BAD-6CA2-5E04-95FA-95412C1F80AC
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeerFactory>{ 0x3F1578F9,0x60EC,0x5F7C,{ 0x8D,0x11,0x10,0xC5,0x35,0xA7,0x5A,0x12 } }; // 3F1578F9-60EC-5F7C-8D11-10C535A75A12
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeer>{ 0x4BAC62BA,0xFB33,0x5F8B,{ 0x99,0x5E,0x0D,0xD9,0x34,0x31,0x29,0x4F } }; // 4BAC62BA-FB33-5F8B-995E-0DD93431294F
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeerFactory>{ 0xD84FE7B9,0xF5F5,0x5122,{ 0xB4,0x1C,0x55,0x75,0xA7,0x99,0xD5,0x81 } }; // D84FE7B9-F5F5-5122-B41C-5575A799D581
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeer>{ 0x70B85E53,0xE684,0x5068,{ 0x91,0xB7,0x2D,0x84,0xFE,0xA8,0xE9,0xD7 } }; // 70B85E53-E684-5068-91B7-2D84FEA8E9D7
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeerFactory>{ 0x2691E85B,0xDC9C,0x5CE6,{ 0xAE,0xC9,0x21,0xC8,0xDA,0x9A,0x4A,0xD1 } }; // 2691E85B-DC9C-5CE6-AEC9-21C8DA9A4AD1
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeer>{ 0x7D7FBD09,0x112F,0x50FD,{ 0x96,0x54,0x04,0x74,0xCE,0x76,0x0B,0x5D } }; // 7D7FBD09-112F-50FD-9654-0474CE760B5D
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeerFactory>{ 0x0572C3C2,0x87DF,0x55D6,{ 0x8F,0xCC,0x03,0x23,0x30,0x10,0x8C,0xD8 } }; // 0572C3C2-87DF-55D6-8FCC-032330108CD8
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeer>{ 0xC321C95F,0xC917,0x5714,{ 0x9D,0x16,0xAD,0x70,0x6E,0x38,0x92,0x6A } }; // C321C95F-C917-5714-9D16-AD706E38926A
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeerFactory>{ 0x81459943,0x902A,0x5FE3,{ 0x9C,0x75,0x0F,0x8B,0x11,0xF4,0x26,0x58 } }; // 81459943-902A-5FE3-9C75-0F8B11F42658
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeer>{ 0x0182661C,0x0DF3,0x5C7D,{ 0x87,0x52,0x54,0x78,0x04,0xC4,0xFA,0x44 } }; // 0182661C-0DF3-5C7D-8752-547804C4FA44
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeerFactory>{ 0xE82DDC93,0x780E,0x5000,{ 0x98,0x1E,0x9B,0xE1,0x0E,0xED,0xEB,0x1F } }; // E82DDC93-780E-5000-981E-9BE10EEDEB1F
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewAutomationPeer>{ 0xEFB3F05B,0x2A25,0x5266,{ 0xA1,0xCB,0x5A,0x0A,0xA4,0x51,0xCA,0x32 } }; // EFB3F05B-2A25-5266-A1CB-5A0AA451CA32
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewAutomationPeerFactory>{ 0xF8D8C7CB,0x47CC,0x5DA5,{ 0xBD,0x1A,0xE2,0xE1,0xBA,0x0F,0xD2,0x4D } }; // F8D8C7CB-47CC-5DA5-BD1A-E2E1BA0FD24D
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewItemAutomationPeer>{ 0x58AFB1C3,0xA3FD,0x54A1,{ 0xBE,0x39,0x32,0x8D,0xD8,0xA6,0xF8,0xEC } }; // 58AFB1C3-A3FD-54A1-BE39-328DD8A6F8EC
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewItemAutomationPeerFactory>{ 0x00218040,0x9C0D,0x5C52,{ 0xB5,0x78,0x59,0x3B,0x80,0x90,0x47,0xB3 } }; // 00218040-9C0D-5C52-B578-593B809047B3
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeer>{ 0x607994EC,0xA995,0x5B07,{ 0xB5,0x35,0x8C,0x91,0x3F,0x0B,0xC2,0x6C } }; // 607994EC-A995-5B07-B535-8C913F0BC26C
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeerFactory>{ 0x71A061C1,0x3D71,0x5548,{ 0x98,0xFD,0x62,0x16,0x7F,0x24,0x60,0x85 } }; // 71A061C1-3D71-5548-98FD-62167F246085
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeer>{ 0x29521960,0x2EF2,0x5D15,{ 0xBF,0x6A,0xCF,0x58,0x5E,0xF8,0xA5,0x71 } }; // 29521960-2EF2-5D15-BF6A-CF585EF8A571
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeerFactory>{ 0x2A04C7BB,0x6D48,0x5F8E,{ 0x96,0x22,0x54,0xDC,0xCD,0xF0,0xA5,0xCA } }; // 2A04C7BB-6D48-5F8E-9622-54DCCDF0A5CA
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeer>{ 0x9E26139A,0x0618,0x56FA,{ 0x99,0x16,0x8D,0x5E,0xDF,0x56,0x47,0x35 } }; // 9E26139A-0618-56FA-9916-8D5EDF564735
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeerFactory>{ 0x1E84AC8F,0x9974,0x5BE1,{ 0xB6,0xEA,0x84,0xF3,0x09,0xC8,0xB2,0xB8 } }; // 1E84AC8F-9974-5BE1-B6EA-84F309C8B2B8
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeer>{ 0xB05D6E5B,0x3586,0x5157,{ 0xA4,0x97,0x4F,0x15,0xB8,0x7D,0x89,0xEB } }; // B05D6E5B-3586-5157-A497-4F15B87D89EB
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeerFactory>{ 0x311B414A,0x7CC8,0x56D9,{ 0xB5,0x81,0x14,0x9C,0x8B,0xF9,0xD7,0x6D } }; // 311B414A-7CC8-56D9-B581-149C8BF9D76D
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeer>{ 0x6309D3BB,0x3387,0x5965,{ 0xAC,0xF5,0x47,0xBF,0xA9,0xB9,0x2E,0xD4 } }; // 6309D3BB-3387-5965-ACF5-47BFA9B92ED4
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeerFactory>{ 0x7CDF2F82,0x7453,0x5D86,{ 0x8E,0xE3,0x60,0xDA,0xAF,0x34,0x5F,0x47 } }; // 7CDF2F82-7453-5D86-8EE3-60DAAF345F47
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerFlyoutPresenterAutomationPeer>{ 0x2438268A,0x62E8,0x5D61,{ 0x95,0xD0,0xD3,0x6F,0x6B,0x42,0xE6,0x52 } }; // 2438268A-62E8-5D61-95D0-D36F6B42E652
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeer>{ 0x637D9B99,0xBCC2,0x5E26,{ 0xB4,0x3F,0xBA,0x6C,0x26,0xAF,0x72,0xC3 } }; // 637D9B99-BCC2-5E26-B43F-BA6C26AF72C3
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeerFactory>{ 0x2C272096,0x21E0,0x5714,{ 0x91,0x64,0x1F,0x6A,0x1E,0x0B,0x21,0x81 } }; // 2C272096-21E0-5714-9164-1F6A1E0B2181
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeer>{ 0xEA4E4C7E,0x1F12,0x56C0,{ 0xA2,0xA5,0xB5,0x9E,0x9C,0x25,0xB0,0x6D } }; // EA4E4C7E-1F12-56C0-A2A5-B59E9C25B06D
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeerFactory>{ 0x7789F700,0xD565,0x5DC7,{ 0x8B,0xCC,0xD4,0x59,0xA4,0xC0,0x8F,0xD6 } }; // 7789F700-D565-5DC7-8BCC-D459A4C08FD6
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeer>{ 0x21356952,0x4C74,0x5273,{ 0xB8,0x2D,0xE5,0xCE,0x1B,0xBC,0xD3,0x69 } }; // 21356952-4C74-5273-B82D-E5CE1BBCD369
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeerFactory>{ 0x61C214A5,0x605B,0x5E98,{ 0xB8,0x5D,0xE3,0x12,0x1D,0x23,0xED,0xAA } }; // 61C214A5-605B-5E98-B85D-E3121D23EDAA
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeer>{ 0x927D6091,0x5070,0x574F,{ 0x98,0x33,0x0E,0xF8,0x9A,0x9C,0xBB,0x4B } }; // 927D6091-5070-574F-9833-0EF89A9CBB4B
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeerFactory>{ 0x03F5E3E4,0x4B61,0x5DCF,{ 0xAF,0xDC,0xFD,0x23,0x04,0x1A,0x03,0x74 } }; // 03F5E3E4-4B61-5DCF-AFDC-FD23041A0374
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer>{ 0x25B38166,0xB905,0x5480,{ 0x84,0x39,0xE4,0x59,0xA5,0xB7,0x7B,0x8C } }; // 25B38166-B905-5480-8439-E459A5B77B8C
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory>{ 0x0C993C78,0x981F,0x5DCF,{ 0x93,0xD3,0xA2,0x17,0xAD,0x9A,0xCA,0xB6 } }; // 0C993C78-981F-5DCF-93D3-A217AD9ACAB6
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemDataAutomationPeer>{ 0x20F74F77,0xEDFA,0x5C71,{ 0x9D,0xEB,0x53,0x0D,0xCA,0xF9,0xC1,0x1D } }; // 20F74F77-EDFA-5C71-9DEB-530DCAF9C11D
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemDataAutomationPeerFactory>{ 0x07FC8E59,0x55A2,0x58AB,{ 0x89,0x21,0x91,0xE5,0x7D,0xDF,0x11,0x9F } }; // 07FC8E59-55A2-58AB-8921-91E57DDF119F
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer>{ 0x1EBF0F7F,0x6111,0x50A5,{ 0x83,0x98,0x89,0xC4,0xFD,0xD0,0xDE,0xDB } }; // 1EBF0F7F-6111-50A5-8398-89C4FDD0DEDB
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory>{ 0x51332D86,0xC414,0x5E7D,{ 0xB5,0x7B,0xE4,0x79,0x98,0x3C,0x9E,0x5D } }; // 51332D86-C414-5E7D-B57B-E479983C9E5D
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IWebView2AutomationPeer>{ 0x8E556ECA,0xB000,0x5E51,{ 0x81,0x0F,0x7B,0x7D,0x80,0xC3,0x9D,0x56 } }; // 8E556ECA-B000-5E51-810F-7B7D80C39D56
    template <> inline constexpr guid guid_v<winrt::Microsoft::UI::Xaml::Automation::Peers::IWebView2AutomationPeerFactory>{ 0x68512210,0xE61E,0x5B56,{ 0xA6,0xAF,0xC4,0xFB,0x14,0x67,0x71,0x55 } }; // 68512210-E61E-5B56-A6AF-C4FB14677155
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::AnimatedVisualPlayerAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::AppBarAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::AppBarButtonAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::AppBarToggleButtonAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::AutoSuggestBoxAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::BreadcrumbBarItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IBreadcrumbBarItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ButtonAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ButtonBaseAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::CalendarDatePickerAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::CheckBoxAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ColorPickerSliderAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ColorSpectrumAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ComboBoxAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ComboBoxItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ComboBoxItemDataAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::DatePickerAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::DatePickerFlyoutPresenterAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerFlyoutPresenterAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::DropDownButtonAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ExpanderAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IExpanderAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::FlipViewAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::FlipViewItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::FlipViewItemDataAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::FlyoutPresenterAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::FrameworkElementAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::GridViewAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::GridViewHeaderItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::GridViewItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::GridViewItemDataAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::GroupItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::HubAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::HubSectionAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::HyperlinkButtonAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ImageAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::InfoBarAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IInfoBarAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ItemContainerAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IItemContainerAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ItemsControlAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ItemsViewAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsViewAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ListBoxAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ListBoxItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ListBoxItemDataAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ListPickerFlyoutPresenterAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IListPickerFlyoutPresenterAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewBaseAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewBaseHeaderItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewHeaderItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewItemDataAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::LoopingSelectorAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::LoopingSelectorItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::LoopingSelectorItemDataAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorItemDataAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::MediaPlayerElementAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::MediaTransportControlsAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::MenuBarAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::MenuBarItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::MenuFlyoutItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::MenuFlyoutPresenterAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::NavigationViewAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::NavigationViewItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::NumberBoxAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::INumberBoxAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::PasswordBoxAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::PersonPictureAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::PickerFlyoutPresenterAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IPickerFlyoutPresenterAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::PipsPagerAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IPipsPagerAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::PivotAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::PivotItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::PivotItemDataAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ProgressBarAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressBarAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ProgressRingAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressRingAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::RadioButtonAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::RadioButtonsAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::RangeBaseAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::RatingControlAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::RepeatButtonAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::RepeaterAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::RichEditBoxAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::RichTextBlockAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::RichTextBlockOverflowAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ScrollBarAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ScrollViewerAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::SelectorAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::SelectorItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::SemanticZoomAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::SliderAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::SplitButtonAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::TabViewAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::TabViewItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::TeachingTipAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::TextBlockAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::TextBoxAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ThumbAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::TimePickerAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::TimePickerFlyoutPresenterAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerFlyoutPresenterAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ToggleButtonAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ToggleMenuFlyoutItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ToggleSplitButtonAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::ToggleSwitchAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::TreeViewItemAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::TreeViewItemDataAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemDataAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::TreeViewListAutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer; };
    template <> struct default_interface<winrt::Microsoft::UI::Xaml::Automation::Peers::WebView2AutomationPeer>{ using type = winrt::Microsoft::UI::Xaml::Automation::Peers::IWebView2AutomationPeer; };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_EventsSource(void**) noexcept = 0;
            virtual int32_t __stdcall put_EventsSource(void*) noexcept = 0;
            virtual int32_t __stdcall GetPattern(int32_t, void**) noexcept = 0;
            virtual int32_t __stdcall RaiseAutomationEvent(int32_t) noexcept = 0;
            virtual int32_t __stdcall RaisePropertyChangedEvent(void*, void*, void*) noexcept = 0;
            virtual int32_t __stdcall GetAcceleratorKey(void**) noexcept = 0;
            virtual int32_t __stdcall GetAccessKey(void**) noexcept = 0;
            virtual int32_t __stdcall GetAutomationControlType(int32_t*) noexcept = 0;
            virtual int32_t __stdcall GetAutomationId(void**) noexcept = 0;
            virtual int32_t __stdcall GetBoundingRectangle(winrt::Windows::Foundation::Rect*) noexcept = 0;
            virtual int32_t __stdcall GetChildren(void**) noexcept = 0;
            virtual int32_t __stdcall Navigate(int32_t, void**) noexcept = 0;
            virtual int32_t __stdcall GetClassName(void**) noexcept = 0;
            virtual int32_t __stdcall GetClickablePoint(winrt::Windows::Foundation::Point*) noexcept = 0;
            virtual int32_t __stdcall GetHelpText(void**) noexcept = 0;
            virtual int32_t __stdcall GetItemStatus(void**) noexcept = 0;
            virtual int32_t __stdcall GetItemType(void**) noexcept = 0;
            virtual int32_t __stdcall GetLabeledBy(void**) noexcept = 0;
            virtual int32_t __stdcall GetLocalizedControlType(void**) noexcept = 0;
            virtual int32_t __stdcall GetName(void**) noexcept = 0;
            virtual int32_t __stdcall GetOrientation(int32_t*) noexcept = 0;
            virtual int32_t __stdcall HasKeyboardFocus(bool*) noexcept = 0;
            virtual int32_t __stdcall IsContentElement(bool*) noexcept = 0;
            virtual int32_t __stdcall IsControlElement(bool*) noexcept = 0;
            virtual int32_t __stdcall IsEnabled(bool*) noexcept = 0;
            virtual int32_t __stdcall IsKeyboardFocusable(bool*) noexcept = 0;
            virtual int32_t __stdcall IsOffscreen(bool*) noexcept = 0;
            virtual int32_t __stdcall IsPassword(bool*) noexcept = 0;
            virtual int32_t __stdcall IsRequiredForForm(bool*) noexcept = 0;
            virtual int32_t __stdcall SetFocus() noexcept = 0;
            virtual int32_t __stdcall GetParent(void**) noexcept = 0;
            virtual int32_t __stdcall InvalidatePeer() noexcept = 0;
            virtual int32_t __stdcall GetPeerFromPoint(winrt::Windows::Foundation::Point, void**) noexcept = 0;
            virtual int32_t __stdcall GetElementFromPoint(winrt::Windows::Foundation::Point, void**) noexcept = 0;
            virtual int32_t __stdcall GetFocusedElement(void**) noexcept = 0;
            virtual int32_t __stdcall GetLiveSetting(int32_t*) noexcept = 0;
            virtual int32_t __stdcall ShowContextMenu() noexcept = 0;
            virtual int32_t __stdcall GetControlledPeers(void**) noexcept = 0;
            virtual int32_t __stdcall GetAnnotations(void**) noexcept = 0;
            virtual int32_t __stdcall SetParent(void*) noexcept = 0;
            virtual int32_t __stdcall RaiseTextEditTextChangedEvent(int32_t, void*) noexcept = 0;
            virtual int32_t __stdcall GetPositionInSet(int32_t*) noexcept = 0;
            virtual int32_t __stdcall GetSizeOfSet(int32_t*) noexcept = 0;
            virtual int32_t __stdcall GetLevel(int32_t*) noexcept = 0;
            virtual int32_t __stdcall RaiseStructureChangedEvent(int32_t, void*) noexcept = 0;
            virtual int32_t __stdcall GetLandmarkType(int32_t*) noexcept = 0;
            virtual int32_t __stdcall GetLocalizedLandmarkType(void**) noexcept = 0;
            virtual int32_t __stdcall IsPeripheral(bool*) noexcept = 0;
            virtual int32_t __stdcall IsDataValidForForm(bool*) noexcept = 0;
            virtual int32_t __stdcall GetFullDescription(void**) noexcept = 0;
            virtual int32_t __stdcall GetCulture(int32_t*) noexcept = 0;
            virtual int32_t __stdcall RaiseNotificationEvent(int32_t, int32_t, void*, void*) noexcept = 0;
            virtual int32_t __stdcall GetHeadingLevel(int32_t*) noexcept = 0;
            virtual int32_t __stdcall IsDialog(bool*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Type(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_Type(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_Peer(void**) noexcept = 0;
            virtual int32_t __stdcall put_Peer(void*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotationFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(int32_t, void**) noexcept = 0;
            virtual int32_t __stdcall CreateWithPeerParameter(int32_t, void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotationStatics>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_TypeProperty(void**) noexcept = 0;
            virtual int32_t __stdcall get_PeerProperty(void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerOverrides>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GetPatternCore(int32_t, void**) noexcept = 0;
            virtual int32_t __stdcall GetAcceleratorKeyCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetAccessKeyCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetAutomationControlTypeCore(int32_t*) noexcept = 0;
            virtual int32_t __stdcall GetAutomationIdCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetBoundingRectangleCore(winrt::Windows::Foundation::Rect*) noexcept = 0;
            virtual int32_t __stdcall GetChildrenCore(void**) noexcept = 0;
            virtual int32_t __stdcall NavigateCore(int32_t, void**) noexcept = 0;
            virtual int32_t __stdcall GetClassNameCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetClickablePointCore(winrt::Windows::Foundation::Point*) noexcept = 0;
            virtual int32_t __stdcall GetHelpTextCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetItemStatusCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetItemTypeCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetLabeledByCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetLocalizedControlTypeCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetNameCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetOrientationCore(int32_t*) noexcept = 0;
            virtual int32_t __stdcall HasKeyboardFocusCore(bool*) noexcept = 0;
            virtual int32_t __stdcall IsContentElementCore(bool*) noexcept = 0;
            virtual int32_t __stdcall IsControlElementCore(bool*) noexcept = 0;
            virtual int32_t __stdcall IsEnabledCore(bool*) noexcept = 0;
            virtual int32_t __stdcall IsKeyboardFocusableCore(bool*) noexcept = 0;
            virtual int32_t __stdcall IsOffscreenCore(bool*) noexcept = 0;
            virtual int32_t __stdcall IsPasswordCore(bool*) noexcept = 0;
            virtual int32_t __stdcall IsRequiredForFormCore(bool*) noexcept = 0;
            virtual int32_t __stdcall SetFocusCore() noexcept = 0;
            virtual int32_t __stdcall GetPeerFromPointCore(winrt::Windows::Foundation::Point, void**) noexcept = 0;
            virtual int32_t __stdcall GetElementFromPointCore(winrt::Windows::Foundation::Point, void**) noexcept = 0;
            virtual int32_t __stdcall GetFocusedElementCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetLiveSettingCore(int32_t*) noexcept = 0;
            virtual int32_t __stdcall ShowContextMenuCore() noexcept = 0;
            virtual int32_t __stdcall GetControlledPeersCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetAnnotationsCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetPositionInSetCore(int32_t*) noexcept = 0;
            virtual int32_t __stdcall GetSizeOfSetCore(int32_t*) noexcept = 0;
            virtual int32_t __stdcall GetLevelCore(int32_t*) noexcept = 0;
            virtual int32_t __stdcall GetLandmarkTypeCore(int32_t*) noexcept = 0;
            virtual int32_t __stdcall GetLocalizedLandmarkTypeCore(void**) noexcept = 0;
            virtual int32_t __stdcall IsPeripheralCore(bool*) noexcept = 0;
            virtual int32_t __stdcall IsDataValidForFormCore(bool*) noexcept = 0;
            virtual int32_t __stdcall GetFullDescriptionCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetDescribedByCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetFlowsToCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetFlowsFromCore(void**) noexcept = 0;
            virtual int32_t __stdcall GetCultureCore(int32_t*) noexcept = 0;
            virtual int32_t __stdcall GetHeadingLevelCore(int32_t*) noexcept = 0;
            virtual int32_t __stdcall IsDialogCore(bool*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerProtected>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall PeerFromProvider(void*, void**) noexcept = 0;
            virtual int32_t __stdcall ProviderFromPeer(void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerStatics>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall ListenerExists(int32_t, bool*) noexcept = 0;
            virtual int32_t __stdcall GenerateRawElementProviderRuntimeId(struct struct_Microsoft_UI_Xaml_Automation_Peers_RawElementProviderRuntimeId*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IBreadcrumbBarItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IBreadcrumbBarItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithParentAndItem(void*, void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerFlyoutPresenterAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IExpanderAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IExpanderAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithParentAndItem(void*, void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Owner(void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeerStatics>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall FromElement(void*, void**) noexcept = 0;
            virtual int32_t __stdcall CreatePeerForElement(void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithParentAndItem(void*, void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IInfoBarAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IInfoBarAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Item(void**) noexcept = 0;
            virtual int32_t __stdcall get_ItemsControlAutomationPeer(void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithParentAndItem(void*, void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemContainerAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemContainerAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateItemAutomationPeer(void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeerOverrides>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall OnCreateItemAutomationPeer(void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsViewAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsViewAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithParentAndItem(void*, void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListPickerFlyoutPresenterAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithParentAndItem(void*, void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorItemDataAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::INumberBoxAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::INumberBoxAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IPickerFlyoutPresenterAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IPipsPagerAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IPipsPagerAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithParentAndItem(void*, void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressBarAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressBarAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressRingAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressRingAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithParentAndItem(void*, void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerFlyoutPresenterAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemDataAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemDataAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstanceWithOwner(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IWebView2AutomationPeer>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::UI::Xaml::Automation::Peers::IWebView2AutomationPeerFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void**, void**) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::AnimatedVisualPlayer const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::AppBar const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::AppBarButton const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::AppBarToggleButton const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::AutoSuggestBox const& owner) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer
    {
        [[nodiscard]] auto EventsSource() const;
        auto EventsSource(winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer const& value) const;
        auto GetPattern(winrt::Microsoft::UI::Xaml::Automation::Peers::PatternInterface const& patternInterface) const;
        auto RaiseAutomationEvent(winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationEvents const& eventId) const;
        auto RaisePropertyChangedEvent(winrt::Microsoft::UI::Xaml::Automation::AutomationProperty const& automationProperty, winrt::Windows::Foundation::IInspectable const& oldValue, winrt::Windows::Foundation::IInspectable const& newValue) const;
        auto GetAcceleratorKey() const;
        auto GetAccessKey() const;
        auto GetAutomationControlType() const;
        auto GetAutomationId() const;
        auto GetBoundingRectangle() const;
        auto GetChildren() const;
        auto Navigate(winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationNavigationDirection const& direction) const;
        auto GetClassName() const;
        auto GetClickablePoint() const;
        auto GetHelpText() const;
        auto GetItemStatus() const;
        auto GetItemType() const;
        auto GetLabeledBy() const;
        auto GetLocalizedControlType() const;
        auto GetName() const;
        auto GetOrientation() const;
        auto HasKeyboardFocus() const;
        auto IsContentElement() const;
        auto IsControlElement() const;
        auto IsEnabled() const;
        auto IsKeyboardFocusable() const;
        auto IsOffscreen() const;
        auto IsPassword() const;
        auto IsRequiredForForm() const;
        auto SetFocus() const;
        auto GetParent() const;
        auto InvalidatePeer() const;
        auto GetPeerFromPoint(winrt::Windows::Foundation::Point const& point) const;
        auto GetElementFromPoint(winrt::Windows::Foundation::Point const& pointInWindowCoordinates) const;
        auto GetFocusedElement() const;
        auto GetLiveSetting() const;
        auto ShowContextMenu() const;
        auto GetControlledPeers() const;
        auto GetAnnotations() const;
        auto SetParent(winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer const& peer) const;
        auto RaiseTextEditTextChangedEvent(winrt::Microsoft::UI::Xaml::Automation::AutomationTextEditChangeType const& automationTextEditChangeType, param::vector_view<hstring> const& changedData) const;
        auto GetPositionInSet() const;
        auto GetSizeOfSet() const;
        auto GetLevel() const;
        auto RaiseStructureChangedEvent(winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationStructureChangeType const& structureChangeType, winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer const& child) const;
        auto GetLandmarkType() const;
        auto GetLocalizedLandmarkType() const;
        auto IsPeripheral() const;
        auto IsDataValidForForm() const;
        auto GetFullDescription() const;
        auto GetCulture() const;
        auto RaiseNotificationEvent(winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationKind const& notificationKind, winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationProcessing const& notificationProcessing, param::hstring const& displayString, param::hstring const& activityId) const;
        auto GetHeadingLevel() const;
        auto IsDialog() const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation
    {
        [[nodiscard]] auto Type() const;
        auto Type(winrt::Microsoft::UI::Xaml::Automation::AnnotationType const& value) const;
        [[nodiscard]] auto Peer() const;
        auto Peer(winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer const& value) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Automation::AnnotationType const& type) const;
        auto CreateWithPeerParameter(winrt::Microsoft::UI::Xaml::Automation::AnnotationType const& type, winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer const& peer) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotationFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationStatics
    {
        [[nodiscard]] auto TypeProperty() const;
        [[nodiscard]] auto PeerProperty() const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotationStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerFactory
    {
        auto CreateInstance(winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides
    {
        auto GetPatternCore(winrt::Microsoft::UI::Xaml::Automation::Peers::PatternInterface const& patternInterface) const;
        auto GetAcceleratorKeyCore() const;
        auto GetAccessKeyCore() const;
        auto GetAutomationControlTypeCore() const;
        auto GetAutomationIdCore() const;
        auto GetBoundingRectangleCore() const;
        auto GetChildrenCore() const;
        auto NavigateCore(winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationNavigationDirection const& direction) const;
        auto GetClassNameCore() const;
        auto GetClickablePointCore() const;
        auto GetHelpTextCore() const;
        auto GetItemStatusCore() const;
        auto GetItemTypeCore() const;
        auto GetLabeledByCore() const;
        auto GetLocalizedControlTypeCore() const;
        auto GetNameCore() const;
        auto GetOrientationCore() const;
        auto HasKeyboardFocusCore() const;
        auto IsContentElementCore() const;
        auto IsControlElementCore() const;
        auto IsEnabledCore() const;
        auto IsKeyboardFocusableCore() const;
        auto IsOffscreenCore() const;
        auto IsPasswordCore() const;
        auto IsRequiredForFormCore() const;
        auto SetFocusCore() const;
        auto GetPeerFromPointCore(winrt::Windows::Foundation::Point const& point) const;
        auto GetElementFromPointCore(winrt::Windows::Foundation::Point const& pointInWindowCoordinates) const;
        auto GetFocusedElementCore() const;
        auto GetLiveSettingCore() const;
        auto ShowContextMenuCore() const;
        auto GetControlledPeersCore() const;
        auto GetAnnotationsCore() const;
        auto GetPositionInSetCore() const;
        auto GetSizeOfSetCore() const;
        auto GetLevelCore() const;
        auto GetLandmarkTypeCore() const;
        auto GetLocalizedLandmarkTypeCore() const;
        auto IsPeripheralCore() const;
        auto IsDataValidForFormCore() const;
        auto GetFullDescriptionCore() const;
        auto GetDescribedByCore() const;
        auto GetFlowsToCore() const;
        auto GetFlowsFromCore() const;
        auto GetCultureCore() const;
        auto GetHeadingLevelCore() const;
        auto IsDialogCore() const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerOverrides>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerProtected
    {
        auto PeerFromProvider(winrt::Microsoft::UI::Xaml::Automation::Provider::IRawElementProviderSimple const& provider) const;
        auto ProviderFromPeer(winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer const& peer) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerProtected>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerProtected<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerStatics
    {
        auto ListenerExists(winrt::Microsoft::UI::Xaml::Automation::Peers::AutomationEvents const& eventId) const;
        auto GenerateRawElementProviderRuntimeId() const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IBreadcrumbBarItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::BreadcrumbBarItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IBreadcrumbBarItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::Button const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::Primitives::ButtonBase const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::CalendarDatePicker const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::CheckBox const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::Primitives::ColorPickerSlider const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::ComboBox const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::ComboBoxItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeerFactory
    {
        auto CreateInstanceWithParentAndItem(winrt::Windows::Foundation::IInspectable const& item, winrt::Microsoft::UI::Xaml::Automation::Peers::ComboBoxAutomationPeer const& parent, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::DatePicker const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IDatePickerFlyoutPresenterAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IDatePickerFlyoutPresenterAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IDatePickerFlyoutPresenterAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::DropDownButton const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IExpanderAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::Expander const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IExpanderAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::FlipView const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::FlipViewItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeerFactory
    {
        auto CreateInstanceWithParentAndItem(winrt::Windows::Foundation::IInspectable const& item, winrt::Microsoft::UI::Xaml::Automation::Peers::FlipViewAutomationPeer const& parent, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::FlyoutPresenter const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeer
    {
        [[nodiscard]] auto Owner() const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::FrameworkElement const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerStatics
    {
        auto FromElement(winrt::Microsoft::UI::Xaml::UIElement const& element) const;
        auto CreatePeerForElement(winrt::Microsoft::UI::Xaml::UIElement const& element) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeerStatics>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::GridView const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::GridViewHeaderItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::GridViewItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeerFactory
    {
        auto CreateInstanceWithParentAndItem(winrt::Windows::Foundation::IInspectable const& item, winrt::Microsoft::UI::Xaml::Automation::Peers::GridViewAutomationPeer const& parent, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::GroupItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::Hub const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::HubSection const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::HyperlinkButton const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::Image const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IInfoBarAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::InfoBar const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IInfoBarAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeer
    {
        [[nodiscard]] auto Item() const;
        [[nodiscard]] auto ItemsControlAutomationPeer() const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeerFactory
    {
        auto CreateInstanceWithParentAndItem(winrt::Windows::Foundation::IInspectable const& item, winrt::Microsoft::UI::Xaml::Automation::Peers::ItemsControlAutomationPeer const& parent, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemContainerAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::ItemContainer const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemContainerAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IItemContainerAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeer
    {
        auto CreateItemAutomationPeer(winrt::Windows::Foundation::IInspectable const& item) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::ItemsControl const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerOverrides
    {
        auto OnCreateItemAutomationPeer(winrt::Windows::Foundation::IInspectable const& item) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeerOverrides>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerOverrides<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsViewAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::ItemsView const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IItemsViewAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IItemsViewAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::ListBox const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::ListBoxItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeerFactory
    {
        auto CreateInstanceWithParentAndItem(winrt::Windows::Foundation::IInspectable const& item, winrt::Microsoft::UI::Xaml::Automation::Peers::ListBoxAutomationPeer const& parent, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListPickerFlyoutPresenterAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListPickerFlyoutPresenterAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListPickerFlyoutPresenterAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::ListView const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::ListViewBase const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::ListViewBaseHeaderItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::ListViewHeaderItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::ListViewItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeerFactory
    {
        auto CreateInstanceWithParentAndItem(winrt::Windows::Foundation::IInspectable const& item, winrt::Microsoft::UI::Xaml::Automation::Peers::ListViewBaseAutomationPeer const& parent, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorItemDataAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorItemDataAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorItemDataAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::MediaPlayerElement const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::MediaTransportControls const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::MenuBar const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::MenuBarItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::MenuFlyoutItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::MenuFlyoutPresenter const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::NavigationView const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::NavigationViewItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::INumberBoxAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::NumberBox const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::INumberBoxAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::PasswordBox const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::PersonPicture const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IPickerFlyoutPresenterAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IPickerFlyoutPresenterAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPickerFlyoutPresenterAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IPipsPagerAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::PipsPager const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IPipsPagerAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IPivotAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPivotAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IPivotAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::Pivot const& owner) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPivotAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IPivotItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPivotItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IPivotItemAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::PivotItem const& owner) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPivotItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeerFactory
    {
        auto CreateInstanceWithParentAndItem(winrt::Windows::Foundation::IInspectable const& item, winrt::Microsoft::UI::Xaml::Automation::Peers::PivotAutomationPeer const& parent) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressBarAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::ProgressBar const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressBarAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressRingAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::ProgressRing const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IProgressRingAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::RadioButton const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::RadioButtons const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::Primitives::RangeBase const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::RatingControl const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::Primitives::RepeatButton const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::ItemsRepeater const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::RichEditBox const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::RichTextBlock const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::RichTextBlockOverflow const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::Primitives::ScrollBar const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::ScrollViewer const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::Primitives::Selector const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeerFactory
    {
        auto CreateInstanceWithParentAndItem(winrt::Windows::Foundation::IInspectable const& item, winrt::Microsoft::UI::Xaml::Automation::Peers::SelectorAutomationPeer const& parent, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::SemanticZoom const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::Slider const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::SplitButton const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::TabView const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::TabViewItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITabViewItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::TeachingTip const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::TextBlock const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::TextBox const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::Primitives::Thumb const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::TimePicker const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITimePickerFlyoutPresenterAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITimePickerFlyoutPresenterAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITimePickerFlyoutPresenterAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::Primitives::ToggleButton const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::ToggleMenuFlyoutItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::ToggleSplitButton const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::ToggleSwitch const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::TreeViewItem const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemDataAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Windows::Foundation::IInspectable const& item, winrt::Microsoft::UI::Xaml::Automation::Peers::TreeViewListAutomationPeer const& parent, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemDataAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeerFactory
    {
        auto CreateInstanceWithOwner(winrt::Microsoft::UI::Xaml::Controls::TreeViewList const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeerFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeer
    {
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IWebView2AutomationPeer>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeer<D>;
    };
    template <typename D>
    struct consume_Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeerFactory
    {
        auto CreateInstance(winrt::Microsoft::UI::Xaml::Controls::WebView2 const& owner, winrt::Windows::Foundation::IInspectable const& baseInterface, winrt::Windows::Foundation::IInspectable& innerInterface) const;
    };
    template <> struct consume<winrt::Microsoft::UI::Xaml::Automation::Peers::IWebView2AutomationPeerFactory>
    {
        template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeerFactory<D>;
    };
    struct struct_Microsoft_UI_Xaml_Automation_Peers_RawElementProviderRuntimeId
    {
        uint32_t Part1;
        uint32_t Part2;
    };
    template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::RawElementProviderRuntimeId>
    {
        using type = struct_Microsoft_UI_Xaml_Automation_Peers_RawElementProviderRuntimeId;
    };
}
#endif
