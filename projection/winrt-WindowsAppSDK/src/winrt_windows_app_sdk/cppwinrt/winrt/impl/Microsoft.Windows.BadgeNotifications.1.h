// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240111.5

#pragma once
#ifndef WINRT_Microsoft_Windows_BadgeNotifications_1_H
#define WINRT_Microsoft_Windows_BadgeNotifications_1_H
#include "winrt/impl/Microsoft.Windows.BadgeNotifications.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::BadgeNotifications
{
    struct WINRT_IMPL_EMPTY_BASES IBadgeNotificationManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBadgeNotificationManager>
    {
        IBadgeNotificationManager(std::nullptr_t = nullptr) noexcept {}
        IBadgeNotificationManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBadgeNotificationManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBadgeNotificationManagerStatics>
    {
        IBadgeNotificationManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IBadgeNotificationManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
