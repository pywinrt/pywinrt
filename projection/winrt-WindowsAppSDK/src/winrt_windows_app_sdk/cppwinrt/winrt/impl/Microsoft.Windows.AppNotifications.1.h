// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.230706.1

#pragma once
#ifndef WINRT_Microsoft_Windows_AppNotifications_1_H
#define WINRT_Microsoft_Windows_AppNotifications_1_H
#include "winrt/impl/Microsoft.Windows.AppNotifications.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::AppNotifications
{
    struct WINRT_IMPL_EMPTY_BASES IAppNotification :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotification>
    {
        IAppNotification(std::nullptr_t = nullptr) noexcept {}
        IAppNotification(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppNotificationActivatedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationActivatedEventArgs>
    {
        IAppNotificationActivatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationActivatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppNotificationActivatedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationActivatedEventArgs2>
    {
        IAppNotificationActivatedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationActivatedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppNotificationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationFactory>
    {
        IAppNotificationFactory(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppNotificationManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationManager>
    {
        IAppNotificationManager(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppNotificationManager2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationManager2>
    {
        IAppNotificationManager2(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationManager2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppNotificationManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationManagerStatics>
    {
        IAppNotificationManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppNotificationManagerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationManagerStatics2>
    {
        IAppNotificationManagerStatics2(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationManagerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppNotificationProgressData :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationProgressData>
    {
        IAppNotificationProgressData(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationProgressData(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppNotificationProgressDataFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationProgressDataFactory>
    {
        IAppNotificationProgressDataFactory(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationProgressDataFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
