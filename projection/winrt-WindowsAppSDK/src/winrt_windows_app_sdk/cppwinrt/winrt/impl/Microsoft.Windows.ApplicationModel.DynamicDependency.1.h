// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.230706.1

#pragma once
#ifndef WINRT_Microsoft_Windows_ApplicationModel_DynamicDependency_1_H
#define WINRT_Microsoft_Windows_ApplicationModel_DynamicDependency_1_H
#include "winrt/impl/Microsoft.Windows.ApplicationModel.DynamicDependency.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::ApplicationModel::DynamicDependency
{
    struct WINRT_IMPL_EMPTY_BASES IAddPackageDependencyOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAddPackageDependencyOptions>
    {
        IAddPackageDependencyOptions(std::nullptr_t = nullptr) noexcept {}
        IAddPackageDependencyOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICreatePackageDependencyOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICreatePackageDependencyOptions>
    {
        ICreatePackageDependencyOptions(std::nullptr_t = nullptr) noexcept {}
        ICreatePackageDependencyOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPackageDependency :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageDependency>
    {
        IPackageDependency(std::nullptr_t = nullptr) noexcept {}
        IPackageDependency(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPackageDependencyContext :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageDependencyContext>
    {
        IPackageDependencyContext(std::nullptr_t = nullptr) noexcept {}
        IPackageDependencyContext(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPackageDependencyContextFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageDependencyContextFactory>
    {
        IPackageDependencyContextFactory(std::nullptr_t = nullptr) noexcept {}
        IPackageDependencyContextFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPackageDependencyRankStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageDependencyRankStatics>
    {
        IPackageDependencyRankStatics(std::nullptr_t = nullptr) noexcept {}
        IPackageDependencyRankStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPackageDependencyStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageDependencyStatics>
    {
        IPackageDependencyStatics(std::nullptr_t = nullptr) noexcept {}
        IPackageDependencyStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPackageDependencyStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageDependencyStatics2>
    {
        IPackageDependencyStatics2(std::nullptr_t = nullptr) noexcept {}
        IPackageDependencyStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
