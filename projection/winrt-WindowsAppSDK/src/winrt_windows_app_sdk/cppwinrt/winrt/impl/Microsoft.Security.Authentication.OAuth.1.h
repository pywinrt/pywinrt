// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240111.5

#pragma once
#ifndef WINRT_Microsoft_Security_Authentication_OAuth_1_H
#define WINRT_Microsoft_Security_Authentication_OAuth_1_H
#include "winrt/impl/Microsoft.Security.Authentication.OAuth.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Security::Authentication::OAuth
{
    struct WINRT_IMPL_EMPTY_BASES IAuthFailure :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAuthFailure>
    {
        IAuthFailure(std::nullptr_t = nullptr) noexcept {}
        IAuthFailure(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAuthRequestParams :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAuthRequestParams>
    {
        IAuthRequestParams(std::nullptr_t = nullptr) noexcept {}
        IAuthRequestParams(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAuthRequestParamsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAuthRequestParamsFactory>
    {
        IAuthRequestParamsFactory(std::nullptr_t = nullptr) noexcept {}
        IAuthRequestParamsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAuthRequestParamsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAuthRequestParamsStatics>
    {
        IAuthRequestParamsStatics(std::nullptr_t = nullptr) noexcept {}
        IAuthRequestParamsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAuthRequestResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAuthRequestResult>
    {
        IAuthRequestResult(std::nullptr_t = nullptr) noexcept {}
        IAuthRequestResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAuthResponse :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAuthResponse>
    {
        IAuthResponse(std::nullptr_t = nullptr) noexcept {}
        IAuthResponse(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IClientAuthentication :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClientAuthentication>
    {
        IClientAuthentication(std::nullptr_t = nullptr) noexcept {}
        IClientAuthentication(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IClientAuthenticationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClientAuthenticationFactory>
    {
        IClientAuthenticationFactory(std::nullptr_t = nullptr) noexcept {}
        IClientAuthenticationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IClientAuthenticationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IClientAuthenticationStatics>
    {
        IClientAuthenticationStatics(std::nullptr_t = nullptr) noexcept {}
        IClientAuthenticationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IOAuth2ManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IOAuth2ManagerStatics>
    {
        IOAuth2ManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IOAuth2ManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITokenFailure :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITokenFailure>
    {
        ITokenFailure(std::nullptr_t = nullptr) noexcept {}
        ITokenFailure(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITokenRequestParams :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITokenRequestParams>
    {
        ITokenRequestParams(std::nullptr_t = nullptr) noexcept {}
        ITokenRequestParams(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITokenRequestParamsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITokenRequestParamsFactory>
    {
        ITokenRequestParamsFactory(std::nullptr_t = nullptr) noexcept {}
        ITokenRequestParamsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITokenRequestParamsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITokenRequestParamsStatics>
    {
        ITokenRequestParamsStatics(std::nullptr_t = nullptr) noexcept {}
        ITokenRequestParamsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITokenRequestResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITokenRequestResult>
    {
        ITokenRequestResult(std::nullptr_t = nullptr) noexcept {}
        ITokenRequestResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITokenResponse :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITokenResponse>
    {
        ITokenResponse(std::nullptr_t = nullptr) noexcept {}
        ITokenResponse(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
