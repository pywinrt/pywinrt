// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.230706.1

#pragma once
#ifndef WINRT_Microsoft_UI_Input_1_H
#define WINRT_Microsoft_UI_Input_1_H
#include "winrt/impl/Microsoft.UI.Input.0.h"
WINRT_EXPORT namespace winrt::Microsoft::UI::Input
{
    struct WINRT_IMPL_EMPTY_BASES ICharacterReceivedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICharacterReceivedEventArgs>
    {
        ICharacterReceivedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICharacterReceivedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContextMenuKeyEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContextMenuKeyEventArgs>
    {
        IContextMenuKeyEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContextMenuKeyEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICrossSlidingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICrossSlidingEventArgs>
    {
        ICrossSlidingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICrossSlidingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDraggingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDraggingEventArgs>
    {
        IDraggingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDraggingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFocusChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusChangedEventArgs>
    {
        IFocusChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IFocusChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGestureRecognizer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGestureRecognizer>
    {
        IGestureRecognizer(std::nullptr_t = nullptr) noexcept {}
        IGestureRecognizer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHoldingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHoldingEventArgs>
    {
        IHoldingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IHoldingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputActivationListener :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputActivationListener>
    {
        IInputActivationListener(std::nullptr_t = nullptr) noexcept {}
        IInputActivationListener(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputActivationListenerActivationChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputActivationListenerActivationChangedEventArgs>
    {
        IInputActivationListenerActivationChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IInputActivationListenerActivationChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputActivationListenerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputActivationListenerStatics>
    {
        IInputActivationListenerStatics(std::nullptr_t = nullptr) noexcept {}
        IInputActivationListenerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputActivationListenerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputActivationListenerStatics2>
    {
        IInputActivationListenerStatics2(std::nullptr_t = nullptr) noexcept {}
        IInputActivationListenerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputCursor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputCursor>
    {
        IInputCursor(std::nullptr_t = nullptr) noexcept {}
        IInputCursor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputCursorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputCursorFactory>
    {
        IInputCursorFactory(std::nullptr_t = nullptr) noexcept {}
        IInputCursorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputCursorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputCursorStatics>
    {
        IInputCursorStatics(std::nullptr_t = nullptr) noexcept {}
        IInputCursorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputCustomCursor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputCustomCursor>
    {
        IInputCustomCursor(std::nullptr_t = nullptr) noexcept {}
        IInputCustomCursor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputCustomCursorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputCustomCursorFactory>
    {
        IInputCustomCursorFactory(std::nullptr_t = nullptr) noexcept {}
        IInputCustomCursorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputDesktopNamedResourceCursor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputDesktopNamedResourceCursor>
    {
        IInputDesktopNamedResourceCursor(std::nullptr_t = nullptr) noexcept {}
        IInputDesktopNamedResourceCursor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputDesktopNamedResourceCursorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputDesktopNamedResourceCursorStatics>
    {
        IInputDesktopNamedResourceCursorStatics(std::nullptr_t = nullptr) noexcept {}
        IInputDesktopNamedResourceCursorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputDesktopResourceCursor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputDesktopResourceCursor>
    {
        IInputDesktopResourceCursor(std::nullptr_t = nullptr) noexcept {}
        IInputDesktopResourceCursor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputDesktopResourceCursorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputDesktopResourceCursorStatics>
    {
        IInputDesktopResourceCursorStatics(std::nullptr_t = nullptr) noexcept {}
        IInputDesktopResourceCursorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputFocusChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputFocusChangedEventArgs>
    {
        IInputFocusChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IInputFocusChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputFocusController :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputFocusController>
    {
        IInputFocusController(std::nullptr_t = nullptr) noexcept {}
        IInputFocusController(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputFocusControllerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputFocusControllerStatics>
    {
        IInputFocusControllerStatics(std::nullptr_t = nullptr) noexcept {}
        IInputFocusControllerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputKeyboardSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputKeyboardSource>
    {
        IInputKeyboardSource(std::nullptr_t = nullptr) noexcept {}
        IInputKeyboardSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputKeyboardSource2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputKeyboardSource2>
    {
        IInputKeyboardSource2(std::nullptr_t = nullptr) noexcept {}
        IInputKeyboardSource2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputKeyboardSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputKeyboardSourceStatics>
    {
        IInputKeyboardSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IInputKeyboardSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputKeyboardSourceStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputKeyboardSourceStatics2>
    {
        IInputKeyboardSourceStatics2(std::nullptr_t = nullptr) noexcept {}
        IInputKeyboardSourceStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputLightDismissAction :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputLightDismissAction>
    {
        IInputLightDismissAction(std::nullptr_t = nullptr) noexcept {}
        IInputLightDismissAction(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputLightDismissActionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputLightDismissActionStatics>
    {
        IInputLightDismissActionStatics(std::nullptr_t = nullptr) noexcept {}
        IInputLightDismissActionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputLightDismissEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputLightDismissEventArgs>
    {
        IInputLightDismissEventArgs(std::nullptr_t = nullptr) noexcept {}
        IInputLightDismissEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputNonClientPointerSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputNonClientPointerSource>
    {
        IInputNonClientPointerSource(std::nullptr_t = nullptr) noexcept {}
        IInputNonClientPointerSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputNonClientPointerSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputNonClientPointerSourceStatics>
    {
        IInputNonClientPointerSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IInputNonClientPointerSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputObject :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputObject>
    {
        IInputObject(std::nullptr_t = nullptr) noexcept {}
        IInputObject(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputObjectFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputObjectFactory>
    {
        IInputObjectFactory(std::nullptr_t = nullptr) noexcept {}
        IInputObjectFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputPointerSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputPointerSource>
    {
        IInputPointerSource(std::nullptr_t = nullptr) noexcept {}
        IInputPointerSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputPointerSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputPointerSourceStatics>
    {
        IInputPointerSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IInputPointerSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputPreTranslateKeyboardSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputPreTranslateKeyboardSource>
    {
        IInputPreTranslateKeyboardSource(std::nullptr_t = nullptr) noexcept {}
        IInputPreTranslateKeyboardSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputPreTranslateKeyboardSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputPreTranslateKeyboardSourceStatics>
    {
        IInputPreTranslateKeyboardSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IInputPreTranslateKeyboardSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputSystemCursor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputSystemCursor>
    {
        IInputSystemCursor(std::nullptr_t = nullptr) noexcept {}
        IInputSystemCursor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInputSystemCursorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInputSystemCursorStatics>
    {
        IInputSystemCursorStatics(std::nullptr_t = nullptr) noexcept {}
        IInputSystemCursorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IKeyEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyEventArgs>
    {
        IKeyEventArgs(std::nullptr_t = nullptr) noexcept {}
        IKeyEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IManipulationCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationCompletedEventArgs>
    {
        IManipulationCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IManipulationCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IManipulationInertiaStartingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationInertiaStartingEventArgs>
    {
        IManipulationInertiaStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IManipulationInertiaStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IManipulationStartedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationStartedEventArgs>
    {
        IManipulationStartedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IManipulationStartedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IManipulationUpdatedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IManipulationUpdatedEventArgs>
    {
        IManipulationUpdatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IManipulationUpdatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMouseWheelParameters :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMouseWheelParameters>
    {
        IMouseWheelParameters(std::nullptr_t = nullptr) noexcept {}
        IMouseWheelParameters(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INonClientCaptionTappedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INonClientCaptionTappedEventArgs>
    {
        INonClientCaptionTappedEventArgs(std::nullptr_t = nullptr) noexcept {}
        INonClientCaptionTappedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INonClientPointerEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INonClientPointerEventArgs>
    {
        INonClientPointerEventArgs(std::nullptr_t = nullptr) noexcept {}
        INonClientPointerEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INonClientRegionsChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INonClientRegionsChangedEventArgs>
    {
        INonClientRegionsChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        INonClientRegionsChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPointerEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerEventArgs>
    {
        IPointerEventArgs(std::nullptr_t = nullptr) noexcept {}
        IPointerEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPointerPoint :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerPoint>
    {
        IPointerPoint(std::nullptr_t = nullptr) noexcept {}
        IPointerPoint(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPointerPointProperties :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerPointProperties>
    {
        IPointerPointProperties(std::nullptr_t = nullptr) noexcept {}
        IPointerPointProperties(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPointerPointTransform :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerPointTransform>
    {
        IPointerPointTransform(std::nullptr_t = nullptr) noexcept {}
        IPointerPointTransform(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPointerPredictor :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerPredictor>
    {
        IPointerPredictor(std::nullptr_t = nullptr) noexcept {}
        IPointerPredictor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPointerPredictorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPointerPredictorStatics>
    {
        IPointerPredictorStatics(std::nullptr_t = nullptr) noexcept {}
        IPointerPredictorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRightTappedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRightTappedEventArgs>
    {
        IRightTappedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRightTappedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITappedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITappedEventArgs>
    {
        ITappedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITappedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
