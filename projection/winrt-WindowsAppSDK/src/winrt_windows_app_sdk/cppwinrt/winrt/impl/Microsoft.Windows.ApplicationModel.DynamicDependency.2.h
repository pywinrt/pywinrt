// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.230706.1

#pragma once
#ifndef WINRT_Microsoft_Windows_ApplicationModel_DynamicDependency_2_H
#define WINRT_Microsoft_Windows_ApplicationModel_DynamicDependency_2_H
#include "winrt/impl/Windows.ApplicationModel.1.h"
#include "winrt/impl/Microsoft.Windows.ApplicationModel.DynamicDependency.1.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::ApplicationModel::DynamicDependency
{
    struct PackageDependencyContextId
    {
        uint64_t Id;
    };
    inline bool operator==(PackageDependencyContextId const& left, PackageDependencyContextId const& right) noexcept
    {
        return left.Id == right.Id;
    }
    inline bool operator!=(PackageDependencyContextId const& left, PackageDependencyContextId const& right) noexcept
    {
        return !(left == right);
    }
    struct WINRT_IMPL_EMPTY_BASES AddPackageDependencyOptions : winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IAddPackageDependencyOptions
    {
        AddPackageDependencyOptions(std::nullptr_t) noexcept {}
        AddPackageDependencyOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IAddPackageDependencyOptions(ptr, take_ownership_from_abi) {}
        AddPackageDependencyOptions();
    };
    struct WINRT_IMPL_EMPTY_BASES CreatePackageDependencyOptions : winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::ICreatePackageDependencyOptions
    {
        CreatePackageDependencyOptions(std::nullptr_t) noexcept {}
        CreatePackageDependencyOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::ICreatePackageDependencyOptions(ptr, take_ownership_from_abi) {}
        CreatePackageDependencyOptions();
    };
    struct WINRT_IMPL_EMPTY_BASES PackageDependency : winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependency
    {
        PackageDependency(std::nullptr_t) noexcept {}
        PackageDependency(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependency(ptr, take_ownership_from_abi) {}
        static auto GetFromId(param::hstring const& id);
        static auto GetFromIdForSystem(param::hstring const& id);
        static auto Create(param::hstring const& packageFamilyName, winrt::Windows::ApplicationModel::PackageVersion const& minVersion);
        static auto Create(param::hstring const& packageFamilyName, winrt::Windows::ApplicationModel::PackageVersion const& minVersion, winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::CreatePackageDependencyOptions const& options);
        static auto CreateForSystem(param::hstring const& packageFamilyName, winrt::Windows::ApplicationModel::PackageVersion const& minVersion, winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::CreatePackageDependencyOptions const& options);
        [[nodiscard]] static auto GenerationId();
        [[nodiscard]] static auto PackageGraphRevisionId();
    };
    struct WINRT_IMPL_EMPTY_BASES PackageDependencyContext : winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyContext
    {
        PackageDependencyContext(std::nullptr_t) noexcept {}
        PackageDependencyContext(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyContext(ptr, take_ownership_from_abi) {}
        explicit PackageDependencyContext(winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyContextId const& contextId);
    };
    struct PackageDependencyRank
    {
        PackageDependencyRank() = delete;
        [[nodiscard]] static auto Default();
    };
}
#endif
