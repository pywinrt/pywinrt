// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_Microsoft_Windows_AI_Imaging_2_H
#define WINRT_Microsoft_Windows_AI_Imaging_2_H
#include "winrt/impl/Microsoft.Graphics.Imaging.2.h"
#include "winrt/impl/Windows.Foundation.2.h"
#include "winrt/impl/Windows.Foundation.Collections.2.h"
#include "winrt/impl/Windows.Graphics.2.h"
#include "winrt/impl/Windows.Graphics.Imaging.2.h"
#include "winrt/impl/Microsoft.Windows.AI.Imaging.1.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::AI::Imaging
{
    struct RecognizedTextBoundingBox
    {
        winrt::Windows::Foundation::Point BottomLeft {};
        winrt::Windows::Foundation::Point BottomRight {};
        winrt::Windows::Foundation::Point TopLeft {};
        winrt::Windows::Foundation::Point TopRight {};
    };
    inline bool operator==(RecognizedTextBoundingBox const& left, RecognizedTextBoundingBox const& right) noexcept
    {
        return left.BottomLeft == right.BottomLeft && left.BottomRight == right.BottomRight && left.TopLeft == right.TopLeft && left.TopRight == right.TopRight;
    }
    inline bool operator!=(RecognizedTextBoundingBox const& left, RecognizedTextBoundingBox const& right) noexcept
    {
        return !(left == right);
    }
    struct WINRT_IMPL_EMPTY_BASES ImageDescriptionGenerator : winrt::Microsoft::Windows::AI::Imaging::IImageDescriptionGenerator,
        impl::require<ImageDescriptionGenerator, winrt::Windows::Foundation::IClosable>
    {
        ImageDescriptionGenerator(std::nullptr_t) noexcept {}
        ImageDescriptionGenerator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::AI::Imaging::IImageDescriptionGenerator(ptr, take_ownership_from_abi) {}
        static auto GetReadyState();
        static auto EnsureReadyAsync();
        static auto CreateAsync();
    };
    struct WINRT_IMPL_EMPTY_BASES ImageDescriptionResult : winrt::Microsoft::Windows::AI::Imaging::IImageDescriptionResult
    {
        ImageDescriptionResult(std::nullptr_t) noexcept {}
        ImageDescriptionResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::AI::Imaging::IImageDescriptionResult(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ImageObjectExtractor : winrt::Microsoft::Windows::AI::Imaging::IImageObjectExtractor,
        impl::require<ImageObjectExtractor, winrt::Windows::Foundation::IClosable>
    {
        ImageObjectExtractor(std::nullptr_t) noexcept {}
        ImageObjectExtractor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::AI::Imaging::IImageObjectExtractor(ptr, take_ownership_from_abi) {}
        static auto CreateWithSoftwareBitmapAsync(winrt::Windows::Graphics::Imaging::SoftwareBitmap const& softwareBitmap);
        static auto CreateWithImageBufferAsync(winrt::Microsoft::Graphics::Imaging::ImageBuffer const& imageBuffer);
        static auto GetReadyState();
        static auto EnsureReadyAsync();
    };
    struct WINRT_IMPL_EMPTY_BASES ImageObjectExtractorHint : winrt::Microsoft::Windows::AI::Imaging::IImageObjectExtractorHint
    {
        ImageObjectExtractorHint(std::nullptr_t) noexcept {}
        ImageObjectExtractorHint(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::AI::Imaging::IImageObjectExtractorHint(ptr, take_ownership_from_abi) {}
        ImageObjectExtractorHint(param::vector<winrt::Windows::Graphics::RectInt32> const& includeRects, param::vector<winrt::Windows::Graphics::PointInt32> const& includePoints, param::vector<winrt::Windows::Graphics::PointInt32> const& excludePoints);
    };
    struct WINRT_IMPL_EMPTY_BASES ImageScaler : winrt::Microsoft::Windows::AI::Imaging::IImageScaler,
        impl::require<ImageScaler, winrt::Windows::Foundation::IClosable>
    {
        ImageScaler(std::nullptr_t) noexcept {}
        ImageScaler(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::AI::Imaging::IImageScaler(ptr, take_ownership_from_abi) {}
        static auto GetReadyState();
        static auto EnsureReadyAsync();
        static auto CreateAsync();
    };
    struct WINRT_IMPL_EMPTY_BASES RecognizedLine : winrt::Microsoft::Windows::AI::Imaging::IRecognizedLine
    {
        RecognizedLine(std::nullptr_t) noexcept {}
        RecognizedLine(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::AI::Imaging::IRecognizedLine(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES RecognizedText : winrt::Microsoft::Windows::AI::Imaging::IRecognizedText
    {
        RecognizedText(std::nullptr_t) noexcept {}
        RecognizedText(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::AI::Imaging::IRecognizedText(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES RecognizedWord : winrt::Microsoft::Windows::AI::Imaging::IRecognizedWord
    {
        RecognizedWord(std::nullptr_t) noexcept {}
        RecognizedWord(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::AI::Imaging::IRecognizedWord(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES TextRecognizer : winrt::Microsoft::Windows::AI::Imaging::ITextRecognizer,
        impl::require<TextRecognizer, winrt::Windows::Foundation::IClosable>
    {
        TextRecognizer(std::nullptr_t) noexcept {}
        TextRecognizer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::AI::Imaging::ITextRecognizer(ptr, take_ownership_from_abi) {}
        static auto GetReadyState();
        static auto EnsureReadyAsync();
        static auto CreateAsync();
    };
}
#endif
