// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_Microsoft_Windows_SemanticSearch_1_H
#define WINRT_Microsoft_Windows_SemanticSearch_1_H
#include "winrt/impl/Microsoft.Windows.SemanticSearch.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::SemanticSearch
{
    struct WINRT_IMPL_EMPTY_BASES IEmbeddingVector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmbeddingVector>
    {
        IEmbeddingVector(std::nullptr_t = nullptr) noexcept {}
        IEmbeddingVector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IEmbeddingVectorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEmbeddingVectorFactory>
    {
        IEmbeddingVectorFactory(std::nullptr_t = nullptr) noexcept {}
        IEmbeddingVectorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
