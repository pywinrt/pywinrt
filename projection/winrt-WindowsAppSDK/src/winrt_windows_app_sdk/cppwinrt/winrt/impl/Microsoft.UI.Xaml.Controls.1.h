// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.230706.1

#pragma once
#ifndef WINRT_Microsoft_UI_Xaml_Controls_1_H
#define WINRT_Microsoft_UI_Xaml_Controls_1_H
#include "winrt/impl/Windows.Foundation.0.h"
#include "winrt/impl/Microsoft.UI.Xaml.Controls.0.h"
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Controls
{
    struct WINRT_IMPL_EMPTY_BASES IAnchorRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnchorRequestedEventArgs>
    {
        IAnchorRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAnchorRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedIcon :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedIcon>
    {
        IAnimatedIcon(std::nullptr_t = nullptr) noexcept {}
        IAnimatedIcon(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedIconFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedIconFactory>
    {
        IAnimatedIconFactory(std::nullptr_t = nullptr) noexcept {}
        IAnimatedIconFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedIconSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedIconSource>
    {
        IAnimatedIconSource(std::nullptr_t = nullptr) noexcept {}
        IAnimatedIconSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedIconSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedIconSourceFactory>
    {
        IAnimatedIconSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IAnimatedIconSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedIconSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedIconSourceStatics>
    {
        IAnimatedIconSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IAnimatedIconSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedIconStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedIconStatics>
    {
        IAnimatedIconStatics(std::nullptr_t = nullptr) noexcept {}
        IAnimatedIconStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedVisual :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedVisual>,
        impl::require<winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual, winrt::Windows::Foundation::IClosable>
    {
        IAnimatedVisual(std::nullptr_t = nullptr) noexcept {}
        IAnimatedVisual(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedVisual2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedVisual2>,
        impl::require<winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual2, winrt::Windows::Foundation::IClosable, winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual>
    {
        IAnimatedVisual2(std::nullptr_t = nullptr) noexcept {}
        IAnimatedVisual2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedVisualPlayer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedVisualPlayer>
    {
        IAnimatedVisualPlayer(std::nullptr_t = nullptr) noexcept {}
        IAnimatedVisualPlayer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedVisualPlayer2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedVisualPlayer2>
    {
        IAnimatedVisualPlayer2(std::nullptr_t = nullptr) noexcept {}
        IAnimatedVisualPlayer2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedVisualPlayerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedVisualPlayerFactory>
    {
        IAnimatedVisualPlayerFactory(std::nullptr_t = nullptr) noexcept {}
        IAnimatedVisualPlayerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedVisualPlayerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedVisualPlayerStatics>
    {
        IAnimatedVisualPlayerStatics(std::nullptr_t = nullptr) noexcept {}
        IAnimatedVisualPlayerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedVisualPlayerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedVisualPlayerStatics2>
    {
        IAnimatedVisualPlayerStatics2(std::nullptr_t = nullptr) noexcept {}
        IAnimatedVisualPlayerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedVisualSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedVisualSource>
    {
        IAnimatedVisualSource(std::nullptr_t = nullptr) noexcept {}
        IAnimatedVisualSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedVisualSource2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedVisualSource2>,
        impl::require<winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisualSource2, winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisualSource>
    {
        IAnimatedVisualSource2(std::nullptr_t = nullptr) noexcept {}
        IAnimatedVisualSource2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedVisualSource3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedVisualSource3>
    {
        IAnimatedVisualSource3(std::nullptr_t = nullptr) noexcept {}
        IAnimatedVisualSource3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnnotatedScrollBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnnotatedScrollBar>
    {
        IAnnotatedScrollBar(std::nullptr_t = nullptr) noexcept {}
        IAnnotatedScrollBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnnotatedScrollBarDetailLabelRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnnotatedScrollBarDetailLabelRequestedEventArgs>
    {
        IAnnotatedScrollBarDetailLabelRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAnnotatedScrollBarDetailLabelRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnnotatedScrollBarFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnnotatedScrollBarFactory>
    {
        IAnnotatedScrollBarFactory(std::nullptr_t = nullptr) noexcept {}
        IAnnotatedScrollBarFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnnotatedScrollBarLabel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnnotatedScrollBarLabel>
    {
        IAnnotatedScrollBarLabel(std::nullptr_t = nullptr) noexcept {}
        IAnnotatedScrollBarLabel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnnotatedScrollBarLabelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnnotatedScrollBarLabelFactory>
    {
        IAnnotatedScrollBarLabelFactory(std::nullptr_t = nullptr) noexcept {}
        IAnnotatedScrollBarLabelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnnotatedScrollBarScrollingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnnotatedScrollBarScrollingEventArgs>
    {
        IAnnotatedScrollBarScrollingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAnnotatedScrollBarScrollingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnnotatedScrollBarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnnotatedScrollBarStatics>
    {
        IAnnotatedScrollBarStatics(std::nullptr_t = nullptr) noexcept {}
        IAnnotatedScrollBarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBar>
    {
        IAppBar(std::nullptr_t = nullptr) noexcept {}
        IAppBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButton>
    {
        IAppBarButton(std::nullptr_t = nullptr) noexcept {}
        IAppBarButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButtonFactory>
    {
        IAppBarButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButtonStatics>
    {
        IAppBarButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IAppBarButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarElementContainer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarElementContainer>
    {
        IAppBarElementContainer(std::nullptr_t = nullptr) noexcept {}
        IAppBarElementContainer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarElementContainerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarElementContainerFactory>
    {
        IAppBarElementContainerFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarElementContainerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarElementContainerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarElementContainerStatics>
    {
        IAppBarElementContainerStatics(std::nullptr_t = nullptr) noexcept {}
        IAppBarElementContainerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarFactory>
    {
        IAppBarFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarOverrides>
    {
        IAppBarOverrides(std::nullptr_t = nullptr) noexcept {}
        IAppBarOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarSeparator :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarSeparator>
    {
        IAppBarSeparator(std::nullptr_t = nullptr) noexcept {}
        IAppBarSeparator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarSeparatorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarSeparatorFactory>
    {
        IAppBarSeparatorFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarSeparatorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarSeparatorStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarSeparatorStatics>
    {
        IAppBarSeparatorStatics(std::nullptr_t = nullptr) noexcept {}
        IAppBarSeparatorStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarStatics>
    {
        IAppBarStatics(std::nullptr_t = nullptr) noexcept {}
        IAppBarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarToggleButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButton>
    {
        IAppBarToggleButton(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarToggleButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButtonFactory>
    {
        IAppBarToggleButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarToggleButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButtonStatics>
    {
        IAppBarToggleButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutoSuggestBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBox>
    {
        IAutoSuggestBox(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutoSuggestBoxQuerySubmittedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxQuerySubmittedEventArgs>
    {
        IAutoSuggestBoxQuerySubmittedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxQuerySubmittedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutoSuggestBoxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxStatics>
    {
        IAutoSuggestBoxStatics(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutoSuggestBoxSuggestionChosenEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxSuggestionChosenEventArgs>
    {
        IAutoSuggestBoxSuggestionChosenEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxSuggestionChosenEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutoSuggestBoxTextChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxTextChangedEventArgs>
    {
        IAutoSuggestBoxTextChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxTextChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutoSuggestBoxTextChangedEventArgsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxTextChangedEventArgsStatics>
    {
        IAutoSuggestBoxTextChangedEventArgsStatics(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxTextChangedEventArgsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBitmapIcon :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapIcon>
    {
        IBitmapIcon(std::nullptr_t = nullptr) noexcept {}
        IBitmapIcon(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBitmapIconFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapIconFactory>
    {
        IBitmapIconFactory(std::nullptr_t = nullptr) noexcept {}
        IBitmapIconFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBitmapIconSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapIconSource>
    {
        IBitmapIconSource(std::nullptr_t = nullptr) noexcept {}
        IBitmapIconSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBitmapIconSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapIconSourceFactory>
    {
        IBitmapIconSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IBitmapIconSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBitmapIconSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapIconSourceStatics>
    {
        IBitmapIconSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IBitmapIconSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBitmapIconStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBitmapIconStatics>
    {
        IBitmapIconStatics(std::nullptr_t = nullptr) noexcept {}
        IBitmapIconStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBorder :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBorder>
    {
        IBorder(std::nullptr_t = nullptr) noexcept {}
        IBorder(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBorderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBorderStatics>
    {
        IBorderStatics(std::nullptr_t = nullptr) noexcept {}
        IBorderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBreadcrumbBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBreadcrumbBar>
    {
        IBreadcrumbBar(std::nullptr_t = nullptr) noexcept {}
        IBreadcrumbBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBreadcrumbBarFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBreadcrumbBarFactory>
    {
        IBreadcrumbBarFactory(std::nullptr_t = nullptr) noexcept {}
        IBreadcrumbBarFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBreadcrumbBarItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBreadcrumbBarItem>
    {
        IBreadcrumbBarItem(std::nullptr_t = nullptr) noexcept {}
        IBreadcrumbBarItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBreadcrumbBarItemClickedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBreadcrumbBarItemClickedEventArgs>
    {
        IBreadcrumbBarItemClickedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IBreadcrumbBarItemClickedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBreadcrumbBarItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBreadcrumbBarItemFactory>
    {
        IBreadcrumbBarItemFactory(std::nullptr_t = nullptr) noexcept {}
        IBreadcrumbBarItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBreadcrumbBarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBreadcrumbBarStatics>
    {
        IBreadcrumbBarStatics(std::nullptr_t = nullptr) noexcept {}
        IBreadcrumbBarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButton>
    {
        IButton(std::nullptr_t = nullptr) noexcept {}
        IButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonFactory>
    {
        IButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonStatics>
    {
        IButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICalendarDatePicker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePicker>
    {
        ICalendarDatePicker(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICalendarDatePickerDateChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePickerDateChangedEventArgs>
    {
        ICalendarDatePickerDateChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePickerDateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICalendarDatePickerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePickerFactory>
    {
        ICalendarDatePickerFactory(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePickerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICalendarDatePickerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePickerStatics>
    {
        ICalendarDatePickerStatics(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePickerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICalendarView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarView>
    {
        ICalendarView(std::nullptr_t = nullptr) noexcept {}
        ICalendarView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICalendarViewDayItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewDayItem>
    {
        ICalendarViewDayItem(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewDayItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICalendarViewDayItemChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewDayItemChangingEventArgs>
    {
        ICalendarViewDayItemChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewDayItemChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICalendarViewDayItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewDayItemFactory>
    {
        ICalendarViewDayItemFactory(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewDayItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICalendarViewDayItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewDayItemStatics>
    {
        ICalendarViewDayItemStatics(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewDayItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICalendarViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewFactory>
    {
        ICalendarViewFactory(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICalendarViewSelectedDatesChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewSelectedDatesChangedEventArgs>
    {
        ICalendarViewSelectedDatesChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewSelectedDatesChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICalendarViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarViewStatics>
    {
        ICalendarViewStatics(std::nullptr_t = nullptr) noexcept {}
        ICalendarViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICandidateWindowBoundsChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICandidateWindowBoundsChangedEventArgs>
    {
        ICandidateWindowBoundsChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICandidateWindowBoundsChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICanvas :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvas>
    {
        ICanvas(std::nullptr_t = nullptr) noexcept {}
        ICanvas(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICanvasFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvasFactory>
    {
        ICanvasFactory(std::nullptr_t = nullptr) noexcept {}
        ICanvasFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICanvasStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvasStatics>
    {
        ICanvasStatics(std::nullptr_t = nullptr) noexcept {}
        ICanvasStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICheckBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICheckBox>
    {
        ICheckBox(std::nullptr_t = nullptr) noexcept {}
        ICheckBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICheckBoxFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICheckBoxFactory>
    {
        ICheckBoxFactory(std::nullptr_t = nullptr) noexcept {}
        ICheckBoxFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IChoosingGroupHeaderContainerEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IChoosingGroupHeaderContainerEventArgs>
    {
        IChoosingGroupHeaderContainerEventArgs(std::nullptr_t = nullptr) noexcept {}
        IChoosingGroupHeaderContainerEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IChoosingItemContainerEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IChoosingItemContainerEventArgs>
    {
        IChoosingItemContainerEventArgs(std::nullptr_t = nullptr) noexcept {}
        IChoosingItemContainerEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICleanUpVirtualizedItemEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICleanUpVirtualizedItemEventArgs>
    {
        ICleanUpVirtualizedItemEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICleanUpVirtualizedItemEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IColorChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorChangedEventArgs>
    {
        IColorChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IColorChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IColorPicker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPicker>
    {
        IColorPicker(std::nullptr_t = nullptr) noexcept {}
        IColorPicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IColorPicker2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPicker2>
    {
        IColorPicker2(std::nullptr_t = nullptr) noexcept {}
        IColorPicker2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IColorPickerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPickerFactory>
    {
        IColorPickerFactory(std::nullptr_t = nullptr) noexcept {}
        IColorPickerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IColorPickerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPickerStatics>
    {
        IColorPickerStatics(std::nullptr_t = nullptr) noexcept {}
        IColorPickerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IColorPickerStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPickerStatics2>
    {
        IColorPickerStatics2(std::nullptr_t = nullptr) noexcept {}
        IColorPickerStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IColumnDefinition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColumnDefinition>
    {
        IColumnDefinition(std::nullptr_t = nullptr) noexcept {}
        IColumnDefinition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IColumnDefinitionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColumnDefinitionStatics>
    {
        IColumnDefinitionStatics(std::nullptr_t = nullptr) noexcept {}
        IColumnDefinitionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IComboBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBox>
    {
        IComboBox(std::nullptr_t = nullptr) noexcept {}
        IComboBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IComboBoxFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxFactory>
    {
        IComboBoxFactory(std::nullptr_t = nullptr) noexcept {}
        IComboBoxFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IComboBoxItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxItem>
    {
        IComboBoxItem(std::nullptr_t = nullptr) noexcept {}
        IComboBoxItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IComboBoxItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxItemFactory>
    {
        IComboBoxItemFactory(std::nullptr_t = nullptr) noexcept {}
        IComboBoxItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IComboBoxOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxOverrides>
    {
        IComboBoxOverrides(std::nullptr_t = nullptr) noexcept {}
        IComboBoxOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IComboBoxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxStatics>
    {
        IComboBoxStatics(std::nullptr_t = nullptr) noexcept {}
        IComboBoxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IComboBoxTextSubmittedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxTextSubmittedEventArgs>
    {
        IComboBoxTextSubmittedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IComboBoxTextSubmittedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICommandBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBar>
    {
        ICommandBar(std::nullptr_t = nullptr) noexcept {}
        ICommandBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICommandBarElement :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarElement>
    {
        ICommandBarElement(std::nullptr_t = nullptr) noexcept {}
        ICommandBarElement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICommandBarFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarFactory>
    {
        ICommandBarFactory(std::nullptr_t = nullptr) noexcept {}
        ICommandBarFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICommandBarFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarFlyout>
    {
        ICommandBarFlyout(std::nullptr_t = nullptr) noexcept {}
        ICommandBarFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICommandBarFlyout2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarFlyout2>
    {
        ICommandBarFlyout2(std::nullptr_t = nullptr) noexcept {}
        ICommandBarFlyout2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICommandBarFlyoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarFlyoutFactory>
    {
        ICommandBarFlyoutFactory(std::nullptr_t = nullptr) noexcept {}
        ICommandBarFlyoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICommandBarOverflowPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarOverflowPresenter>
    {
        ICommandBarOverflowPresenter(std::nullptr_t = nullptr) noexcept {}
        ICommandBarOverflowPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICommandBarOverflowPresenterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarOverflowPresenterFactory>
    {
        ICommandBarOverflowPresenterFactory(std::nullptr_t = nullptr) noexcept {}
        ICommandBarOverflowPresenterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICommandBarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICommandBarStatics>
    {
        ICommandBarStatics(std::nullptr_t = nullptr) noexcept {}
        ICommandBarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContainerContentChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContainerContentChangingEventArgs>
    {
        IContainerContentChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContainerContentChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentControl>
    {
        IContentControl(std::nullptr_t = nullptr) noexcept {}
        IContentControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentControlFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentControlFactory>
    {
        IContentControlFactory(std::nullptr_t = nullptr) noexcept {}
        IContentControlFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentControlOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentControlOverrides>
    {
        IContentControlOverrides(std::nullptr_t = nullptr) noexcept {}
        IContentControlOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentControlStatics>
    {
        IContentControlStatics(std::nullptr_t = nullptr) noexcept {}
        IContentControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentDialog :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialog>
    {
        IContentDialog(std::nullptr_t = nullptr) noexcept {}
        IContentDialog(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentDialogButtonClickDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogButtonClickDeferral>
    {
        IContentDialogButtonClickDeferral(std::nullptr_t = nullptr) noexcept {}
        IContentDialogButtonClickDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentDialogButtonClickEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogButtonClickEventArgs>
    {
        IContentDialogButtonClickEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentDialogButtonClickEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentDialogClosedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogClosedEventArgs>
    {
        IContentDialogClosedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentDialogClosedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentDialogClosingDeferral :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogClosingDeferral>
    {
        IContentDialogClosingDeferral(std::nullptr_t = nullptr) noexcept {}
        IContentDialogClosingDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentDialogClosingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogClosingEventArgs>
    {
        IContentDialogClosingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentDialogClosingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentDialogFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogFactory>
    {
        IContentDialogFactory(std::nullptr_t = nullptr) noexcept {}
        IContentDialogFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentDialogOpenedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogOpenedEventArgs>
    {
        IContentDialogOpenedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContentDialogOpenedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentDialogStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentDialogStatics>
    {
        IContentDialogStatics(std::nullptr_t = nullptr) noexcept {}
        IContentDialogStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenter>
    {
        IContentPresenter(std::nullptr_t = nullptr) noexcept {}
        IContentPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentPresenterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenterFactory>
    {
        IContentPresenterFactory(std::nullptr_t = nullptr) noexcept {}
        IContentPresenterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentPresenterOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenterOverrides>
    {
        IContentPresenterOverrides(std::nullptr_t = nullptr) noexcept {}
        IContentPresenterOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContentPresenterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContentPresenterStatics>
    {
        IContentPresenterStatics(std::nullptr_t = nullptr) noexcept {}
        IContentPresenterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IContextMenuEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContextMenuEventArgs>
    {
        IContextMenuEventArgs(std::nullptr_t = nullptr) noexcept {}
        IContextMenuEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControl>
    {
        IControl(std::nullptr_t = nullptr) noexcept {}
        IControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IControlFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlFactory>
    {
        IControlFactory(std::nullptr_t = nullptr) noexcept {}
        IControlFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IControlOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlOverrides>
    {
        IControlOverrides(std::nullptr_t = nullptr) noexcept {}
        IControlOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IControlProtected :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlProtected>
    {
        IControlProtected(std::nullptr_t = nullptr) noexcept {}
        IControlProtected(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlStatics>
    {
        IControlStatics(std::nullptr_t = nullptr) noexcept {}
        IControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IControlTemplate :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IControlTemplate>
    {
        IControlTemplate(std::nullptr_t = nullptr) noexcept {}
        IControlTemplate(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICoreWebView2InitializedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICoreWebView2InitializedEventArgs>
    {
        ICoreWebView2InitializedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICoreWebView2InitializedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDataTemplateSelector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplateSelector>
    {
        IDataTemplateSelector(std::nullptr_t = nullptr) noexcept {}
        IDataTemplateSelector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDataTemplateSelectorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplateSelectorFactory>
    {
        IDataTemplateSelectorFactory(std::nullptr_t = nullptr) noexcept {}
        IDataTemplateSelectorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDataTemplateSelectorOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDataTemplateSelectorOverrides>
    {
        IDataTemplateSelectorOverrides(std::nullptr_t = nullptr) noexcept {}
        IDataTemplateSelectorOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePickedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickedEventArgs>
    {
        IDatePickedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDatePickedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePicker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePicker>
    {
        IDatePicker(std::nullptr_t = nullptr) noexcept {}
        IDatePicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePickerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFactory>
    {
        IDatePickerFactory(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePickerFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyout>
    {
        IDatePickerFlyout(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePickerFlyoutItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyoutItem>
    {
        IDatePickerFlyoutItem(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyoutItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePickerFlyoutItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyoutItemStatics>
    {
        IDatePickerFlyoutItemStatics(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyoutItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePickerFlyoutPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyoutPresenter>
    {
        IDatePickerFlyoutPresenter(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyoutPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePickerFlyoutPresenterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyoutPresenterStatics>
    {
        IDatePickerFlyoutPresenterStatics(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyoutPresenterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePickerFlyoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyoutStatics>
    {
        IDatePickerFlyoutStatics(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePickerSelectedValueChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerSelectedValueChangedEventArgs>
    {
        IDatePickerSelectedValueChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDatePickerSelectedValueChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePickerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerStatics>
    {
        IDatePickerStatics(std::nullptr_t = nullptr) noexcept {}
        IDatePickerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePickerValueChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerValueChangedEventArgs>
    {
        IDatePickerValueChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDatePickerValueChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDragItemsCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDragItemsCompletedEventArgs>
    {
        IDragItemsCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDragItemsCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDragItemsStartingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDragItemsStartingEventArgs>
    {
        IDragItemsStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDragItemsStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDropDownButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDropDownButton>
    {
        IDropDownButton(std::nullptr_t = nullptr) noexcept {}
        IDropDownButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDropDownButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDropDownButtonFactory>
    {
        IDropDownButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IDropDownButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDynamicAnimatedVisualSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDynamicAnimatedVisualSource>,
        impl::require<winrt::Microsoft::UI::Xaml::Controls::IDynamicAnimatedVisualSource, winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisualSource>
    {
        IDynamicAnimatedVisualSource(std::nullptr_t = nullptr) noexcept {}
        IDynamicAnimatedVisualSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDynamicOverflowItemsChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDynamicOverflowItemsChangingEventArgs>
    {
        IDynamicOverflowItemsChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDynamicOverflowItemsChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IExpander :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpander>
    {
        IExpander(std::nullptr_t = nullptr) noexcept {}
        IExpander(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IExpanderCollapsedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpanderCollapsedEventArgs>
    {
        IExpanderCollapsedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpanderCollapsedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IExpanderExpandingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpanderExpandingEventArgs>
    {
        IExpanderExpandingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IExpanderExpandingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IExpanderFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpanderFactory>
    {
        IExpanderFactory(std::nullptr_t = nullptr) noexcept {}
        IExpanderFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IExpanderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpanderStatics>
    {
        IExpanderStatics(std::nullptr_t = nullptr) noexcept {}
        IExpanderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IExpanderTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpanderTemplateSettings>
    {
        IExpanderTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IExpanderTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlipView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipView>
    {
        IFlipView(std::nullptr_t = nullptr) noexcept {}
        IFlipView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlipViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewFactory>
    {
        IFlipViewFactory(std::nullptr_t = nullptr) noexcept {}
        IFlipViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlipViewItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewItem>
    {
        IFlipViewItem(std::nullptr_t = nullptr) noexcept {}
        IFlipViewItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlipViewItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewItemFactory>
    {
        IFlipViewItemFactory(std::nullptr_t = nullptr) noexcept {}
        IFlipViewItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlipViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewStatics>
    {
        IFlipViewStatics(std::nullptr_t = nullptr) noexcept {}
        IFlipViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyout>
    {
        IFlyout(std::nullptr_t = nullptr) noexcept {}
        IFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlyoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutFactory>
    {
        IFlyoutFactory(std::nullptr_t = nullptr) noexcept {}
        IFlyoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlyoutPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutPresenter>
    {
        IFlyoutPresenter(std::nullptr_t = nullptr) noexcept {}
        IFlyoutPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlyoutPresenterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutPresenterFactory>
    {
        IFlyoutPresenterFactory(std::nullptr_t = nullptr) noexcept {}
        IFlyoutPresenterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlyoutPresenterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutPresenterStatics>
    {
        IFlyoutPresenterStatics(std::nullptr_t = nullptr) noexcept {}
        IFlyoutPresenterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlyoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutStatics>
    {
        IFlyoutStatics(std::nullptr_t = nullptr) noexcept {}
        IFlyoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFocusDisengagedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusDisengagedEventArgs>
    {
        IFocusDisengagedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IFocusDisengagedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFocusEngagedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusEngagedEventArgs>
    {
        IFocusEngagedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IFocusEngagedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFontIcon :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIcon>
    {
        IFontIcon(std::nullptr_t = nullptr) noexcept {}
        IFontIcon(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFontIconFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIconFactory>
    {
        IFontIconFactory(std::nullptr_t = nullptr) noexcept {}
        IFontIconFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFontIconSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIconSource>
    {
        IFontIconSource(std::nullptr_t = nullptr) noexcept {}
        IFontIconSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFontIconSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIconSourceFactory>
    {
        IFontIconSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IFontIconSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFontIconSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIconSourceStatics>
    {
        IFontIconSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IFontIconSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFontIconStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFontIconStatics>
    {
        IFontIconStatics(std::nullptr_t = nullptr) noexcept {}
        IFontIconStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFrame :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrame>
    {
        IFrame(std::nullptr_t = nullptr) noexcept {}
        IFrame(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFrameFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrameFactory>
    {
        IFrameFactory(std::nullptr_t = nullptr) noexcept {}
        IFrameFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFrameStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrameStatics>
    {
        IFrameStatics(std::nullptr_t = nullptr) noexcept {}
        IFrameStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGrid :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGrid>
    {
        IGrid(std::nullptr_t = nullptr) noexcept {}
        IGrid(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridFactory>
    {
        IGridFactory(std::nullptr_t = nullptr) noexcept {}
        IGridFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridStatics>
    {
        IGridStatics(std::nullptr_t = nullptr) noexcept {}
        IGridStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridView>
    {
        IGridView(std::nullptr_t = nullptr) noexcept {}
        IGridView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewFactory>
    {
        IGridViewFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridViewHeaderItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewHeaderItem>
    {
        IGridViewHeaderItem(std::nullptr_t = nullptr) noexcept {}
        IGridViewHeaderItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridViewHeaderItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewHeaderItemFactory>
    {
        IGridViewHeaderItemFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewHeaderItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridViewItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItem>
    {
        IGridViewItem(std::nullptr_t = nullptr) noexcept {}
        IGridViewItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridViewItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItemFactory>
    {
        IGridViewItemFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGroupItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupItem>
    {
        IGroupItem(std::nullptr_t = nullptr) noexcept {}
        IGroupItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGroupItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupItemFactory>
    {
        IGroupItemFactory(std::nullptr_t = nullptr) noexcept {}
        IGroupItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGroupStyle :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupStyle>
    {
        IGroupStyle(std::nullptr_t = nullptr) noexcept {}
        IGroupStyle(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGroupStyleFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupStyleFactory>
    {
        IGroupStyleFactory(std::nullptr_t = nullptr) noexcept {}
        IGroupStyleFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGroupStyleSelector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupStyleSelector>
    {
        IGroupStyleSelector(std::nullptr_t = nullptr) noexcept {}
        IGroupStyleSelector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGroupStyleSelectorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupStyleSelectorFactory>
    {
        IGroupStyleSelectorFactory(std::nullptr_t = nullptr) noexcept {}
        IGroupStyleSelectorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGroupStyleSelectorOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupStyleSelectorOverrides>
    {
        IGroupStyleSelectorOverrides(std::nullptr_t = nullptr) noexcept {}
        IGroupStyleSelectorOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHasValidationErrorsChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHasValidationErrorsChangedEventArgs>
    {
        IHasValidationErrorsChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IHasValidationErrorsChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHub :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHub>
    {
        IHub(std::nullptr_t = nullptr) noexcept {}
        IHub(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHubFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubFactory>
    {
        IHubFactory(std::nullptr_t = nullptr) noexcept {}
        IHubFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHubSection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubSection>
    {
        IHubSection(std::nullptr_t = nullptr) noexcept {}
        IHubSection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHubSectionFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubSectionFactory>
    {
        IHubSectionFactory(std::nullptr_t = nullptr) noexcept {}
        IHubSectionFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHubSectionHeaderClickEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubSectionHeaderClickEventArgs>
    {
        IHubSectionHeaderClickEventArgs(std::nullptr_t = nullptr) noexcept {}
        IHubSectionHeaderClickEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHubSectionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubSectionStatics>
    {
        IHubSectionStatics(std::nullptr_t = nullptr) noexcept {}
        IHubSectionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHubStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubStatics>
    {
        IHubStatics(std::nullptr_t = nullptr) noexcept {}
        IHubStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHyperlinkButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkButton>
    {
        IHyperlinkButton(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHyperlinkButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkButtonFactory>
    {
        IHyperlinkButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHyperlinkButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkButtonStatics>
    {
        IHyperlinkButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IIconElement :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconElement>
    {
        IIconElement(std::nullptr_t = nullptr) noexcept {}
        IIconElement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IIconElementFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconElementFactory>
    {
        IIconElementFactory(std::nullptr_t = nullptr) noexcept {}
        IIconElementFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IIconElementStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconElementStatics>
    {
        IIconElementStatics(std::nullptr_t = nullptr) noexcept {}
        IIconElementStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IIconSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconSource>
    {
        IIconSource(std::nullptr_t = nullptr) noexcept {}
        IIconSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IIconSourceElement :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconSourceElement>
    {
        IIconSourceElement(std::nullptr_t = nullptr) noexcept {}
        IIconSourceElement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IIconSourceElementFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconSourceElementFactory>
    {
        IIconSourceElementFactory(std::nullptr_t = nullptr) noexcept {}
        IIconSourceElementFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IIconSourceElementStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconSourceElementStatics>
    {
        IIconSourceElementStatics(std::nullptr_t = nullptr) noexcept {}
        IIconSourceElementStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IIconSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconSourceFactory>
    {
        IIconSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IIconSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IIconSourceOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconSourceOverrides>
    {
        IIconSourceOverrides(std::nullptr_t = nullptr) noexcept {}
        IIconSourceOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IIconSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIconSourceStatics>
    {
        IIconSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IIconSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImage>
    {
        IImage(std::nullptr_t = nullptr) noexcept {}
        IImage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageIcon :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageIcon>
    {
        IImageIcon(std::nullptr_t = nullptr) noexcept {}
        IImageIcon(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageIconFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageIconFactory>
    {
        IImageIconFactory(std::nullptr_t = nullptr) noexcept {}
        IImageIconFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageIconSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageIconSource>
    {
        IImageIconSource(std::nullptr_t = nullptr) noexcept {}
        IImageIconSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageIconSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageIconSourceFactory>
    {
        IImageIconSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IImageIconSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageIconSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageIconSourceStatics>
    {
        IImageIconSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IImageIconSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageIconStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageIconStatics>
    {
        IImageIconStatics(std::nullptr_t = nullptr) noexcept {}
        IImageIconStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageStatics>
    {
        IImageStatics(std::nullptr_t = nullptr) noexcept {}
        IImageStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBadge :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBadge>
    {
        IInfoBadge(std::nullptr_t = nullptr) noexcept {}
        IInfoBadge(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBadgeFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBadgeFactory>
    {
        IInfoBadgeFactory(std::nullptr_t = nullptr) noexcept {}
        IInfoBadgeFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBadgeStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBadgeStatics>
    {
        IInfoBadgeStatics(std::nullptr_t = nullptr) noexcept {}
        IInfoBadgeStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBadgeTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBadgeTemplateSettings>
    {
        IInfoBadgeTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IInfoBadgeTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBadgeTemplateSettingsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBadgeTemplateSettingsFactory>
    {
        IInfoBadgeTemplateSettingsFactory(std::nullptr_t = nullptr) noexcept {}
        IInfoBadgeTemplateSettingsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBadgeTemplateSettingsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBadgeTemplateSettingsStatics>
    {
        IInfoBadgeTemplateSettingsStatics(std::nullptr_t = nullptr) noexcept {}
        IInfoBadgeTemplateSettingsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBar>
    {
        IInfoBar(std::nullptr_t = nullptr) noexcept {}
        IInfoBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBarClosedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBarClosedEventArgs>
    {
        IInfoBarClosedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IInfoBarClosedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBarClosedEventArgsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBarClosedEventArgsFactory>
    {
        IInfoBarClosedEventArgsFactory(std::nullptr_t = nullptr) noexcept {}
        IInfoBarClosedEventArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBarClosingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBarClosingEventArgs>
    {
        IInfoBarClosingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IInfoBarClosingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBarClosingEventArgsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBarClosingEventArgsFactory>
    {
        IInfoBarClosingEventArgsFactory(std::nullptr_t = nullptr) noexcept {}
        IInfoBarClosingEventArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBarFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBarFactory>
    {
        IInfoBarFactory(std::nullptr_t = nullptr) noexcept {}
        IInfoBarFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBarStatics>
    {
        IInfoBarStatics(std::nullptr_t = nullptr) noexcept {}
        IInfoBarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBarTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBarTemplateSettings>
    {
        IInfoBarTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IInfoBarTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBarTemplateSettingsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBarTemplateSettingsFactory>
    {
        IInfoBarTemplateSettingsFactory(std::nullptr_t = nullptr) noexcept {}
        IInfoBarTemplateSettingsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBarTemplateSettingsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBarTemplateSettingsStatics>
    {
        IInfoBarTemplateSettingsStatics(std::nullptr_t = nullptr) noexcept {}
        IInfoBarTemplateSettingsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInsertionPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInsertionPanel>
    {
        IInsertionPanel(std::nullptr_t = nullptr) noexcept {}
        IInsertionPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IIsTextTrimmedChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIsTextTrimmedChangedEventArgs>
    {
        IIsTextTrimmedChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IIsTextTrimmedChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemClickEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemClickEventArgs>
    {
        IItemClickEventArgs(std::nullptr_t = nullptr) noexcept {}
        IItemClickEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemCollectionTransition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemCollectionTransition>
    {
        IItemCollectionTransition(std::nullptr_t = nullptr) noexcept {}
        IItemCollectionTransition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemCollectionTransitionCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemCollectionTransitionCompletedEventArgs>
    {
        IItemCollectionTransitionCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IItemCollectionTransitionCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemCollectionTransitionProgress :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemCollectionTransitionProgress>
    {
        IItemCollectionTransitionProgress(std::nullptr_t = nullptr) noexcept {}
        IItemCollectionTransitionProgress(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemCollectionTransitionProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemCollectionTransitionProvider>
    {
        IItemCollectionTransitionProvider(std::nullptr_t = nullptr) noexcept {}
        IItemCollectionTransitionProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemCollectionTransitionProviderFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemCollectionTransitionProviderFactory>
    {
        IItemCollectionTransitionProviderFactory(std::nullptr_t = nullptr) noexcept {}
        IItemCollectionTransitionProviderFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemCollectionTransitionProviderOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemCollectionTransitionProviderOverrides>
    {
        IItemCollectionTransitionProviderOverrides(std::nullptr_t = nullptr) noexcept {}
        IItemCollectionTransitionProviderOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemContainer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemContainer>
    {
        IItemContainer(std::nullptr_t = nullptr) noexcept {}
        IItemContainer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemContainerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemContainerFactory>
    {
        IItemContainerFactory(std::nullptr_t = nullptr) noexcept {}
        IItemContainerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemContainerGenerator :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemContainerGenerator>
    {
        IItemContainerGenerator(std::nullptr_t = nullptr) noexcept {}
        IItemContainerGenerator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemContainerMapping :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemContainerMapping>
    {
        IItemContainerMapping(std::nullptr_t = nullptr) noexcept {}
        IItemContainerMapping(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemContainerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemContainerStatics>
    {
        IItemContainerStatics(std::nullptr_t = nullptr) noexcept {}
        IItemContainerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControl>
    {
        IItemsControl(std::nullptr_t = nullptr) noexcept {}
        IItemsControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsControlFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControlFactory>
    {
        IItemsControlFactory(std::nullptr_t = nullptr) noexcept {}
        IItemsControlFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsControlOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControlOverrides>
    {
        IItemsControlOverrides(std::nullptr_t = nullptr) noexcept {}
        IItemsControlOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControlStatics>
    {
        IItemsControlStatics(std::nullptr_t = nullptr) noexcept {}
        IItemsControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsPanelTemplate :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsPanelTemplate>
    {
        IItemsPanelTemplate(std::nullptr_t = nullptr) noexcept {}
        IItemsPanelTemplate(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsPickedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsPickedEventArgs>
    {
        IItemsPickedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IItemsPickedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsPresenter>
    {
        IItemsPresenter(std::nullptr_t = nullptr) noexcept {}
        IItemsPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsPresenterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsPresenterStatics>
    {
        IItemsPresenterStatics(std::nullptr_t = nullptr) noexcept {}
        IItemsPresenterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsRepeater :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsRepeater>
    {
        IItemsRepeater(std::nullptr_t = nullptr) noexcept {}
        IItemsRepeater(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsRepeater2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsRepeater2>
    {
        IItemsRepeater2(std::nullptr_t = nullptr) noexcept {}
        IItemsRepeater2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsRepeaterElementClearingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsRepeaterElementClearingEventArgs>
    {
        IItemsRepeaterElementClearingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IItemsRepeaterElementClearingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsRepeaterElementIndexChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsRepeaterElementIndexChangedEventArgs>
    {
        IItemsRepeaterElementIndexChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IItemsRepeaterElementIndexChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsRepeaterElementPreparedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsRepeaterElementPreparedEventArgs>
    {
        IItemsRepeaterElementPreparedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IItemsRepeaterElementPreparedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsRepeaterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsRepeaterFactory>
    {
        IItemsRepeaterFactory(std::nullptr_t = nullptr) noexcept {}
        IItemsRepeaterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsRepeaterScrollHost :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsRepeaterScrollHost>
    {
        IItemsRepeaterScrollHost(std::nullptr_t = nullptr) noexcept {}
        IItemsRepeaterScrollHost(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsRepeaterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsRepeaterStatics>
    {
        IItemsRepeaterStatics(std::nullptr_t = nullptr) noexcept {}
        IItemsRepeaterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsRepeaterStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsRepeaterStatics2>
    {
        IItemsRepeaterStatics2(std::nullptr_t = nullptr) noexcept {}
        IItemsRepeaterStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsSourceView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsSourceView>
    {
        IItemsSourceView(std::nullptr_t = nullptr) noexcept {}
        IItemsSourceView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsSourceViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsSourceViewFactory>
    {
        IItemsSourceViewFactory(std::nullptr_t = nullptr) noexcept {}
        IItemsSourceViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsStackPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsStackPanel>
    {
        IItemsStackPanel(std::nullptr_t = nullptr) noexcept {}
        IItemsStackPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsStackPanelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsStackPanelStatics>
    {
        IItemsStackPanelStatics(std::nullptr_t = nullptr) noexcept {}
        IItemsStackPanelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsView>
    {
        IItemsView(std::nullptr_t = nullptr) noexcept {}
        IItemsView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsViewFactory>
    {
        IItemsViewFactory(std::nullptr_t = nullptr) noexcept {}
        IItemsViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsViewItemInvokedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsViewItemInvokedEventArgs>
    {
        IItemsViewItemInvokedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IItemsViewItemInvokedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsViewSelectionChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsViewSelectionChangedEventArgs>
    {
        IItemsViewSelectionChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IItemsViewSelectionChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsViewStatics>
    {
        IItemsViewStatics(std::nullptr_t = nullptr) noexcept {}
        IItemsViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsWrapGrid :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsWrapGrid>
    {
        IItemsWrapGrid(std::nullptr_t = nullptr) noexcept {}
        IItemsWrapGrid(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsWrapGridStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsWrapGridStatics>
    {
        IItemsWrapGridStatics(std::nullptr_t = nullptr) noexcept {}
        IItemsWrapGridStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IKeyIndexMapping :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IKeyIndexMapping>
    {
        IKeyIndexMapping(std::nullptr_t = nullptr) noexcept {}
        IKeyIndexMapping(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILayout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILayout>
    {
        ILayout(std::nullptr_t = nullptr) noexcept {}
        ILayout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILayout2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILayout2>
    {
        ILayout2(std::nullptr_t = nullptr) noexcept {}
        ILayout2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILayoutContext :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILayoutContext>
    {
        ILayoutContext(std::nullptr_t = nullptr) noexcept {}
        ILayoutContext(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILayoutContextFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILayoutContextFactory>
    {
        ILayoutContextFactory(std::nullptr_t = nullptr) noexcept {}
        ILayoutContextFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILayoutContextOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILayoutContextOverrides>
    {
        ILayoutContextOverrides(std::nullptr_t = nullptr) noexcept {}
        ILayoutContextOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILayoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILayoutFactory>
    {
        ILayoutFactory(std::nullptr_t = nullptr) noexcept {}
        ILayoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILayoutOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILayoutOverrides>
    {
        ILayoutOverrides(std::nullptr_t = nullptr) noexcept {}
        ILayoutOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILayoutProtected :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILayoutProtected>
    {
        ILayoutProtected(std::nullptr_t = nullptr) noexcept {}
        ILayoutProtected(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILayoutProtected2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILayoutProtected2>
    {
        ILayoutProtected2(std::nullptr_t = nullptr) noexcept {}
        ILayoutProtected2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILinedFlowLayout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILinedFlowLayout>
    {
        ILinedFlowLayout(std::nullptr_t = nullptr) noexcept {}
        ILinedFlowLayout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILinedFlowLayoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILinedFlowLayoutFactory>
    {
        ILinedFlowLayoutFactory(std::nullptr_t = nullptr) noexcept {}
        ILinedFlowLayoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILinedFlowLayoutItemCollectionTransitionProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILinedFlowLayoutItemCollectionTransitionProvider>
    {
        ILinedFlowLayoutItemCollectionTransitionProvider(std::nullptr_t = nullptr) noexcept {}
        ILinedFlowLayoutItemCollectionTransitionProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILinedFlowLayoutItemCollectionTransitionProviderFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILinedFlowLayoutItemCollectionTransitionProviderFactory>
    {
        ILinedFlowLayoutItemCollectionTransitionProviderFactory(std::nullptr_t = nullptr) noexcept {}
        ILinedFlowLayoutItemCollectionTransitionProviderFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILinedFlowLayoutItemsInfoRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILinedFlowLayoutItemsInfoRequestedEventArgs>
    {
        ILinedFlowLayoutItemsInfoRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ILinedFlowLayoutItemsInfoRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILinedFlowLayoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILinedFlowLayoutStatics>
    {
        ILinedFlowLayoutStatics(std::nullptr_t = nullptr) noexcept {}
        ILinedFlowLayoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBox>
    {
        IListBox(std::nullptr_t = nullptr) noexcept {}
        IListBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListBoxFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxFactory>
    {
        IListBoxFactory(std::nullptr_t = nullptr) noexcept {}
        IListBoxFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListBoxItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxItem>
    {
        IListBoxItem(std::nullptr_t = nullptr) noexcept {}
        IListBoxItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListBoxItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxItemFactory>
    {
        IListBoxItemFactory(std::nullptr_t = nullptr) noexcept {}
        IListBoxItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListBoxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxStatics>
    {
        IListBoxStatics(std::nullptr_t = nullptr) noexcept {}
        IListBoxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListPickerFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListPickerFlyout>
    {
        IListPickerFlyout(std::nullptr_t = nullptr) noexcept {}
        IListPickerFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListPickerFlyoutPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListPickerFlyoutPresenter>
    {
        IListPickerFlyoutPresenter(std::nullptr_t = nullptr) noexcept {}
        IListPickerFlyoutPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListPickerFlyoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListPickerFlyoutStatics>
    {
        IListPickerFlyoutStatics(std::nullptr_t = nullptr) noexcept {}
        IListPickerFlyoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListView>
    {
        IListView(std::nullptr_t = nullptr) noexcept {}
        IListView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewBase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBase>
    {
        IListViewBase(std::nullptr_t = nullptr) noexcept {}
        IListViewBase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewBaseFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseFactory>
    {
        IListViewBaseFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewBaseHeaderItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseHeaderItem>
    {
        IListViewBaseHeaderItem(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseHeaderItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewBaseHeaderItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseHeaderItemFactory>
    {
        IListViewBaseHeaderItemFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseHeaderItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewBaseStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseStatics>
    {
        IListViewBaseStatics(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewFactory>
    {
        IListViewFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewHeaderItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewHeaderItem>
    {
        IListViewHeaderItem(std::nullptr_t = nullptr) noexcept {}
        IListViewHeaderItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewHeaderItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewHeaderItemFactory>
    {
        IListViewHeaderItemFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewHeaderItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItem>
    {
        IListViewItem(std::nullptr_t = nullptr) noexcept {}
        IListViewItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemFactory>
    {
        IListViewItemFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewPersistenceHelper :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewPersistenceHelper>
    {
        IListViewPersistenceHelper(std::nullptr_t = nullptr) noexcept {}
        IListViewPersistenceHelper(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewPersistenceHelperStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewPersistenceHelperStatics>
    {
        IListViewPersistenceHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IListViewPersistenceHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaPlayerElement :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerElement>
    {
        IMediaPlayerElement(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerElement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaPlayerElementFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerElementFactory>
    {
        IMediaPlayerElementFactory(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerElementFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaPlayerElementStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerElementStatics>
    {
        IMediaPlayerElementStatics(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerElementStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaPlayerPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerPresenter>
    {
        IMediaPlayerPresenter(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaPlayerPresenterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerPresenterFactory>
    {
        IMediaPlayerPresenterFactory(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerPresenterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaPlayerPresenterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerPresenterStatics>
    {
        IMediaPlayerPresenterStatics(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerPresenterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaTransportControls :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControls>
    {
        IMediaTransportControls(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControls(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaTransportControlsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsFactory>
    {
        IMediaTransportControlsFactory(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaTransportControlsHelper :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsHelper>
    {
        IMediaTransportControlsHelper(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsHelper(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaTransportControlsHelperStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsHelperStatics>
    {
        IMediaTransportControlsHelperStatics(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaTransportControlsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsStatics>
    {
        IMediaTransportControlsStatics(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBar>
    {
        IMenuBar(std::nullptr_t = nullptr) noexcept {}
        IMenuBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuBarFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarFactory>
    {
        IMenuBarFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuBarFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuBarItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarItem>
    {
        IMenuBarItem(std::nullptr_t = nullptr) noexcept {}
        IMenuBarItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuBarItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarItemFactory>
    {
        IMenuBarItemFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuBarItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuBarItemFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarItemFlyout>
    {
        IMenuBarItemFlyout(std::nullptr_t = nullptr) noexcept {}
        IMenuBarItemFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuBarItemFlyoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarItemFlyoutFactory>
    {
        IMenuBarItemFlyoutFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuBarItemFlyoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuBarItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarItemStatics>
    {
        IMenuBarItemStatics(std::nullptr_t = nullptr) noexcept {}
        IMenuBarItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuBarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarStatics>
    {
        IMenuBarStatics(std::nullptr_t = nullptr) noexcept {}
        IMenuBarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyout>
    {
        IMenuFlyout(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutFactory>
    {
        IMenuFlyoutFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItem>
    {
        IMenuFlyoutItem(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutItemBase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemBase>
    {
        IMenuFlyoutItemBase(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemBase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutItemBaseFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemBaseFactory>
    {
        IMenuFlyoutItemBaseFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemFactory>
    {
        IMenuFlyoutItemFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemStatics>
    {
        IMenuFlyoutItemStatics(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenter>
    {
        IMenuFlyoutPresenter(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutPresenter2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenter2>
    {
        IMenuFlyoutPresenter2(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenter2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutPresenterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenterFactory>
    {
        IMenuFlyoutPresenterFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutPresenterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenterStatics>
    {
        IMenuFlyoutPresenterStatics(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutPresenterStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenterStatics2>
    {
        IMenuFlyoutPresenterStatics2(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenterStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutSeparator :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutSeparator>
    {
        IMenuFlyoutSeparator(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutSeparator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutSeparatorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutSeparatorFactory>
    {
        IMenuFlyoutSeparatorFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutSeparatorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutStatics>
    {
        IMenuFlyoutStatics(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutSubItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutSubItem>
    {
        IMenuFlyoutSubItem(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutSubItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutSubItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutSubItemStatics>
    {
        IMenuFlyoutSubItemStatics(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutSubItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigate :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigate>
    {
        INavigate(std::nullptr_t = nullptr) noexcept {}
        INavigate(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationView>
    {
        INavigationView(std::nullptr_t = nullptr) noexcept {}
        INavigationView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationView2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationView2>
    {
        INavigationView2(std::nullptr_t = nullptr) noexcept {}
        INavigationView2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewBackRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewBackRequestedEventArgs>
    {
        INavigationViewBackRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        INavigationViewBackRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewDisplayModeChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewDisplayModeChangedEventArgs>
    {
        INavigationViewDisplayModeChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        INavigationViewDisplayModeChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewFactory>
    {
        INavigationViewFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItem>
    {
        INavigationViewItem(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItem2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItem2>
    {
        INavigationViewItem2(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItem2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItem3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItem3>
    {
        INavigationViewItem3(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItem3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemBase :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemBase>
    {
        INavigationViewItemBase(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemBase(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemBase2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemBase2>
    {
        INavigationViewItemBase2(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemBase2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemBaseFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemBaseFactory>
    {
        INavigationViewItemBaseFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemBaseFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemBaseStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemBaseStatics>
    {
        INavigationViewItemBaseStatics(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemBaseStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemCollapsedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemCollapsedEventArgs>
    {
        INavigationViewItemCollapsedEventArgs(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemCollapsedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemExpandingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemExpandingEventArgs>
    {
        INavigationViewItemExpandingEventArgs(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemExpandingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemFactory>
    {
        INavigationViewItemFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemHeader :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemHeader>
    {
        INavigationViewItemHeader(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemHeader(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemHeaderFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemHeaderFactory>
    {
        INavigationViewItemHeaderFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemHeaderFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemInvokedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemInvokedEventArgs>
    {
        INavigationViewItemInvokedEventArgs(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemInvokedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemInvokedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemInvokedEventArgs2>
    {
        INavigationViewItemInvokedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemInvokedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemSeparator :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemSeparator>
    {
        INavigationViewItemSeparator(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemSeparator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemSeparatorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemSeparatorFactory>
    {
        INavigationViewItemSeparatorFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemSeparatorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemStatics>
    {
        INavigationViewItemStatics(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemStatics2>
    {
        INavigationViewItemStatics2(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemStatics3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemStatics3>
    {
        INavigationViewItemStatics3(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemStatics3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewPaneClosingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewPaneClosingEventArgs>
    {
        INavigationViewPaneClosingEventArgs(std::nullptr_t = nullptr) noexcept {}
        INavigationViewPaneClosingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewSelectionChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewSelectionChangedEventArgs>
    {
        INavigationViewSelectionChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        INavigationViewSelectionChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewSelectionChangedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewSelectionChangedEventArgs2>
    {
        INavigationViewSelectionChangedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        INavigationViewSelectionChangedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewStatics>
    {
        INavigationViewStatics(std::nullptr_t = nullptr) noexcept {}
        INavigationViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewStatics2>
    {
        INavigationViewStatics2(std::nullptr_t = nullptr) noexcept {}
        INavigationViewStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewTemplateSettings>
    {
        INavigationViewTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        INavigationViewTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewTemplateSettings2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewTemplateSettings2>
    {
        INavigationViewTemplateSettings2(std::nullptr_t = nullptr) noexcept {}
        INavigationViewTemplateSettings2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewTemplateSettingsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewTemplateSettingsFactory>
    {
        INavigationViewTemplateSettingsFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewTemplateSettingsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewTemplateSettingsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewTemplateSettingsStatics>
    {
        INavigationViewTemplateSettingsStatics(std::nullptr_t = nullptr) noexcept {}
        INavigationViewTemplateSettingsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewTemplateSettingsStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewTemplateSettingsStatics2>
    {
        INavigationViewTemplateSettingsStatics2(std::nullptr_t = nullptr) noexcept {}
        INavigationViewTemplateSettingsStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INonVirtualizingLayout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INonVirtualizingLayout>
    {
        INonVirtualizingLayout(std::nullptr_t = nullptr) noexcept {}
        INonVirtualizingLayout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INonVirtualizingLayoutContext :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INonVirtualizingLayoutContext>
    {
        INonVirtualizingLayoutContext(std::nullptr_t = nullptr) noexcept {}
        INonVirtualizingLayoutContext(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INonVirtualizingLayoutContextFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INonVirtualizingLayoutContextFactory>
    {
        INonVirtualizingLayoutContextFactory(std::nullptr_t = nullptr) noexcept {}
        INonVirtualizingLayoutContextFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INonVirtualizingLayoutContextOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INonVirtualizingLayoutContextOverrides>
    {
        INonVirtualizingLayoutContextOverrides(std::nullptr_t = nullptr) noexcept {}
        INonVirtualizingLayoutContextOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INonVirtualizingLayoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INonVirtualizingLayoutFactory>
    {
        INonVirtualizingLayoutFactory(std::nullptr_t = nullptr) noexcept {}
        INonVirtualizingLayoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INonVirtualizingLayoutOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INonVirtualizingLayoutOverrides>
    {
        INonVirtualizingLayoutOverrides(std::nullptr_t = nullptr) noexcept {}
        INonVirtualizingLayoutOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INumberBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INumberBox>
    {
        INumberBox(std::nullptr_t = nullptr) noexcept {}
        INumberBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INumberBoxFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INumberBoxFactory>
    {
        INumberBoxFactory(std::nullptr_t = nullptr) noexcept {}
        INumberBoxFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INumberBoxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INumberBoxStatics>
    {
        INumberBoxStatics(std::nullptr_t = nullptr) noexcept {}
        INumberBoxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INumberBoxValueChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INumberBoxValueChangedEventArgs>
    {
        INumberBoxValueChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        INumberBoxValueChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPage>
    {
        IPage(std::nullptr_t = nullptr) noexcept {}
        IPage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPageFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPageFactory>
    {
        IPageFactory(std::nullptr_t = nullptr) noexcept {}
        IPageFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPageOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPageOverrides>
    {
        IPageOverrides(std::nullptr_t = nullptr) noexcept {}
        IPageOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPageStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPageStatics>
    {
        IPageStatics(std::nullptr_t = nullptr) noexcept {}
        IPageStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPanel>
    {
        IPanel(std::nullptr_t = nullptr) noexcept {}
        IPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPanelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPanelFactory>
    {
        IPanelFactory(std::nullptr_t = nullptr) noexcept {}
        IPanelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPanelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPanelStatics>
    {
        IPanelStatics(std::nullptr_t = nullptr) noexcept {}
        IPanelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IParallaxView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IParallaxView>
    {
        IParallaxView(std::nullptr_t = nullptr) noexcept {}
        IParallaxView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IParallaxViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IParallaxViewFactory>
    {
        IParallaxViewFactory(std::nullptr_t = nullptr) noexcept {}
        IParallaxViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IParallaxViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IParallaxViewStatics>
    {
        IParallaxViewStatics(std::nullptr_t = nullptr) noexcept {}
        IParallaxViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPasswordBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBox>
    {
        IPasswordBox(std::nullptr_t = nullptr) noexcept {}
        IPasswordBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPasswordBoxPasswordChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBoxPasswordChangingEventArgs>
    {
        IPasswordBoxPasswordChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IPasswordBoxPasswordChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPasswordBoxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBoxStatics>
    {
        IPasswordBoxStatics(std::nullptr_t = nullptr) noexcept {}
        IPasswordBoxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPathIcon :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPathIcon>
    {
        IPathIcon(std::nullptr_t = nullptr) noexcept {}
        IPathIcon(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPathIconFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPathIconFactory>
    {
        IPathIconFactory(std::nullptr_t = nullptr) noexcept {}
        IPathIconFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPathIconSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPathIconSource>
    {
        IPathIconSource(std::nullptr_t = nullptr) noexcept {}
        IPathIconSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPathIconSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPathIconSourceFactory>
    {
        IPathIconSourceFactory(std::nullptr_t = nullptr) noexcept {}
        IPathIconSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPathIconSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPathIconSourceStatics>
    {
        IPathIconSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IPathIconSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPathIconStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPathIconStatics>
    {
        IPathIconStatics(std::nullptr_t = nullptr) noexcept {}
        IPathIconStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPersonPicture :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPersonPicture>
    {
        IPersonPicture(std::nullptr_t = nullptr) noexcept {}
        IPersonPicture(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPersonPictureFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPersonPictureFactory>
    {
        IPersonPictureFactory(std::nullptr_t = nullptr) noexcept {}
        IPersonPictureFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPersonPictureStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPersonPictureStatics>
    {
        IPersonPictureStatics(std::nullptr_t = nullptr) noexcept {}
        IPersonPictureStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPersonPictureTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPersonPictureTemplateSettings>
    {
        IPersonPictureTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IPersonPictureTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPickerConfirmedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickerConfirmedEventArgs>
    {
        IPickerConfirmedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IPickerConfirmedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPickerFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickerFlyout>
    {
        IPickerFlyout(std::nullptr_t = nullptr) noexcept {}
        IPickerFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPickerFlyoutPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickerFlyoutPresenter>
    {
        IPickerFlyoutPresenter(std::nullptr_t = nullptr) noexcept {}
        IPickerFlyoutPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPickerFlyoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickerFlyoutStatics>
    {
        IPickerFlyoutStatics(std::nullptr_t = nullptr) noexcept {}
        IPickerFlyoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPipsPager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPipsPager>
    {
        IPipsPager(std::nullptr_t = nullptr) noexcept {}
        IPipsPager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPipsPagerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPipsPagerFactory>
    {
        IPipsPagerFactory(std::nullptr_t = nullptr) noexcept {}
        IPipsPagerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPipsPagerSelectedIndexChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPipsPagerSelectedIndexChangedEventArgs>
    {
        IPipsPagerSelectedIndexChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IPipsPagerSelectedIndexChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPipsPagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPipsPagerStatics>
    {
        IPipsPagerStatics(std::nullptr_t = nullptr) noexcept {}
        IPipsPagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPipsPagerTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPipsPagerTemplateSettings>
    {
        IPipsPagerTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IPipsPagerTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPivot :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivot>
    {
        IPivot(std::nullptr_t = nullptr) noexcept {}
        IPivot(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPivotFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotFactory>
    {
        IPivotFactory(std::nullptr_t = nullptr) noexcept {}
        IPivotFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPivotItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItem>
    {
        IPivotItem(std::nullptr_t = nullptr) noexcept {}
        IPivotItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPivotItemEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItemEventArgs>
    {
        IPivotItemEventArgs(std::nullptr_t = nullptr) noexcept {}
        IPivotItemEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPivotItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItemFactory>
    {
        IPivotItemFactory(std::nullptr_t = nullptr) noexcept {}
        IPivotItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPivotItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItemStatics>
    {
        IPivotItemStatics(std::nullptr_t = nullptr) noexcept {}
        IPivotItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPivotStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotStatics>
    {
        IPivotStatics(std::nullptr_t = nullptr) noexcept {}
        IPivotStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IProgressBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressBar>
    {
        IProgressBar(std::nullptr_t = nullptr) noexcept {}
        IProgressBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IProgressBarFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressBarFactory>
    {
        IProgressBarFactory(std::nullptr_t = nullptr) noexcept {}
        IProgressBarFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IProgressBarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressBarStatics>
    {
        IProgressBarStatics(std::nullptr_t = nullptr) noexcept {}
        IProgressBarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IProgressBarTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressBarTemplateSettings>
    {
        IProgressBarTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IProgressBarTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IProgressRing :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressRing>
    {
        IProgressRing(std::nullptr_t = nullptr) noexcept {}
        IProgressRing(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IProgressRingFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressRingFactory>
    {
        IProgressRingFactory(std::nullptr_t = nullptr) noexcept {}
        IProgressRingFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IProgressRingStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressRingStatics>
    {
        IProgressRingStatics(std::nullptr_t = nullptr) noexcept {}
        IProgressRingStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IProgressRingTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressRingTemplateSettings>
    {
        IProgressRingTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        IProgressRingTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRadioButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButton>
    {
        IRadioButton(std::nullptr_t = nullptr) noexcept {}
        IRadioButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRadioButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButtonFactory>
    {
        IRadioButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IRadioButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRadioButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButtonStatics>
    {
        IRadioButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IRadioButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRadioButtons :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButtons>
    {
        IRadioButtons(std::nullptr_t = nullptr) noexcept {}
        IRadioButtons(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRadioButtonsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButtonsFactory>
    {
        IRadioButtonsFactory(std::nullptr_t = nullptr) noexcept {}
        IRadioButtonsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRadioButtonsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButtonsStatics>
    {
        IRadioButtonsStatics(std::nullptr_t = nullptr) noexcept {}
        IRadioButtonsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRadioMenuFlyoutItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioMenuFlyoutItem>
    {
        IRadioMenuFlyoutItem(std::nullptr_t = nullptr) noexcept {}
        IRadioMenuFlyoutItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRadioMenuFlyoutItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioMenuFlyoutItemFactory>
    {
        IRadioMenuFlyoutItemFactory(std::nullptr_t = nullptr) noexcept {}
        IRadioMenuFlyoutItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRadioMenuFlyoutItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioMenuFlyoutItemStatics>
    {
        IRadioMenuFlyoutItemStatics(std::nullptr_t = nullptr) noexcept {}
        IRadioMenuFlyoutItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRadioMenuFlyoutItemStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioMenuFlyoutItemStatics2>
    {
        IRadioMenuFlyoutItemStatics2(std::nullptr_t = nullptr) noexcept {}
        IRadioMenuFlyoutItemStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRatingControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingControl>
    {
        IRatingControl(std::nullptr_t = nullptr) noexcept {}
        IRatingControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRatingControlFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingControlFactory>
    {
        IRatingControlFactory(std::nullptr_t = nullptr) noexcept {}
        IRatingControlFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRatingControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingControlStatics>
    {
        IRatingControlStatics(std::nullptr_t = nullptr) noexcept {}
        IRatingControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRatingItemFontInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemFontInfo>
    {
        IRatingItemFontInfo(std::nullptr_t = nullptr) noexcept {}
        IRatingItemFontInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRatingItemFontInfoFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemFontInfoFactory>
    {
        IRatingItemFontInfoFactory(std::nullptr_t = nullptr) noexcept {}
        IRatingItemFontInfoFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRatingItemFontInfoStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemFontInfoStatics>
    {
        IRatingItemFontInfoStatics(std::nullptr_t = nullptr) noexcept {}
        IRatingItemFontInfoStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRatingItemImageInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemImageInfo>
    {
        IRatingItemImageInfo(std::nullptr_t = nullptr) noexcept {}
        IRatingItemImageInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRatingItemImageInfoFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemImageInfoFactory>
    {
        IRatingItemImageInfoFactory(std::nullptr_t = nullptr) noexcept {}
        IRatingItemImageInfoFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRatingItemImageInfoStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemImageInfoStatics>
    {
        IRatingItemImageInfoStatics(std::nullptr_t = nullptr) noexcept {}
        IRatingItemImageInfoStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRatingItemInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemInfo>
    {
        IRatingItemInfo(std::nullptr_t = nullptr) noexcept {}
        IRatingItemInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRatingItemInfoFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingItemInfoFactory>
    {
        IRatingItemInfoFactory(std::nullptr_t = nullptr) noexcept {}
        IRatingItemInfoFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRefreshContainer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshContainer>
    {
        IRefreshContainer(std::nullptr_t = nullptr) noexcept {}
        IRefreshContainer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRefreshContainerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshContainerFactory>
    {
        IRefreshContainerFactory(std::nullptr_t = nullptr) noexcept {}
        IRefreshContainerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRefreshContainerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshContainerStatics>
    {
        IRefreshContainerStatics(std::nullptr_t = nullptr) noexcept {}
        IRefreshContainerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRefreshInteractionRatioChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshInteractionRatioChangedEventArgs>
    {
        IRefreshInteractionRatioChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRefreshInteractionRatioChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRefreshRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshRequestedEventArgs>
    {
        IRefreshRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRefreshRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRefreshStateChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshStateChangedEventArgs>
    {
        IRefreshStateChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRefreshStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRefreshVisualizer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshVisualizer>
    {
        IRefreshVisualizer(std::nullptr_t = nullptr) noexcept {}
        IRefreshVisualizer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRefreshVisualizerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshVisualizerFactory>
    {
        IRefreshVisualizerFactory(std::nullptr_t = nullptr) noexcept {}
        IRefreshVisualizerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRefreshVisualizerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRefreshVisualizerStatics>
    {
        IRefreshVisualizerStatics(std::nullptr_t = nullptr) noexcept {}
        IRefreshVisualizerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRelativePanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRelativePanel>
    {
        IRelativePanel(std::nullptr_t = nullptr) noexcept {}
        IRelativePanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRelativePanelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRelativePanelFactory>
    {
        IRelativePanelFactory(std::nullptr_t = nullptr) noexcept {}
        IRelativePanelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRelativePanelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRelativePanelStatics>
    {
        IRelativePanelStatics(std::nullptr_t = nullptr) noexcept {}
        IRelativePanelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRevealListViewItemPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRevealListViewItemPresenter>
    {
        IRevealListViewItemPresenter(std::nullptr_t = nullptr) noexcept {}
        IRevealListViewItemPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRevealListViewItemPresenterFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRevealListViewItemPresenterFactory>
    {
        IRevealListViewItemPresenterFactory(std::nullptr_t = nullptr) noexcept {}
        IRevealListViewItemPresenterFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichEditBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBox>
    {
        IRichEditBox(std::nullptr_t = nullptr) noexcept {}
        IRichEditBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichEditBoxFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxFactory>
    {
        IRichEditBoxFactory(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichEditBoxSelectionChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxSelectionChangingEventArgs>
    {
        IRichEditBoxSelectionChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxSelectionChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichEditBoxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxStatics>
    {
        IRichEditBoxStatics(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichEditBoxTextChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxTextChangingEventArgs>
    {
        IRichEditBoxTextChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxTextChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichTextBlock :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlock>
    {
        IRichTextBlock(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlock(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichTextBlockOverflow :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockOverflow>
    {
        IRichTextBlockOverflow(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockOverflow(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichTextBlockOverflowStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockOverflowStatics>
    {
        IRichTextBlockOverflowStatics(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockOverflowStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichTextBlockStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockStatics>
    {
        IRichTextBlockStatics(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRowDefinition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRowDefinition>
    {
        IRowDefinition(std::nullptr_t = nullptr) noexcept {}
        IRowDefinition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRowDefinitionStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRowDefinitionStatics>
    {
        IRowDefinitionStatics(std::nullptr_t = nullptr) noexcept {}
        IRowDefinitionStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollAnchorProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollAnchorProvider>
    {
        IScrollAnchorProvider(std::nullptr_t = nullptr) noexcept {}
        IScrollAnchorProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollContentPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollContentPresenter>
    {
        IScrollContentPresenter(std::nullptr_t = nullptr) noexcept {}
        IScrollContentPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollContentPresenterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollContentPresenterStatics>
    {
        IScrollContentPresenterStatics(std::nullptr_t = nullptr) noexcept {}
        IScrollContentPresenterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollView>
    {
        IScrollView(std::nullptr_t = nullptr) noexcept {}
        IScrollView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewFactory>
    {
        IScrollViewFactory(std::nullptr_t = nullptr) noexcept {}
        IScrollViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewStatics>
    {
        IScrollViewStatics(std::nullptr_t = nullptr) noexcept {}
        IScrollViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollViewer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewer>
    {
        IScrollViewer(std::nullptr_t = nullptr) noexcept {}
        IScrollViewer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollViewerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewerStatics>
    {
        IScrollViewerStatics(std::nullptr_t = nullptr) noexcept {}
        IScrollViewerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollViewerView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewerView>
    {
        IScrollViewerView(std::nullptr_t = nullptr) noexcept {}
        IScrollViewerView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollViewerViewChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewerViewChangedEventArgs>
    {
        IScrollViewerViewChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IScrollViewerViewChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollViewerViewChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewerViewChangingEventArgs>
    {
        IScrollViewerViewChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IScrollViewerViewChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollingAnchorRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollingAnchorRequestedEventArgs>
    {
        IScrollingAnchorRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IScrollingAnchorRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollingBringingIntoViewEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollingBringingIntoViewEventArgs>
    {
        IScrollingBringingIntoViewEventArgs(std::nullptr_t = nullptr) noexcept {}
        IScrollingBringingIntoViewEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollingScrollAnimationStartingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollingScrollAnimationStartingEventArgs>
    {
        IScrollingScrollAnimationStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IScrollingScrollAnimationStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollingScrollCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollingScrollCompletedEventArgs>
    {
        IScrollingScrollCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IScrollingScrollCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollingScrollOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollingScrollOptions>
    {
        IScrollingScrollOptions(std::nullptr_t = nullptr) noexcept {}
        IScrollingScrollOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollingScrollOptionsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollingScrollOptionsFactory>
    {
        IScrollingScrollOptionsFactory(std::nullptr_t = nullptr) noexcept {}
        IScrollingScrollOptionsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollingZoomAnimationStartingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollingZoomAnimationStartingEventArgs>
    {
        IScrollingZoomAnimationStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        IScrollingZoomAnimationStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollingZoomCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollingZoomCompletedEventArgs>
    {
        IScrollingZoomCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IScrollingZoomCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollingZoomOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollingZoomOptions>
    {
        IScrollingZoomOptions(std::nullptr_t = nullptr) noexcept {}
        IScrollingZoomOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollingZoomOptionsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollingZoomOptionsFactory>
    {
        IScrollingZoomOptionsFactory(std::nullptr_t = nullptr) noexcept {}
        IScrollingZoomOptionsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISectionsInViewChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISectionsInViewChangedEventArgs>
    {
        ISectionsInViewChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISectionsInViewChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISectionsInViewChangedEventArgsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISectionsInViewChangedEventArgsFactory>
    {
        ISectionsInViewChangedEventArgsFactory(std::nullptr_t = nullptr) noexcept {}
        ISectionsInViewChangedEventArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISelectionChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectionChangedEventArgs>
    {
        ISelectionChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISelectionChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISelectionChangedEventArgsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectionChangedEventArgsFactory>
    {
        ISelectionChangedEventArgsFactory(std::nullptr_t = nullptr) noexcept {}
        ISelectionChangedEventArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISemanticZoom :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISemanticZoom>
    {
        ISemanticZoom(std::nullptr_t = nullptr) noexcept {}
        ISemanticZoom(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISemanticZoomInformation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISemanticZoomInformation>
    {
        ISemanticZoomInformation(std::nullptr_t = nullptr) noexcept {}
        ISemanticZoomInformation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISemanticZoomLocation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISemanticZoomLocation>
    {
        ISemanticZoomLocation(std::nullptr_t = nullptr) noexcept {}
        ISemanticZoomLocation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISemanticZoomStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISemanticZoomStatics>
    {
        ISemanticZoomStatics(std::nullptr_t = nullptr) noexcept {}
        ISemanticZoomStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISemanticZoomViewChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISemanticZoomViewChangedEventArgs>
    {
        ISemanticZoomViewChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISemanticZoomViewChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISlider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISlider>
    {
        ISlider(std::nullptr_t = nullptr) noexcept {}
        ISlider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISliderFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISliderFactory>
    {
        ISliderFactory(std::nullptr_t = nullptr) noexcept {}
        ISliderFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISliderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISliderStatics>
    {
        ISliderStatics(std::nullptr_t = nullptr) noexcept {}
        ISliderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISplitButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitButton>
    {
        ISplitButton(std::nullptr_t = nullptr) noexcept {}
        ISplitButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISplitButtonClickEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitButtonClickEventArgs>
    {
        ISplitButtonClickEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISplitButtonClickEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISplitButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitButtonFactory>
    {
        ISplitButtonFactory(std::nullptr_t = nullptr) noexcept {}
        ISplitButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISplitButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitButtonStatics>
    {
        ISplitButtonStatics(std::nullptr_t = nullptr) noexcept {}
        ISplitButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISplitView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitView>
    {
        ISplitView(std::nullptr_t = nullptr) noexcept {}
        ISplitView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISplitViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitViewFactory>
    {
        ISplitViewFactory(std::nullptr_t = nullptr) noexcept {}
        ISplitViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISplitViewPaneClosingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitViewPaneClosingEventArgs>
    {
        ISplitViewPaneClosingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISplitViewPaneClosingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISplitViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitViewStatics>
    {
        ISplitViewStatics(std::nullptr_t = nullptr) noexcept {}
        ISplitViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IStackLayout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackLayout>
    {
        IStackLayout(std::nullptr_t = nullptr) noexcept {}
        IStackLayout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IStackLayoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackLayoutFactory>
    {
        IStackLayoutFactory(std::nullptr_t = nullptr) noexcept {}
        IStackLayoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IStackLayoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackLayoutStatics>
    {
        IStackLayoutStatics(std::nullptr_t = nullptr) noexcept {}
        IStackLayoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IStackPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackPanel>
    {
        IStackPanel(std::nullptr_t = nullptr) noexcept {}
        IStackPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IStackPanelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackPanelFactory>
    {
        IStackPanelFactory(std::nullptr_t = nullptr) noexcept {}
        IStackPanelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IStackPanelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStackPanelStatics>
    {
        IStackPanelStatics(std::nullptr_t = nullptr) noexcept {}
        IStackPanelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IStyleSelector :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStyleSelector>
    {
        IStyleSelector(std::nullptr_t = nullptr) noexcept {}
        IStyleSelector(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IStyleSelectorFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStyleSelectorFactory>
    {
        IStyleSelectorFactory(std::nullptr_t = nullptr) noexcept {}
        IStyleSelectorFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IStyleSelectorOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStyleSelectorOverrides>
    {
        IStyleSelectorOverrides(std::nullptr_t = nullptr) noexcept {}
        IStyleSelectorOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwapChainBackgroundPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwapChainBackgroundPanel>
    {
        ISwapChainBackgroundPanel(std::nullptr_t = nullptr) noexcept {}
        ISwapChainBackgroundPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwapChainBackgroundPanelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwapChainBackgroundPanelFactory>
    {
        ISwapChainBackgroundPanelFactory(std::nullptr_t = nullptr) noexcept {}
        ISwapChainBackgroundPanelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwapChainPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwapChainPanel>
    {
        ISwapChainPanel(std::nullptr_t = nullptr) noexcept {}
        ISwapChainPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwapChainPanelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwapChainPanelFactory>
    {
        ISwapChainPanelFactory(std::nullptr_t = nullptr) noexcept {}
        ISwapChainPanelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwapChainPanelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwapChainPanelStatics>
    {
        ISwapChainPanelStatics(std::nullptr_t = nullptr) noexcept {}
        ISwapChainPanelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwipeControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeControl>
    {
        ISwipeControl(std::nullptr_t = nullptr) noexcept {}
        ISwipeControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwipeControlFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeControlFactory>
    {
        ISwipeControlFactory(std::nullptr_t = nullptr) noexcept {}
        ISwipeControlFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwipeControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeControlStatics>
    {
        ISwipeControlStatics(std::nullptr_t = nullptr) noexcept {}
        ISwipeControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwipeItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeItem>
    {
        ISwipeItem(std::nullptr_t = nullptr) noexcept {}
        ISwipeItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwipeItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeItemFactory>
    {
        ISwipeItemFactory(std::nullptr_t = nullptr) noexcept {}
        ISwipeItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwipeItemInvokedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeItemInvokedEventArgs>
    {
        ISwipeItemInvokedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISwipeItemInvokedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwipeItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeItemStatics>
    {
        ISwipeItemStatics(std::nullptr_t = nullptr) noexcept {}
        ISwipeItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwipeItems :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeItems>
    {
        ISwipeItems(std::nullptr_t = nullptr) noexcept {}
        ISwipeItems(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwipeItemsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeItemsFactory>
    {
        ISwipeItemsFactory(std::nullptr_t = nullptr) noexcept {}
        ISwipeItemsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISwipeItemsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISwipeItemsStatics>
    {
        ISwipeItemsStatics(std::nullptr_t = nullptr) noexcept {}
        ISwipeItemsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISymbolIcon :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymbolIcon>
    {
        ISymbolIcon(std::nullptr_t = nullptr) noexcept {}
        ISymbolIcon(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISymbolIconFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymbolIconFactory>
    {
        ISymbolIconFactory(std::nullptr_t = nullptr) noexcept {}
        ISymbolIconFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISymbolIconSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymbolIconSource>
    {
        ISymbolIconSource(std::nullptr_t = nullptr) noexcept {}
        ISymbolIconSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISymbolIconSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymbolIconSourceFactory>
    {
        ISymbolIconSourceFactory(std::nullptr_t = nullptr) noexcept {}
        ISymbolIconSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISymbolIconSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymbolIconSourceStatics>
    {
        ISymbolIconSourceStatics(std::nullptr_t = nullptr) noexcept {}
        ISymbolIconSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISymbolIconStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISymbolIconStatics>
    {
        ISymbolIconStatics(std::nullptr_t = nullptr) noexcept {}
        ISymbolIconStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabView>
    {
        ITabView(std::nullptr_t = nullptr) noexcept {}
        ITabView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewFactory>
    {
        ITabViewFactory(std::nullptr_t = nullptr) noexcept {}
        ITabViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewItem>
    {
        ITabViewItem(std::nullptr_t = nullptr) noexcept {}
        ITabViewItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewItemFactory>
    {
        ITabViewItemFactory(std::nullptr_t = nullptr) noexcept {}
        ITabViewItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewItemStatics>
    {
        ITabViewItemStatics(std::nullptr_t = nullptr) noexcept {}
        ITabViewItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewItemTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewItemTemplateSettings>
    {
        ITabViewItemTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        ITabViewItemTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewItemTemplateSettings2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewItemTemplateSettings2>
    {
        ITabViewItemTemplateSettings2(std::nullptr_t = nullptr) noexcept {}
        ITabViewItemTemplateSettings2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewItemTemplateSettingsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewItemTemplateSettingsFactory>
    {
        ITabViewItemTemplateSettingsFactory(std::nullptr_t = nullptr) noexcept {}
        ITabViewItemTemplateSettingsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewItemTemplateSettingsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewItemTemplateSettingsStatics>
    {
        ITabViewItemTemplateSettingsStatics(std::nullptr_t = nullptr) noexcept {}
        ITabViewItemTemplateSettingsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewItemTemplateSettingsStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewItemTemplateSettingsStatics2>
    {
        ITabViewItemTemplateSettingsStatics2(std::nullptr_t = nullptr) noexcept {}
        ITabViewItemTemplateSettingsStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewStatics>
    {
        ITabViewStatics(std::nullptr_t = nullptr) noexcept {}
        ITabViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewTabCloseRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewTabCloseRequestedEventArgs>
    {
        ITabViewTabCloseRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITabViewTabCloseRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewTabDragCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewTabDragCompletedEventArgs>
    {
        ITabViewTabDragCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITabViewTabDragCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewTabDragStartingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewTabDragStartingEventArgs>
    {
        ITabViewTabDragStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITabViewTabDragStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewTabDroppedOutsideEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewTabDroppedOutsideEventArgs>
    {
        ITabViewTabDroppedOutsideEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITabViewTabDroppedOutsideEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITeachingTip :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITeachingTip>
    {
        ITeachingTip(std::nullptr_t = nullptr) noexcept {}
        ITeachingTip(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITeachingTipClosedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITeachingTipClosedEventArgs>
    {
        ITeachingTipClosedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITeachingTipClosedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITeachingTipClosingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITeachingTipClosingEventArgs>
    {
        ITeachingTipClosingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITeachingTipClosingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITeachingTipFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITeachingTipFactory>
    {
        ITeachingTipFactory(std::nullptr_t = nullptr) noexcept {}
        ITeachingTipFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITeachingTipStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITeachingTipStatics>
    {
        ITeachingTipStatics(std::nullptr_t = nullptr) noexcept {}
        ITeachingTipStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITeachingTipTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITeachingTipTemplateSettings>
    {
        ITeachingTipTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        ITeachingTipTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITeachingTipTemplateSettingsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITeachingTipTemplateSettingsFactory>
    {
        ITeachingTipTemplateSettingsFactory(std::nullptr_t = nullptr) noexcept {}
        ITeachingTipTemplateSettingsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITeachingTipTemplateSettingsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITeachingTipTemplateSettingsStatics>
    {
        ITeachingTipTemplateSettingsStatics(std::nullptr_t = nullptr) noexcept {}
        ITeachingTipTemplateSettingsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextBlock :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlock>
    {
        ITextBlock(std::nullptr_t = nullptr) noexcept {}
        ITextBlock(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextBlockStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlockStatics>
    {
        ITextBlockStatics(std::nullptr_t = nullptr) noexcept {}
        ITextBlockStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBox>
    {
        ITextBox(std::nullptr_t = nullptr) noexcept {}
        ITextBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextBoxBeforeTextChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxBeforeTextChangingEventArgs>
    {
        ITextBoxBeforeTextChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextBoxBeforeTextChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextBoxFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxFactory>
    {
        ITextBoxFactory(std::nullptr_t = nullptr) noexcept {}
        ITextBoxFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextBoxSelectionChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxSelectionChangingEventArgs>
    {
        ITextBoxSelectionChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextBoxSelectionChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextBoxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxStatics>
    {
        ITextBoxStatics(std::nullptr_t = nullptr) noexcept {}
        ITextBoxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextBoxTextChangingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxTextChangingEventArgs>
    {
        ITextBoxTextChangingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextBoxTextChangingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextChangedEventArgs>
    {
        ITextChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextCommandBarFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextCommandBarFlyout>
    {
        ITextCommandBarFlyout(std::nullptr_t = nullptr) noexcept {}
        ITextCommandBarFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextCommandBarFlyoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextCommandBarFlyoutFactory>
    {
        ITextCommandBarFlyoutFactory(std::nullptr_t = nullptr) noexcept {}
        ITextCommandBarFlyoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextCompositionChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextCompositionChangedEventArgs>
    {
        ITextCompositionChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextCompositionChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextCompositionEndedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextCompositionEndedEventArgs>
    {
        ITextCompositionEndedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextCompositionEndedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextCompositionStartedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextCompositionStartedEventArgs>
    {
        ITextCompositionStartedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextCompositionStartedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextControlCopyingToClipboardEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextControlCopyingToClipboardEventArgs>
    {
        ITextControlCopyingToClipboardEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextControlCopyingToClipboardEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextControlCuttingToClipboardEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextControlCuttingToClipboardEventArgs>
    {
        ITextControlCuttingToClipboardEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextControlCuttingToClipboardEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextControlPasteEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextControlPasteEventArgs>
    {
        ITextControlPasteEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITextControlPasteEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITimePickedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickedEventArgs>
    {
        ITimePickedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITimePickedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITimePicker :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePicker>
    {
        ITimePicker(std::nullptr_t = nullptr) noexcept {}
        ITimePicker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITimePickerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerFactory>
    {
        ITimePickerFactory(std::nullptr_t = nullptr) noexcept {}
        ITimePickerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITimePickerFlyout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerFlyout>
    {
        ITimePickerFlyout(std::nullptr_t = nullptr) noexcept {}
        ITimePickerFlyout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITimePickerFlyoutPresenter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerFlyoutPresenter>
    {
        ITimePickerFlyoutPresenter(std::nullptr_t = nullptr) noexcept {}
        ITimePickerFlyoutPresenter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITimePickerFlyoutPresenterStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerFlyoutPresenterStatics>
    {
        ITimePickerFlyoutPresenterStatics(std::nullptr_t = nullptr) noexcept {}
        ITimePickerFlyoutPresenterStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITimePickerFlyoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerFlyoutStatics>
    {
        ITimePickerFlyoutStatics(std::nullptr_t = nullptr) noexcept {}
        ITimePickerFlyoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITimePickerSelectedValueChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerSelectedValueChangedEventArgs>
    {
        ITimePickerSelectedValueChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITimePickerSelectedValueChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITimePickerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerStatics>
    {
        ITimePickerStatics(std::nullptr_t = nullptr) noexcept {}
        ITimePickerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITimePickerValueChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerValueChangedEventArgs>
    {
        ITimePickerValueChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITimePickerValueChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleMenuFlyoutItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleMenuFlyoutItem>
    {
        IToggleMenuFlyoutItem(std::nullptr_t = nullptr) noexcept {}
        IToggleMenuFlyoutItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleMenuFlyoutItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleMenuFlyoutItemFactory>
    {
        IToggleMenuFlyoutItemFactory(std::nullptr_t = nullptr) noexcept {}
        IToggleMenuFlyoutItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleMenuFlyoutItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleMenuFlyoutItemStatics>
    {
        IToggleMenuFlyoutItemStatics(std::nullptr_t = nullptr) noexcept {}
        IToggleMenuFlyoutItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleSplitButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSplitButton>
    {
        IToggleSplitButton(std::nullptr_t = nullptr) noexcept {}
        IToggleSplitButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleSplitButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSplitButtonFactory>
    {
        IToggleSplitButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IToggleSplitButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleSplitButtonIsCheckedChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSplitButtonIsCheckedChangedEventArgs>
    {
        IToggleSplitButtonIsCheckedChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IToggleSplitButtonIsCheckedChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleSplitButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSplitButtonStatics>
    {
        IToggleSplitButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IToggleSplitButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleSwitch :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSwitch>
    {
        IToggleSwitch(std::nullptr_t = nullptr) noexcept {}
        IToggleSwitch(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleSwitchOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSwitchOverrides>
    {
        IToggleSwitchOverrides(std::nullptr_t = nullptr) noexcept {}
        IToggleSwitchOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleSwitchStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSwitchStatics>
    {
        IToggleSwitchStatics(std::nullptr_t = nullptr) noexcept {}
        IToggleSwitchStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToolTip :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToolTip>
    {
        IToolTip(std::nullptr_t = nullptr) noexcept {}
        IToolTip(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToolTipFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToolTipFactory>
    {
        IToolTipFactory(std::nullptr_t = nullptr) noexcept {}
        IToolTipFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToolTipService :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToolTipService>
    {
        IToolTipService(std::nullptr_t = nullptr) noexcept {}
        IToolTipService(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToolTipServiceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToolTipServiceStatics>
    {
        IToolTipServiceStatics(std::nullptr_t = nullptr) noexcept {}
        IToolTipServiceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToolTipStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToolTipStatics>
    {
        IToolTipStatics(std::nullptr_t = nullptr) noexcept {}
        IToolTipStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeView>
    {
        ITreeView(std::nullptr_t = nullptr) noexcept {}
        ITreeView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeView2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeView2>
    {
        ITreeView2(std::nullptr_t = nullptr) noexcept {}
        ITreeView2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeView3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeView3>
    {
        ITreeView3(std::nullptr_t = nullptr) noexcept {}
        ITreeView3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewCollapsedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewCollapsedEventArgs>
    {
        ITreeViewCollapsedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITreeViewCollapsedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewCollapsedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewCollapsedEventArgs2>
    {
        ITreeViewCollapsedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        ITreeViewCollapsedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewDragItemsCompletedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewDragItemsCompletedEventArgs>
    {
        ITreeViewDragItemsCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITreeViewDragItemsCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewDragItemsCompletedEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewDragItemsCompletedEventArgs2>
    {
        ITreeViewDragItemsCompletedEventArgs2(std::nullptr_t = nullptr) noexcept {}
        ITreeViewDragItemsCompletedEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewDragItemsStartingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewDragItemsStartingEventArgs>
    {
        ITreeViewDragItemsStartingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITreeViewDragItemsStartingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewExpandingEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewExpandingEventArgs>
    {
        ITreeViewExpandingEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITreeViewExpandingEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewExpandingEventArgs2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewExpandingEventArgs2>
    {
        ITreeViewExpandingEventArgs2(std::nullptr_t = nullptr) noexcept {}
        ITreeViewExpandingEventArgs2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewFactory>
    {
        ITreeViewFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItem>
    {
        ITreeViewItem(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewItem2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItem2>
    {
        ITreeViewItem2(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItem2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemFactory>
    {
        ITreeViewItemFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewItemInvokedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemInvokedEventArgs>
    {
        ITreeViewItemInvokedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemInvokedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewItemStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemStatics>
    {
        ITreeViewItemStatics(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewItemStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemStatics2>
    {
        ITreeViewItemStatics2(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewItemTemplateSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemTemplateSettings>
    {
        ITreeViewItemTemplateSettings(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemTemplateSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewItemTemplateSettingsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemTemplateSettingsFactory>
    {
        ITreeViewItemTemplateSettingsFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemTemplateSettingsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewItemTemplateSettingsStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemTemplateSettingsStatics>
    {
        ITreeViewItemTemplateSettingsStatics(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemTemplateSettingsStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewList :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewList>
    {
        ITreeViewList(std::nullptr_t = nullptr) noexcept {}
        ITreeViewList(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewListFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewListFactory>
    {
        ITreeViewListFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewListFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewNode :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewNode>
    {
        ITreeViewNode(std::nullptr_t = nullptr) noexcept {}
        ITreeViewNode(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewNodeFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewNodeFactory>
    {
        ITreeViewNodeFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewNodeFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewNodeStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewNodeStatics>
    {
        ITreeViewNodeStatics(std::nullptr_t = nullptr) noexcept {}
        ITreeViewNodeStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewSelectionChangedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewSelectionChangedEventArgs>
    {
        ITreeViewSelectionChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITreeViewSelectionChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewStatics>
    {
        ITreeViewStatics(std::nullptr_t = nullptr) noexcept {}
        ITreeViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewStatics2>
    {
        ITreeViewStatics2(std::nullptr_t = nullptr) noexcept {}
        ITreeViewStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITwoPaneView :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITwoPaneView>
    {
        ITwoPaneView(std::nullptr_t = nullptr) noexcept {}
        ITwoPaneView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITwoPaneViewFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITwoPaneViewFactory>
    {
        ITwoPaneViewFactory(std::nullptr_t = nullptr) noexcept {}
        ITwoPaneViewFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITwoPaneViewStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITwoPaneViewStatics>
    {
        ITwoPaneViewStatics(std::nullptr_t = nullptr) noexcept {}
        ITwoPaneViewStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IUIElementCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUIElementCollection>
    {
        IUIElementCollection(std::nullptr_t = nullptr) noexcept {}
        IUIElementCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IUniformGridLayout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUniformGridLayout>
    {
        IUniformGridLayout(std::nullptr_t = nullptr) noexcept {}
        IUniformGridLayout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IUniformGridLayoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUniformGridLayoutFactory>
    {
        IUniformGridLayoutFactory(std::nullptr_t = nullptr) noexcept {}
        IUniformGridLayoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IUniformGridLayoutStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUniformGridLayoutStatics>
    {
        IUniformGridLayoutStatics(std::nullptr_t = nullptr) noexcept {}
        IUniformGridLayoutStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IUserControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserControl>
    {
        IUserControl(std::nullptr_t = nullptr) noexcept {}
        IUserControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IUserControlFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserControlFactory>
    {
        IUserControlFactory(std::nullptr_t = nullptr) noexcept {}
        IUserControlFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IUserControlStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IUserControlStatics>
    {
        IUserControlStatics(std::nullptr_t = nullptr) noexcept {}
        IUserControlStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVariableSizedWrapGrid :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVariableSizedWrapGrid>
    {
        IVariableSizedWrapGrid(std::nullptr_t = nullptr) noexcept {}
        IVariableSizedWrapGrid(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVariableSizedWrapGridStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVariableSizedWrapGridStatics>
    {
        IVariableSizedWrapGridStatics(std::nullptr_t = nullptr) noexcept {}
        IVariableSizedWrapGridStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IViewbox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IViewbox>
    {
        IViewbox(std::nullptr_t = nullptr) noexcept {}
        IViewbox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IViewboxStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IViewboxStatics>
    {
        IViewboxStatics(std::nullptr_t = nullptr) noexcept {}
        IViewboxStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingLayout :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingLayout>
    {
        IVirtualizingLayout(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingLayout(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingLayoutContext :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingLayoutContext>
    {
        IVirtualizingLayoutContext(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingLayoutContext(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingLayoutContext2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingLayoutContext2>
    {
        IVirtualizingLayoutContext2(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingLayoutContext2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingLayoutContextFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingLayoutContextFactory>
    {
        IVirtualizingLayoutContextFactory(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingLayoutContextFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingLayoutContextOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingLayoutContextOverrides>
    {
        IVirtualizingLayoutContextOverrides(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingLayoutContextOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingLayoutContextOverrides2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingLayoutContextOverrides2>
    {
        IVirtualizingLayoutContextOverrides2(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingLayoutContextOverrides2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingLayoutFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingLayoutFactory>
    {
        IVirtualizingLayoutFactory(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingLayoutFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingLayoutOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingLayoutOverrides>
    {
        IVirtualizingLayoutOverrides(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingLayoutOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingPanel>
    {
        IVirtualizingPanel(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingPanelFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingPanelFactory>
    {
        IVirtualizingPanelFactory(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingPanelFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingPanelOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingPanelOverrides>
    {
        IVirtualizingPanelOverrides(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingPanelOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingPanelProtected :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingPanelProtected>
    {
        IVirtualizingPanelProtected(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingPanelProtected(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingStackPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingStackPanel>
    {
        IVirtualizingStackPanel(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingStackPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingStackPanelOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingStackPanelOverrides>
    {
        IVirtualizingStackPanelOverrides(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingStackPanelOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IVirtualizingStackPanelStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualizingStackPanelStatics>
    {
        IVirtualizingStackPanelStatics(std::nullptr_t = nullptr) noexcept {}
        IVirtualizingStackPanelStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IWebView2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebView2>
    {
        IWebView2(std::nullptr_t = nullptr) noexcept {}
        IWebView2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IWebView2Factory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebView2Factory>
    {
        IWebView2Factory(std::nullptr_t = nullptr) noexcept {}
        IWebView2Factory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IWebView2Statics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebView2Statics>
    {
        IWebView2Statics(std::nullptr_t = nullptr) noexcept {}
        IWebView2Statics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IWrapGrid :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWrapGrid>
    {
        IWrapGrid(std::nullptr_t = nullptr) noexcept {}
        IWrapGrid(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IWrapGridStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWrapGridStatics>
    {
        IWrapGridStatics(std::nullptr_t = nullptr) noexcept {}
        IWrapGridStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IXamlControlsResources :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlControlsResources>
    {
        IXamlControlsResources(std::nullptr_t = nullptr) noexcept {}
        IXamlControlsResources(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IXamlControlsResourcesStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IXamlControlsResourcesStatics>
    {
        IXamlControlsResourcesStatics(std::nullptr_t = nullptr) noexcept {}
        IXamlControlsResourcesStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
