// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240111.5

#pragma once
#ifndef WINRT_Microsoft_Windows_BadgeNotifications_0_H
#define WINRT_Microsoft_Windows_BadgeNotifications_0_H
WINRT_EXPORT namespace winrt::Microsoft::Windows::BadgeNotifications
{
    enum class BadgeNotificationGlyph : int32_t
    {
        None = 0,
        Activity = 1,
        Alarm = 2,
        Alert = 3,
        Attention = 4,
        Available = 5,
        Away = 6,
        Busy = 7,
        Error = 8,
        NewMessage = 9,
        Paused = 10,
        Playing = 11,
        Unavailable = 12,
    };
    struct IBadgeNotificationManager;
    struct IBadgeNotificationManagerStatics;
    struct BadgeNotificationManager;
    struct BadgeNotificationsContract;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::Windows::BadgeNotifications::IBadgeNotificationManager>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::BadgeNotifications::IBadgeNotificationManagerStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::BadgeNotifications::BadgeNotificationManager>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::BadgeNotifications::BadgeNotificationGlyph>{ using type = enum_category; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::BadgeNotifications::BadgeNotificationManager> = L"Microsoft.Windows.BadgeNotifications.BadgeNotificationManager";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::BadgeNotifications::BadgeNotificationGlyph> = L"Microsoft.Windows.BadgeNotifications.BadgeNotificationGlyph";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::BadgeNotifications::IBadgeNotificationManager> = L"Microsoft.Windows.BadgeNotifications.IBadgeNotificationManager";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::BadgeNotifications::IBadgeNotificationManagerStatics> = L"Microsoft.Windows.BadgeNotifications.IBadgeNotificationManagerStatics";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::BadgeNotifications::BadgeNotificationsContract> = L"Microsoft.Windows.BadgeNotifications.BadgeNotificationsContract";
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::BadgeNotifications::IBadgeNotificationManager>{ 0x11CB6E8F,0x11CA,0x53F8,{ 0x80,0xF6,0x53,0x30,0xD4,0x4B,0xA9,0x08 } }; // 11CB6E8F-11CA-53F8-80F6-5330D44BA908
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::BadgeNotifications::IBadgeNotificationManagerStatics>{ 0xA6E71616,0x7C9F,0x5D22,{ 0xAD,0x1C,0xF4,0xAB,0x87,0x40,0x87,0xB5 } }; // A6E71616-7C9F-5D22-AD1C-F4AB874087B5
    template <> struct default_interface<winrt::Microsoft::Windows::BadgeNotifications::BadgeNotificationManager>{ using type = winrt::Microsoft::Windows::BadgeNotifications::IBadgeNotificationManager; };
    template <> struct abi<winrt::Microsoft::Windows::BadgeNotifications::IBadgeNotificationManager>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall SetBadgeAsCount(uint32_t) noexcept = 0;
            virtual int32_t __stdcall SetBadgeAsGlyph(int32_t) noexcept = 0;
            virtual int32_t __stdcall ClearBadge() noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::BadgeNotifications::IBadgeNotificationManagerStatics>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Current(void**) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_Windows_BadgeNotifications_IBadgeNotificationManager
    {
        auto SetBadgeAsCount(uint32_t notificationCount) const;
        auto SetBadgeAsGlyph(winrt::Microsoft::Windows::BadgeNotifications::BadgeNotificationGlyph const& glyphValue) const;
        auto ClearBadge() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::BadgeNotifications::IBadgeNotificationManager>
    {
        template <typename D> using type = consume_Microsoft_Windows_BadgeNotifications_IBadgeNotificationManager<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_BadgeNotifications_IBadgeNotificationManagerStatics
    {
        [[nodiscard]] auto Current() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::BadgeNotifications::IBadgeNotificationManagerStatics>
    {
        template <typename D> using type = consume_Microsoft_Windows_BadgeNotifications_IBadgeNotificationManagerStatics<D>;
    };
}
#endif
