// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.230706.1

#pragma once
#ifndef WINRT_Microsoft_Windows_AppLifecycle_1_H
#define WINRT_Microsoft_Windows_AppLifecycle_1_H
#include "winrt/impl/Microsoft.Windows.AppLifecycle.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::AppLifecycle
{
    struct WINRT_IMPL_EMPTY_BASES IActivationRegistrationManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActivationRegistrationManagerStatics>
    {
        IActivationRegistrationManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IActivationRegistrationManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppActivationArguments :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppActivationArguments>
    {
        IAppActivationArguments(std::nullptr_t = nullptr) noexcept {}
        IAppActivationArguments(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppInstance :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppInstance>
    {
        IAppInstance(std::nullptr_t = nullptr) noexcept {}
        IAppInstance(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppInstanceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppInstanceStatics>
    {
        IAppInstanceStatics(std::nullptr_t = nullptr) noexcept {}
        IAppInstanceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppInstanceStatics2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppInstanceStatics2>
    {
        IAppInstanceStatics2(std::nullptr_t = nullptr) noexcept {}
        IAppInstanceStatics2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
