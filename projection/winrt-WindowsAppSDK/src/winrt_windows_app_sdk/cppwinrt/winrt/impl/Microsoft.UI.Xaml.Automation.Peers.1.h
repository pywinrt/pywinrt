// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.230706.1

#pragma once
#ifndef WINRT_Microsoft_UI_Xaml_Automation_Peers_1_H
#define WINRT_Microsoft_UI_Xaml_Automation_Peers_1_H
#include "winrt/impl/Microsoft.UI.Xaml.Automation.Peers.0.h"
WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Automation::Peers
{
    struct WINRT_IMPL_EMPTY_BASES IAnimatedVisualPlayerAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedVisualPlayerAutomationPeer>
    {
        IAnimatedVisualPlayerAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IAnimatedVisualPlayerAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAnimatedVisualPlayerAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAnimatedVisualPlayerAutomationPeerFactory>
    {
        IAnimatedVisualPlayerAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IAnimatedVisualPlayerAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarAutomationPeer>
    {
        IAppBarAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IAppBarAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarAutomationPeerFactory>
    {
        IAppBarAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButtonAutomationPeer>
    {
        IAppBarButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IAppBarButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarButtonAutomationPeerFactory>
    {
        IAppBarButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarToggleButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButtonAutomationPeer>
    {
        IAppBarToggleButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAppBarToggleButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBarToggleButtonAutomationPeerFactory>
    {
        IAppBarToggleButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IAppBarToggleButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutoSuggestBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxAutomationPeer>
    {
        IAutoSuggestBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutoSuggestBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutoSuggestBoxAutomationPeerFactory>
    {
        IAutoSuggestBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IAutoSuggestBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeer>
    {
        IAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutomationPeerAnnotation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerAnnotation>
    {
        IAutomationPeerAnnotation(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerAnnotation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutomationPeerAnnotationFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerAnnotationFactory>
    {
        IAutomationPeerAnnotationFactory(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerAnnotationFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutomationPeerAnnotationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerAnnotationStatics>
    {
        IAutomationPeerAnnotationStatics(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerAnnotationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerFactory>
    {
        IAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutomationPeerOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerOverrides>
    {
        IAutomationPeerOverrides(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutomationPeerProtected :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerProtected>
    {
        IAutomationPeerProtected(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerProtected(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IAutomationPeerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAutomationPeerStatics>
    {
        IAutomationPeerStatics(std::nullptr_t = nullptr) noexcept {}
        IAutomationPeerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBreadcrumbBarItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBreadcrumbBarItemAutomationPeer>
    {
        IBreadcrumbBarItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IBreadcrumbBarItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IBreadcrumbBarItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBreadcrumbBarItemAutomationPeerFactory>
    {
        IBreadcrumbBarItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IBreadcrumbBarItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonAutomationPeer>
    {
        IButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonAutomationPeerFactory>
    {
        IButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IButtonBaseAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonBaseAutomationPeer>
    {
        IButtonBaseAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IButtonBaseAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IButtonBaseAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IButtonBaseAutomationPeerFactory>
    {
        IButtonBaseAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IButtonBaseAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICalendarDatePickerAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePickerAutomationPeer>
    {
        ICalendarDatePickerAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePickerAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICalendarDatePickerAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalendarDatePickerAutomationPeerFactory>
    {
        ICalendarDatePickerAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ICalendarDatePickerAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICheckBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICheckBoxAutomationPeer>
    {
        ICheckBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ICheckBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICheckBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICheckBoxAutomationPeerFactory>
    {
        ICheckBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ICheckBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IColorPickerSliderAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPickerSliderAutomationPeer>
    {
        IColorPickerSliderAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IColorPickerSliderAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IColorPickerSliderAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorPickerSliderAutomationPeerFactory>
    {
        IColorPickerSliderAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IColorPickerSliderAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IColorSpectrumAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorSpectrumAutomationPeer>
    {
        IColorSpectrumAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IColorSpectrumAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IColorSpectrumAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IColorSpectrumAutomationPeerFactory>
    {
        IColorSpectrumAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IColorSpectrumAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IComboBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxAutomationPeer>
    {
        IComboBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IComboBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IComboBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxAutomationPeerFactory>
    {
        IComboBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IComboBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IComboBoxItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxItemAutomationPeer>
    {
        IComboBoxItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IComboBoxItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IComboBoxItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxItemAutomationPeerFactory>
    {
        IComboBoxItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IComboBoxItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IComboBoxItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxItemDataAutomationPeer>
    {
        IComboBoxItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IComboBoxItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IComboBoxItemDataAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IComboBoxItemDataAutomationPeerFactory>
    {
        IComboBoxItemDataAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IComboBoxItemDataAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePickerAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerAutomationPeer>
    {
        IDatePickerAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IDatePickerAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePickerAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerAutomationPeerFactory>
    {
        IDatePickerAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IDatePickerAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDatePickerFlyoutPresenterAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDatePickerFlyoutPresenterAutomationPeer>
    {
        IDatePickerFlyoutPresenterAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IDatePickerFlyoutPresenterAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDropDownButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDropDownButtonAutomationPeer>
    {
        IDropDownButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IDropDownButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IDropDownButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDropDownButtonAutomationPeerFactory>
    {
        IDropDownButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IDropDownButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IExpanderAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpanderAutomationPeer>
    {
        IExpanderAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IExpanderAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IExpanderAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExpanderAutomationPeerFactory>
    {
        IExpanderAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IExpanderAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlipViewAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewAutomationPeer>
    {
        IFlipViewAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IFlipViewAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlipViewAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewAutomationPeerFactory>
    {
        IFlipViewAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IFlipViewAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlipViewItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewItemAutomationPeer>
    {
        IFlipViewItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IFlipViewItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlipViewItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewItemAutomationPeerFactory>
    {
        IFlipViewItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IFlipViewItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlipViewItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewItemDataAutomationPeer>
    {
        IFlipViewItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IFlipViewItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlipViewItemDataAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlipViewItemDataAutomationPeerFactory>
    {
        IFlipViewItemDataAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IFlipViewItemDataAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlyoutPresenterAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutPresenterAutomationPeer>
    {
        IFlyoutPresenterAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IFlyoutPresenterAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFlyoutPresenterAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFlyoutPresenterAutomationPeerFactory>
    {
        IFlyoutPresenterAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IFlyoutPresenterAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFrameworkElementAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementAutomationPeer>
    {
        IFrameworkElementAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFrameworkElementAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementAutomationPeerFactory>
    {
        IFrameworkElementAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IFrameworkElementAutomationPeerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFrameworkElementAutomationPeerStatics>
    {
        IFrameworkElementAutomationPeerStatics(std::nullptr_t = nullptr) noexcept {}
        IFrameworkElementAutomationPeerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridViewAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewAutomationPeer>
    {
        IGridViewAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IGridViewAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridViewAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewAutomationPeerFactory>
    {
        IGridViewAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridViewHeaderItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewHeaderItemAutomationPeer>
    {
        IGridViewHeaderItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IGridViewHeaderItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridViewHeaderItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewHeaderItemAutomationPeerFactory>
    {
        IGridViewHeaderItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewHeaderItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridViewItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItemAutomationPeer>
    {
        IGridViewItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IGridViewItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridViewItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItemAutomationPeerFactory>
    {
        IGridViewItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridViewItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItemDataAutomationPeer>
    {
        IGridViewItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IGridViewItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGridViewItemDataAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGridViewItemDataAutomationPeerFactory>
    {
        IGridViewItemDataAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IGridViewItemDataAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGroupItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupItemAutomationPeer>
    {
        IGroupItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IGroupItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IGroupItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGroupItemAutomationPeerFactory>
    {
        IGroupItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IGroupItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHubAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubAutomationPeer>
    {
        IHubAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IHubAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHubAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubAutomationPeerFactory>
    {
        IHubAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IHubAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHubSectionAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubSectionAutomationPeer>
    {
        IHubSectionAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IHubSectionAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHubSectionAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHubSectionAutomationPeerFactory>
    {
        IHubSectionAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IHubSectionAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHyperlinkButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkButtonAutomationPeer>
    {
        IHyperlinkButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHyperlinkButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHyperlinkButtonAutomationPeerFactory>
    {
        IHyperlinkButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IHyperlinkButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageAutomationPeer>
    {
        IImageAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IImageAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IImageAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IImageAutomationPeerFactory>
    {
        IImageAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IImageAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBarAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBarAutomationPeer>
    {
        IInfoBarAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IInfoBarAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IInfoBarAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IInfoBarAutomationPeerFactory>
    {
        IInfoBarAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IInfoBarAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemAutomationPeer>
    {
        IItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemAutomationPeerFactory>
    {
        IItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemContainerAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemContainerAutomationPeer>
    {
        IItemContainerAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IItemContainerAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemContainerAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemContainerAutomationPeerFactory>
    {
        IItemContainerAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IItemContainerAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsControlAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControlAutomationPeer>
    {
        IItemsControlAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IItemsControlAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsControlAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControlAutomationPeerFactory>
    {
        IItemsControlAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IItemsControlAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsControlAutomationPeerOverrides :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsControlAutomationPeerOverrides>
    {
        IItemsControlAutomationPeerOverrides(std::nullptr_t = nullptr) noexcept {}
        IItemsControlAutomationPeerOverrides(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsViewAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsViewAutomationPeer>
    {
        IItemsViewAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IItemsViewAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IItemsViewAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IItemsViewAutomationPeerFactory>
    {
        IItemsViewAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IItemsViewAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxAutomationPeer>
    {
        IListBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxAutomationPeerFactory>
    {
        IListBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListBoxItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxItemAutomationPeer>
    {
        IListBoxItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListBoxItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListBoxItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxItemAutomationPeerFactory>
    {
        IListBoxItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListBoxItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListBoxItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxItemDataAutomationPeer>
    {
        IListBoxItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListBoxItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListBoxItemDataAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListBoxItemDataAutomationPeerFactory>
    {
        IListBoxItemDataAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListBoxItemDataAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListPickerFlyoutPresenterAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListPickerFlyoutPresenterAutomationPeer>
    {
        IListPickerFlyoutPresenterAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListPickerFlyoutPresenterAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewAutomationPeer>
    {
        IListViewAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListViewAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewAutomationPeerFactory>
    {
        IListViewAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewBaseAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseAutomationPeer>
    {
        IListViewBaseAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewBaseAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseAutomationPeerFactory>
    {
        IListViewBaseAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewBaseHeaderItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseHeaderItemAutomationPeer>
    {
        IListViewBaseHeaderItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseHeaderItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewBaseHeaderItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewBaseHeaderItemAutomationPeerFactory>
    {
        IListViewBaseHeaderItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewBaseHeaderItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewHeaderItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewHeaderItemAutomationPeer>
    {
        IListViewHeaderItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListViewHeaderItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewHeaderItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewHeaderItemAutomationPeerFactory>
    {
        IListViewHeaderItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewHeaderItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemAutomationPeer>
    {
        IListViewItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListViewItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemAutomationPeerFactory>
    {
        IListViewItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemDataAutomationPeer>
    {
        IListViewItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IListViewItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IListViewItemDataAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IListViewItemDataAutomationPeerFactory>
    {
        IListViewItemDataAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IListViewItemDataAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILoopingSelectorAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILoopingSelectorAutomationPeer>
    {
        ILoopingSelectorAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ILoopingSelectorAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILoopingSelectorItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILoopingSelectorItemAutomationPeer>
    {
        ILoopingSelectorItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ILoopingSelectorItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ILoopingSelectorItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILoopingSelectorItemDataAutomationPeer>
    {
        ILoopingSelectorItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ILoopingSelectorItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaPlayerElementAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerElementAutomationPeer>
    {
        IMediaPlayerElementAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerElementAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaPlayerElementAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaPlayerElementAutomationPeerFactory>
    {
        IMediaPlayerElementAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IMediaPlayerElementAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaTransportControlsAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsAutomationPeer>
    {
        IMediaTransportControlsAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMediaTransportControlsAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMediaTransportControlsAutomationPeerFactory>
    {
        IMediaTransportControlsAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IMediaTransportControlsAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuBarAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarAutomationPeer>
    {
        IMenuBarAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IMenuBarAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuBarAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarAutomationPeerFactory>
    {
        IMenuBarAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuBarAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuBarItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarItemAutomationPeer>
    {
        IMenuBarItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IMenuBarItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuBarItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuBarItemAutomationPeerFactory>
    {
        IMenuBarItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuBarItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemAutomationPeer>
    {
        IMenuFlyoutItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutItemAutomationPeerFactory>
    {
        IMenuFlyoutItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutPresenterAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenterAutomationPeer>
    {
        IMenuFlyoutPresenterAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenterAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMenuFlyoutPresenterAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMenuFlyoutPresenterAutomationPeerFactory>
    {
        IMenuFlyoutPresenterAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IMenuFlyoutPresenterAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewAutomationPeer>
    {
        INavigationViewAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        INavigationViewAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewAutomationPeerFactory>
    {
        INavigationViewAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemAutomationPeer>
    {
        INavigationViewItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INavigationViewItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INavigationViewItemAutomationPeerFactory>
    {
        INavigationViewItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        INavigationViewItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INumberBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INumberBoxAutomationPeer>
    {
        INumberBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        INumberBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES INumberBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INumberBoxAutomationPeerFactory>
    {
        INumberBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        INumberBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPasswordBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBoxAutomationPeer>
    {
        IPasswordBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IPasswordBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPasswordBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPasswordBoxAutomationPeerFactory>
    {
        IPasswordBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IPasswordBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPersonPictureAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPersonPictureAutomationPeer>
    {
        IPersonPictureAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IPersonPictureAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPersonPictureAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPersonPictureAutomationPeerFactory>
    {
        IPersonPictureAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IPersonPictureAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPickerFlyoutPresenterAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPickerFlyoutPresenterAutomationPeer>
    {
        IPickerFlyoutPresenterAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IPickerFlyoutPresenterAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPipsPagerAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPipsPagerAutomationPeer>
    {
        IPipsPagerAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IPipsPagerAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPipsPagerAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPipsPagerAutomationPeerFactory>
    {
        IPipsPagerAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IPipsPagerAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPivotAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotAutomationPeer>
    {
        IPivotAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IPivotAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPivotAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotAutomationPeerFactory>
    {
        IPivotAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IPivotAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPivotItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItemAutomationPeer>
    {
        IPivotItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IPivotItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPivotItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItemAutomationPeerFactory>
    {
        IPivotItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IPivotItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPivotItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItemDataAutomationPeer>
    {
        IPivotItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IPivotItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IPivotItemDataAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPivotItemDataAutomationPeerFactory>
    {
        IPivotItemDataAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IPivotItemDataAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IProgressBarAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressBarAutomationPeer>
    {
        IProgressBarAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IProgressBarAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IProgressBarAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressBarAutomationPeerFactory>
    {
        IProgressBarAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IProgressBarAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IProgressRingAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressRingAutomationPeer>
    {
        IProgressRingAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IProgressRingAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IProgressRingAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IProgressRingAutomationPeerFactory>
    {
        IProgressRingAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IProgressRingAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRadioButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButtonAutomationPeer>
    {
        IRadioButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRadioButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRadioButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButtonAutomationPeerFactory>
    {
        IRadioButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRadioButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRadioButtonsAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButtonsAutomationPeer>
    {
        IRadioButtonsAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRadioButtonsAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRadioButtonsAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRadioButtonsAutomationPeerFactory>
    {
        IRadioButtonsAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRadioButtonsAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRangeBaseAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRangeBaseAutomationPeer>
    {
        IRangeBaseAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRangeBaseAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRangeBaseAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRangeBaseAutomationPeerFactory>
    {
        IRangeBaseAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRangeBaseAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRatingControlAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingControlAutomationPeer>
    {
        IRatingControlAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRatingControlAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRatingControlAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRatingControlAutomationPeerFactory>
    {
        IRatingControlAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRatingControlAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRepeatButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepeatButtonAutomationPeer>
    {
        IRepeatButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRepeatButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRepeatButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepeatButtonAutomationPeerFactory>
    {
        IRepeatButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRepeatButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRepeaterAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepeaterAutomationPeer>
    {
        IRepeaterAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRepeaterAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRepeaterAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRepeaterAutomationPeerFactory>
    {
        IRepeaterAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRepeaterAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichEditBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxAutomationPeer>
    {
        IRichEditBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichEditBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichEditBoxAutomationPeerFactory>
    {
        IRichEditBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRichEditBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichTextBlockAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockAutomationPeer>
    {
        IRichTextBlockAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichTextBlockAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockAutomationPeerFactory>
    {
        IRichTextBlockAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichTextBlockOverflowAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockOverflowAutomationPeer>
    {
        IRichTextBlockOverflowAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockOverflowAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IRichTextBlockOverflowAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRichTextBlockOverflowAutomationPeerFactory>
    {
        IRichTextBlockOverflowAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IRichTextBlockOverflowAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollBarAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollBarAutomationPeer>
    {
        IScrollBarAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IScrollBarAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollBarAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollBarAutomationPeerFactory>
    {
        IScrollBarAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IScrollBarAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollViewerAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewerAutomationPeer>
    {
        IScrollViewerAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IScrollViewerAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScrollViewerAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScrollViewerAutomationPeerFactory>
    {
        IScrollViewerAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IScrollViewerAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISelectorAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectorAutomationPeer>
    {
        ISelectorAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ISelectorAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISelectorAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectorAutomationPeerFactory>
    {
        ISelectorAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ISelectorAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISelectorItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectorItemAutomationPeer>
    {
        ISelectorItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ISelectorItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISelectorItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISelectorItemAutomationPeerFactory>
    {
        ISelectorItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ISelectorItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISemanticZoomAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISemanticZoomAutomationPeer>
    {
        ISemanticZoomAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ISemanticZoomAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISemanticZoomAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISemanticZoomAutomationPeerFactory>
    {
        ISemanticZoomAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ISemanticZoomAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISliderAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISliderAutomationPeer>
    {
        ISliderAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ISliderAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISliderAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISliderAutomationPeerFactory>
    {
        ISliderAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ISliderAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISplitButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitButtonAutomationPeer>
    {
        ISplitButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ISplitButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISplitButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISplitButtonAutomationPeerFactory>
    {
        ISplitButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ISplitButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewAutomationPeer>
    {
        ITabViewAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITabViewAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewAutomationPeerFactory>
    {
        ITabViewAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ITabViewAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewItemAutomationPeer>
    {
        ITabViewItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITabViewItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITabViewItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITabViewItemAutomationPeerFactory>
    {
        ITabViewItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ITabViewItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITeachingTipAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITeachingTipAutomationPeer>
    {
        ITeachingTipAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITeachingTipAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITeachingTipAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITeachingTipAutomationPeerFactory>
    {
        ITeachingTipAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ITeachingTipAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextBlockAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlockAutomationPeer>
    {
        ITextBlockAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITextBlockAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextBlockAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBlockAutomationPeerFactory>
    {
        ITextBlockAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ITextBlockAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextBoxAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxAutomationPeer>
    {
        ITextBoxAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITextBoxAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITextBoxAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextBoxAutomationPeerFactory>
    {
        ITextBoxAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ITextBoxAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IThumbAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IThumbAutomationPeer>
    {
        IThumbAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IThumbAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IThumbAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IThumbAutomationPeerFactory>
    {
        IThumbAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IThumbAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITimePickerAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerAutomationPeer>
    {
        ITimePickerAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITimePickerAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITimePickerAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerAutomationPeerFactory>
    {
        ITimePickerAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ITimePickerAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITimePickerFlyoutPresenterAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITimePickerFlyoutPresenterAutomationPeer>
    {
        ITimePickerFlyoutPresenterAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITimePickerFlyoutPresenterAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleButtonAutomationPeer>
    {
        IToggleButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IToggleButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleButtonAutomationPeerFactory>
    {
        IToggleButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IToggleButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleMenuFlyoutItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleMenuFlyoutItemAutomationPeer>
    {
        IToggleMenuFlyoutItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IToggleMenuFlyoutItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleMenuFlyoutItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleMenuFlyoutItemAutomationPeerFactory>
    {
        IToggleMenuFlyoutItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IToggleMenuFlyoutItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleSplitButtonAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSplitButtonAutomationPeer>
    {
        IToggleSplitButtonAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IToggleSplitButtonAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleSplitButtonAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSplitButtonAutomationPeerFactory>
    {
        IToggleSplitButtonAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IToggleSplitButtonAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleSwitchAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSwitchAutomationPeer>
    {
        IToggleSwitchAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IToggleSwitchAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IToggleSwitchAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IToggleSwitchAutomationPeerFactory>
    {
        IToggleSwitchAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IToggleSwitchAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewItemAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemAutomationPeer>
    {
        ITreeViewItemAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewItemAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemAutomationPeerFactory>
    {
        ITreeViewItemAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewItemDataAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemDataAutomationPeer>
    {
        ITreeViewItemDataAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemDataAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewItemDataAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewItemDataAutomationPeerFactory>
    {
        ITreeViewItemDataAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewItemDataAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewListAutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewListAutomationPeer>
    {
        ITreeViewListAutomationPeer(std::nullptr_t = nullptr) noexcept {}
        ITreeViewListAutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ITreeViewListAutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITreeViewListAutomationPeerFactory>
    {
        ITreeViewListAutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        ITreeViewListAutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IWebView2AutomationPeer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebView2AutomationPeer>
    {
        IWebView2AutomationPeer(std::nullptr_t = nullptr) noexcept {}
        IWebView2AutomationPeer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IWebView2AutomationPeerFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebView2AutomationPeerFactory>
    {
        IWebView2AutomationPeerFactory(std::nullptr_t = nullptr) noexcept {}
        IWebView2AutomationPeerFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
