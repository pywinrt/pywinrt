// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.230706.1

#pragma once
#ifndef WINRT_Microsoft_Windows_ApplicationModel_DynamicDependency_0_H
#define WINRT_Microsoft_Windows_ApplicationModel_DynamicDependency_0_H
WINRT_EXPORT namespace winrt::Windows::ApplicationModel
{
    struct PackageVersion;
}
WINRT_EXPORT namespace winrt::Microsoft::Windows::ApplicationModel::DynamicDependency
{
    enum class PackageDependencyLifetimeArtifactKind : int32_t
    {
        Process = 0,
        FilePath = 1,
        RegistryKey = 2,
    };
    enum class PackageDependencyProcessorArchitectures : uint32_t
    {
        None = 0,
        Neutral = 0x1,
        X86 = 0x2,
        X64 = 0x4,
        Arm = 0x8,
        Arm64 = 0x10,
        X86OnArm64 = 0x20,
    };
    struct IAddPackageDependencyOptions;
    struct ICreatePackageDependencyOptions;
    struct IPackageDependency;
    struct IPackageDependencyContext;
    struct IPackageDependencyContextFactory;
    struct IPackageDependencyRankStatics;
    struct IPackageDependencyStatics;
    struct IPackageDependencyStatics2;
    struct AddPackageDependencyOptions;
    struct CreatePackageDependencyOptions;
    struct PackageDependency;
    struct PackageDependencyContext;
    struct PackageDependencyRank;
    struct PackageDependencyContextId;
    struct DynamicDependencyContract;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IAddPackageDependencyOptions>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::ICreatePackageDependencyOptions>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependency>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyContext>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyContextFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyRankStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyStatics2>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::AddPackageDependencyOptions>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::CreatePackageDependencyOptions>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependency>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyContext>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyRank>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyLifetimeArtifactKind>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyProcessorArchitectures>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyContextId>{ using type = struct_category<uint64_t>; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::AddPackageDependencyOptions> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::CreatePackageDependencyOptions> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependency> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyContext> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyRank> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyRank";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyLifetimeArtifactKind> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyLifetimeArtifactKind";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyProcessorArchitectures> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyProcessorArchitectures";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyContextId> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContextId";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IAddPackageDependencyOptions> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptions";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::ICreatePackageDependencyOptions> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptions";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependency> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependency";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyContext> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContext";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyContextFactory> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyRankStatics> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyRankStatics";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyStatics> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyStatics2> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics2";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::DynamicDependencyContract> = L"Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract";
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IAddPackageDependencyOptions>{ 0x01B801FD,0x24E3,0x5E6B,{ 0x9F,0x1C,0x80,0x5A,0xB4,0x10,0xB6,0x04 } }; // 01B801FD-24E3-5E6B-9F1C-805AB410B604
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::ICreatePackageDependencyOptions>{ 0xCDBB820F,0x3C69,0x55DC,{ 0xA0,0x17,0xB4,0x13,0x25,0x74,0xC5,0xD6 } }; // CDBB820F-3C69-55DC-A017-B4132574C5D6
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependency>{ 0x32AE7B95,0xE358,0x5A48,{ 0x96,0x69,0xC9,0x7D,0x85,0xAD,0x65,0x56 } }; // 32AE7B95-E358-5A48-9669-C97D85AD6556
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyContext>{ 0x9902C35A,0xA3F5,0x5645,{ 0xAF,0x0F,0xCD,0xF9,0xFC,0xA0,0x0D,0x5E } }; // 9902C35A-A3F5-5645-AF0F-CDF9FCA00D5E
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyContextFactory>{ 0x9914F24F,0xBEBF,0x516B,{ 0xAD,0xAB,0x5C,0x3E,0x8B,0xF3,0x23,0xF8 } }; // 9914F24F-BEBF-516B-ADAB-5C3E8BF323F8
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyRankStatics>{ 0x260583BD,0xA4AB,0x53FD,{ 0xA1,0x90,0xC4,0x46,0xBF,0xDB,0x53,0x84 } }; // 260583BD-A4AB-53FD-A190-C446BFDB5384
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyStatics>{ 0x17B656E1,0x1A58,0x5F3C,{ 0x84,0xA8,0x44,0x30,0xF6,0xE7,0x49,0xC2 } }; // 17B656E1-1A58-5F3C-84A8-4430F6E749C2
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyStatics2>{ 0xC7C6E4F3,0xC0CA,0x5FDB,{ 0xBE,0xF2,0x57,0xE6,0x02,0x0F,0xFE,0x4E } }; // C7C6E4F3-C0CA-5FDB-BEF2-57E6020FFE4E
    template <> struct default_interface<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::AddPackageDependencyOptions>{ using type = winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IAddPackageDependencyOptions; };
    template <> struct default_interface<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::CreatePackageDependencyOptions>{ using type = winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::ICreatePackageDependencyOptions; };
    template <> struct default_interface<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependency>{ using type = winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependency; };
    template <> struct default_interface<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyContext>{ using type = winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyContext; };
    template <> struct abi<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IAddPackageDependencyOptions>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Rank(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_Rank(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_PrependIfRankCollision(bool*) noexcept = 0;
            virtual int32_t __stdcall put_PrependIfRankCollision(bool) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::ICreatePackageDependencyOptions>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Architectures(uint32_t*) noexcept = 0;
            virtual int32_t __stdcall put_Architectures(uint32_t) noexcept = 0;
            virtual int32_t __stdcall get_VerifyDependencyResolution(bool*) noexcept = 0;
            virtual int32_t __stdcall put_VerifyDependencyResolution(bool) noexcept = 0;
            virtual int32_t __stdcall get_LifetimeArtifactKind(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_LifetimeArtifactKind(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_LifetimeArtifact(void**) noexcept = 0;
            virtual int32_t __stdcall put_LifetimeArtifact(void*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependency>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Id(void**) noexcept = 0;
            virtual int32_t __stdcall Delete() noexcept = 0;
            virtual int32_t __stdcall Add(void**) noexcept = 0;
            virtual int32_t __stdcall Add2(void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyContext>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_ContextId(struct struct_Microsoft_Windows_ApplicationModel_DynamicDependency_PackageDependencyContextId*) noexcept = 0;
            virtual int32_t __stdcall get_PackageDependencyId(void**) noexcept = 0;
            virtual int32_t __stdcall get_PackageFullName(void**) noexcept = 0;
            virtual int32_t __stdcall Remove() noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyContextFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(struct struct_Microsoft_Windows_ApplicationModel_DynamicDependency_PackageDependencyContextId, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyRankStatics>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Default(int32_t*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyStatics>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GetFromId(void*, void**) noexcept = 0;
            virtual int32_t __stdcall GetFromIdForSystem(void*, void**) noexcept = 0;
            virtual int32_t __stdcall Create(void*, struct struct_Windows_ApplicationModel_PackageVersion, void**) noexcept = 0;
            virtual int32_t __stdcall Create2(void*, struct struct_Windows_ApplicationModel_PackageVersion, void*, void**) noexcept = 0;
            virtual int32_t __stdcall CreateForSystem(void*, struct struct_Windows_ApplicationModel_PackageVersion, void*, void**) noexcept = 0;
            virtual int32_t __stdcall get_GenerationId(uint32_t*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyStatics2>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_PackageGraphRevisionId(uint32_t*) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_Windows_ApplicationModel_DynamicDependency_IAddPackageDependencyOptions
    {
        [[nodiscard]] auto Rank() const;
        auto Rank(int32_t value) const;
        [[nodiscard]] auto PrependIfRankCollision() const;
        auto PrependIfRankCollision(bool value) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IAddPackageDependencyOptions>
    {
        template <typename D> using type = consume_Microsoft_Windows_ApplicationModel_DynamicDependency_IAddPackageDependencyOptions<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_ApplicationModel_DynamicDependency_ICreatePackageDependencyOptions
    {
        [[nodiscard]] auto Architectures() const;
        auto Architectures(winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyProcessorArchitectures const& value) const;
        [[nodiscard]] auto VerifyDependencyResolution() const;
        auto VerifyDependencyResolution(bool value) const;
        [[nodiscard]] auto LifetimeArtifactKind() const;
        auto LifetimeArtifactKind(winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyLifetimeArtifactKind const& value) const;
        [[nodiscard]] auto LifetimeArtifact() const;
        auto LifetimeArtifact(param::hstring const& value) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::ICreatePackageDependencyOptions>
    {
        template <typename D> using type = consume_Microsoft_Windows_ApplicationModel_DynamicDependency_ICreatePackageDependencyOptions<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependency
    {
        [[nodiscard]] auto Id() const;
        auto Delete() const;
        auto Add() const;
        auto Add(winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::AddPackageDependencyOptions const& options) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependency>
    {
        template <typename D> using type = consume_Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependency<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContext
    {
        [[nodiscard]] auto ContextId() const;
        [[nodiscard]] auto PackageDependencyId() const;
        [[nodiscard]] auto PackageFullName() const;
        auto Remove() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyContext>
    {
        template <typename D> using type = consume_Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContext<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContextFactory
    {
        auto CreateInstance(winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyContextId const& contextId) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyContextFactory>
    {
        template <typename D> using type = consume_Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContextFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyRankStatics
    {
        [[nodiscard]] auto Default() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyRankStatics>
    {
        template <typename D> using type = consume_Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyRankStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics
    {
        auto GetFromId(param::hstring const& id) const;
        auto GetFromIdForSystem(param::hstring const& id) const;
        auto Create(param::hstring const& packageFamilyName, winrt::Windows::ApplicationModel::PackageVersion const& minVersion) const;
        auto Create(param::hstring const& packageFamilyName, winrt::Windows::ApplicationModel::PackageVersion const& minVersion, winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::CreatePackageDependencyOptions const& options) const;
        auto CreateForSystem(param::hstring const& packageFamilyName, winrt::Windows::ApplicationModel::PackageVersion const& minVersion, winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::CreatePackageDependencyOptions const& options) const;
        [[nodiscard]] auto GenerationId() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyStatics>
    {
        template <typename D> using type = consume_Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics2
    {
        [[nodiscard]] auto PackageGraphRevisionId() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::ApplicationModel::DynamicDependency::IPackageDependencyStatics2>
    {
        template <typename D> using type = consume_Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics2<D>;
    };
    struct struct_Microsoft_Windows_ApplicationModel_DynamicDependency_PackageDependencyContextId
    {
        uint64_t Id;
    };
    template <> struct abi<Microsoft::Windows::ApplicationModel::DynamicDependency::PackageDependencyContextId>
    {
        using type = struct_Microsoft_Windows_ApplicationModel_DynamicDependency_PackageDependencyContextId;
    };
}
#endif
