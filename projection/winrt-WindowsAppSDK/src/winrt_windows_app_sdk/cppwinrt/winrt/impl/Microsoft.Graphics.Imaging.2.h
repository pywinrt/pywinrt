// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_Microsoft_Graphics_Imaging_2_H
#define WINRT_Microsoft_Graphics_Imaging_2_H
#include "winrt/impl/Windows.Foundation.1.h"
#include "winrt/impl/Windows.Graphics.Imaging.1.h"
#include "winrt/impl/Windows.Storage.Streams.1.h"
#include "winrt/impl/Microsoft.Graphics.Imaging.1.h"
WINRT_EXPORT namespace winrt::Microsoft::Graphics::Imaging
{
    struct WINRT_IMPL_EMPTY_BASES ImageBuffer : winrt::Microsoft::Graphics::Imaging::IImageBuffer,
        impl::require<ImageBuffer, winrt::Windows::Foundation::IClosable>
    {
        ImageBuffer(std::nullptr_t) noexcept {}
        ImageBuffer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Graphics::Imaging::IImageBuffer(ptr, take_ownership_from_abi) {}
        static auto CreateForBuffer(winrt::Windows::Storage::Streams::IBuffer const& buffer, winrt::Microsoft::Graphics::Imaging::ImageBufferPixelFormat const& pixelFormat, int32_t width, int32_t height, int32_t rowStride);
        static auto CreateForSoftwareBitmap(winrt::Windows::Graphics::Imaging::SoftwareBitmap const& softwareBitmap);
    };
}
#endif
