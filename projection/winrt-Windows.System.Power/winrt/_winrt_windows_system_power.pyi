# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation

from winrt.windows.system.power import BatteryStatus, EnergySaverStatus, PowerSupplyStatus

Self = typing.TypeVar('Self')

@typing.final
class BackgroundEnergyManager_Static(type):
    def add_recent_energy_usage_increased(cls, handler: winrt.windows.foundation.EventHandler[winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_recent_energy_usage_increased(cls, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_recent_energy_usage_returned_to_low(cls, handler: winrt.windows.foundation.EventHandler[winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_recent_energy_usage_returned_to_low(cls, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def excessive_usage_level(cls) -> winrt.system.UInt32: ...
    @_property
    def low_usage_level(cls) -> winrt.system.UInt32: ...
    @_property
    def max_acceptable_usage_level(cls) -> winrt.system.UInt32: ...
    @_property
    def near_max_acceptable_usage_level(cls) -> winrt.system.UInt32: ...
    @_property
    def near_termination_usage_level(cls) -> winrt.system.UInt32: ...
    @_property
    def recent_energy_usage(cls) -> winrt.system.UInt32: ...
    @_property
    def recent_energy_usage_level(cls) -> winrt.system.UInt32: ...
    @_property
    def termination_usage_level(cls) -> winrt.system.UInt32: ...

@typing.final
class BackgroundEnergyManager(winrt.system.Object, metaclass=BackgroundEnergyManager_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BackgroundEnergyManager: ...

@typing.final
class ForegroundEnergyManager_Static(type):
    def add_recent_energy_usage_increased(cls, handler: winrt.windows.foundation.EventHandler[winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_recent_energy_usage_increased(cls, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_recent_energy_usage_returned_to_low(cls, handler: winrt.windows.foundation.EventHandler[winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_recent_energy_usage_returned_to_low(cls, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def excessive_usage_level(cls) -> winrt.system.UInt32: ...
    @_property
    def low_usage_level(cls) -> winrt.system.UInt32: ...
    @_property
    def max_acceptable_usage_level(cls) -> winrt.system.UInt32: ...
    @_property
    def near_max_acceptable_usage_level(cls) -> winrt.system.UInt32: ...
    @_property
    def recent_energy_usage(cls) -> winrt.system.UInt32: ...
    @_property
    def recent_energy_usage_level(cls) -> winrt.system.UInt32: ...

@typing.final
class ForegroundEnergyManager(winrt.system.Object, metaclass=ForegroundEnergyManager_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ForegroundEnergyManager: ...

@typing.final
class PowerManager_Static(type):
    def add_battery_status_changed(cls, handler: winrt.windows.foundation.EventHandler[winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_battery_status_changed(cls, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_energy_saver_status_changed(cls, handler: winrt.windows.foundation.EventHandler[winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_energy_saver_status_changed(cls, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_power_supply_status_changed(cls, handler: winrt.windows.foundation.EventHandler[winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_power_supply_status_changed(cls, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_remaining_charge_percent_changed(cls, handler: winrt.windows.foundation.EventHandler[winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_remaining_charge_percent_changed(cls, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_remaining_discharge_time_changed(cls, handler: winrt.windows.foundation.EventHandler[winrt.system.Object], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_remaining_discharge_time_changed(cls, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def battery_status(cls) -> BatteryStatus: ...
    @_property
    def energy_saver_status(cls) -> EnergySaverStatus: ...
    @_property
    def power_supply_status(cls) -> PowerSupplyStatus: ...
    @_property
    def remaining_charge_percent(cls) -> winrt.system.Int32: ...
    @_property
    def remaining_discharge_time(cls) -> datetime.timedelta: ...

@typing.final
class PowerManager(winrt.system.Object, metaclass=PowerManager_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PowerManager: ...

