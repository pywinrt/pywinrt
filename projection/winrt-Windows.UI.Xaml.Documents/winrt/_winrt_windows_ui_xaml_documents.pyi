# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.1.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel.datatransfer as windows_applicationmodel_datatransfer
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.foundation.numerics as windows_foundation_numerics
import winrt.windows.ui as windows_ui
import winrt.windows.ui.composition as windows_ui_composition
import winrt.windows.ui.core as windows_ui_core
import winrt.windows.ui.input as windows_ui_input
import winrt.windows.ui.text as windows_ui_text
import winrt.windows.ui.xaml as windows_ui_xaml
import winrt.windows.ui.xaml.controls.primitives as windows_ui_xaml_controls_primitives
import winrt.windows.ui.xaml.data as windows_ui_xaml_data
import winrt.windows.ui.xaml.input as windows_ui_xaml_input
import winrt.windows.ui.xaml.media as windows_ui_xaml_media
import winrt.windows.ui.xaml.media.animation as windows_ui_xaml_media_animation
import winrt.windows.ui.xaml.media.media3d as windows_ui_xaml_media_media3d

from winrt.windows.ui.xaml.documents import LogicalDirection, UnderlineStyle

Self = typing.TypeVar('Self')

@typing.final
class TextRange:
    start_index: winrt.system.Int32
    length: winrt.system.Int32
    def __init__(self, start_index: winrt.system.Int32, length: winrt.system.Int32) -> None: ...
    def __eq__(self, other: object, /) -> bool: ...
    def __ne__(self, other: object, /) -> bool: ...

@typing.final
class Block_Static(type):
    @_property
    def line_height_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def line_stacking_strategy_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def margin_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def text_alignment_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def horizontal_text_alignment_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...

@typing.final
class Block(winrt.system.Object, metaclass=Block_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Block: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def text_alignment(self) -> windows_ui_xaml.TextAlignment: ...
    @text_alignment.setter
    def text_alignment(self, value: windows_ui_xaml.TextAlignment) -> None: ...
    @_property
    def margin(self) -> windows_ui_xaml.Thickness: ...
    @margin.setter
    def margin(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def line_stacking_strategy(self) -> windows_ui_xaml.LineStackingStrategy: ...
    @line_stacking_strategy.setter
    def line_stacking_strategy(self, value: windows_ui_xaml.LineStackingStrategy) -> None: ...
    @_property
    def line_height(self) -> winrt.system.Double: ...
    @line_height.setter
    def line_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def horizontal_text_alignment(self) -> windows_ui_xaml.TextAlignment: ...
    @horizontal_text_alignment.setter
    def horizontal_text_alignment(self, value: windows_ui_xaml.TextAlignment) -> None: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def foreground(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> typing.Optional[windows_ui_xaml_media.FontFamily]: ...
    @font_family.setter
    def font_family(self, value: typing.Optional[windows_ui_xaml_media.FontFamily]) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def content_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def content_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def xaml_root(self) -> typing.Optional[windows_ui_xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[windows_ui_xaml.XamlRoot]) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class BlockCollection(winrt.system.Object, winrt._winrt.MutableSequence[Block]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[Block]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> Block: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[Block]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: Block) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[Block]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BlockCollection: ...
    def append(self, value: typing.Optional[Block], /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> typing.Optional[windows_foundation_collections.IIterator[Block]]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> typing.Optional[Block]: ...
    def get_many(self, start_index: winrt.system.UInt32, items: winrt.system.Array[Block], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Optional[windows_foundation_collections.IVectorView[Block]]: ...
    def index_of(self, value: typing.Optional[Block], /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: typing.Optional[Block], /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: winrt.system.Array[Block], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: typing.Optional[Block], /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class Bold(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Bold: ...
    def __new__(cls: typing.Type[Bold]) -> Bold: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def inlines(self) -> typing.Optional[InlineCollection]: ...
    @inlines.setter
    def inlines(self, value: typing.Optional[InlineCollection]) -> None: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def foreground(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> typing.Optional[windows_ui_xaml_media.FontFamily]: ...
    @font_family.setter
    def font_family(self, value: typing.Optional[windows_ui_xaml_media.FontFamily]) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def content_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def content_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def xaml_root(self) -> typing.Optional[windows_ui_xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[windows_ui_xaml.XamlRoot]) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class ContactContentLinkProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactContentLinkProvider: ...
    def __new__(cls: typing.Type[ContactContentLinkProvider]) -> ContactContentLinkProvider: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class ContentLink_Static(type):
    @_property
    def background_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def cursor_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def element_sound_mode_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def focus_state_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def is_tab_stop_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def tab_index_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_down_navigation_strategy_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_down_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_left_navigation_strategy_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_left_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_right_navigation_strategy_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_right_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_up_navigation_strategy_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_up_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...

@typing.final
class ContentLink(winrt.system.Object, metaclass=ContentLink_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentLink: ...
    def __new__(cls: typing.Type[ContentLink]) -> ContentLink: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def focus(self, value: windows_ui_xaml.FocusState, /) -> bool: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def add_got_focus(self, handler: typing.Optional[windows_ui_xaml.RoutedEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_got_focus(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_invoked(self, handler: windows_foundation.TypedEventHandler[ContentLink, ContentLinkInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_lost_focus(self, handler: typing.Optional[windows_ui_xaml.RoutedEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_lost_focus(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def x_y_focus_up_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    @x_y_focus_up_navigation_strategy.setter
    def x_y_focus_up_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_up(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @x_y_focus_up.setter
    def x_y_focus_up(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def x_y_focus_right_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    @x_y_focus_right_navigation_strategy.setter
    def x_y_focus_right_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_right(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @x_y_focus_right.setter
    def x_y_focus_right(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def x_y_focus_left_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    @x_y_focus_left_navigation_strategy.setter
    def x_y_focus_left_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_left(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @x_y_focus_left.setter
    def x_y_focus_left(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def x_y_focus_down_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    @x_y_focus_down_navigation_strategy.setter
    def x_y_focus_down_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_down(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @x_y_focus_down.setter
    def x_y_focus_down(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def tab_index(self) -> winrt.system.Int32: ...
    @tab_index.setter
    def tab_index(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_tab_stop(self) -> bool: ...
    @is_tab_stop.setter
    def is_tab_stop(self, value: bool) -> None: ...
    @_property
    def info(self) -> typing.Optional[windows_ui_text.ContentLinkInfo]: ...
    @info.setter
    def info(self, value: typing.Optional[windows_ui_text.ContentLinkInfo]) -> None: ...
    @_property
    def element_sound_mode(self) -> windows_ui_xaml.ElementSoundMode: ...
    @element_sound_mode.setter
    def element_sound_mode(self, value: windows_ui_xaml.ElementSoundMode) -> None: ...
    @_property
    def cursor(self) -> windows_ui_core.CoreCursorType: ...
    @cursor.setter
    def cursor(self, value: windows_ui_core.CoreCursorType) -> None: ...
    @_property
    def background(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @background.setter
    def background(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def focus_state(self) -> windows_ui_xaml.FocusState: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def foreground(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> typing.Optional[windows_ui_xaml_media.FontFamily]: ...
    @font_family.setter
    def font_family(self, value: typing.Optional[windows_ui_xaml_media.FontFamily]) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def content_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def content_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def xaml_root(self) -> typing.Optional[windows_ui_xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[windows_ui_xaml.XamlRoot]) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class ContentLinkInvokedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentLinkInvokedEventArgs: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...
    @_property
    def content_link_info(self) -> typing.Optional[windows_ui_text.ContentLinkInfo]: ...

@typing.final
class ContentLinkProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentLinkProvider: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class ContentLinkProviderCollection(winrt.system.Object, winrt._winrt.MutableSequence[ContentLinkProvider]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[ContentLinkProvider]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> ContentLinkProvider: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[ContentLinkProvider]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: ContentLinkProvider) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[ContentLinkProvider]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentLinkProviderCollection: ...
    def __new__(cls: typing.Type[ContentLinkProviderCollection]) -> ContentLinkProviderCollection: ...
    def append(self, value: typing.Optional[ContentLinkProvider], /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> typing.Optional[windows_foundation_collections.IIterator[ContentLinkProvider]]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> typing.Optional[ContentLinkProvider]: ...
    def get_many(self, start_index: winrt.system.UInt32, items: winrt.system.Array[ContentLinkProvider], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Optional[windows_foundation_collections.IVectorView[ContentLinkProvider]]: ...
    def index_of(self, value: typing.Optional[ContentLinkProvider], /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: typing.Optional[ContentLinkProvider], /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: winrt.system.Array[ContentLinkProvider], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: typing.Optional[ContentLinkProvider], /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class Glyphs_Static(type):
    @_property
    def fill_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def font_rendering_em_size_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def font_uri_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def indices_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def origin_x_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def origin_y_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def style_simulations_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def unicode_string_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def color_font_palette_index_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def is_color_font_enabled_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...

@typing.final
class Glyphs(winrt.system.Object, metaclass=Glyphs_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Glyphs: ...
    def __new__(cls: typing.Type[Glyphs]) -> Glyphs: ...
    def add_handler(self, routed_event: typing.Optional[windows_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], handled_events_too: bool, /) -> None: ...
    def arrange(self, final_rect: windows_foundation.Rect, /) -> None: ...
    def cancel_direct_manipulations(self) -> bool: ...
    def capture_pointer(self, value: typing.Optional[windows_ui_xaml_input.Pointer], /) -> bool: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_binding_expression(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[windows_ui_xaml_data.BindingExpression]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def invalidate_arrange(self) -> None: ...
    def invalidate_measure(self) -> None: ...
    def measure(self, available_size: windows_foundation.Size, /) -> None: ...
    def populate_property_info(self, property_name: str, property_info: typing.Optional[windows_ui_composition.AnimationPropertyInfo], /) -> None: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def release_pointer_capture(self, value: typing.Optional[windows_ui_xaml_input.Pointer], /) -> None: ...
    def release_pointer_captures(self) -> None: ...
    def remove_handler(self, routed_event: typing.Optional[windows_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], /) -> None: ...
    def set_binding(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], binding: typing.Optional[windows_ui_xaml_data.BindingBase], /) -> None: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def start_animation(self, animation: typing.Optional[windows_ui_composition.ICompositionAnimationBase], /) -> None: ...
    @typing.overload
    def start_bring_into_view(self) -> None: ...
    @typing.overload
    def start_bring_into_view(self, options: typing.Optional[windows_ui_xaml.BringIntoViewOptions], /) -> None: ...
    def start_drag_async(self, pointer_point: typing.Optional[windows_ui_input.PointerPoint], /) -> windows_foundation.IAsyncOperation[windows_applicationmodel_datatransfer.DataPackageOperation]: ...
    def stop_animation(self, animation: typing.Optional[windows_ui_composition.ICompositionAnimationBase], /) -> None: ...
    def transform_to_visual(self, visual: typing.Optional[windows_ui_xaml.UIElement], /) -> typing.Optional[windows_ui_xaml_media.GeneralTransform]: ...
    def try_invoke_keyboard_accelerator(self, args: typing.Optional[windows_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def update_layout(self) -> None: ...
    def add_layout_updated(self, handler: windows_foundation.EventHandler[winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_layout_updated(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_loaded(self, handler: typing.Optional[windows_ui_xaml.RoutedEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_loaded(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_size_changed(self, handler: typing.Optional[windows_ui_xaml.SizeChangedEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_size_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_unloaded(self, handler: typing.Optional[windows_ui_xaml.RoutedEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_unloaded(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_data_context_changed(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.FrameworkElement, windows_ui_xaml.DataContextChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_data_context_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_loading(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.FrameworkElement, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_loading(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_actual_theme_changed(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.FrameworkElement, winrt.system.Object], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_actual_theme_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_effective_viewport_changed(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.FrameworkElement, windows_ui_xaml.EffectiveViewportChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_effective_viewport_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_double_tapped(self, handler: typing.Optional[windows_ui_xaml_input.DoubleTappedEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_double_tapped(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_drag_enter(self, handler: typing.Optional[windows_ui_xaml.DragEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drag_enter(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_drag_leave(self, handler: typing.Optional[windows_ui_xaml.DragEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drag_leave(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_drag_over(self, handler: typing.Optional[windows_ui_xaml.DragEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drag_over(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_drop(self, handler: typing.Optional[windows_ui_xaml.DragEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drop(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_got_focus(self, handler: typing.Optional[windows_ui_xaml.RoutedEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_got_focus(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_holding(self, handler: typing.Optional[windows_ui_xaml_input.HoldingEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_holding(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_key_down(self, handler: typing.Optional[windows_ui_xaml_input.KeyEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_key_down(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_key_up(self, handler: typing.Optional[windows_ui_xaml_input.KeyEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_key_up(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_lost_focus(self, handler: typing.Optional[windows_ui_xaml.RoutedEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_lost_focus(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_manipulation_completed(self, handler: typing.Optional[windows_ui_xaml_input.ManipulationCompletedEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_manipulation_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_manipulation_delta(self, handler: typing.Optional[windows_ui_xaml_input.ManipulationDeltaEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_manipulation_delta(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_manipulation_inertia_starting(self, handler: typing.Optional[windows_ui_xaml_input.ManipulationInertiaStartingEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_manipulation_inertia_starting(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_manipulation_started(self, handler: typing.Optional[windows_ui_xaml_input.ManipulationStartedEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_manipulation_started(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_manipulation_starting(self, handler: typing.Optional[windows_ui_xaml_input.ManipulationStartingEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_manipulation_starting(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_canceled(self, handler: typing.Optional[windows_ui_xaml_input.PointerEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pointer_canceled(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_capture_lost(self, handler: typing.Optional[windows_ui_xaml_input.PointerEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pointer_capture_lost(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_entered(self, handler: typing.Optional[windows_ui_xaml_input.PointerEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pointer_entered(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_exited(self, handler: typing.Optional[windows_ui_xaml_input.PointerEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pointer_exited(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_moved(self, handler: typing.Optional[windows_ui_xaml_input.PointerEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pointer_moved(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_pressed(self, handler: typing.Optional[windows_ui_xaml_input.PointerEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pointer_pressed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_released(self, handler: typing.Optional[windows_ui_xaml_input.PointerEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pointer_released(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_wheel_changed(self, handler: typing.Optional[windows_ui_xaml_input.PointerEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_pointer_wheel_changed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_right_tapped(self, handler: typing.Optional[windows_ui_xaml_input.RightTappedEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_right_tapped(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_tapped(self, handler: typing.Optional[windows_ui_xaml_input.TappedEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_tapped(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_drag_starting(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.UIElement, windows_ui_xaml.DragStartingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drag_starting(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_drop_completed(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.UIElement, windows_ui_xaml.DropCompletedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_drop_completed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.UIElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.UIElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.UIElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_context_canceled(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.UIElement, windows_ui_xaml.RoutedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_context_canceled(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_context_requested(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.UIElement, windows_ui_xaml_input.ContextRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_context_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_getting_focus(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.UIElement, windows_ui_xaml_input.GettingFocusEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_getting_focus(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_losing_focus(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.UIElement, windows_ui_xaml_input.LosingFocusEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_losing_focus(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_no_focus_candidate_found(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.UIElement, windows_ui_xaml_input.NoFocusCandidateFoundEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_no_focus_candidate_found(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_character_received(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.UIElement, windows_ui_xaml_input.CharacterReceivedRoutedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_character_received(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_preview_key_down(self, handler: typing.Optional[windows_ui_xaml_input.KeyEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_preview_key_down(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_preview_key_up(self, handler: typing.Optional[windows_ui_xaml_input.KeyEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_preview_key_up(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_process_keyboard_accelerators(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.UIElement, windows_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_process_keyboard_accelerators(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_bring_into_view_requested(self, handler: windows_foundation.TypedEventHandler[windows_ui_xaml.UIElement, windows_ui_xaml.BringIntoViewRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_bring_into_view_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def unicode_string(self) -> str: ...
    @unicode_string.setter
    def unicode_string(self, value: str) -> None: ...
    @_property
    def style_simulations(self) -> windows_ui_xaml_media.StyleSimulations: ...
    @style_simulations.setter
    def style_simulations(self, value: windows_ui_xaml_media.StyleSimulations) -> None: ...
    @_property
    def origin_y(self) -> winrt.system.Double: ...
    @origin_y.setter
    def origin_y(self, value: winrt.system.Double) -> None: ...
    @_property
    def origin_x(self) -> winrt.system.Double: ...
    @origin_x.setter
    def origin_x(self, value: winrt.system.Double) -> None: ...
    @_property
    def indices(self) -> str: ...
    @indices.setter
    def indices(self, value: str) -> None: ...
    @_property
    def font_uri(self) -> typing.Optional[windows_foundation.Uri]: ...
    @font_uri.setter
    def font_uri(self, value: typing.Optional[windows_foundation.Uri]) -> None: ...
    @_property
    def font_rendering_em_size(self) -> winrt.system.Double: ...
    @font_rendering_em_size.setter
    def font_rendering_em_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def fill(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @fill.setter
    def fill(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def is_color_font_enabled(self) -> bool: ...
    @is_color_font_enabled.setter
    def is_color_font_enabled(self, value: bool) -> None: ...
    @_property
    def color_font_palette_index(self) -> winrt.system.Int32: ...
    @color_font_palette_index.setter
    def color_font_palette_index(self, value: winrt.system.Int32) -> None: ...
    @_property
    def width(self) -> winrt.system.Double: ...
    @width.setter
    def width(self, value: winrt.system.Double) -> None: ...
    @_property
    def vertical_alignment(self) -> windows_ui_xaml.VerticalAlignment: ...
    @vertical_alignment.setter
    def vertical_alignment(self, value: windows_ui_xaml.VerticalAlignment) -> None: ...
    @_property
    def tag(self) -> typing.Optional[winrt.system.Object]: ...
    @tag.setter
    def tag(self, value: typing.Optional[winrt.system.Object]) -> None: ...
    @_property
    def style(self) -> typing.Optional[windows_ui_xaml.Style]: ...
    @style.setter
    def style(self, value: typing.Optional[windows_ui_xaml.Style]) -> None: ...
    @_property
    def resources(self) -> typing.Optional[windows_ui_xaml.ResourceDictionary]: ...
    @resources.setter
    def resources(self, value: typing.Optional[windows_ui_xaml.ResourceDictionary]) -> None: ...
    @_property
    def name(self) -> str: ...
    @name.setter
    def name(self, value: str) -> None: ...
    @_property
    def min_width(self) -> winrt.system.Double: ...
    @min_width.setter
    def min_width(self, value: winrt.system.Double) -> None: ...
    @_property
    def min_height(self) -> winrt.system.Double: ...
    @min_height.setter
    def min_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def max_width(self) -> winrt.system.Double: ...
    @max_width.setter
    def max_width(self, value: winrt.system.Double) -> None: ...
    @_property
    def max_height(self) -> winrt.system.Double: ...
    @max_height.setter
    def max_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def margin(self) -> windows_ui_xaml.Thickness: ...
    @margin.setter
    def margin(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def horizontal_alignment(self) -> windows_ui_xaml.HorizontalAlignment: ...
    @horizontal_alignment.setter
    def horizontal_alignment(self, value: windows_ui_xaml.HorizontalAlignment) -> None: ...
    @_property
    def height(self) -> winrt.system.Double: ...
    @height.setter
    def height(self, value: winrt.system.Double) -> None: ...
    @_property
    def flow_direction(self) -> windows_ui_xaml.FlowDirection: ...
    @flow_direction.setter
    def flow_direction(self, value: windows_ui_xaml.FlowDirection) -> None: ...
    @_property
    def data_context(self) -> typing.Optional[winrt.system.Object]: ...
    @data_context.setter
    def data_context(self, value: typing.Optional[winrt.system.Object]) -> None: ...
    @_property
    def actual_height(self) -> winrt.system.Double: ...
    @_property
    def actual_width(self) -> winrt.system.Double: ...
    @_property
    def base_uri(self) -> typing.Optional[windows_foundation.Uri]: ...
    @_property
    def parent(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @_property
    def triggers(self) -> typing.Optional[windows_ui_xaml.TriggerCollection]: ...
    @_property
    def requested_theme(self) -> windows_ui_xaml.ElementTheme: ...
    @requested_theme.setter
    def requested_theme(self, value: windows_ui_xaml.ElementTheme) -> None: ...
    @_property
    def focus_visual_secondary_thickness(self) -> windows_ui_xaml.Thickness: ...
    @focus_visual_secondary_thickness.setter
    def focus_visual_secondary_thickness(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def focus_visual_secondary_brush(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @focus_visual_secondary_brush.setter
    def focus_visual_secondary_brush(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def focus_visual_primary_thickness(self) -> windows_ui_xaml.Thickness: ...
    @focus_visual_primary_thickness.setter
    def focus_visual_primary_thickness(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def focus_visual_primary_brush(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @focus_visual_primary_brush.setter
    def focus_visual_primary_brush(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def focus_visual_margin(self) -> windows_ui_xaml.Thickness: ...
    @focus_visual_margin.setter
    def focus_visual_margin(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def allow_focus_when_disabled(self) -> bool: ...
    @allow_focus_when_disabled.setter
    def allow_focus_when_disabled(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def actual_theme(self) -> windows_ui_xaml.ElementTheme: ...
    @_property
    def is_loaded(self) -> bool: ...
    @_property
    def transitions(self) -> typing.Optional[windows_ui_xaml_media_animation.TransitionCollection]: ...
    @transitions.setter
    def transitions(self, value: typing.Optional[windows_ui_xaml_media_animation.TransitionCollection]) -> None: ...
    @_property
    def projection(self) -> typing.Optional[windows_ui_xaml_media.Projection]: ...
    @projection.setter
    def projection(self, value: typing.Optional[windows_ui_xaml_media.Projection]) -> None: ...
    @_property
    def render_transform_origin(self) -> windows_foundation.Point: ...
    @render_transform_origin.setter
    def render_transform_origin(self, value: windows_foundation.Point) -> None: ...
    @_property
    def opacity(self) -> winrt.system.Double: ...
    @opacity.setter
    def opacity(self, value: winrt.system.Double) -> None: ...
    @_property
    def manipulation_mode(self) -> windows_ui_xaml_input.ManipulationModes: ...
    @manipulation_mode.setter
    def manipulation_mode(self, value: windows_ui_xaml_input.ManipulationModes) -> None: ...
    @_property
    def is_tap_enabled(self) -> bool: ...
    @is_tap_enabled.setter
    def is_tap_enabled(self, value: bool) -> None: ...
    @_property
    def is_right_tap_enabled(self) -> bool: ...
    @is_right_tap_enabled.setter
    def is_right_tap_enabled(self, value: bool) -> None: ...
    @_property
    def is_holding_enabled(self) -> bool: ...
    @is_holding_enabled.setter
    def is_holding_enabled(self, value: bool) -> None: ...
    @_property
    def is_hit_test_visible(self) -> bool: ...
    @is_hit_test_visible.setter
    def is_hit_test_visible(self, value: bool) -> None: ...
    @_property
    def is_double_tap_enabled(self) -> bool: ...
    @is_double_tap_enabled.setter
    def is_double_tap_enabled(self, value: bool) -> None: ...
    @_property
    def allow_drop(self) -> bool: ...
    @allow_drop.setter
    def allow_drop(self, value: bool) -> None: ...
    @_property
    def clip(self) -> typing.Optional[windows_ui_xaml_media.RectangleGeometry]: ...
    @clip.setter
    def clip(self, value: typing.Optional[windows_ui_xaml_media.RectangleGeometry]) -> None: ...
    @_property
    def cache_mode(self) -> typing.Optional[windows_ui_xaml_media.CacheMode]: ...
    @cache_mode.setter
    def cache_mode(self, value: typing.Optional[windows_ui_xaml_media.CacheMode]) -> None: ...
    @_property
    def use_layout_rounding(self) -> bool: ...
    @use_layout_rounding.setter
    def use_layout_rounding(self, value: bool) -> None: ...
    @_property
    def render_transform(self) -> typing.Optional[windows_ui_xaml_media.Transform]: ...
    @render_transform.setter
    def render_transform(self, value: typing.Optional[windows_ui_xaml_media.Transform]) -> None: ...
    @_property
    def visibility(self) -> windows_ui_xaml.Visibility: ...
    @visibility.setter
    def visibility(self, value: windows_ui_xaml.Visibility) -> None: ...
    @_property
    def desired_size(self) -> windows_foundation.Size: ...
    @_property
    def pointer_captures(self) -> typing.Optional[windows_foundation_collections.IVectorView[windows_ui_xaml_input.Pointer]]: ...
    @_property
    def render_size(self) -> windows_foundation.Size: ...
    @_property
    def xaml_root(self) -> typing.Optional[windows_ui_xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[windows_ui_xaml.XamlRoot]) -> None: ...
    @_property
    def shadow(self) -> typing.Optional[windows_ui_xaml_media.Shadow]: ...
    @shadow.setter
    def shadow(self, value: typing.Optional[windows_ui_xaml_media.Shadow]) -> None: ...
    @_property
    def actual_offset(self) -> windows_foundation_numerics.Vector3: ...
    @_property
    def actual_size(self) -> windows_foundation_numerics.Vector2: ...
    @_property
    def u_i_context(self) -> typing.Optional[windows_ui.UIContext]: ...
    @_property
    def composite_mode(self) -> windows_ui_xaml_media.ElementCompositeMode: ...
    @composite_mode.setter
    def composite_mode(self, value: windows_ui_xaml_media.ElementCompositeMode) -> None: ...
    @_property
    def transform3_d(self) -> typing.Optional[windows_ui_xaml_media_media3d.Transform3D]: ...
    @transform3_d.setter
    def transform3_d(self, value: typing.Optional[windows_ui_xaml_media_media3d.Transform3D]) -> None: ...
    @_property
    def can_drag(self) -> bool: ...
    @can_drag.setter
    def can_drag(self, value: bool) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def context_flyout(self) -> typing.Optional[windows_ui_xaml_controls_primitives.FlyoutBase]: ...
    @context_flyout.setter
    def context_flyout(self, value: typing.Optional[windows_ui_xaml_controls_primitives.FlyoutBase]) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def high_contrast_adjustment(self) -> windows_ui_xaml.ElementHighContrastAdjustment: ...
    @high_contrast_adjustment.setter
    def high_contrast_adjustment(self, value: windows_ui_xaml.ElementHighContrastAdjustment) -> None: ...
    @_property
    def x_y_focus_right_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    @x_y_focus_right_navigation_strategy.setter
    def x_y_focus_right_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_keyboard_navigation(self) -> windows_ui_xaml_input.XYFocusKeyboardNavigationMode: ...
    @x_y_focus_keyboard_navigation.setter
    def x_y_focus_keyboard_navigation(self, value: windows_ui_xaml_input.XYFocusKeyboardNavigationMode) -> None: ...
    @_property
    def x_y_focus_down_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    @x_y_focus_down_navigation_strategy.setter
    def x_y_focus_down_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def tab_focus_navigation(self) -> windows_ui_xaml_input.KeyboardNavigationMode: ...
    @tab_focus_navigation.setter
    def tab_focus_navigation(self, value: windows_ui_xaml_input.KeyboardNavigationMode) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def x_y_focus_up_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    @x_y_focus_up_navigation_strategy.setter
    def x_y_focus_up_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    @_property
    def x_y_focus_left_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    @x_y_focus_left_navigation_strategy.setter
    def x_y_focus_left_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def lights(self) -> typing.Optional[windows_foundation_collections.IVector[windows_ui_xaml_media.XamlLight]]: ...
    @_property
    def keyboard_accelerators(self) -> typing.Optional[windows_foundation_collections.IVector[windows_ui_xaml_input.KeyboardAccelerator]]: ...
    @_property
    def keyboard_accelerator_placement_target(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @keyboard_accelerator_placement_target.setter
    def keyboard_accelerator_placement_target(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def keyboard_accelerator_placement_mode(self) -> windows_ui_xaml_input.KeyboardAcceleratorPlacementMode: ...
    @keyboard_accelerator_placement_mode.setter
    def keyboard_accelerator_placement_mode(self, value: windows_ui_xaml_input.KeyboardAcceleratorPlacementMode) -> None: ...
    @_property
    def key_tip_target(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @key_tip_target.setter
    def key_tip_target(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def translation_transition(self) -> typing.Optional[windows_ui_xaml.Vector3Transition]: ...
    @translation_transition.setter
    def translation_transition(self, value: typing.Optional[windows_ui_xaml.Vector3Transition]) -> None: ...
    @_property
    def opacity_transition(self) -> typing.Optional[windows_ui_xaml.ScalarTransition]: ...
    @opacity_transition.setter
    def opacity_transition(self, value: typing.Optional[windows_ui_xaml.ScalarTransition]) -> None: ...
    @_property
    def transform_matrix(self) -> windows_foundation_numerics.Matrix4x4: ...
    @transform_matrix.setter
    def transform_matrix(self, value: windows_foundation_numerics.Matrix4x4) -> None: ...
    @_property
    def scale_transition(self) -> typing.Optional[windows_ui_xaml.Vector3Transition]: ...
    @scale_transition.setter
    def scale_transition(self, value: typing.Optional[windows_ui_xaml.Vector3Transition]) -> None: ...
    @_property
    def scale(self) -> windows_foundation_numerics.Vector3: ...
    @scale.setter
    def scale(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def rotation_transition(self) -> typing.Optional[windows_ui_xaml.ScalarTransition]: ...
    @rotation_transition.setter
    def rotation_transition(self, value: typing.Optional[windows_ui_xaml.ScalarTransition]) -> None: ...
    @_property
    def rotation_axis(self) -> windows_foundation_numerics.Vector3: ...
    @rotation_axis.setter
    def rotation_axis(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def rotation(self) -> winrt.system.Single: ...
    @rotation.setter
    def rotation(self, value: winrt.system.Single) -> None: ...
    @_property
    def translation(self) -> windows_foundation_numerics.Vector3: ...
    @translation.setter
    def translation(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def center_point(self) -> windows_foundation_numerics.Vector3: ...
    @center_point.setter
    def center_point(self, value: windows_foundation_numerics.Vector3) -> None: ...
    @_property
    def can_be_scroll_anchor(self) -> bool: ...
    @can_be_scroll_anchor.setter
    def can_be_scroll_anchor(self, value: bool) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class Hyperlink_Static(type):
    @_property
    def navigate_uri_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def underline_style_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def element_sound_mode_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_down_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_left_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_right_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_up_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def focus_state_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_down_navigation_strategy_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_left_navigation_strategy_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_right_navigation_strategy_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_up_navigation_strategy_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def is_tab_stop_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def tab_index_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...

@typing.final
class Hyperlink(winrt.system.Object, metaclass=Hyperlink_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Hyperlink: ...
    def __new__(cls: typing.Type[Hyperlink]) -> Hyperlink: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def focus(self, value: windows_ui_xaml.FocusState, /) -> bool: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def add_click(self, handler: windows_foundation.TypedEventHandler[Hyperlink, HyperlinkClickEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_click(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_got_focus(self, handler: typing.Optional[windows_ui_xaml.RoutedEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_got_focus(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_lost_focus(self, handler: typing.Optional[windows_ui_xaml.RoutedEventHandler], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_lost_focus(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def navigate_uri(self) -> typing.Optional[windows_foundation.Uri]: ...
    @navigate_uri.setter
    def navigate_uri(self, value: typing.Optional[windows_foundation.Uri]) -> None: ...
    @_property
    def underline_style(self) -> UnderlineStyle: ...
    @underline_style.setter
    def underline_style(self, value: UnderlineStyle) -> None: ...
    @_property
    def x_y_focus_up(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @x_y_focus_up.setter
    def x_y_focus_up(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def x_y_focus_right(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @x_y_focus_right.setter
    def x_y_focus_right(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def x_y_focus_left(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @x_y_focus_left.setter
    def x_y_focus_left(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def x_y_focus_down(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @x_y_focus_down.setter
    def x_y_focus_down(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def element_sound_mode(self) -> windows_ui_xaml.ElementSoundMode: ...
    @element_sound_mode.setter
    def element_sound_mode(self, value: windows_ui_xaml.ElementSoundMode) -> None: ...
    @_property
    def x_y_focus_up_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    @x_y_focus_up_navigation_strategy.setter
    def x_y_focus_up_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_right_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    @x_y_focus_right_navigation_strategy.setter
    def x_y_focus_right_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_left_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    @x_y_focus_left_navigation_strategy.setter
    def x_y_focus_left_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_down_navigation_strategy(self) -> windows_ui_xaml_input.XYFocusNavigationStrategy: ...
    @x_y_focus_down_navigation_strategy.setter
    def x_y_focus_down_navigation_strategy(self, value: windows_ui_xaml_input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def focus_state(self) -> windows_ui_xaml.FocusState: ...
    @_property
    def tab_index(self) -> winrt.system.Int32: ...
    @tab_index.setter
    def tab_index(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_tab_stop(self) -> bool: ...
    @is_tab_stop.setter
    def is_tab_stop(self, value: bool) -> None: ...
    @_property
    def inlines(self) -> typing.Optional[InlineCollection]: ...
    @inlines.setter
    def inlines(self, value: typing.Optional[InlineCollection]) -> None: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def foreground(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> typing.Optional[windows_ui_xaml_media.FontFamily]: ...
    @font_family.setter
    def font_family(self, value: typing.Optional[windows_ui_xaml_media.FontFamily]) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def content_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def content_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def xaml_root(self) -> typing.Optional[windows_ui_xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[windows_ui_xaml.XamlRoot]) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class HyperlinkClickEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HyperlinkClickEventArgs: ...
    @_property
    def original_source(self) -> typing.Optional[winrt.system.Object]: ...

@typing.final
class Inline(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Inline: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def foreground(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> typing.Optional[windows_ui_xaml_media.FontFamily]: ...
    @font_family.setter
    def font_family(self, value: typing.Optional[windows_ui_xaml_media.FontFamily]) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def content_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def content_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def xaml_root(self) -> typing.Optional[windows_ui_xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[windows_ui_xaml.XamlRoot]) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class InlineCollection(winrt.system.Object, winrt._winrt.MutableSequence[Inline]):
    def __len__(self) -> int: ...
    def __iter__(self) -> windows_foundation_collections.IIterator[Inline]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> Inline: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[Inline]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: Inline) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[Inline]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InlineCollection: ...
    def append(self, value: typing.Optional[Inline], /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> typing.Optional[windows_foundation_collections.IIterator[Inline]]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> typing.Optional[Inline]: ...
    def get_many(self, start_index: winrt.system.UInt32, items: winrt.system.Array[Inline], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Optional[windows_foundation_collections.IVectorView[Inline]]: ...
    def index_of(self, value: typing.Optional[Inline], /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: typing.Optional[Inline], /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: winrt.system.Array[Inline], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: typing.Optional[Inline], /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class InlineUIContainer(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InlineUIContainer: ...
    def __new__(cls: typing.Type[InlineUIContainer]) -> InlineUIContainer: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def child(self) -> typing.Optional[windows_ui_xaml.UIElement]: ...
    @child.setter
    def child(self, value: typing.Optional[windows_ui_xaml.UIElement]) -> None: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def foreground(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> typing.Optional[windows_ui_xaml_media.FontFamily]: ...
    @font_family.setter
    def font_family(self, value: typing.Optional[windows_ui_xaml_media.FontFamily]) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def content_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def content_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def xaml_root(self) -> typing.Optional[windows_ui_xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[windows_ui_xaml.XamlRoot]) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class Italic(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Italic: ...
    def __new__(cls: typing.Type[Italic]) -> Italic: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def inlines(self) -> typing.Optional[InlineCollection]: ...
    @inlines.setter
    def inlines(self, value: typing.Optional[InlineCollection]) -> None: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def foreground(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> typing.Optional[windows_ui_xaml_media.FontFamily]: ...
    @font_family.setter
    def font_family(self, value: typing.Optional[windows_ui_xaml_media.FontFamily]) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def content_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def content_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def xaml_root(self) -> typing.Optional[windows_ui_xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[windows_ui_xaml.XamlRoot]) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class LineBreak(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LineBreak: ...
    def __new__(cls: typing.Type[LineBreak]) -> LineBreak: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def foreground(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> typing.Optional[windows_ui_xaml_media.FontFamily]: ...
    @font_family.setter
    def font_family(self, value: typing.Optional[windows_ui_xaml_media.FontFamily]) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def content_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def content_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def xaml_root(self) -> typing.Optional[windows_ui_xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[windows_ui_xaml.XamlRoot]) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class Paragraph_Static(type):
    @_property
    def text_indent_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...

@typing.final
class Paragraph(winrt.system.Object, metaclass=Paragraph_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Paragraph: ...
    def __new__(cls: typing.Type[Paragraph]) -> Paragraph: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def text_indent(self) -> winrt.system.Double: ...
    @text_indent.setter
    def text_indent(self, value: winrt.system.Double) -> None: ...
    @_property
    def inlines(self) -> typing.Optional[InlineCollection]: ...
    @_property
    def text_alignment(self) -> windows_ui_xaml.TextAlignment: ...
    @text_alignment.setter
    def text_alignment(self, value: windows_ui_xaml.TextAlignment) -> None: ...
    @_property
    def margin(self) -> windows_ui_xaml.Thickness: ...
    @margin.setter
    def margin(self, value: windows_ui_xaml.Thickness) -> None: ...
    @_property
    def line_stacking_strategy(self) -> windows_ui_xaml.LineStackingStrategy: ...
    @line_stacking_strategy.setter
    def line_stacking_strategy(self, value: windows_ui_xaml.LineStackingStrategy) -> None: ...
    @_property
    def line_height(self) -> winrt.system.Double: ...
    @line_height.setter
    def line_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def horizontal_text_alignment(self) -> windows_ui_xaml.TextAlignment: ...
    @horizontal_text_alignment.setter
    def horizontal_text_alignment(self, value: windows_ui_xaml.TextAlignment) -> None: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def foreground(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> typing.Optional[windows_ui_xaml_media.FontFamily]: ...
    @font_family.setter
    def font_family(self, value: typing.Optional[windows_ui_xaml_media.FontFamily]) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def content_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def content_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def xaml_root(self) -> typing.Optional[windows_ui_xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[windows_ui_xaml.XamlRoot]) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class PlaceContentLinkProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PlaceContentLinkProvider: ...
    def __new__(cls: typing.Type[PlaceContentLinkProvider]) -> PlaceContentLinkProvider: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class Run_Static(type):
    @_property
    def flow_direction_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...

@typing.final
class Run(winrt.system.Object, metaclass=Run_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Run: ...
    def __new__(cls: typing.Type[Run]) -> Run: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def text(self) -> str: ...
    @text.setter
    def text(self, value: str) -> None: ...
    @_property
    def flow_direction(self) -> windows_ui_xaml.FlowDirection: ...
    @flow_direction.setter
    def flow_direction(self, value: windows_ui_xaml.FlowDirection) -> None: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def foreground(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> typing.Optional[windows_ui_xaml_media.FontFamily]: ...
    @font_family.setter
    def font_family(self, value: typing.Optional[windows_ui_xaml_media.FontFamily]) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def content_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def content_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def xaml_root(self) -> typing.Optional[windows_ui_xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[windows_ui_xaml.XamlRoot]) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class Span(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Span: ...
    def __new__(cls: typing.Type[Span]) -> Span: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def inlines(self) -> typing.Optional[InlineCollection]: ...
    @inlines.setter
    def inlines(self, value: typing.Optional[InlineCollection]) -> None: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def foreground(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> typing.Optional[windows_ui_xaml_media.FontFamily]: ...
    @font_family.setter
    def font_family(self, value: typing.Optional[windows_ui_xaml_media.FontFamily]) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def content_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def content_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def xaml_root(self) -> typing.Optional[windows_ui_xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[windows_ui_xaml.XamlRoot]) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class TextElement_Static(type):
    @_property
    def character_spacing_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def font_family_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def font_size_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def font_stretch_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def font_style_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def font_weight_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def foreground_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def language_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def is_text_scale_factor_enabled_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def access_key_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def allow_focus_on_interaction_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def exit_display_mode_on_access_key_invoked_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def access_key_scope_owner_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def is_access_key_scope_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def key_tip_horizontal_offset_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def key_tip_placement_mode_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def key_tip_vertical_offset_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def text_decorations_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...

@typing.final
class TextElement(winrt.system.Object, metaclass=TextElement_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextElement: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def foreground(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> typing.Optional[windows_ui_xaml_media.FontFamily]: ...
    @font_family.setter
    def font_family(self, value: typing.Optional[windows_ui_xaml_media.FontFamily]) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def content_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def content_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def xaml_root(self) -> typing.Optional[windows_ui_xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[windows_ui_xaml.XamlRoot]) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class TextHighlighter_Static(type):
    @_property
    def background_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def foreground_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...

@typing.final
class TextHighlighter(winrt.system.Object, metaclass=TextHighlighter_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextHighlighter: ...
    def __new__(cls: typing.Type[TextHighlighter]) -> TextHighlighter: ...
    @_property
    def foreground(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def background(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @background.setter
    def background(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def ranges(self) -> typing.Optional[windows_foundation_collections.IVector[TextRange]]: ...

@typing.final
class TextHighlighterBase(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextHighlighterBase: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

@typing.final
class TextPointer(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextPointer: ...
    def get_character_rect(self, direction: LogicalDirection, /) -> windows_foundation.Rect: ...
    def get_position_at_offset(self, offset: winrt.system.Int32, direction: LogicalDirection, /) -> typing.Optional[TextPointer]: ...
    @_property
    def logical_direction(self) -> LogicalDirection: ...
    @_property
    def offset(self) -> winrt.system.Int32: ...
    @_property
    def parent(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @_property
    def visual_parent(self) -> typing.Optional[windows_ui_xaml.FrameworkElement]: ...

@typing.final
class Typography_Static(type):
    def get_annotation_alternates(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> winrt.system.Int32: ...
    def get_capital_spacing(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_capitals(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> windows_ui_xaml.FontCapitals: ...
    def get_case_sensitive_forms(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_contextual_alternates(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_contextual_ligatures(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_contextual_swashes(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> winrt.system.Int32: ...
    def get_discretionary_ligatures(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_east_asian_expert_forms(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_east_asian_language(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> windows_ui_xaml.FontEastAsianLanguage: ...
    def get_east_asian_widths(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> windows_ui_xaml.FontEastAsianWidths: ...
    def get_fraction(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> windows_ui_xaml.FontFraction: ...
    def get_historical_forms(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_historical_ligatures(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_kerning(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_mathematical_greek(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_numeral_alignment(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> windows_ui_xaml.FontNumeralAlignment: ...
    def get_numeral_style(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> windows_ui_xaml.FontNumeralStyle: ...
    def get_slashed_zero(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_standard_ligatures(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_standard_swashes(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> winrt.system.Int32: ...
    def get_stylistic_alternates(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> winrt.system.Int32: ...
    def get_stylistic_set1(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set10(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set11(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set12(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set13(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set14(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set15(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set16(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set17(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set18(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set19(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set2(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set20(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set3(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set4(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set5(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set6(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set7(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set8(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set9(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> bool: ...
    def get_variants(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], /) -> windows_ui_xaml.FontVariants: ...
    def set_annotation_alternates(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: winrt.system.Int32, /) -> None: ...
    def set_capital_spacing(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_capitals(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: windows_ui_xaml.FontCapitals, /) -> None: ...
    def set_case_sensitive_forms(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_contextual_alternates(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_contextual_ligatures(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_contextual_swashes(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: winrt.system.Int32, /) -> None: ...
    def set_discretionary_ligatures(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_east_asian_expert_forms(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_east_asian_language(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: windows_ui_xaml.FontEastAsianLanguage, /) -> None: ...
    def set_east_asian_widths(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: windows_ui_xaml.FontEastAsianWidths, /) -> None: ...
    def set_fraction(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: windows_ui_xaml.FontFraction, /) -> None: ...
    def set_historical_forms(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_historical_ligatures(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_kerning(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_mathematical_greek(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_numeral_alignment(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: windows_ui_xaml.FontNumeralAlignment, /) -> None: ...
    def set_numeral_style(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: windows_ui_xaml.FontNumeralStyle, /) -> None: ...
    def set_slashed_zero(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_standard_ligatures(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_standard_swashes(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: winrt.system.Int32, /) -> None: ...
    def set_stylistic_alternates(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: winrt.system.Int32, /) -> None: ...
    def set_stylistic_set1(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set10(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set11(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set12(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set13(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set14(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set15(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set16(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set17(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set18(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set19(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set2(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set20(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set3(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set4(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set5(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set6(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set7(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set8(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set9(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: bool, /) -> None: ...
    def set_variants(cls, element: typing.Optional[windows_ui_xaml.DependencyObject], value: windows_ui_xaml.FontVariants, /) -> None: ...
    @_property
    def annotation_alternates_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def capital_spacing_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def capitals_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def case_sensitive_forms_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def contextual_alternates_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def contextual_ligatures_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def contextual_swashes_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def discretionary_ligatures_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def east_asian_expert_forms_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def east_asian_language_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def east_asian_widths_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def fraction_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def historical_forms_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def historical_ligatures_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def kerning_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def mathematical_greek_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def numeral_alignment_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def numeral_style_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def slashed_zero_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def standard_ligatures_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def standard_swashes_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_alternates_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set10_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set11_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set12_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set13_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set14_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set15_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set16_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set17_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set18_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set19_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set1_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set20_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set2_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set3_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set4_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set5_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set6_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set7_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set8_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def stylistic_set9_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...
    @_property
    def variants_property(cls) -> typing.Optional[windows_ui_xaml.DependencyProperty]: ...

@typing.final
class Typography(winrt.system.Object, metaclass=Typography_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Typography: ...

@typing.final
class Underline(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Underline: ...
    def __new__(cls: typing.Type[Underline]) -> Underline: ...
    def clear_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def get_animation_base_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def read_local_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], callback: typing.Optional[windows_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def set_value(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[windows_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def add_access_key_display_dismissed(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayDismissedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyDisplayRequestedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: windows_foundation.TypedEventHandler[TextElement, windows_ui_xaml_input.AccessKeyInvokedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: windows_foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def inlines(self) -> typing.Optional[InlineCollection]: ...
    @inlines.setter
    def inlines(self, value: typing.Optional[InlineCollection]) -> None: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def foreground(self) -> typing.Optional[windows_ui_xaml_media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[windows_ui_xaml_media.Brush]) -> None: ...
    @_property
    def font_weight(self) -> windows_ui_text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: windows_ui_text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> windows_ui_text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: windows_ui_text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> windows_ui_text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: windows_ui_text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> typing.Optional[windows_ui_xaml_media.FontFamily]: ...
    @font_family.setter
    def font_family(self, value: typing.Optional[windows_ui_xaml_media.FontFamily]) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def content_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def content_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def text_decorations(self) -> windows_ui_text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: windows_ui_text.TextDecorations) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> windows_ui_xaml_input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: windows_ui_xaml_input.KeyTipPlacementMode) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[windows_ui_xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[windows_ui_xaml.DependencyObject]) -> None: ...
    @_property
    def xaml_root(self) -> typing.Optional[windows_ui_xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[windows_ui_xaml.XamlRoot]) -> None: ...
    @_property
    def dispatcher(self) -> typing.Optional[windows_ui_core.CoreDispatcher]: ...

