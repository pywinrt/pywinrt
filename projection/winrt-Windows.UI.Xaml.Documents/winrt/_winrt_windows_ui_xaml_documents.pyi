# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation
import winrt.windows.foundation.collections
import winrt.windows.ui.core
import winrt.windows.ui.text
import winrt.windows.ui.xaml
import winrt.windows.ui.xaml.input
import winrt.windows.ui.xaml.media

from winrt.windows.ui.xaml.documents import LogicalDirection, UnderlineStyle

Self = typing.TypeVar('Self')

@typing.final
class TextRange:
    start_index: winrt.system.Int32
    length: winrt.system.Int32
    def __init__(self, start_index: winrt.system.Int32, length: winrt.system.Int32) -> None: ...

@typing.final
class Block_Static(type):
    @_property
    def line_height_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def line_stacking_strategy_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def margin_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def text_alignment_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def horizontal_text_alignment_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...

@typing.final
class Block(winrt.system.Object, metaclass=Block_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Block: ...
    @_property
    def text_alignment(self) -> winrt.windows.ui.xaml.TextAlignment: ...
    @text_alignment.setter
    def text_alignment(self, value: winrt.windows.ui.xaml.TextAlignment) -> None: ...
    @_property
    def margin(self) -> winrt.windows.ui.xaml.Thickness: ...
    @margin.setter
    def margin(self, value: winrt.windows.ui.xaml.Thickness) -> None: ...
    @_property
    def line_stacking_strategy(self) -> winrt.windows.ui.xaml.LineStackingStrategy: ...
    @line_stacking_strategy.setter
    def line_stacking_strategy(self, value: winrt.windows.ui.xaml.LineStackingStrategy) -> None: ...
    @_property
    def line_height(self) -> winrt.system.Double: ...
    @line_height.setter
    def line_height(self, value: winrt.system.Double) -> None: ...
    @_property
    def horizontal_text_alignment(self) -> winrt.windows.ui.xaml.TextAlignment: ...
    @horizontal_text_alignment.setter
    def horizontal_text_alignment(self, value: winrt.windows.ui.xaml.TextAlignment) -> None: ...

@typing.final
class BlockCollection(winrt.system.Object, winrt._winrt.MutableSequence[Block]):
    def __len__(self) -> int: ...
    def __iter__(self) -> winrt.windows.foundation.collections.IIterator[Block]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> Block: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[Block]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: Block) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[Block]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> BlockCollection: ...
    def append(self, value: typing.Optional[Block], /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> typing.Optional[winrt.windows.foundation.collections.IIterator[Block]]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> typing.Optional[Block]: ...
    def get_many(self, start_index: winrt.system.UInt32, items: winrt.system.Array[Block], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[Block]]: ...
    def index_of(self, value: typing.Optional[Block], /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: typing.Optional[Block], /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: winrt.system.Array[Block], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: typing.Optional[Block], /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class Bold(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Bold: ...
    def __new__(cls: typing.Type[Bold]) -> Bold:...

@typing.final
class ContactContentLinkProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContactContentLinkProvider: ...
    def __new__(cls: typing.Type[ContactContentLinkProvider]) -> ContactContentLinkProvider:...

@typing.final
class ContentLink_Static(type):
    @_property
    def background_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def cursor_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def element_sound_mode_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def focus_state_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def is_tab_stop_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def tab_index_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_down_navigation_strategy_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_down_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_left_navigation_strategy_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_left_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_right_navigation_strategy_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_right_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_up_navigation_strategy_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_up_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...

@typing.final
class ContentLink(winrt.system.Object, metaclass=ContentLink_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentLink: ...
    def __new__(cls: typing.Type[ContentLink]) -> ContentLink:...
    def focus(self, value: winrt.windows.ui.xaml.FocusState, /) -> bool: ...
    def add_got_focus(self, handler: typing.Optional[winrt.windows.ui.xaml.RoutedEventHandler], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_got_focus(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_invoked(self, handler: winrt.windows.foundation.TypedEventHandler[ContentLink, ContentLinkInvokedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_invoked(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_lost_focus(self, handler: typing.Optional[winrt.windows.ui.xaml.RoutedEventHandler], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_lost_focus(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def x_y_focus_up_navigation_strategy(self) -> winrt.windows.ui.xaml.input.XYFocusNavigationStrategy: ...
    @x_y_focus_up_navigation_strategy.setter
    def x_y_focus_up_navigation_strategy(self, value: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_up(self) -> typing.Optional[winrt.windows.ui.xaml.DependencyObject]: ...
    @x_y_focus_up.setter
    def x_y_focus_up(self, value: typing.Optional[winrt.windows.ui.xaml.DependencyObject]) -> None: ...
    @_property
    def x_y_focus_right_navigation_strategy(self) -> winrt.windows.ui.xaml.input.XYFocusNavigationStrategy: ...
    @x_y_focus_right_navigation_strategy.setter
    def x_y_focus_right_navigation_strategy(self, value: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_right(self) -> typing.Optional[winrt.windows.ui.xaml.DependencyObject]: ...
    @x_y_focus_right.setter
    def x_y_focus_right(self, value: typing.Optional[winrt.windows.ui.xaml.DependencyObject]) -> None: ...
    @_property
    def x_y_focus_left_navigation_strategy(self) -> winrt.windows.ui.xaml.input.XYFocusNavigationStrategy: ...
    @x_y_focus_left_navigation_strategy.setter
    def x_y_focus_left_navigation_strategy(self, value: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_left(self) -> typing.Optional[winrt.windows.ui.xaml.DependencyObject]: ...
    @x_y_focus_left.setter
    def x_y_focus_left(self, value: typing.Optional[winrt.windows.ui.xaml.DependencyObject]) -> None: ...
    @_property
    def x_y_focus_down_navigation_strategy(self) -> winrt.windows.ui.xaml.input.XYFocusNavigationStrategy: ...
    @x_y_focus_down_navigation_strategy.setter
    def x_y_focus_down_navigation_strategy(self, value: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_down(self) -> typing.Optional[winrt.windows.ui.xaml.DependencyObject]: ...
    @x_y_focus_down.setter
    def x_y_focus_down(self, value: typing.Optional[winrt.windows.ui.xaml.DependencyObject]) -> None: ...
    @_property
    def tab_index(self) -> winrt.system.Int32: ...
    @tab_index.setter
    def tab_index(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_tab_stop(self) -> bool: ...
    @is_tab_stop.setter
    def is_tab_stop(self, value: bool) -> None: ...
    @_property
    def info(self) -> typing.Optional[winrt.windows.ui.text.ContentLinkInfo]: ...
    @info.setter
    def info(self, value: typing.Optional[winrt.windows.ui.text.ContentLinkInfo]) -> None: ...
    @_property
    def element_sound_mode(self) -> winrt.windows.ui.xaml.ElementSoundMode: ...
    @element_sound_mode.setter
    def element_sound_mode(self, value: winrt.windows.ui.xaml.ElementSoundMode) -> None: ...
    @_property
    def cursor(self) -> winrt.windows.ui.core.CoreCursorType: ...
    @cursor.setter
    def cursor(self, value: winrt.windows.ui.core.CoreCursorType) -> None: ...
    @_property
    def background(self) -> typing.Optional[winrt.windows.ui.xaml.media.Brush]: ...
    @background.setter
    def background(self, value: typing.Optional[winrt.windows.ui.xaml.media.Brush]) -> None: ...
    @_property
    def focus_state(self) -> winrt.windows.ui.xaml.FocusState: ...

@typing.final
class ContentLinkInvokedEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentLinkInvokedEventArgs: ...
    @_property
    def handled(self) -> bool: ...
    @handled.setter
    def handled(self, value: bool) -> None: ...
    @_property
    def content_link_info(self) -> typing.Optional[winrt.windows.ui.text.ContentLinkInfo]: ...

@typing.final
class ContentLinkProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentLinkProvider: ...

@typing.final
class ContentLinkProviderCollection(winrt.system.Object, winrt._winrt.MutableSequence[ContentLinkProvider]):
    def __len__(self) -> int: ...
    def __iter__(self) -> winrt.windows.foundation.collections.IIterator[ContentLinkProvider]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> ContentLinkProvider: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[ContentLinkProvider]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: ContentLinkProvider) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[ContentLinkProvider]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> ContentLinkProviderCollection: ...
    def __new__(cls: typing.Type[ContentLinkProviderCollection]) -> ContentLinkProviderCollection:...
    def append(self, value: typing.Optional[ContentLinkProvider], /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> typing.Optional[winrt.windows.foundation.collections.IIterator[ContentLinkProvider]]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> typing.Optional[ContentLinkProvider]: ...
    def get_many(self, start_index: winrt.system.UInt32, items: winrt.system.Array[ContentLinkProvider], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[ContentLinkProvider]]: ...
    def index_of(self, value: typing.Optional[ContentLinkProvider], /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: typing.Optional[ContentLinkProvider], /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: winrt.system.Array[ContentLinkProvider], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: typing.Optional[ContentLinkProvider], /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class Glyphs_Static(type):
    @_property
    def fill_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def font_rendering_em_size_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def font_uri_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def indices_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def origin_x_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def origin_y_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def style_simulations_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def unicode_string_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def color_font_palette_index_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def is_color_font_enabled_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...

@typing.final
class Glyphs(winrt.system.Object, metaclass=Glyphs_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Glyphs: ...
    def __new__(cls: typing.Type[Glyphs]) -> Glyphs:...
    @_property
    def unicode_string(self) -> str: ...
    @unicode_string.setter
    def unicode_string(self, value: str) -> None: ...
    @_property
    def style_simulations(self) -> winrt.windows.ui.xaml.media.StyleSimulations: ...
    @style_simulations.setter
    def style_simulations(self, value: winrt.windows.ui.xaml.media.StyleSimulations) -> None: ...
    @_property
    def origin_y(self) -> winrt.system.Double: ...
    @origin_y.setter
    def origin_y(self, value: winrt.system.Double) -> None: ...
    @_property
    def origin_x(self) -> winrt.system.Double: ...
    @origin_x.setter
    def origin_x(self, value: winrt.system.Double) -> None: ...
    @_property
    def indices(self) -> str: ...
    @indices.setter
    def indices(self, value: str) -> None: ...
    @_property
    def font_uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    @font_uri.setter
    def font_uri(self, value: typing.Optional[winrt.windows.foundation.Uri]) -> None: ...
    @_property
    def font_rendering_em_size(self) -> winrt.system.Double: ...
    @font_rendering_em_size.setter
    def font_rendering_em_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def fill(self) -> typing.Optional[winrt.windows.ui.xaml.media.Brush]: ...
    @fill.setter
    def fill(self, value: typing.Optional[winrt.windows.ui.xaml.media.Brush]) -> None: ...
    @_property
    def is_color_font_enabled(self) -> bool: ...
    @is_color_font_enabled.setter
    def is_color_font_enabled(self, value: bool) -> None: ...
    @_property
    def color_font_palette_index(self) -> winrt.system.Int32: ...
    @color_font_palette_index.setter
    def color_font_palette_index(self, value: winrt.system.Int32) -> None: ...

@typing.final
class Hyperlink_Static(type):
    @_property
    def navigate_uri_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def underline_style_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def element_sound_mode_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_down_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_left_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_right_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_up_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def focus_state_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_down_navigation_strategy_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_left_navigation_strategy_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_right_navigation_strategy_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def x_y_focus_up_navigation_strategy_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def is_tab_stop_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def tab_index_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...

@typing.final
class Hyperlink(winrt.system.Object, metaclass=Hyperlink_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Hyperlink: ...
    def __new__(cls: typing.Type[Hyperlink]) -> Hyperlink:...
    def focus(self, value: winrt.windows.ui.xaml.FocusState, /) -> bool: ...
    def add_click(self, handler: winrt.windows.foundation.TypedEventHandler[Hyperlink, HyperlinkClickEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_click(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_got_focus(self, handler: typing.Optional[winrt.windows.ui.xaml.RoutedEventHandler], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_got_focus(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_lost_focus(self, handler: typing.Optional[winrt.windows.ui.xaml.RoutedEventHandler], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_lost_focus(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def navigate_uri(self) -> typing.Optional[winrt.windows.foundation.Uri]: ...
    @navigate_uri.setter
    def navigate_uri(self, value: typing.Optional[winrt.windows.foundation.Uri]) -> None: ...
    @_property
    def underline_style(self) -> UnderlineStyle: ...
    @underline_style.setter
    def underline_style(self, value: UnderlineStyle) -> None: ...
    @_property
    def x_y_focus_up(self) -> typing.Optional[winrt.windows.ui.xaml.DependencyObject]: ...
    @x_y_focus_up.setter
    def x_y_focus_up(self, value: typing.Optional[winrt.windows.ui.xaml.DependencyObject]) -> None: ...
    @_property
    def x_y_focus_right(self) -> typing.Optional[winrt.windows.ui.xaml.DependencyObject]: ...
    @x_y_focus_right.setter
    def x_y_focus_right(self, value: typing.Optional[winrt.windows.ui.xaml.DependencyObject]) -> None: ...
    @_property
    def x_y_focus_left(self) -> typing.Optional[winrt.windows.ui.xaml.DependencyObject]: ...
    @x_y_focus_left.setter
    def x_y_focus_left(self, value: typing.Optional[winrt.windows.ui.xaml.DependencyObject]) -> None: ...
    @_property
    def x_y_focus_down(self) -> typing.Optional[winrt.windows.ui.xaml.DependencyObject]: ...
    @x_y_focus_down.setter
    def x_y_focus_down(self, value: typing.Optional[winrt.windows.ui.xaml.DependencyObject]) -> None: ...
    @_property
    def element_sound_mode(self) -> winrt.windows.ui.xaml.ElementSoundMode: ...
    @element_sound_mode.setter
    def element_sound_mode(self, value: winrt.windows.ui.xaml.ElementSoundMode) -> None: ...
    @_property
    def x_y_focus_up_navigation_strategy(self) -> winrt.windows.ui.xaml.input.XYFocusNavigationStrategy: ...
    @x_y_focus_up_navigation_strategy.setter
    def x_y_focus_up_navigation_strategy(self, value: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_right_navigation_strategy(self) -> winrt.windows.ui.xaml.input.XYFocusNavigationStrategy: ...
    @x_y_focus_right_navigation_strategy.setter
    def x_y_focus_right_navigation_strategy(self, value: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_left_navigation_strategy(self) -> winrt.windows.ui.xaml.input.XYFocusNavigationStrategy: ...
    @x_y_focus_left_navigation_strategy.setter
    def x_y_focus_left_navigation_strategy(self, value: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def x_y_focus_down_navigation_strategy(self) -> winrt.windows.ui.xaml.input.XYFocusNavigationStrategy: ...
    @x_y_focus_down_navigation_strategy.setter
    def x_y_focus_down_navigation_strategy(self, value: winrt.windows.ui.xaml.input.XYFocusNavigationStrategy) -> None: ...
    @_property
    def focus_state(self) -> winrt.windows.ui.xaml.FocusState: ...
    @_property
    def tab_index(self) -> winrt.system.Int32: ...
    @tab_index.setter
    def tab_index(self, value: winrt.system.Int32) -> None: ...
    @_property
    def is_tab_stop(self) -> bool: ...
    @is_tab_stop.setter
    def is_tab_stop(self, value: bool) -> None: ...

@typing.final
class HyperlinkClickEventArgs(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> HyperlinkClickEventArgs: ...

@typing.final
class Inline(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Inline: ...

@typing.final
class InlineCollection(winrt.system.Object, winrt._winrt.MutableSequence[Inline]):
    def __len__(self) -> int: ...
    def __iter__(self) -> winrt.windows.foundation.collections.IIterator[Inline]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> Inline: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[Inline]: ...
    @typing.overload
    def __delitem__(self, index: typing.SupportsIndex) -> None: ...
    @typing.overload
    def __delitem__(self, index: slice) -> None: ...
    @typing.overload
    def __setitem__(self, index: typing.SupportsIndex, value: Inline) -> None: ...
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Iterable[Inline]) -> None: ...
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InlineCollection: ...
    def append(self, value: typing.Optional[Inline], /) -> None: ...
    def clear(self) -> None: ...
    def first(self) -> typing.Optional[winrt.windows.foundation.collections.IIterator[Inline]]: ...
    def get_at(self, index: winrt.system.UInt32, /) -> typing.Optional[Inline]: ...
    def get_many(self, start_index: winrt.system.UInt32, items: winrt.system.Array[Inline], /) -> winrt.system.UInt32: ...
    def get_view(self) -> typing.Optional[winrt.windows.foundation.collections.IVectorView[Inline]]: ...
    def index_of(self, value: typing.Optional[Inline], /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    def insert_at(self, index: winrt.system.UInt32, value: typing.Optional[Inline], /) -> None: ...
    def remove_at(self, index: winrt.system.UInt32, /) -> None: ...
    def remove_at_end(self) -> None: ...
    def replace_all(self, items: winrt.system.Array[Inline], /) -> None: ...
    def set_at(self, index: winrt.system.UInt32, value: typing.Optional[Inline], /) -> None: ...
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class InlineUIContainer(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> InlineUIContainer: ...
    def __new__(cls: typing.Type[InlineUIContainer]) -> InlineUIContainer:...
    @_property
    def child(self) -> typing.Optional[winrt.windows.ui.xaml.UIElement]: ...
    @child.setter
    def child(self, value: typing.Optional[winrt.windows.ui.xaml.UIElement]) -> None: ...

@typing.final
class Italic(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Italic: ...
    def __new__(cls: typing.Type[Italic]) -> Italic:...

@typing.final
class LineBreak(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> LineBreak: ...
    def __new__(cls: typing.Type[LineBreak]) -> LineBreak:...

@typing.final
class Paragraph_Static(type):
    @_property
    def text_indent_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...

@typing.final
class Paragraph(winrt.system.Object, metaclass=Paragraph_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Paragraph: ...
    def __new__(cls: typing.Type[Paragraph]) -> Paragraph:...
    @_property
    def text_indent(self) -> winrt.system.Double: ...
    @text_indent.setter
    def text_indent(self, value: winrt.system.Double) -> None: ...
    @_property
    def inlines(self) -> typing.Optional[InlineCollection]: ...

@typing.final
class PlaceContentLinkProvider(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> PlaceContentLinkProvider: ...
    def __new__(cls: typing.Type[PlaceContentLinkProvider]) -> PlaceContentLinkProvider:...

@typing.final
class Run_Static(type):
    @_property
    def flow_direction_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...

@typing.final
class Run(winrt.system.Object, metaclass=Run_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Run: ...
    def __new__(cls: typing.Type[Run]) -> Run:...
    @_property
    def text(self) -> str: ...
    @text.setter
    def text(self, value: str) -> None: ...
    @_property
    def flow_direction(self) -> winrt.windows.ui.xaml.FlowDirection: ...
    @flow_direction.setter
    def flow_direction(self, value: winrt.windows.ui.xaml.FlowDirection) -> None: ...

@typing.final
class Span(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Span: ...
    def __new__(cls: typing.Type[Span]) -> Span:...
    @_property
    def inlines(self) -> typing.Optional[InlineCollection]: ...
    @inlines.setter
    def inlines(self, value: typing.Optional[InlineCollection]) -> None: ...

@typing.final
class TextElement_Static(type):
    @_property
    def character_spacing_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def font_family_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def font_size_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def font_stretch_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def font_style_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def font_weight_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def foreground_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def language_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def is_text_scale_factor_enabled_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def access_key_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def allow_focus_on_interaction_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def exit_display_mode_on_access_key_invoked_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def access_key_scope_owner_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def is_access_key_scope_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def key_tip_horizontal_offset_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def key_tip_placement_mode_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def key_tip_vertical_offset_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def text_decorations_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...

@typing.final
class TextElement(winrt.system.Object, metaclass=TextElement_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextElement: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def on_disconnect_visual_children(self) -> None: ...
    def add_access_key_display_dismissed(self, handler: winrt.windows.foundation.TypedEventHandler[TextElement, winrt.windows.ui.xaml.input.AccessKeyDisplayDismissedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_access_key_display_dismissed(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_display_requested(self, handler: winrt.windows.foundation.TypedEventHandler[TextElement, winrt.windows.ui.xaml.input.AccessKeyDisplayRequestedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_access_key_display_requested(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_access_key_invoked(self, handler: winrt.windows.foundation.TypedEventHandler[TextElement, winrt.windows.ui.xaml.input.AccessKeyInvokedEventArgs], /) -> winrt.windows.foundation.EventRegistrationToken: ...
    def remove_access_key_invoked(self, token: winrt.windows.foundation.EventRegistrationToken, /) -> None: ...
    @_property
    def language(self) -> str: ...
    @language.setter
    def language(self, value: str) -> None: ...
    @_property
    def foreground(self) -> typing.Optional[winrt.windows.ui.xaml.media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[winrt.windows.ui.xaml.media.Brush]) -> None: ...
    @_property
    def font_weight(self) -> winrt.windows.ui.text.FontWeight: ...
    @font_weight.setter
    def font_weight(self, value: winrt.windows.ui.text.FontWeight) -> None: ...
    @_property
    def font_style(self) -> winrt.windows.ui.text.FontStyle: ...
    @font_style.setter
    def font_style(self, value: winrt.windows.ui.text.FontStyle) -> None: ...
    @_property
    def font_stretch(self) -> winrt.windows.ui.text.FontStretch: ...
    @font_stretch.setter
    def font_stretch(self, value: winrt.windows.ui.text.FontStretch) -> None: ...
    @_property
    def font_size(self) -> winrt.system.Double: ...
    @font_size.setter
    def font_size(self, value: winrt.system.Double) -> None: ...
    @_property
    def font_family(self) -> typing.Optional[winrt.windows.ui.xaml.media.FontFamily]: ...
    @font_family.setter
    def font_family(self, value: typing.Optional[winrt.windows.ui.xaml.media.FontFamily]) -> None: ...
    @_property
    def character_spacing(self) -> winrt.system.Int32: ...
    @character_spacing.setter
    def character_spacing(self, value: winrt.system.Int32) -> None: ...
    @_property
    def content_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def content_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_end(self) -> typing.Optional[TextPointer]: ...
    @_property
    def element_start(self) -> typing.Optional[TextPointer]: ...
    @_property
    def name(self) -> str: ...
    @_property
    def is_text_scale_factor_enabled(self) -> bool: ...
    @is_text_scale_factor_enabled.setter
    def is_text_scale_factor_enabled(self, value: bool) -> None: ...
    @_property
    def exit_display_mode_on_access_key_invoked(self) -> bool: ...
    @exit_display_mode_on_access_key_invoked.setter
    def exit_display_mode_on_access_key_invoked(self, value: bool) -> None: ...
    @_property
    def allow_focus_on_interaction(self) -> bool: ...
    @allow_focus_on_interaction.setter
    def allow_focus_on_interaction(self, value: bool) -> None: ...
    @_property
    def access_key(self) -> str: ...
    @access_key.setter
    def access_key(self, value: str) -> None: ...
    @_property
    def text_decorations(self) -> winrt.windows.ui.text.TextDecorations: ...
    @text_decorations.setter
    def text_decorations(self, value: winrt.windows.ui.text.TextDecorations) -> None: ...
    @_property
    def key_tip_vertical_offset(self) -> winrt.system.Double: ...
    @key_tip_vertical_offset.setter
    def key_tip_vertical_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def key_tip_placement_mode(self) -> winrt.windows.ui.xaml.input.KeyTipPlacementMode: ...
    @key_tip_placement_mode.setter
    def key_tip_placement_mode(self, value: winrt.windows.ui.xaml.input.KeyTipPlacementMode) -> None: ...
    @_property
    def key_tip_horizontal_offset(self) -> winrt.system.Double: ...
    @key_tip_horizontal_offset.setter
    def key_tip_horizontal_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def is_access_key_scope(self) -> bool: ...
    @is_access_key_scope.setter
    def is_access_key_scope(self, value: bool) -> None: ...
    @_property
    def access_key_scope_owner(self) -> typing.Optional[winrt.windows.ui.xaml.DependencyObject]: ...
    @access_key_scope_owner.setter
    def access_key_scope_owner(self, value: typing.Optional[winrt.windows.ui.xaml.DependencyObject]) -> None: ...
    @_property
    def xaml_root(self) -> typing.Optional[winrt.windows.ui.xaml.XamlRoot]: ...
    @xaml_root.setter
    def xaml_root(self, value: typing.Optional[winrt.windows.ui.xaml.XamlRoot]) -> None: ...

@typing.final
class TextHighlighter_Static(type):
    @_property
    def background_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def foreground_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...

@typing.final
class TextHighlighter(winrt.system.Object, metaclass=TextHighlighter_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextHighlighter: ...
    def __new__(cls: typing.Type[TextHighlighter]) -> TextHighlighter:...
    @_property
    def foreground(self) -> typing.Optional[winrt.windows.ui.xaml.media.Brush]: ...
    @foreground.setter
    def foreground(self, value: typing.Optional[winrt.windows.ui.xaml.media.Brush]) -> None: ...
    @_property
    def background(self) -> typing.Optional[winrt.windows.ui.xaml.media.Brush]: ...
    @background.setter
    def background(self, value: typing.Optional[winrt.windows.ui.xaml.media.Brush]) -> None: ...
    @_property
    def ranges(self) -> typing.Optional[winrt.windows.foundation.collections.IVector[TextRange]]: ...

@typing.final
class TextHighlighterBase(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextHighlighterBase: ...

@typing.final
class TextPointer(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> TextPointer: ...
    def get_character_rect(self, direction: LogicalDirection, /) -> winrt.windows.foundation.Rect: ...
    def get_position_at_offset(self, offset: winrt.system.Int32, direction: LogicalDirection, /) -> typing.Optional[TextPointer]: ...
    @_property
    def logical_direction(self) -> LogicalDirection: ...
    @_property
    def offset(self) -> winrt.system.Int32: ...
    @_property
    def parent(self) -> typing.Optional[winrt.windows.ui.xaml.DependencyObject]: ...
    @_property
    def visual_parent(self) -> typing.Optional[winrt.windows.ui.xaml.FrameworkElement]: ...

@typing.final
class Typography_Static(type):
    def get_annotation_alternates(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Int32: ...
    def get_capital_spacing(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_capitals(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.windows.ui.xaml.FontCapitals: ...
    def get_case_sensitive_forms(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_contextual_alternates(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_contextual_ligatures(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_contextual_swashes(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Int32: ...
    def get_discretionary_ligatures(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_east_asian_expert_forms(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_east_asian_language(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.windows.ui.xaml.FontEastAsianLanguage: ...
    def get_east_asian_widths(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.windows.ui.xaml.FontEastAsianWidths: ...
    def get_fraction(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.windows.ui.xaml.FontFraction: ...
    def get_historical_forms(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_historical_ligatures(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_kerning(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_mathematical_greek(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_numeral_alignment(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.windows.ui.xaml.FontNumeralAlignment: ...
    def get_numeral_style(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.windows.ui.xaml.FontNumeralStyle: ...
    def get_slashed_zero(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_standard_ligatures(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_standard_swashes(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Int32: ...
    def get_stylistic_alternates(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.system.Int32: ...
    def get_stylistic_set1(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set10(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set11(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set12(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set13(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set14(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set15(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set16(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set17(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set18(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set19(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set2(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set20(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set3(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set4(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set5(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set6(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set7(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set8(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_stylistic_set9(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> bool: ...
    def get_variants(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], /) -> winrt.windows.ui.xaml.FontVariants: ...
    def set_annotation_alternates(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Int32, /) -> None: ...
    def set_capital_spacing(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_capitals(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.windows.ui.xaml.FontCapitals, /) -> None: ...
    def set_case_sensitive_forms(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_contextual_alternates(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_contextual_ligatures(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_contextual_swashes(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Int32, /) -> None: ...
    def set_discretionary_ligatures(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_east_asian_expert_forms(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_east_asian_language(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.windows.ui.xaml.FontEastAsianLanguage, /) -> None: ...
    def set_east_asian_widths(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.windows.ui.xaml.FontEastAsianWidths, /) -> None: ...
    def set_fraction(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.windows.ui.xaml.FontFraction, /) -> None: ...
    def set_historical_forms(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_historical_ligatures(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_kerning(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_mathematical_greek(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_numeral_alignment(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.windows.ui.xaml.FontNumeralAlignment, /) -> None: ...
    def set_numeral_style(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.windows.ui.xaml.FontNumeralStyle, /) -> None: ...
    def set_slashed_zero(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_standard_ligatures(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_standard_swashes(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Int32, /) -> None: ...
    def set_stylistic_alternates(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.system.Int32, /) -> None: ...
    def set_stylistic_set1(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set10(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set11(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set12(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set13(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set14(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set15(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set16(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set17(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set18(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set19(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set2(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set20(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set3(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set4(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set5(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set6(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set7(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set8(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_stylistic_set9(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: bool, /) -> None: ...
    def set_variants(cls, element: typing.Optional[winrt.windows.ui.xaml.DependencyObject], value: winrt.windows.ui.xaml.FontVariants, /) -> None: ...
    @_property
    def annotation_alternates_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def capital_spacing_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def capitals_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def case_sensitive_forms_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def contextual_alternates_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def contextual_ligatures_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def contextual_swashes_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def discretionary_ligatures_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def east_asian_expert_forms_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def east_asian_language_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def east_asian_widths_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def fraction_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def historical_forms_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def historical_ligatures_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def kerning_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def mathematical_greek_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def numeral_alignment_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def numeral_style_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def slashed_zero_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def standard_ligatures_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def standard_swashes_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_alternates_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set10_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set11_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set12_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set13_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set14_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set15_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set16_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set17_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set18_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set19_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set1_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set20_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set2_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set3_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set4_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set5_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set6_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set7_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set8_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def stylistic_set9_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...
    @_property
    def variants_property(cls) -> typing.Optional[winrt.windows.ui.xaml.DependencyProperty]: ...

@typing.final
class Typography(winrt.system.Object, metaclass=Typography_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Typography: ...

@typing.final
class Underline(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Underline: ...
    def __new__(cls: typing.Type[Underline]) -> Underline:...

