# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property
from abc import abstractmethod

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.storage as windows_storage
import winrt.windows.system as windows_system

from winrt.windows.storage.accesscache import AccessCacheOptions, RecentStorageItemVisibility

Self = typing.TypeVar('Self')

@typing.final
class AccessListEntry:
    token: str
    metadata: str
    def __init__(self, token: str = "", metadata: str = "") -> None: ...

@typing.final
class AccessListEntryView(winrt.system.Object, winrt._winrt.Sequence[AccessListEntry]):
    def __len__(self) -> int: ...
    def __iter__(self) -> typing.Iterator[AccessListEntry]: ...
    @typing.overload
    def __getitem__(self, index: typing.SupportsIndex) -> AccessListEntry: ...
    @typing.overload
    def __getitem__(self, index: slice) -> winrt.system.Array[AccessListEntry]: ...
    # Windows.Foundation.Collections.IIterator`1<Windows.Storage.AccessCache.AccessListEntry> Windows.Storage.AccessCache.AccessListEntryView::First()
    def first(self) -> windows_foundation_collections.IIterator[AccessListEntry]: ...
    # Windows.Storage.AccessCache.AccessListEntry Windows.Storage.AccessCache.AccessListEntryView::GetAt(System.UInt32)
    def get_at(self, index: winrt.system.UInt32, /) -> AccessListEntry: ...
    # System.UInt32 Windows.Storage.AccessCache.AccessListEntryView::GetMany(System.UInt32,Windows.Storage.AccessCache.AccessListEntry[])
    def get_many(self, start_index: winrt.system.UInt32, items: typing.Union[winrt.system.Array[AccessListEntry], winrt.system.WriteableBuffer], /) -> winrt.system.UInt32: ...
    # System.Boolean Windows.Storage.AccessCache.AccessListEntryView::IndexOf(Windows.Storage.AccessCache.AccessListEntry,System.UInt32&)
    def index_of(self, value: AccessListEntry, /) -> typing.Tuple[bool, winrt.system.UInt32]: ...
    # System.UInt32 Windows.Storage.AccessCache.AccessListEntryView::get_Size()
    @_property
    def size(self) -> winrt.system.UInt32: ...

@typing.final
class ItemRemovedEventArgs(winrt.system.Object):
    # Windows.Storage.AccessCache.AccessListEntry Windows.Storage.AccessCache.ItemRemovedEventArgs::get_RemovedEntry()
    @_property
    def removed_entry(self) -> AccessListEntry: ...

@typing.final
class StorageApplicationPermissions_Static(type):
    # Windows.Storage.AccessCache.StorageItemAccessList Windows.Storage.AccessCache.StorageApplicationPermissions::GetFutureAccessListForUser(Windows.System.User)
    def get_future_access_list_for_user(cls, user: windows_system.User, /) -> StorageItemAccessList: ...
    # Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList Windows.Storage.AccessCache.StorageApplicationPermissions::GetMostRecentlyUsedListForUser(Windows.System.User)
    def get_most_recently_used_list_for_user(cls, user: windows_system.User, /) -> StorageItemMostRecentlyUsedList: ...
    # Windows.Storage.AccessCache.StorageItemAccessList Windows.Storage.AccessCache.StorageApplicationPermissions::get_FutureAccessList()
    @_property
    def future_access_list(cls) -> StorageItemAccessList: ...
    # Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList Windows.Storage.AccessCache.StorageApplicationPermissions::get_MostRecentlyUsedList()
    @_property
    def most_recently_used_list(cls) -> StorageItemMostRecentlyUsedList: ...

@typing.final
class StorageApplicationPermissions(winrt.system.Object, metaclass=StorageApplicationPermissions_Static):
    pass

@typing.final
class StorageItemAccessList(winrt.system.Object, IStorageItemAccessList):
    # System.String Windows.Storage.AccessCache.StorageItemAccessList::Add(Windows.Storage.IStorageItem,System.String)
    def add(self, file: windows_storage.IStorageItem, metadata: str, /) -> str: ...
    # System.Void Windows.Storage.AccessCache.StorageItemAccessList::AddOrReplace(System.String,Windows.Storage.IStorageItem,System.String)
    def add_or_replace(self, token: str, file: windows_storage.IStorageItem, metadata: str, /) -> None: ...
    # System.Void Windows.Storage.AccessCache.StorageItemAccessList::AddOrReplace(System.String,Windows.Storage.IStorageItem)
    def add_or_replace_overload_default_metadata(self, token: str, file: windows_storage.IStorageItem, /) -> None: ...
    # System.String Windows.Storage.AccessCache.StorageItemAccessList::Add(Windows.Storage.IStorageItem)
    def add_overload_default_metadata(self, file: windows_storage.IStorageItem, /) -> str: ...
    # System.Boolean Windows.Storage.AccessCache.StorageItemAccessList::CheckAccess(Windows.Storage.IStorageItem)
    def check_access(self, file: windows_storage.IStorageItem, /) -> bool: ...
    # System.Void Windows.Storage.AccessCache.StorageItemAccessList::Clear()
    def clear(self) -> None: ...
    # System.Boolean Windows.Storage.AccessCache.StorageItemAccessList::ContainsItem(System.String)
    def contains_item(self, token: str, /) -> bool: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile> Windows.Storage.AccessCache.StorageItemAccessList::GetFileAsync(System.String)
    def get_file_async(self, token: str, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFile]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile> Windows.Storage.AccessCache.StorageItemAccessList::GetFileAsync(System.String,Windows.Storage.AccessCache.AccessCacheOptions)
    def get_file_with_options_async(self, token: str, options: AccessCacheOptions, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFile]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFolder> Windows.Storage.AccessCache.StorageItemAccessList::GetFolderAsync(System.String)
    def get_folder_async(self, token: str, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFolder]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFolder> Windows.Storage.AccessCache.StorageItemAccessList::GetFolderAsync(System.String,Windows.Storage.AccessCache.AccessCacheOptions)
    def get_folder_with_options_async(self, token: str, options: AccessCacheOptions, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFolder]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.IStorageItem> Windows.Storage.AccessCache.StorageItemAccessList::GetItemAsync(System.String)
    def get_item_async(self, token: str, /) -> windows_foundation.IAsyncOperation[windows_storage.IStorageItem]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.IStorageItem> Windows.Storage.AccessCache.StorageItemAccessList::GetItemAsync(System.String,Windows.Storage.AccessCache.AccessCacheOptions)
    def get_item_with_options_async(self, token: str, options: AccessCacheOptions, /) -> windows_foundation.IAsyncOperation[windows_storage.IStorageItem]: ...
    # System.Void Windows.Storage.AccessCache.StorageItemAccessList::Remove(System.String)
    def remove(self, token: str, /) -> None: ...
    # Windows.Storage.AccessCache.AccessListEntryView Windows.Storage.AccessCache.StorageItemAccessList::get_Entries()
    @_property
    def entries(self) -> AccessListEntryView: ...
    # System.UInt32 Windows.Storage.AccessCache.StorageItemAccessList::get_MaximumItemsAllowed()
    @_property
    def maximum_items_allowed(self) -> winrt.system.UInt32: ...

@typing.final
class StorageItemMostRecentlyUsedList(winrt.system.Object, IStorageItemAccessList):
    # System.String Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::Add(Windows.Storage.IStorageItem,System.String)
    def add(self, file: windows_storage.IStorageItem, metadata: str, /) -> str: ...
    # System.Void Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::AddOrReplace(System.String,Windows.Storage.IStorageItem,System.String)
    def add_or_replace(self, token: str, file: windows_storage.IStorageItem, metadata: str, /) -> None: ...
    # System.Void Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::AddOrReplace(System.String,Windows.Storage.IStorageItem)
    def add_or_replace_overload_default_metadata(self, token: str, file: windows_storage.IStorageItem, /) -> None: ...
    # System.Void Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::AddOrReplace(System.String,Windows.Storage.IStorageItem,System.String,Windows.Storage.AccessCache.RecentStorageItemVisibility)
    def add_or_replace_with_metadata_and_visibility(self, token: str, file: windows_storage.IStorageItem, metadata: str, visibility: RecentStorageItemVisibility, /) -> None: ...
    # System.String Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::Add(Windows.Storage.IStorageItem)
    def add_overload_default_metadata(self, file: windows_storage.IStorageItem, /) -> str: ...
    # System.String Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::Add(Windows.Storage.IStorageItem,System.String,Windows.Storage.AccessCache.RecentStorageItemVisibility)
    def add_with_metadata_and_visibility(self, file: windows_storage.IStorageItem, metadata: str, visibility: RecentStorageItemVisibility, /) -> str: ...
    # System.Boolean Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::CheckAccess(Windows.Storage.IStorageItem)
    def check_access(self, file: windows_storage.IStorageItem, /) -> bool: ...
    # System.Void Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::Clear()
    def clear(self) -> None: ...
    # System.Boolean Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::ContainsItem(System.String)
    def contains_item(self, token: str, /) -> bool: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile> Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::GetFileAsync(System.String)
    def get_file_async(self, token: str, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFile]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile> Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::GetFileAsync(System.String,Windows.Storage.AccessCache.AccessCacheOptions)
    def get_file_with_options_async(self, token: str, options: AccessCacheOptions, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFile]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFolder> Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::GetFolderAsync(System.String)
    def get_folder_async(self, token: str, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFolder]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFolder> Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::GetFolderAsync(System.String,Windows.Storage.AccessCache.AccessCacheOptions)
    def get_folder_with_options_async(self, token: str, options: AccessCacheOptions, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFolder]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.IStorageItem> Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::GetItemAsync(System.String)
    def get_item_async(self, token: str, /) -> windows_foundation.IAsyncOperation[windows_storage.IStorageItem]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.IStorageItem> Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::GetItemAsync(System.String,Windows.Storage.AccessCache.AccessCacheOptions)
    def get_item_with_options_async(self, token: str, options: AccessCacheOptions, /) -> windows_foundation.IAsyncOperation[windows_storage.IStorageItem]: ...
    # System.Void Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::Remove(System.String)
    def remove(self, token: str, /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::add_ItemRemoved(Windows.Foundation.TypedEventHandler`2<Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList,Windows.Storage.AccessCache.ItemRemovedEventArgs>)
    def add_item_removed(self, handler: windows_foundation.TypedEventHandler[StorageItemMostRecentlyUsedList, ItemRemovedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::remove_ItemRemoved(Windows.Foundation.EventRegistrationToken)
    def remove_item_removed(self, event_cookie: windows_foundation.EventRegistrationToken, /) -> None: ...
    # Windows.Storage.AccessCache.AccessListEntryView Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::get_Entries()
    @_property
    def entries(self) -> AccessListEntryView: ...
    # System.UInt32 Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList::get_MaximumItemsAllowed()
    @_property
    def maximum_items_allowed(self) -> winrt.system.UInt32: ...

@typing.final
class _IStorageItemAccessList: ...

class IStorageItemAccessList(winrt._winrt.IInspectable):
    # System.String Windows.Storage.AccessCache.IStorageItemAccessList::Add(Windows.Storage.IStorageItem,System.String)
    @abstractmethod
    def add(self, file: windows_storage.IStorageItem, metadata: str, /) -> str: ...
    # System.Void Windows.Storage.AccessCache.IStorageItemAccessList::AddOrReplace(System.String,Windows.Storage.IStorageItem,System.String)
    @abstractmethod
    def add_or_replace(self, token: str, file: windows_storage.IStorageItem, metadata: str, /) -> None: ...
    # System.Void Windows.Storage.AccessCache.IStorageItemAccessList::AddOrReplace(System.String,Windows.Storage.IStorageItem)
    @abstractmethod
    def add_or_replace_overload_default_metadata(self, token: str, file: windows_storage.IStorageItem, /) -> None: ...
    # System.String Windows.Storage.AccessCache.IStorageItemAccessList::Add(Windows.Storage.IStorageItem)
    @abstractmethod
    def add_overload_default_metadata(self, file: windows_storage.IStorageItem, /) -> str: ...
    # System.Boolean Windows.Storage.AccessCache.IStorageItemAccessList::CheckAccess(Windows.Storage.IStorageItem)
    @abstractmethod
    def check_access(self, file: windows_storage.IStorageItem, /) -> bool: ...
    # System.Void Windows.Storage.AccessCache.IStorageItemAccessList::Clear()
    @abstractmethod
    def clear(self) -> None: ...
    # System.Boolean Windows.Storage.AccessCache.IStorageItemAccessList::ContainsItem(System.String)
    @abstractmethod
    def contains_item(self, token: str, /) -> bool: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile> Windows.Storage.AccessCache.IStorageItemAccessList::GetFileAsync(System.String)
    @abstractmethod
    def get_file_async(self, token: str, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFile]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFile> Windows.Storage.AccessCache.IStorageItemAccessList::GetFileAsync(System.String,Windows.Storage.AccessCache.AccessCacheOptions)
    @abstractmethod
    def get_file_with_options_async(self, token: str, options: AccessCacheOptions, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFile]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFolder> Windows.Storage.AccessCache.IStorageItemAccessList::GetFolderAsync(System.String)
    @abstractmethod
    def get_folder_async(self, token: str, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFolder]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFolder> Windows.Storage.AccessCache.IStorageItemAccessList::GetFolderAsync(System.String,Windows.Storage.AccessCache.AccessCacheOptions)
    @abstractmethod
    def get_folder_with_options_async(self, token: str, options: AccessCacheOptions, /) -> windows_foundation.IAsyncOperation[windows_storage.StorageFolder]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.IStorageItem> Windows.Storage.AccessCache.IStorageItemAccessList::GetItemAsync(System.String)
    @abstractmethod
    def get_item_async(self, token: str, /) -> windows_foundation.IAsyncOperation[windows_storage.IStorageItem]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.IStorageItem> Windows.Storage.AccessCache.IStorageItemAccessList::GetItemAsync(System.String,Windows.Storage.AccessCache.AccessCacheOptions)
    @abstractmethod
    def get_item_with_options_async(self, token: str, options: AccessCacheOptions, /) -> windows_foundation.IAsyncOperation[windows_storage.IStorageItem]: ...
    # System.Void Windows.Storage.AccessCache.IStorageItemAccessList::Remove(System.String)
    @abstractmethod
    def remove(self, token: str, /) -> None: ...
    # Windows.Storage.AccessCache.AccessListEntryView Windows.Storage.AccessCache.IStorageItemAccessList::get_Entries()
    @_property
    @abstractmethod
    def entries(self) -> AccessListEntryView: ...
    # System.UInt32 Windows.Storage.AccessCache.IStorageItemAccessList::get_MaximumItemsAllowed()
    @_property
    @abstractmethod
    def maximum_items_allowed(self) -> winrt.system.UInt32: ...

