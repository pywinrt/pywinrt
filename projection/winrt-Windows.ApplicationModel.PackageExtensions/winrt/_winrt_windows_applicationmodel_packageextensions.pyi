# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.applicationmodel as windows_applicationmodel
import winrt.windows.foundation as windows_foundation
import winrt.windows.foundation.collections as windows_foundation_collections
import winrt.windows.storage as windows_storage

Self = typing.TypeVar('Self')

@typing.final
class PackageExtension(winrt.system.Object):
    # Windows.Foundation.Collections.IPropertySet Windows.ApplicationModel.PackageExtensions.PackageExtension::GetExtensionProperties()
    def get_extension_properties(self) -> windows_foundation_collections.IPropertySet: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IPropertySet> Windows.ApplicationModel.PackageExtensions.PackageExtension::GetExtensionPropertiesAsync()
    def get_extension_properties_async(self) -> windows_foundation.IAsyncOperation[windows_foundation_collections.IPropertySet]: ...
    # Windows.Storage.StorageFolder Windows.ApplicationModel.PackageExtensions.PackageExtension::GetPublicFolder()
    def get_public_folder(self) -> windows_storage.StorageFolder: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Storage.StorageFolder> Windows.ApplicationModel.PackageExtensions.PackageExtension::GetPublicFolderAsync()
    def get_public_folder_async(self) -> windows_foundation.IAsyncOperation[windows_storage.StorageFolder]: ...
    # System.String Windows.ApplicationModel.PackageExtensions.PackageExtension::GetPublicPath()
    def get_public_path(self) -> str: ...
    # System.String Windows.ApplicationModel.PackageExtensions.PackageExtension::get_Description()
    @_property
    def description(self) -> str: ...
    # System.String Windows.ApplicationModel.PackageExtensions.PackageExtension::get_DisplayName()
    @_property
    def display_name(self) -> str: ...
    # System.String Windows.ApplicationModel.PackageExtensions.PackageExtension::get_Id()
    @_property
    def id(self) -> str: ...
    # Windows.ApplicationModel.Package Windows.ApplicationModel.PackageExtensions.PackageExtension::get_Package()
    @_property
    def package(self) -> windows_applicationmodel.Package: ...

@typing.final
class PackageExtensionCatalog_Static(winrt._winrt.IInspectable_Static):
    # Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog::Open(System.String)
    def open(cls, package_extension_name: str, /) -> PackageExtensionCatalog: ...

@typing.final
class PackageExtensionCatalog(winrt.system.Object, metaclass=PackageExtensionCatalog_Static):
    # Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.PackageExtensions.PackageExtension> Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog::FindAll()
    def find_all(self) -> typing.Sequence[PackageExtension]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.PackageExtensions.PackageExtension>> Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog::FindAllAsync()
    def find_all_async(self) -> windows_foundation.IAsyncOperation[typing.Sequence[PackageExtension]]: ...
    # Windows.Foundation.IAsyncOperation`1<System.Boolean> Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog::RequestRemovePackageAsync(System.String)
    def request_remove_package_async(self, package_full_name: str, /) -> windows_foundation.IAsyncOperation[bool]: ...
    # Windows.Foundation.EventRegistrationToken Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog::add_PackageInstalled(Windows.Foundation.TypedEventHandler`2<Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog,Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageInstalledEventArgs>)
    def add_package_installed(self, handler: windows_foundation.TypedEventHandler[PackageExtensionCatalog, PackageExtensionPackageInstalledEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog::remove_PackageInstalled(Windows.Foundation.EventRegistrationToken)
    def remove_package_installed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog::add_PackageStatusChanged(Windows.Foundation.TypedEventHandler`2<Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog,Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageStatusChangedEventArgs>)
    def add_package_status_changed(self, handler: windows_foundation.TypedEventHandler[PackageExtensionCatalog, PackageExtensionPackageStatusChangedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog::remove_PackageStatusChanged(Windows.Foundation.EventRegistrationToken)
    def remove_package_status_changed(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog::add_PackageUninstalling(Windows.Foundation.TypedEventHandler`2<Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog,Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageUninstallingEventArgs>)
    def add_package_uninstalling(self, handler: windows_foundation.TypedEventHandler[PackageExtensionCatalog, PackageExtensionPackageUninstallingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog::remove_PackageUninstalling(Windows.Foundation.EventRegistrationToken)
    def remove_package_uninstalling(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog::add_PackageUpdated(Windows.Foundation.TypedEventHandler`2<Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog,Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageUpdatedEventArgs>)
    def add_package_updated(self, handler: windows_foundation.TypedEventHandler[PackageExtensionCatalog, PackageExtensionPackageUpdatedEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog::remove_PackageUpdated(Windows.Foundation.EventRegistrationToken)
    def remove_package_updated(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...
    # Windows.Foundation.EventRegistrationToken Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog::add_PackageUpdating(Windows.Foundation.TypedEventHandler`2<Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog,Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageUpdatingEventArgs>)
    def add_package_updating(self, handler: windows_foundation.TypedEventHandler[PackageExtensionCatalog, PackageExtensionPackageUpdatingEventArgs], /) -> windows_foundation.EventRegistrationToken: ...
    # System.Void Windows.ApplicationModel.PackageExtensions.PackageExtensionCatalog::remove_PackageUpdating(Windows.Foundation.EventRegistrationToken)
    def remove_package_updating(self, token: typing.Union[windows_foundation.EventRegistrationToken, typing.Tuple[winrt.system.Int64]], /) -> None: ...

@typing.final
class PackageExtensionPackageInstalledEventArgs(winrt.system.Object):
    # Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.PackageExtensions.PackageExtension> Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageInstalledEventArgs::get_Extensions()
    @_property
    def extensions(self) -> typing.Sequence[PackageExtension]: ...
    # Windows.ApplicationModel.Package Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageInstalledEventArgs::get_Package()
    @_property
    def package(self) -> windows_applicationmodel.Package: ...
    # System.String Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageInstalledEventArgs::get_PackageExtensionName()
    @_property
    def package_extension_name(self) -> str: ...

@typing.final
class PackageExtensionPackageStatusChangedEventArgs(winrt.system.Object):
    # Windows.ApplicationModel.Package Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageStatusChangedEventArgs::get_Package()
    @_property
    def package(self) -> windows_applicationmodel.Package: ...
    # System.String Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageStatusChangedEventArgs::get_PackageExtensionName()
    @_property
    def package_extension_name(self) -> str: ...

@typing.final
class PackageExtensionPackageUninstallingEventArgs(winrt.system.Object):
    # Windows.ApplicationModel.Package Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageUninstallingEventArgs::get_Package()
    @_property
    def package(self) -> windows_applicationmodel.Package: ...
    # System.String Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageUninstallingEventArgs::get_PackageExtensionName()
    @_property
    def package_extension_name(self) -> str: ...

@typing.final
class PackageExtensionPackageUpdatedEventArgs(winrt.system.Object):
    # Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.PackageExtensions.PackageExtension> Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageUpdatedEventArgs::get_Extensions()
    @_property
    def extensions(self) -> typing.Sequence[PackageExtension]: ...
    # Windows.ApplicationModel.Package Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageUpdatedEventArgs::get_Package()
    @_property
    def package(self) -> windows_applicationmodel.Package: ...
    # System.String Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageUpdatedEventArgs::get_PackageExtensionName()
    @_property
    def package_extension_name(self) -> str: ...

@typing.final
class PackageExtensionPackageUpdatingEventArgs(winrt.system.Object):
    # Windows.ApplicationModel.Package Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageUpdatingEventArgs::get_Package()
    @_property
    def package(self) -> windows_applicationmodel.Package: ...
    # System.String Windows.ApplicationModel.PackageExtensions.PackageExtensionPackageUpdatingEventArgs::get_PackageExtensionName()
    @_property
    def package_extension_name(self) -> str: ...

