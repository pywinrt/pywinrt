# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation as windows_foundation
import winrt.windows.storage.streams as windows_storage_streams

from winrt.windows.security.credentials.ui import AuthenticationProtocol, CredentialSaveOption, UserConsentVerificationResult, UserConsentVerifierAvailability

Self = typing.TypeVar('Self')

@typing.final
class CredentialPicker_Static(type):
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.UI.CredentialPickerResults> Windows.Security.Credentials.UI.CredentialPicker::PickAsync(System.String,System.String,System.String)
    def pick_with_caption_async(cls, target_name: str, message: str, caption: str, /) -> windows_foundation.IAsyncOperation[CredentialPickerResults]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.UI.CredentialPickerResults> Windows.Security.Credentials.UI.CredentialPicker::PickAsync(System.String,System.String)
    def pick_with_message_async(cls, target_name: str, message: str, /) -> windows_foundation.IAsyncOperation[CredentialPickerResults]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.UI.CredentialPickerResults> Windows.Security.Credentials.UI.CredentialPicker::PickAsync(Windows.Security.Credentials.UI.CredentialPickerOptions)
    def pick_with_options_async(cls, options: CredentialPickerOptions, /) -> windows_foundation.IAsyncOperation[CredentialPickerResults]: ...

@typing.final
class CredentialPicker(winrt.system.Object, metaclass=CredentialPicker_Static):
    pass

@typing.final
class CredentialPickerOptions(winrt.system.Object):
    def __new__(cls: typing.Type[Self]) -> Self: ...
    # System.String Windows.Security.Credentials.UI.CredentialPickerOptions::get_TargetName()
    @_property
    def target_name(self) -> str: ...
    # System.Void Windows.Security.Credentials.UI.CredentialPickerOptions::put_TargetName(System.String)
    @target_name.setter
    def target_name(self, value: str) -> None: ...
    # Windows.Storage.Streams.IBuffer Windows.Security.Credentials.UI.CredentialPickerOptions::get_PreviousCredential()
    @_property
    def previous_credential(self) -> windows_storage_streams.IBuffer: ...
    # System.Void Windows.Security.Credentials.UI.CredentialPickerOptions::put_PreviousCredential(Windows.Storage.Streams.IBuffer)
    @previous_credential.setter
    def previous_credential(self, value: windows_storage_streams.ImplementsIBuffer) -> None: ...
    # System.String Windows.Security.Credentials.UI.CredentialPickerOptions::get_Message()
    @_property
    def message(self) -> str: ...
    # System.Void Windows.Security.Credentials.UI.CredentialPickerOptions::put_Message(System.String)
    @message.setter
    def message(self, value: str) -> None: ...
    # System.UInt32 Windows.Security.Credentials.UI.CredentialPickerOptions::get_ErrorCode()
    @_property
    def error_code(self) -> winrt.system.UInt32: ...
    # System.Void Windows.Security.Credentials.UI.CredentialPickerOptions::put_ErrorCode(System.UInt32)
    @error_code.setter
    def error_code(self, value: winrt.system.UInt32) -> None: ...
    # System.String Windows.Security.Credentials.UI.CredentialPickerOptions::get_CustomAuthenticationProtocol()
    @_property
    def custom_authentication_protocol(self) -> str: ...
    # System.Void Windows.Security.Credentials.UI.CredentialPickerOptions::put_CustomAuthenticationProtocol(System.String)
    @custom_authentication_protocol.setter
    def custom_authentication_protocol(self, value: str) -> None: ...
    # Windows.Security.Credentials.UI.CredentialSaveOption Windows.Security.Credentials.UI.CredentialPickerOptions::get_CredentialSaveOption()
    @_property
    def credential_save_option(self) -> CredentialSaveOption: ...
    # System.Void Windows.Security.Credentials.UI.CredentialPickerOptions::put_CredentialSaveOption(Windows.Security.Credentials.UI.CredentialSaveOption)
    @credential_save_option.setter
    def credential_save_option(self, value: CredentialSaveOption) -> None: ...
    # System.String Windows.Security.Credentials.UI.CredentialPickerOptions::get_Caption()
    @_property
    def caption(self) -> str: ...
    # System.Void Windows.Security.Credentials.UI.CredentialPickerOptions::put_Caption(System.String)
    @caption.setter
    def caption(self, value: str) -> None: ...
    # System.Boolean Windows.Security.Credentials.UI.CredentialPickerOptions::get_CallerSavesCredential()
    @_property
    def caller_saves_credential(self) -> bool: ...
    # System.Void Windows.Security.Credentials.UI.CredentialPickerOptions::put_CallerSavesCredential(System.Boolean)
    @caller_saves_credential.setter
    def caller_saves_credential(self, value: bool) -> None: ...
    # Windows.Security.Credentials.UI.AuthenticationProtocol Windows.Security.Credentials.UI.CredentialPickerOptions::get_AuthenticationProtocol()
    @_property
    def authentication_protocol(self) -> AuthenticationProtocol: ...
    # System.Void Windows.Security.Credentials.UI.CredentialPickerOptions::put_AuthenticationProtocol(Windows.Security.Credentials.UI.AuthenticationProtocol)
    @authentication_protocol.setter
    def authentication_protocol(self, value: AuthenticationProtocol) -> None: ...
    # System.Boolean Windows.Security.Credentials.UI.CredentialPickerOptions::get_AlwaysDisplayDialog()
    @_property
    def always_display_dialog(self) -> bool: ...
    # System.Void Windows.Security.Credentials.UI.CredentialPickerOptions::put_AlwaysDisplayDialog(System.Boolean)
    @always_display_dialog.setter
    def always_display_dialog(self, value: bool) -> None: ...

@typing.final
class CredentialPickerResults(winrt.system.Object):
    # Windows.Storage.Streams.IBuffer Windows.Security.Credentials.UI.CredentialPickerResults::get_Credential()
    @_property
    def credential(self) -> windows_storage_streams.IBuffer: ...
    # System.String Windows.Security.Credentials.UI.CredentialPickerResults::get_CredentialDomainName()
    @_property
    def credential_domain_name(self) -> str: ...
    # System.String Windows.Security.Credentials.UI.CredentialPickerResults::get_CredentialPassword()
    @_property
    def credential_password(self) -> str: ...
    # Windows.Security.Credentials.UI.CredentialSaveOption Windows.Security.Credentials.UI.CredentialPickerResults::get_CredentialSaveOption()
    @_property
    def credential_save_option(self) -> CredentialSaveOption: ...
    # System.Boolean Windows.Security.Credentials.UI.CredentialPickerResults::get_CredentialSaved()
    @_property
    def credential_saved(self) -> bool: ...
    # System.String Windows.Security.Credentials.UI.CredentialPickerResults::get_CredentialUserName()
    @_property
    def credential_user_name(self) -> str: ...
    # System.UInt32 Windows.Security.Credentials.UI.CredentialPickerResults::get_ErrorCode()
    @_property
    def error_code(self) -> winrt.system.UInt32: ...

@typing.final
class UserConsentVerifier_Static(type):
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.UI.UserConsentVerifierAvailability> Windows.Security.Credentials.UI.UserConsentVerifier::CheckAvailabilityAsync()
    def check_availability_async(cls) -> windows_foundation.IAsyncOperation[UserConsentVerifierAvailability]: ...
    # Windows.Foundation.IAsyncOperation`1<Windows.Security.Credentials.UI.UserConsentVerificationResult> Windows.Security.Credentials.UI.UserConsentVerifier::RequestVerificationAsync(System.String)
    def request_verification_async(cls, message: str, /) -> windows_foundation.IAsyncOperation[UserConsentVerificationResult]: ...

@typing.final
class UserConsentVerifier(winrt.system.Object, metaclass=UserConsentVerifier_Static):
    pass

