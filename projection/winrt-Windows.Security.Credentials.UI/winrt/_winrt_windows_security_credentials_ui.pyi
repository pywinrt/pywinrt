# WARNING: Please don't edit this file. It was generated by Python/WinRT v2.0.0-beta.2

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.windows.foundation
import winrt.windows.storage.streams

from winrt.windows.security.credentials.ui import AuthenticationProtocol, CredentialSaveOption, UserConsentVerificationResult, UserConsentVerifierAvailability

Self = typing.TypeVar('Self')

@typing.final
class CredentialPicker_Static(type):
    @typing.overload
    def pick_async(cls, options: typing.Optional[CredentialPickerOptions], /) -> winrt.windows.foundation.IAsyncOperation[CredentialPickerResults]: ...
    @typing.overload
    def pick_async(cls, target_name: str, message: str, /) -> winrt.windows.foundation.IAsyncOperation[CredentialPickerResults]: ...
    @typing.overload
    def pick_async(cls, target_name: str, message: str, caption: str, /) -> winrt.windows.foundation.IAsyncOperation[CredentialPickerResults]: ...

@typing.final
class CredentialPicker(winrt.system.Object, metaclass=CredentialPicker_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CredentialPicker: ...

@typing.final
class CredentialPickerOptions(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CredentialPickerOptions: ...
    def __new__(cls: typing.Type[CredentialPickerOptions]) -> CredentialPickerOptions:...
    @_property
    def target_name(self) -> str: ...
    @target_name.setter
    def target_name(self, value: str) -> None: ...
    @_property
    def previous_credential(self) -> typing.Optional[winrt.windows.storage.streams.IBuffer]: ...
    @previous_credential.setter
    def previous_credential(self, value: typing.Optional[winrt.windows.storage.streams.IBuffer]) -> None: ...
    @_property
    def message(self) -> str: ...
    @message.setter
    def message(self, value: str) -> None: ...
    @_property
    def error_code(self) -> winrt.system.UInt32: ...
    @error_code.setter
    def error_code(self, value: winrt.system.UInt32) -> None: ...
    @_property
    def custom_authentication_protocol(self) -> str: ...
    @custom_authentication_protocol.setter
    def custom_authentication_protocol(self, value: str) -> None: ...
    @_property
    def credential_save_option(self) -> CredentialSaveOption: ...
    @credential_save_option.setter
    def credential_save_option(self, value: CredentialSaveOption) -> None: ...
    @_property
    def caption(self) -> str: ...
    @caption.setter
    def caption(self, value: str) -> None: ...
    @_property
    def caller_saves_credential(self) -> bool: ...
    @caller_saves_credential.setter
    def caller_saves_credential(self, value: bool) -> None: ...
    @_property
    def authentication_protocol(self) -> AuthenticationProtocol: ...
    @authentication_protocol.setter
    def authentication_protocol(self, value: AuthenticationProtocol) -> None: ...
    @_property
    def always_display_dialog(self) -> bool: ...
    @always_display_dialog.setter
    def always_display_dialog(self, value: bool) -> None: ...

@typing.final
class CredentialPickerResults(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> CredentialPickerResults: ...
    @_property
    def credential(self) -> typing.Optional[winrt.windows.storage.streams.IBuffer]: ...
    @_property
    def credential_domain_name(self) -> str: ...
    @_property
    def credential_password(self) -> str: ...
    @_property
    def credential_save_option(self) -> CredentialSaveOption: ...
    @_property
    def credential_saved(self) -> bool: ...
    @_property
    def credential_user_name(self) -> str: ...
    @_property
    def error_code(self) -> winrt.system.UInt32: ...

@typing.final
class UserConsentVerifier_Static(type):
    def check_availability_async(cls) -> winrt.windows.foundation.IAsyncOperation[UserConsentVerifierAvailability]: ...
    def request_verification_async(cls, message: str, /) -> winrt.windows.foundation.IAsyncOperation[UserConsentVerificationResult]: ...

@typing.final
class UserConsentVerifier(winrt.system.Object, metaclass=UserConsentVerifier_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> UserConsentVerifier: ...

