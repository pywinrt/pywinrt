name: test
concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths:
      - .github/workflows/test.yaml
      - projection/**
      - '!projection/**/*.md'
      - '!projection/**/*.toml'
      - '!projection/**/*.txt'
      - '!projection/**/setup.py'
      - test/**

jobs:
  msvc:
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', "3.11", "3.12"]
        architecture: ['x86', 'x64']
        release-type: ['Release'] # no "Debug" - https://github.com/actions/setup-python/issues/86
        include:
          - architecture: 'x86'
            vs-arch: 'Win32'
          - architecture: 'x64'
            vs-arch: 'x64'
    name: Python ${{ matrix.python-version }} ${{ matrix.architecture }} ${{ matrix.release-type }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
          architecture: ${{ matrix.architecture }}
      - name: install nuget packages
        run: ./scripts/fetch-tools.ps1 -noCppWinRT -noPyWinRT -noTestWinRT
      - name: configure
        run: cmake -S projection -B _build/projection -DPYWINRT_FULL_PROJECTION=OFF -A ${{ matrix.vs-arch }}
      - name: build
        run: cmake --build _build/projection --config ${{ matrix.release-type }} --parallel --verbose
      - name: install
        run: cmake --install _build/projection --prefix _install/projection
      - name: test
        env:
          PYTHONPATH: _install/projection
        run: python -X dev -m unittest -v
  mingw:
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        sys:
          - mingw32
          - mingw64
          - ucrt64
          - clang32
          - clang64
    name: 'Building on MSYS ${{ matrix.sys }}'
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          update: true
          pacboy: >-
            cc:p
            cmake:p
            python:p
      - name: install nuget packages
        shell: pwsh
        run: ./scripts/fetch-tools.ps1 -noCppWinRT -noPyWinRT -noTestWinRT
      - name: configure
        run: ${MINGW_PREFIX}/bin/cmake -S projection -B _build/projection -DPYWINRT_FULL_PROJECTION=OFF -DPython3_ROOT_DIR=${MINGW_PREFIX}
      - name: build
        run: ${MINGW_PREFIX}/bin/cmake --build _build/projection --verbose
      - name: install
        run: ${MINGW_PREFIX}/bin/cmake --install _build/projection --prefix _install/projection
      - name: test
        env:
          PYTHONPATH: _install/projection
        run: ${MINGW_PREFIX}/bin/python -X dev -m unittest -v
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: merge packages
        run: |
          mkdir -p _install/lint
          find projection -type d -name "cppwinrt" -prune -o -type d -name ".mypy_cache" -prune -o -type d -name "winrt" -exec cp -r {} _install/lint/ \;
      - name: Run mypy
        env:
          MYPYPATH: _install/lint
        run: pipx run mypy -p winrt
